cset: moving following pidspec: 5479
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.35850081 seconds)
loading group "string"... done (took 0.565050928 seconds)
loading group "linalg"... done (took 7.862724334 seconds)
loading group "parallel"... done (took 0.174200863 seconds)
loading group "find"... done (took 1.231779931 seconds)
loading group "tuple"... done (took 1.964200453 seconds)
loading group "dates"... done (took 1.323642386 seconds)
loading group "micro"... done (took 0.244347413 seconds)
loading group "io"... done (took 0.965536185 seconds)
loading group "scalar"... done (took 41.558539479 seconds)
loading group "sparse"... done (took 13.321105186 seconds)
loading group "broadcast"... done (took 1.035074643 seconds)
loading group "union"... done (took 14.453017894 seconds)
loading group "simd"... done (took 4.754306593 seconds)
loading group "random"... done (took 9.616170838 seconds)
loading group "problem"... done (took 1.946286851 seconds)
loading group "array"... done (took 22.363601323 seconds)
loading group "misc"... done (took 2.01517268 seconds)
loading group "sort"... done (took 3.416125101 seconds)
loading group "collection"... done (took 19.387067599 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.568882051 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14197227 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148374637 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131214195 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200659196 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15212332 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155835212 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097703035 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.890030252 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.170893649 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15193178 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523284936 seconds)
done (took 5.045394116 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.21526699 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093422794 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103717593 seconds)
  done (took 0.857928923 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076603772 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145154142 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093025084 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079098593 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093904654 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077763784 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092746009 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078625241 seconds)
  done (took 1.327102237 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08531608 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096134227 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082117621 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095149505 seconds)
  done (took 1.025043879 seconds)
done (took 4.173245754 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.725177352 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.268828524 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204532216 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460111154 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196859159 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21517854 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675292744 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.333704781 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255869277 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098274407 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134965697 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386780703 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136978564 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680837567 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088435982 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121352822 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175925346 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.446176113 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081438467 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110749826 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114279314 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140069909 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.124691637 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.088991578 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.180057046 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.079997794 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19170592 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.105703251 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079274967 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.275763099 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199124252 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686288893 seconds)
  done (took 10.766451296 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11061915 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132760946 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097511063 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138530705 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133226964 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098524744 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084571901 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095152152 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121001523 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174968037 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129576665 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.119185913 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093663654 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082503611 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113603899 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.2431224 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118905937 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099030905 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099241719 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088893125 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136421713 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111581595 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107808249 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09309374 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166081969 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.216405147 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109353605 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122832643 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092864028 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111727694 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139857476 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140721373 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094022326 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079982929 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171934477 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123220211 seconds)
  done (took 5.06997895 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.072341109 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187471068 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121408577 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169264169 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080275613 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142774176 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093977385 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109813789 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25336233 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.107996354 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.482281145 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139933412 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098070978 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097597533 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082724262 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096643993 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.592503712 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122136194 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148752604 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114726563 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101963618 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08262962 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.131722041 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079183924 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097433761 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099173287 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.107101356 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.122195445 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.318220667 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160768938 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080829816 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.167196031 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.09990786 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100807138 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132780329 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195646735 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122445221 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116418182 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095426381 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078913995 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.189651322 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086867211 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096571095 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10215396 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095376065 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133553666 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.081537972 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.093732433 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.200233064 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132354851 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.092323317 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096672522 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.929356977 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179873342 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090263428 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09714357 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289368337 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114523005 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096959836 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076279919 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263031312 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.182557429 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098088171 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080263081 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09687326 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080848785 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.393368733 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080007962 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.739439037 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083155114 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107314939 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081550587 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094060399 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102879008 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086483701 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114875237 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078229311 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098892768 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078168921 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096543814 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082094587 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106458953 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.211530876 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097497659 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07953745 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094997295 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115846112 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110092217 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096565559 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095562165 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112559513 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09581941 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097577226 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.114773709 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098813817 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104934746 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081881079 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140328916 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093529241 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.130703669 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09242457 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.077841477 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125309763 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098751268 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126613397 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.108789371 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080890287 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.166886194 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095742811 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076754119 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097489387 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077270977 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098170872 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081599964 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109709349 seconds)
  done (took 22.538839318 seconds)
done (took 40.112048015 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32070662 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101556066 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101814072 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100833338 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099078584 seconds)
  done (took 1.471188475 seconds)
done (took 2.192864343 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.281052304 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.169832738 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092945902 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16315649 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090352829 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.160107705 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.155575027 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093391806 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212320206 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093002591 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.157376874 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075461321 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091368482 seconds)
  done (took 2.583579556 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092804088 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112831224 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081792995 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108269174 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075939341 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109060415 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091330953 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113524326 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108404119 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084177793 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092278374 seconds)
  done (took 1.789720748 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092371696 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110928454 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081706553 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108330392 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075450153 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109111192 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091834397 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113635285 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107513053 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08519797 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091937639 seconds)
  done (took 1.783460199 seconds)
done (took 6.869000561 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089830107 seconds)
  done (took 0.801977208 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.917369476 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.358316794 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111980205 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.146706559 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.31300772 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.168750852 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.465105139 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.122824705 seconds)
  done (took 10.525671709 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.112970236 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.1093389 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.098449108 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083042135 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100424259 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081600284 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096974936 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09948112 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085887972 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097367 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085084582 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095054365 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098813996 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082276387 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.097680293 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08433999 seconds)
  done (took 2.290122712 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118044239 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116208208 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103063893 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.105004044 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086143285 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101010321 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103126751 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087040228 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.098955906 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099922379 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089949705 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10185361 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100902066 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078912701 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101824563 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.103999987 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085553893 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102511923 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.103985357 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088434392 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103066189 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092069772 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085461519 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101801119 seconds)
  done (took 3.182902403 seconds)
done (took 17.517494425 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154190757 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.105900516 seconds)
  done (took 0.981155507 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094203628 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109007357 seconds)
  done (took 0.931189047 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095666182 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091971054 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.118848398 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.106369185 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078970111 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.093622912 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114927863 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07908156 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092704443 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079457544 seconds)
  done (took 1.683015194 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080927711 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.106643135 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.098438114 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09376278 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.101928482 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092393449 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087635757 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.095145871 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106550842 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076234274 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.098473332 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11078899 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085242613 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113179163 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102412858 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082216829 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0982127 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09546935 seconds)
  done (took 2.457708033 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078172495 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09417665 seconds)
  done (took 0.903184079 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080342651 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091288722 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079793928 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094188972 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091029321 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075511229 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.090899087 seconds)
  done (took 1.333680467 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.475319057 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.133634423 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.255124664 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099435661 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101797801 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.296264718 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096087096 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084236997 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.099879179 seconds)
  done (took 2.427294845 seconds)
done (took 11.44246702 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09160297 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.112343339 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111938359 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.450512038 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106148769 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.095095698 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146546868 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.240594166 seconds)
done (took 2.090367259 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.145114435 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.589112014 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.41936015 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.227308054 seconds)
  done (took 1.974186346 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.397167898 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.096834868 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08098536 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080027899 seconds)
  done (took 1.395125398 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079326885 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097344798 seconds)
  done (took 0.915289385 seconds)
done (took 5.170674315 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079823438 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.128061953 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078771833 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.093288178 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079234517 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093488706 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077320098 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.092918576 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079033008 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.093331506 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.093883054 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079011671 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09404886 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.076436386 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091816411 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077103153 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094247376 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076894688 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091766506 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07733196 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094215058 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076884919 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09161985 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07956649 seconds)
  done (took 2.863233348 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097835121 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095809165 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.100571126 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085554608 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100426957 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085609347 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098934239 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09482623 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085007604 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097689594 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097450088 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083956883 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096746784 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08446638 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096986969 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.098212604 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084420218 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095777288 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081595216 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098888524 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099959104 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080385571 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098758111 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100063373 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083822452 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099278783 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082323809 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.094547696 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101025197 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083633116 seconds)
  done (took 3.526360693 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083523183 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09154653 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077400053 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.099323046 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07728476 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.094197045 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077053753 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093329986 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078507481 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092467154 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078536075 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093277957 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077430046 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.093854612 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077867168 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097403945 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109128322 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077230258 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091718978 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077846044 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096395132 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076371536 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.092909647 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077038411 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092598921 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076962001 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091929369 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076876663 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09299275 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076672646 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.095970077 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080138581 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092686237 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084479293 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095665979 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076204948 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09574946 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076504344 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093021697 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091441051 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076179665 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0921891 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077376708 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.099121667 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077295018 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095127094 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078347661 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094520172 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078075336 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096232064 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077062917 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092714411 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079658344 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094241594 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081156321 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092396025 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09286456 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076611817 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093956051 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077286112 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092318064 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076840117 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095540546 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078715203 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10752149 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084556883 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092359818 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078983676 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093945752 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080199637 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094567434 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106554266 seconds)
  done (took 7.022082168 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101505028 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122621845 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.094591446 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094965071 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075748199 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092603608 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081542633 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093023508 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079690712 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.098881139 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093561237 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079488165 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094782369 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093239036 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093299326 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07869619 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098756869 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091558312 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07815989 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096938463 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078667821 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097995953 seconds)
  done (took 2.755060721 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.203179875 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102335334 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139303646 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104638957 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081912001 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10334725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.099676149 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086381175 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099931937 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08240741 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.206956234 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099374456 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08294027 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09748433 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097039565 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084370372 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100038996 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083733031 seconds)
  done (took 2.703401332 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091841994 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096076499 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097771541 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095333864 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096127242 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082173008 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100698651 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104489436 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082321182 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09562864 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090001896 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098322316 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09771157 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079876858 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098297013 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080146108 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097700498 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080748964 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105772752 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100918318 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085827395 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105900049 seconds)
  done (took 2.815805427 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095917694 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097885717 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115022053 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083668519 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093027915 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079389701 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103408043 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080479406 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.104040674 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097850605 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081188532 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094684026 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086566619 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095142249 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101497023 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080916667 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098375676 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080906469 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097486447 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076906256 seconds)
  done (took 2.59791338 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100948334 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097187107 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096870648 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091418056 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09697557 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08135148 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105829968 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097410041 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081778814 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121648886 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097722181 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082080063 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107373242 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.102579118 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096616321 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09088171 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106265969 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107110561 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081499123 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096803535 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122922958 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081807074 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10657291 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097977867 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082276333 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097092325 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096833739 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0876834 seconds)
  done (took 3.468939731 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079832985 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09588638 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079530029 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.093851015 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07855712 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093844937 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077735961 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093495874 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079961444 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093971456 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080989004 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095619658 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080723734 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.095965847 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079949895 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095626739 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080532758 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.093823635 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078916034 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093423571 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080729717 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096033248 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080146715 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093766724 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07881932 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095480635 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078561757 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092780806 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080446436 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093735612 seconds)
  done (took 3.370139602 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089556772 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102900717 seconds)
  done (took 0.949532418 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077225407 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111767335 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078326071 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100520011 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084916982 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097108866 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104969147 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084955891 seconds)
  done (took 1.497097068 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095930038 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.107309469 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081807664 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110075026 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.106378207 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09688427 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16499952 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097528504 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086645169 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094975411 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.109510176 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080733106 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103202242 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081023017 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.102378434 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086904935 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094927963 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102324033 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086680892 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095527637 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082552072 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105537419 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083384176 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.093635976 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.098834639 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090320396 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110311698 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082933965 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100336064 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.104360761 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086182547 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090809917 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080988412 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097704673 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078441434 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.105385485 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113334526 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085242621 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106530835 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082874152 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108165808 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092116787 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085186412 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.102415517 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106930954 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08209456 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098080346 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076905723 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094239073 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084333906 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092205411 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080715647 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092017376 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088399143 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.100814341 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108085711 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079959734 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098178898 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083809723 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10042153 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088256016 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100107981 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100107641 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081555669 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104322461 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086302603 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108520342 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07722868 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091359119 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095183483 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091785901 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121541755 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088160292 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.098078005 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098690992 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080916837 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100906118 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083306986 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103190998 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.103981782 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082211587 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103925875 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088383 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098028804 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083607122 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105259326 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095200484 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083706941 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.094458932 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11441821 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080741786 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095098548 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080373352 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107973882 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084675787 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097390549 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.07902861 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104622516 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090833079 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082350365 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098710455 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081395281 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109249188 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10319 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087414386 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106413718 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088357799 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097436152 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.100977871 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078927824 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098431369 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083586606 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.104495815 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075205909 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100159963 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082034868 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098872671 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.1058623 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08085486 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097829982 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089268453 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.102807886 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.0800087 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094243926 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.099801582 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082251777 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101431806 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089692223 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096124628 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076730064 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093337436 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.100497559 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081215507 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.100930247 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087453072 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101057174 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076186802 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095078878 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102226897 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090744221 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097942924 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082217441 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103495176 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.098910426 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080614257 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.104990084 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084321512 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097284944 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087230728 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.098094209 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076871596 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10177406 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.100591328 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080465768 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.101077856 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085434343 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099831597 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082098205 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096656773 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103287382 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083664788 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.097134083 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082533213 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096140932 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091857571 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100215569 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093109697 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07903922 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105409696 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079288094 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.09717025 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080569687 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.100036313 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098805215 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080322765 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097207166 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083235659 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110027627 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101949404 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083371567 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.103883584 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09324876 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097782226 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085114536 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098213187 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099722103 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.082972587 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.107600875 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087316824 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103398107 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10096691 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078688623 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10502575 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089201008 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097571524 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079119032 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097445423 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085272901 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.103392681 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.101840753 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082373724 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095860562 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08193955 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101948833 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100432074 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082276452 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.096494828 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087024836 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.097605452 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089256145 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099487611 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10860219 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085729785 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092905368 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086119888 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097223588 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104336402 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07803542 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096371569 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08095609 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099871259 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081186897 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.100866531 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076039221 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105573909 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105208898 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082935485 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.097241791 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081866181 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104763644 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083030636 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102147231 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084606715 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105014487 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10830017 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080488888 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.100920458 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092544644 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.098777434 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075288272 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104091431 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097330702 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081461036 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097317 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080294746 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101498416 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10716923 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090305901 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091856465 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085628303 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.09769697 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080700581 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094435307 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086922218 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.101139489 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.098350818 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088653352 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099885994 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.084654954 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102212428 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082088525 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100234859 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100159581 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084786081 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.09969598 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084750632 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.09780588 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085261537 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.097904516 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079600012 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.100638614 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099290855 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08207497 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104055465 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081089656 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098581363 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084973353 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100279967 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081967583 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098970802 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097834195 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08682065 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099907172 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082291845 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.101325133 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.07802554 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105812772 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082316695 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106808088 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098560298 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078558905 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104236472 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084486582 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104716846 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098721681 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083380319 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.099847862 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081911447 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101808603 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089285225 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096822774 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110720041 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090924158 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099009025 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08514911 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.098457481 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084888453 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098355706 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083126617 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.099794176 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09861612 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082653941 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.103883 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084996528 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099686682 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084042884 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100504235 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081768981 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099960429 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093050971 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081158205 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098071587 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082693362 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10907762 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083341359 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102011984 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097292931 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083652342 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09795682 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079053204 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.107399535 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108710389 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083488957 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106154297 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081665967 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101378254 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11033198 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076695166 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.096666781 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079662608 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.095979539 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090468668 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099880519 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099974597 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.098675046 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082123502 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096032781 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099986235 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081332211 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093600993 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081170331 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10300924 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084155552 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097705809 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.081855902 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103260576 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100482876 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092868338 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099148004 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082875753 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099731893 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079688594 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.097813922 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081157032 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.101888042 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100142755 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080612611 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095937295 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081815622 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100183415 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083040015 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098550994 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084328428 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106293607 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098607008 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08553197 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102930457 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077425981 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.101740336 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081910043 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.098686629 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080712915 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.103185235 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102424922 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084839007 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108250743 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081789371 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099428314 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098865177 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080982702 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.098656208 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082998371 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100062647 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08160133 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100293463 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091186497 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097512617 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10187912 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082114714 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.099565625 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089429969 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100861566 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085157784 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107178245 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102470783 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083813821 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107885068 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086435184 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10310764 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101126914 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084217954 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105893886 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081672346 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10666066 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082188837 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100514564 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.100376925 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081001654 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099085132 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083846015 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098361669 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089348365 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10113963 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081983237 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099463529 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079595687 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.100397054 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103175677 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090700851 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102131433 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085388124 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095357874 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079569629 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101250616 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07977011 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100458432 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103731524 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088278061 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.101184294 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083027472 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098514291 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108150586 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088248954 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.102973663 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080479134 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103533485 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08419754 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102987154 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083123771 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100227862 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100489693 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087105496 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.101571167 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082659006 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10657108 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086006503 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100579349 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.100923015 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083237819 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.099938493 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078630432 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.100132113 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084545141 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10497583 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084669551 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099941965 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110347192 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082684101 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.099983752 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086940544 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099936969 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087678837 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095601381 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101452373 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083907815 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101032767 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077604944 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.098570616 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080922643 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.102474709 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081641445 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096296509 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110310231 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091764715 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.103677826 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08215976 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099638141 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078030338 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096069901 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08081203 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10192139 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.101416532 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093850503 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.099291559 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082443909 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095748631 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08278923 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102577469 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.103308188 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080310118 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095846521 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081937373 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.102903498 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088950388 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098997342 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082588994 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103716052 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.101965678 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080625561 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103684667 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079496243 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.1045721 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095975749 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.100940551 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101030597 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089375243 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107978819 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084070981 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095615466 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083667015 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103277901 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.099481634 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084441611 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101315272 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098055061 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103875354 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099436702 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082279793 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.102224653 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08222692 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.108905657 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084427632 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101527099 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.104804196 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085507842 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11014038 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085379457 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110540565 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103575758 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085887829 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099217166 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083311592 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098827673 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081840562 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10220773 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084202947 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105493104 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.1097359 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08151312 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112388128 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109673533 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087651963 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097581824 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082528703 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099998673 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078937286 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104296803 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080891021 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098461142 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080457934 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099302942 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.101670534 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088701574 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.101335431 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084387512 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10053393 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076838746 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.101916978 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085895144 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102292049 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078930455 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100966877 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10130946 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087155057 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10442331 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083895977 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102895517 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085099575 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10114078 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.07890256 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.106784439 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099271722 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086383291 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.099301613 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083400394 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101653974 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086497714 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106790445 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101801225 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086485597 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.112123282 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0858608 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098321212 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079858664 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.106034757 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098724942 seconds)
  done (took 56.689035556 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142397501 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080734203 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096269079 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07862515 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110684847 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097339507 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0783888 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096392567 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080026931 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.099403275 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078242482 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096396066 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106555925 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122716797 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092935363 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101508144 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078521641 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098343225 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096427839 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079077124 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106595949 seconds)
  done (took 2.826850656 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103214333 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118297452 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114060516 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117028242 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089385647 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113550812 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113975987 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112873969 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097881265 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10861792 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11735962 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113011239 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090244052 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109199882 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108658352 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091670615 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11535702 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107658719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113687856 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094077645 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11115982 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113552946 seconds)
  done (took 3.184192122 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083046406 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099397028 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084113384 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.094991223 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082023802 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09521462 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086516134 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.098848821 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085907662 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.099715752 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080540721 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.09940973 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102073811 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078208255 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.100580149 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080498123 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.148867002 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.104778221 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082509542 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102677097 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077601983 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.103377184 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096029235 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.07861299 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.099634268 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08780949 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102339143 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.08088493 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10124194 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.080989699 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101026338 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080045327 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.102194941 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.101274829 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081648165 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.099905183 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082836415 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10060287 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078326127 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.0992642 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083054353 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09793133 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083592905 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103319933 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080785027 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.099060577 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084395339 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101283351 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096500554 seconds)
  done (took 5.367427355 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103909552 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157919879 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08567302 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140564092 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119076656 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110984675 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087948516 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140350126 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101151194 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081856066 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121323277 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118998096 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102512836 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088803648 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109415909 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10237301 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084620943 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101579352 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106396364 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083330163 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107590825 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090426178 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118112538 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116275774 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107140299 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083272004 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102636637 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107311541 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09689898 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107956576 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108209605 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089755207 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119216124 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108585084 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083356934 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105621212 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120455999 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103187265 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08691687 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100403163 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08641482 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108339666 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108916623 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101971562 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103018318 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109270879 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083712445 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099331909 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117191589 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086652224 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111724497 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118798885 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10630859 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08459082 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108004298 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119353741 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083984251 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100982155 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087009657 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116101897 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100960823 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08745201 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117646687 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10553995 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110095809 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099699134 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108316986 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107230672 seconds)
  done (took 8.044555129 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092567477 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109785143 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118749424 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119299595 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090597177 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.108680844 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109388066 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.088954421 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108574962 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114079344 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109792418 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131147623 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085178762 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112943155 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10906967 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090227012 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110156702 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10988636 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090960323 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110366582 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10977083 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118145231 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090144176 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118184018 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140887264 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104414686 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090790494 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108769226 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119225158 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108856977 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122577789 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090661641 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110124151 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119946697 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121281272 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091162772 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102301218 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109044663 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090395166 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10999452 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104307872 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099705035 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109301463 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10452167 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090556595 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109781616 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118143189 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121360497 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113578673 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095764491 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109705769 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119452638 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109043415 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090613933 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119120021 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146324921 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119380279 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119659334 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109633267 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099577012 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117682226 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.126726517 seconds)
  done (took 7.573656382 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106358912 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113543964 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116579275 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.098779672 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082218009 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107452134 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08183767 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102209497 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113396242 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094125042 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115750272 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107832727 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091080075 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115072657 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107773119 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110484847 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087288072 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107317648 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112704862 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087803023 seconds)
  done (took 2.884655146 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093548479 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122085545 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084611441 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110737033 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107014464 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090107819 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10590467 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106556426 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085401123 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106978002 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095669835 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113987603 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104982303 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091216407 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114802184 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110313088 seconds)
  done (took 2.474126622 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099226216 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11570086 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119843122 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08426579 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103442736 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08016312 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104166239 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099759693 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081167754 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119510117 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084183608 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107963049 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10322248 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082919226 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100103203 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087716424 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100550657 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082500972 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104193425 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.117725788 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095458603 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103312634 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104536797 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086065799 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104793332 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089742737 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.104166043 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101781238 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08238713 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10449851 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085464721 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111633324 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100266555 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083713354 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101920279 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081842824 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104204513 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084374163 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107011813 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103343591 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082556924 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103467514 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084524305 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105541898 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079862761 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104129744 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099357337 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090958892 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102919066 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085344589 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104362977 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087216099 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105323126 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114536974 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087504768 seconds)
  done (took 6.185579501 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09788796 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10785046 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080069404 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10276461 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086593519 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107533856 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10740744 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087953405 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106246705 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082343295 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106004959 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089191305 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105799078 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106985567 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086412012 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108252344 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0798432 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106023315 seconds)
  done (took 2.589286785 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089827469 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103798388 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092090907 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104332303 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084837569 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107590903 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079916507 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102714769 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102326072 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084881904 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104182243 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087078622 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10331278 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086906331 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105279505 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084840448 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106603746 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101673075 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085428416 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100055753 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087254678 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103237325 seconds)
  done (took 2.940042554 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117491751 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123669388 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091664764 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227791999 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102384735 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131493059 seconds)
  done (took 1.626946669 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108296958 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119428289 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106049562 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106414727 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113736962 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086440749 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106142056 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106931489 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115771934 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101103417 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106624227 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115987558 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116766365 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096653841 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113741889 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112234774 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10660199 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087567679 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104903043 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126495668 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08677518 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116450361 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106494694 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086177499 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105747147 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115488375 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116319484 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120386275 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086788891 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116540892 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113243559 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087463343 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115795544 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120368383 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107435665 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097694295 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107267777 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127384174 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112876683 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095835698 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108076329 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11235318 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095820942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112597252 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116224487 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106174521 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091774328 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107038632 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106589741 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13360696 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093635808 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115393131 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113547986 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116547044 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096850942 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131817357 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120581178 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114909892 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113896543 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121265877 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116288423 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094105447 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115541159 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120876098 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113773353 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096008153 seconds)
  done (took 8.023618366 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101540135 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124359994 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106487733 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121878399 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09621172 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107350791 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106936082 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086598762 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107520034 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105835367 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149376253 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087772917 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115577581 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115878875 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087102844 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106985967 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107472926 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116913259 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086949665 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132906373 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105727504 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115754023 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114760237 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096666784 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121921145 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114005387 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107085422 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08702539 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106844978 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10722761 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092855628 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107136211 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115956218 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086215226 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116190088 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107077118 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087129154 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112790663 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10632198 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113313918 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096391049 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126315259 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10812435 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106631537 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101802457 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107326341 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106607326 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086668126 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107633311 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107322081 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100708373 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12019295 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120444111 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116960331 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107502325 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087940662 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107825293 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106485055 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086759421 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114125806 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116560161 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087172902 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133905485 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108309331 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106950838 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116414115 seconds)
  done (took 7.932263006 seconds)
done (took 152.648736525 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213502722 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198164903 seconds)
  done (took 1.249693515 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.086707814 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134845399 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095625377 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168585334 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085504743 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139805785 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136942112 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096747055 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.1055408 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085398965 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106055169 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08669409 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171736684 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084677514 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105009964 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.105865896 seconds)
  done (took 2.641654603 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.117188218 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.252554497 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.123212749 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.103729735 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088819798 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108491751 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083596796 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110447052 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08903351 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.103740856 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08748187 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.10653785 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084311812 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106230868 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.108695586 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087904633 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.103548206 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087998008 seconds)
  done (took 2.798541433 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113377404 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144890033 seconds)
  done (took 1.110059685 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.240063467 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160553093 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.224463091 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.460808389 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.267725641 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.362122857 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.196366773 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.207747668 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165858454 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.205192894 seconds)
  done (took 3.335537596 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117337084 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177530993 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312093063 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153511187 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105505045 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127938454 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155203508 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129200338 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.1205238 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101043264 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120388416 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116559715 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136037388 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094331522 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113763124 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116071511 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12034812 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11236509 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113654152 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095515754 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13600566 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085093587 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114023827 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.112331628 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097456886 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.117629785 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104192192 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084445625 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115802197 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092983511 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.111641134 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123771955 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.116937273 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.152420007 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122338304 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154506973 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117160739 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090218062 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11410225 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090457648 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117553545 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117939847 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124050504 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09653295 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104854698 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097088866 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10551649 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084384843 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114058844 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118081848 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.092945834 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112387877 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151711797 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117825794 seconds)
  done (took 7.295919445 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.775877053 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154035622 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09059919 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.861153458 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133478256 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102382302 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.76335486 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110828754 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251126226 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.742564388 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130660476 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096595737 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223494712 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.254185713 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.923816228 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284780811 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.634282097 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12548605 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150102773 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15270414 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117348855 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114625471 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129086591 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427354777 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116288641 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089839854 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116134338 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116937919 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158265203 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124088 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092451715 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195506882 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.243348453 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200833896 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094546239 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110093677 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089094641 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187407805 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260262204 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190895795 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179413173 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107183662 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088987759 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119860071 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130933764 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086272214 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181706072 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172386735 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168703844 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114158623 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118190489 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098020699 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119816459 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162746058 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12023771 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.304455397 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318610267 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089783748 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120266859 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125640041 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235411497 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121836906 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.220937484 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138449357 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187424679 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110563909 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775943543 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168426621 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111150692 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094584774 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118747301 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114736367 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098759946 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165401688 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.403555627 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121677182 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114487898 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089103698 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221346593 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102206994 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109656299 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159721023 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115423445 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118983827 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101250377 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12198557 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167887876 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.246288275 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100174397 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118774786 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114124142 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103163608 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115322486 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207587143 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216322192 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161751093 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231036134 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099963053 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180892002 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164922482 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118182322 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167747563 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118133281 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101304887 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120094706 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.211473667 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14334243 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122784793 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092451871 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116917518 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.145679166 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12522256 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095720591 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189669925 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.453794108 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165686744 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108114692 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126407906 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098678101 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181081176 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094594478 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259636338 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121397777 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166317068 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11879242 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086850809 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118940037 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161506201 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121064657 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098935447 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12086357 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116896608 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233797454 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.212502836 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120438886 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217732137 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18359994 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117001971 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169276895 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120547944 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166755902 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11863638 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097302364 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115331568 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76652067 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122498809 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097427412 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114494404 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184923963 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089496686 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124047912 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124122074 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086642356 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797218852 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125299514 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120206322 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102165169 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11687516 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118909263 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09527915 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114334822 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159870253 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226266195 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118984296 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097164195 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123962145 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158547951 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115551347 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124122528 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122538192 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102962617 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119432127 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113423328 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101591266 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186970032 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15966422 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.215190825 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.578489866 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111162855 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.122615728 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201874241 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110833925 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28519584 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098103204 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.218710522 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182205973 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098193888 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314430081 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163890272 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184975078 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125894359 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170016579 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107070533 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117000603 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.161507371 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110042399 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094613182 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.159829154 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122911829 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120786714 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95877752 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089305217 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222998297 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107757197 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169436038 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116049423 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118554199 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.262375937 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109818151 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126519913 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162145584 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113827132 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102306266 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.866475473 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123890969 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100264109 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115791724 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217716365 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161994423 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118451753 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118032448 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096677012 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180772954 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20753872 seconds)
  done (took 43.531856459 seconds)
done (took 62.806278948 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.270280487 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213144241 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.25934446 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166093499 seconds)
  done (took 1.862033365 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.167744456 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.146266591 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120834606 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.105058282 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149592477 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084157954 seconds)
  done (took 1.649599262 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.351334667 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268379575 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237949291 seconds)
  done (took 1.739834594 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.313017551 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248313196 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465335074 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.318002628 seconds)
  done (took 2.319936691 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206460284 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130723964 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.108631938 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103114542 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.193432603 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.23733695 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139603925 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.195057099 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098817156 seconds)
  done (took 2.338777158 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.191795411 seconds)
done (took 10.983419149 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.130140065 seconds)
    (2/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.165270228 seconds)
    (3/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.263445776 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.2642363 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.090692772 seconds)
    (6/309) benchmarking ("sort", BigInt, false)...
    done (took 0.24651187 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.188812825 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.233441111 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121847615 seconds)
    (10/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091719718 seconds)
    (11/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.174152257 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11491366 seconds)
    (13/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.156579774 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.244287708 seconds)
    (15/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.215655925 seconds)
    (16/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.107391147 seconds)
    (17/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115027494 seconds)
    (18/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.219052358 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.163505808 seconds)
    (20/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.199015803 seconds)
    (21/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.18151152 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091705985 seconds)
    (23/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116504513 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.125597946 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.144354351 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.232376761 seconds)
    (27/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.185811542 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.132839984 seconds)
    (29/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110438437 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.173809192 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.183157978 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.161905838 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.091644662 seconds)
    (34/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115330765 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.117692609 seconds)
    (36/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.164725489 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.220164033 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.120262967 seconds)
    (39/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.1771587 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.203937477 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113475426 seconds)
    (42/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.089318958 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108842923 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.232810272 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.162799122 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.204259975 seconds)
    (47/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.108708485 seconds)
    (48/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.123782129 seconds)
    (49/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11384255 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.165490724 seconds)
    (51/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.137562793 seconds)
    (52/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.114422639 seconds)
    (53/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.081076311 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.181175879 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.161291521 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.091729618 seconds)
    (57/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110686264 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.239835694 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.176450484 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131767075 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.11297995 seconds)
    (62/309) benchmarking ("sort", Float64, false)...
    done (took 0.169108966 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.140601032 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.134934878 seconds)
    (65/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105655454 seconds)
    (66/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124017466 seconds)
    (67/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093924873 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.107564778 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097239289 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.141403531 seconds)
    (71/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.087480858 seconds)
    (72/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114130969 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.152632269 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087135148 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.194365258 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.181010304 seconds)
    (77/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.06619905 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085318231 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.256976631 seconds)
    (80/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.087819301 seconds)
    (81/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119609041 seconds)
    (82/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.075918166 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108291952 seconds)
    (84/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091137275 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113404971 seconds)
    (86/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065198658 seconds)
    (87/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.114796238 seconds)
    (88/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.114681342 seconds)
    (89/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.178328994 seconds)
    (90/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.152187296 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.108494039 seconds)
    (92/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066634201 seconds)
    (93/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.189202658 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.113352172 seconds)
    (95/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.153066281 seconds)
    (96/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.176979944 seconds)
    (97/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064982757 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.136138015 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085060173 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.176286705 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.109075438 seconds)
    (102/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087313102 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.114739592 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.11079221 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.129283392 seconds)
    (106/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.088986681 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.106759884 seconds)
    (108/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.198002373 seconds)
    (109/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097202271 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.088352392 seconds)
    (111/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.215054757 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.120545112 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.122131731 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.107774278 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.087817841 seconds)
    (116/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096265022 seconds)
    (117/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.120975998 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116110207 seconds)
    (119/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.344018749 seconds)
    (120/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.089344708 seconds)
    (121/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.075885586 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139585158 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066777706 seconds)
    (124/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121582154 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.095425896 seconds)
    (126/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.108377301 seconds)
    (127/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.152128643 seconds)
    (128/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.107819174 seconds)
    (129/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065061729 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.088634028 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.188950099 seconds)
    (132/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.165328767 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.136170598 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.117754614 seconds)
    (135/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096270807 seconds)
    (136/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.17161089 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.186866289 seconds)
    (138/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.092290185 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.186508199 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 0.178734448 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.116158388 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093143025 seconds)
    (143/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124241411 seconds)
    (144/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067677544 seconds)
    (145/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.141171944 seconds)
    (146/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093010921 seconds)
    (147/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.119624348 seconds)
    (148/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066056559 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111270623 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091180128 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.107562987 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092625332 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.209721144 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.135797834 seconds)
    (155/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.110219635 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.114971565 seconds)
    (157/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.098443438 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091649819 seconds)
    (159/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.115378059 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.17586265 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.084708116 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.117884986 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.093896279 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.088443594 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.18270323 seconds)
    (166/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.088164072 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.181270734 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.106167219 seconds)
    (169/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115709209 seconds)
    (170/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091456167 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107462609 seconds)
    (172/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.112162298 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.115589281 seconds)
    (174/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065925798 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.184173904 seconds)
    (176/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.093197259 seconds)
    (177/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134495808 seconds)
    (178/309) benchmarking ("sort", Float32, false)...
    done (took 0.171368652 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.122033509 seconds)
    (180/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08825304 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065809817 seconds)
    (182/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067389609 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.089231168 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.085350536 seconds)
    (185/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.088265996 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066363835 seconds)
    (187/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065653807 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116431482 seconds)
    (189/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137256962 seconds)
    (190/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.065640923 seconds)
    (191/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12419783 seconds)
    (192/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.065836449 seconds)
    (193/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087134636 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.131923475 seconds)
    (195/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.153092562 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.085854203 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114933882 seconds)
    (198/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.114437976 seconds)
    (199/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.10641324 seconds)
    (200/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066612078 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.089193988 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.094240349 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.104043294 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066446727 seconds)
    (205/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133202916 seconds)
    (206/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.097303922 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.137146997 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084169171 seconds)
    (209/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.099049778 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.13062869 seconds)
    (211/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.099417504 seconds)
    (212/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.19756476 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.109341609 seconds)
    (214/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118105057 seconds)
    (215/309) benchmarking ("sort", Int8, false)...
    done (took 0.184569609 seconds)
    (216/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066151445 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118480284 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093977014 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090095644 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.213804074 seconds)
    (221/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090714224 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.187369131 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.214495036 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086411589 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.116508262 seconds)
    (226/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066074447 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065878693 seconds)
    (228/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.088693958 seconds)
    (229/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.091872809 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.114516961 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.090759234 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.108976011 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.138399252 seconds)
    (234/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067748198 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066237672 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.138076409 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085201532 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111382479 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.1345949 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.182360158 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.106877366 seconds)
    (242/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06633573 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.187149461 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129885211 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.089419459 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087314814 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.13093771 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116803576 seconds)
    (249/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086734985 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.194060509 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067033585 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108106777 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086146538 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.119888714 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086656614 seconds)
    (256/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.089394515 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.14586083 seconds)
    (258/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.109913379 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066245255 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109478505 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06836284 seconds)
    (262/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.09829857 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085323767 seconds)
    (264/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114279027 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086130009 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.089070621 seconds)
    (267/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066064358 seconds)
    (268/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067006753 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115250268 seconds)
    (270/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.0670465 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.11828565 seconds)
    (272/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.075442973 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.133991026 seconds)
    (274/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.08891051 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.111340873 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.10319231 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.093605749 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.162213901 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109776821 seconds)
    (280/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122307349 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085665363 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108440619 seconds)
    (283/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099514295 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.220536938 seconds)
    (285/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.090595475 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.109389791 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.135226382 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117081764 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113153231 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.135529997 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067667775 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107685989 seconds)
    (293/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.07685884 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.107575002 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093957885 seconds)
    (296/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.089664986 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.145471007 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109293245 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091750713 seconds)
    (300/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.117695949 seconds)
    (301/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093115868 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.089532186 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066035977 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.114542805 seconds)
    (305/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.191690805 seconds)
    (306/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.11162649 seconds)
    (307/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067763555 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091160388 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086117532 seconds)
  done (took 39.278704641 seconds)
done (took 40.16475097 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099491967 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.144730042 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095172471 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.133030321 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122216171 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090880281 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117034086 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09765148 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12193254 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123523339 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097500577 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092196908 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095588871 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118654368 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096299869 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136724208 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122607335 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093439611 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118534761 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084828044 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117393893 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085768718 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110679622 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069178909 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120722578 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093054049 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115662285 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.117648594 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085152012 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.107942548 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089085186 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116859117 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085438073 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122572486 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092409103 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118425616 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095927214 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118448961 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087858612 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109078363 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116707996 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085451439 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115371394 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09385973 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114990868 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091825165 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117944311 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098728135 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138419341 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116287635 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094041855 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121548228 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096256276 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118517589 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090197509 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118130964 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091837253 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139105867 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118142657 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09159772 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117257068 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094539806 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115612096 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094297795 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117447098 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119881852 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.096766384 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114995853 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096463045 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115414522 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085492315 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11841486 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089978114 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109075491 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094881616 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120366096 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085708797 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115393849 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116068294 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091798625 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108599304 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088519679 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111401906 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092406154 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111875179 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069353745 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113393232 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092456438 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.10908925 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095222089 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115472962 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092989986 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11159862 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09846019 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108920263 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091644824 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110037869 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086241872 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111923241 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089564049 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109713698 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089062078 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118490049 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087505102 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.11520649 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12220921 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086709998 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116166337 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086234868 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.108790263 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100376497 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119445738 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086691636 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115445284 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085832561 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117591751 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08578284 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.108988394 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086619866 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10931693 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091600366 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109201997 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088890773 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.116077488 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124704272 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086026125 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113496819 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089458159 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.108870253 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091632488 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109565597 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086304369 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111937503 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076999265 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112410063 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.085867598 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11722339 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089167369 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118230161 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087824813 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119718464 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090418254 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115780317 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091856275 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10982672 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074383827 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115283656 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089071575 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112492542 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086513516 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112135092 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08708452 seconds)
done (took 16.769403424 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086451629 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182878384 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150389331 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140246214 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107457905 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111605748 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120925532 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118623065 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112636997 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141752637 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109909093 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131013525 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146451143 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086293017 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110605267 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090383552 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112389021 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102049881 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.143937777 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131722394 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161906147 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086014053 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145256836 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133822183 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120399216 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.11393203 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110496486 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090990491 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114012156 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102626796 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131780766 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090560357 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110742214 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132470649 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10491078 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.1186346 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087808112 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117596942 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08727074 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111336667 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138620529 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132712053 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.0930785 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.115650801 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090418916 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.112521776 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088569774 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119967394 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098800679 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115334834 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124567733 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154941062 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090787181 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120894246 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086038197 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121716861 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119689404 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089136393 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11074953 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089621155 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110113981 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090542299 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125595969 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139909102 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090792805 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119722209 seconds)
  done (took 8.538951593 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103217234 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137541928 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104764943 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.128413689 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110302574 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.104295871 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.110697489 seconds)
  done (took 1.748680364 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087736796 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133045025 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111053911 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.133605986 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13081566 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.107603499 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12126678 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088072927 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.129227855 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088398124 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131461605 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150101569 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089319421 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118878675 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135504182 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08725482 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135571487 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088023228 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115014442 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11136475 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113793792 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133006242 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090099521 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11191811 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10195965 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112812544 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159517906 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092945632 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113307724 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091307209 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110759807 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.162759117 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103990395 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123645677 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087942312 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126104315 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.126453795 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08587367 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128438376 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093052019 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126395036 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089109364 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.112856199 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08665457 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116166253 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122221418 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.09007831 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112738625 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090647341 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132010877 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088996175 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125781434 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088666889 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116894078 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089587239 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119295261 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121161246 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089427622 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131719137 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089795837 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129178461 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104979123 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.126536159 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.128718209 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0908164 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126152968 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102542342 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115339263 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090207798 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116044266 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.128586201 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08710704 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113862432 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09905777 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114381056 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112159937 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135141991 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114364385 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098524831 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112556091 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.08896035 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113354328 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111333263 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117024488 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088361089 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117291904 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091453341 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.110579802 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086832337 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116264974 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.110034577 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090342124 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.115955812 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088503065 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115795547 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105452354 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11418388 seconds)
  done (took 11.685268908 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089993471 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113170873 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090939509 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114594067 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089612666 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114386849 seconds)
  done (took 1.574361014 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113829906 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115639608 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103062221 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119440313 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154473704 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10375401 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.12772301 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122566877 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107534304 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125545648 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.12752757 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105597931 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135489477 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120088002 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10326122 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119177081 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.127678579 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099560235 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12705173 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096739458 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135834726 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118917174 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095453463 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131026269 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116556536 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095636325 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12405629 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102136302 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125773125 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121365282 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096090542 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116460443 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096070285 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121567677 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128137241 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095842232 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119970518 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117439895 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099586659 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116654901 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104123708 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119668783 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125878238 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094019921 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123151278 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119849193 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.092911646 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123346817 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104183196 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117777887 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118554247 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094001015 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117272811 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09351918 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119818765 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121803057 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09356637 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.127926363 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12029458 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096243316 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117251385 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092599792 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122080824 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.115955626 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103886934 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118501039 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095613325 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120613576 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120241105 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095003102 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118398069 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093250774 seconds)
  done (took 9.13529566 seconds)
done (took 33.628929343 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685697532 seconds)
  done (took 1.645386341 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.699403146 seconds)
  done (took 1.660387334 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.675886283 seconds)
  done (took 17.636752111 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.486579729 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.573787842 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.870642628 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178799074 seconds)
  done (took 3.071127976 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.945587608 seconds)
  done (took 1.924374666 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.291710905 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.253041085 seconds)
  done (took 1.510064454 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.760297134 seconds)
  done (took 1.731526756 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.321440925 seconds)
  done (took 2.28790675 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326372641 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183034651 seconds)
  done (took 1.485314778 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.540867372 seconds)
  done (took 1.516925757 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.62727938 seconds)
  done (took 7.608061911 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265409972 seconds)
  done (took 1.254137359 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.296311718 seconds)
  done (took 1.27696123 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.466045223 seconds)
  done (took 4.448375125 seconds)
done (took 50.029764842 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097685261 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125926821 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100905454 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123200588 seconds)
  done (took 1.42313 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100428303 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119752265 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099622913 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118758802 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124916844 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.0949221 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121271643 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100291299 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118699219 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096107265 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119566185 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118873716 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.096936616 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121647023 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092676117 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.121789813 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099292393 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119757548 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122340168 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09490844 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117472827 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096910947 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123256056 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094383366 seconds)
  done (took 3.619174426 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098987706 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117393296 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095479106 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116696366 seconds)
  done (took 1.419440253 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099053586 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139712384 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.136876741 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.098822606 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141483411 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134444581 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091277885 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116459728 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.092681373 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124323016 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089499081 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.14716522 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136487566 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098245755 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.125831521 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088260358 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115941751 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135504031 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099320217 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124622861 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094011471 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123412507 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.08972863 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138388702 seconds)
  done (took 3.766550224 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169694223 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.149792123 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138650722 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094222845 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158402202 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.13911946 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087392287 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139920443 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086881716 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129971792 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117046329 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132344927 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127171266 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087869142 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112503126 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087381626 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.126998647 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128157307 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090475188 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.143102869 seconds)
  done (took 3.43959451 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096895761 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116205117 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087309581 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115487388 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098302289 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119518461 seconds)
  done (took 1.626180924 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090141532 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114108454 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.0895883 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113776384 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09392386 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113883451 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088151732 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114573771 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088739502 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.1142276 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088950102 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112759808 seconds)
  done (took 2.21546934 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.449596105 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.091839576 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119261313 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110106882 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095309543 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.11319252 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102407241 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118432598 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139358167 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088487627 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113573377 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090937398 seconds)
  done (took 2.623670194 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229801921 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123324777 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282052383 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268738121 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152354264 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169079442 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274769036 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158430338 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22032003 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156951254 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201245892 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218972661 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148828553 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186446483 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135282796 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.117886466 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221650119 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235242765 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150602949 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198941468 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220937767 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162539981 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176831867 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123917763 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135737327 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168491908 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119785349 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128136166 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202488643 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196890524 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185047897 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159242066 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144584901 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231097209 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245505165 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189750699 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276182701 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131666828 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166555654 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166229846 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232323483 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136141849 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227041157 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153208388 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104003152 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213645447 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163114266 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174568188 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.148577883 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137370089 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191610688 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233471004 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.21324432 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110793515 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227221649 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153938359 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166746417 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190342144 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24662152 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193729826 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20079053 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.092569367 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20863921 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188568756 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180884999 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.165018581 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.202274155 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145706738 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188590058 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186048646 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162301901 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209491205 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18253378 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138589803 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166104647 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169659274 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168411866 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252502499 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174254993 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119517851 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166960094 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146880914 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13115551 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167374544 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12376243 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232739937 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143906907 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135098675 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235692416 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156925483 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157690839 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19790143 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215671685 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120297258 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.108766816 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153527034 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153730017 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188029606 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138051817 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155386797 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159085686 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.101871391 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202110879 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097136178 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172634842 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.115045798 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170912024 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17889395 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124880656 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159782546 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148995899 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.147337254 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170595037 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195631362 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14048548 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132082974 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206755294 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174375222 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.148294032 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175955471 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223628291 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142246831 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121781593 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22198485 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239913181 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111689588 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225185503 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155996975 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132828057 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.104398712 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178176434 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15101298 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159518139 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134138088 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179633824 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230301936 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098703918 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136775641 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181325273 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131030809 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130420628 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158812875 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14669189 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137005212 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.119354828 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150561669 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204278921 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175007772 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151658636 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162265821 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150489872 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247896379 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139441722 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122537446 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14687646 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119224215 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190056967 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195743736 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129664772 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22707695 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170754146 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198585191 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165417633 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134135153 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174914973 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128146592 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092603149 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216392036 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165826561 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158584537 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194686914 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219691093 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178143431 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.179686544 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16914433 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197017547 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.137049108 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178343427 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110968122 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157873912 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162914525 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122196778 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140986528 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106132249 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146243057 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141836133 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131922763 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192472303 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165750556 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212723779 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156846962 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14702101 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178944832 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10076902 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197671706 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.174679505 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147231915 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195715626 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189839724 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210888933 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140381114 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198450896 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119348988 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097879992 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140490988 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166533887 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133712398 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1332493 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162828154 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178701819 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178259679 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172890362 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232138771 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16707979 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188747673 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119953527 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166773238 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182962808 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174282581 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180690097 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137555397 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.121510803 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174436666 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154094142 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247566264 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165430642 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198701047 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203235367 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148718761 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129973545 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149206755 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183435272 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154597378 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174884137 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145524254 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139218914 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160164954 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104992163 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156976519 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206084972 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160480986 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183985309 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149046882 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205873954 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1003461 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162179935 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158071688 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16153771 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.107539095 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173046827 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200130765 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145364276 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165761178 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213460098 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103081612 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306528002 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229200026 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187411874 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135976009 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155107473 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158189724 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162188678 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168089808 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176905007 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156571257 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210831537 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130233184 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134705252 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140782838 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147321367 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147302211 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.102306919 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146027919 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.173056135 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137063931 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181883637 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185042864 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130209204 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194923838 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121488954 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142815275 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149867128 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209534747 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199638721 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205503718 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149402246 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177304313 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230881384 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097474011 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13069021 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131777802 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175317248 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107306221 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215501962 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.184473937 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22303507 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177625453 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182133081 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137391484 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119065176 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128306273 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195840217 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202376582 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147905721 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.156533671 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225899741 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113946102 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130119575 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169602881 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195531287 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143782863 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219172164 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.0794316 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273344353 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123948368 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105091968 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161727766 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230063226 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134414473 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158396766 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190002901 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16664155 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161900971 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146416556 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187344399 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21064678 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224376917 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176882307 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131213845 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153442328 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1740772 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189398199 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155445746 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139079741 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199899236 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21799875 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194223999 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140404477 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167556171 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170052287 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155457866 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183955266 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134225695 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229423144 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106197225 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217214225 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151998562 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140392832 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173748518 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.18490237 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137630949 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185710626 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174492257 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133817734 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131644839 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167082337 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174688131 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155402268 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125956713 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177516576 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.123940037 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189466844 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254337054 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133450511 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125607272 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145111535 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134845467 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155204223 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156010575 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139451669 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.13721574 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225081051 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133185118 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189199502 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226148076 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166787938 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1714132 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143069761 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691560828 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.101227511 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218298604 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152791014 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203168199 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147961488 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170491352 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156874952 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165755795 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217893467 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159041674 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202465398 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217254391 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17682896 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130014891 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156425513 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158989669 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142779616 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149237803 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167186316 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158236132 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.149784489 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176563974 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167003092 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.132929944 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112041367 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223130629 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153525035 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179227671 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177691756 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137885228 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171121791 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183308924 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13231817 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.176973664 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232970448 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140364835 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149525921 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106779424 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152814569 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258160287 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122767694 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197752898 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173861839 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156394713 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164255559 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144734507 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21383334 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154205043 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175817422 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143955357 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157638209 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15501141 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108837921 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128428444 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153548459 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164379577 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.147332482 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157608161 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.13808147 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212196163 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095554206 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143189027 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192411961 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21206065 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21093283 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13391499 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133321251 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161522796 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148155066 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173159037 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176831908 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.133474813 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10750586 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135756962 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.153548126 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112023599 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153321621 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190720643 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162013699 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230332457 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134658617 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249390035 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138121984 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152935972 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087612398 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129309773 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149388369 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143958792 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156487307 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190483428 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254833989 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145400842 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105166457 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147235856 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128248104 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13280936 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162476679 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159220701 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173849049 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142271492 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081069077 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156102746 seconds)
  done (took 81.234677469 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160146247 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.128874814 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.143913051 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.198807889 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173856466 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267123944 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.206633826 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250581738 seconds)
  done (took 2.611974899 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092159781 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.142757788 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.154914618 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131270352 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090319711 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117763745 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.336859243 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131562186 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114015676 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.11308335 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.167745015 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092631402 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.538880393 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090116395 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117525102 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.105440908 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.090298301 seconds)
  done (took 3.701288124 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.471410504 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.697728827 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.507077414 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.096077251 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.11012156 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112178152 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.56571086 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.191943598 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.112548696 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.472576328 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.766266771 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.163594466 seconds)
  done (took 18.353323031 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098017427 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.119204379 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106609588 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.134226153 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095374139 seconds)
  done (took 1.643303263 seconds)
done (took 128.654304936 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103326082 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.39637421 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071731487 seconds)
  done (took 1.586846568 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10569908 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135739486 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108673747 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134417923 seconds)
  done (took 1.578819409 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096710429 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125501854 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108335949 seconds)
  done (took 1.419424849 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.317085367 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.18868674 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.159610464 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105341334 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128388489 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10156982 seconds)
  done (took 1.424948703 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.095649236 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125690403 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097566327 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128138009 seconds)
  done (took 1.537764207 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093723618 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070213751 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099480466 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073993332 seconds)
  done (took 1.424064076 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112737363 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.12986277 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102822178 seconds)
  done (took 1.436455851 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.127461781 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.136663503 seconds)
  done (took 1.356216398 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104087696 seconds)
  done (took 1.19199014 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119462468 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.167869572 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.187140164 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.161544953 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.223556355 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.163176799 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.139602905 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113002825 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129215768 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.142358949 seconds)
  done (took 2.640164194 seconds)
done (took 17.454383472 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101229342 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.511574505 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412028439 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11648863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.717762554 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380014002 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.070147353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144809526 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163243571 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092214903 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13717806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670088613 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.023219826 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.469453865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983517255 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.468450586 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702093004 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092374549 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118391351 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092562361 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.055508954 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09117628 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119937101 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091742718 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.700391173 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424360437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094016263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.464282884 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091378247 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124390003 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382878666 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121469728 seconds)
  done (took 17.310360457 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094052783 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17227807 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09804223 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136118253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121631675 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09335705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123162907 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092817643 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177559103 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12295891 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109851827 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119891098 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124885274 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094144292 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140182941 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092010832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124130603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092301199 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119821618 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120182404 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110535193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118630208 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094313768 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119739943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092821181 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134525354 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121094263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0926935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120262168 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098235231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125860393 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094598854 seconds)
  done (took 4.785011844 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139671296 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180674453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126294876 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126843367 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170520909 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123242805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197585704 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118108405 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180146246 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125023038 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138059481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092028352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155133265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121475811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114303011 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120248779 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095853476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120472072 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092759517 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12111452 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138271305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092700121 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119678574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092472077 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.120647675 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1065675 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122139837 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119361696 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092490635 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125440963 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09988129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121944199 seconds)
  done (took 5.112313392 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09585501 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123887354 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10864995 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136703213 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094526173 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124253969 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097250219 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122878157 seconds)
  done (took 2.001695231 seconds)
done (took 30.298441111 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11075763 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125196448 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106544544 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133742826 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102138819 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130305203 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090880598 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.131278378 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13335434 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101026904 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135818043 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091789026 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121445557 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091018803 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133790249 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097054288 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13154852 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101658513 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132327619 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131083465 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093947564 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132044117 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102230581 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13219248 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10434799 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131949592 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136184993 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09890777 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120502281 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094182669 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123045981 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103244188 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123120763 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105203755 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124700098 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096765413 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12143458 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094238648 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130902374 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131648438 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098590172 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132242034 seconds)
  done (took 5.954589415 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106679217 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138157244 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103749311 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080829361 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11501997 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080281671 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136102444 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078784937 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108668581 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107121811 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07377972 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.104522661 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078207883 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100471895 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076797307 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074694459 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107227942 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074930632 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076008201 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104926311 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079468667 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072600692 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106470895 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077807101 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074691106 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108377521 seconds)
  done (took 3.553269338 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098744263 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134190776 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112102894 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182049382 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158820482 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099212682 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130885611 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139336438 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107336871 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118436919 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095400212 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147876076 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109707924 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12759359 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091272063 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134482519 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134451827 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.092510165 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126974477 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113300595 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136466116 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101856733 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14099094 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131106126 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.090833759 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122116855 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095775364 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132753363 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097048243 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129307631 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096842196 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123165298 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121033536 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103736672 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124784255 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093380681 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139369797 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102380648 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128910632 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092667826 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.13133607 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.119328069 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.111965134 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16505222 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091480657 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126662576 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127123733 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.101855057 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120578447 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110863574 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129993995 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091315506 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123533808 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090959068 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120498128 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134066097 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094821348 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124450141 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101658441 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123384089 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105025713 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124578193 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10850841 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120328048 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100707126 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119217293 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093046638 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118512417 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142188765 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093413271 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161743784 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092434461 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12121866 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128932881 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.09902731 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1273274 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092923258 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135969312 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102628093 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123576027 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101330669 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.122958234 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.12363235 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.110292866 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122739333 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09404244 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121112011 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099713841 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122958077 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093573491 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134803273 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092838713 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123417848 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.138650077 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.091657193 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121502706 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099347051 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125434647 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091799158 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133809804 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097396545 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12147032 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13042511 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092574341 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122621539 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102202114 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12490562 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09101486 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12484937 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099235137 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.120776368 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093378809 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123124412 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093877265 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129612626 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.126682748 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.096970814 seconds)
  done (took 14.682866084 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.224112261 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.211606046 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.233299095 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.257899134 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.132654506 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113761741 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209846848 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.152930535 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.120810716 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15837781 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.160683835 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.178366407 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139312366 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.177106619 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.137072217 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121077296 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.109963895 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.160985478 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.211686255 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.284998246 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.111905221 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.129614291 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159840602 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157780701 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106813249 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131085478 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.138407968 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104810787 seconds)
  done (took 5.656352486 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106509278 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154071276 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098260239 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14235199 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146687857 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093353569 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125950287 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094696787 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.132851416 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133275316 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09326917 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127360204 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100214482 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130251882 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121790076 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102064918 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130394476 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093735013 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123859621 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096079947 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128338298 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102125296 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12527217 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120213156 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101551157 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119926641 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085737159 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139736419 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121561488 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115176244 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119492518 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098561202 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.130790841 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093075131 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121302207 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095171847 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122884151 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094309901 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122483646 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090950136 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119406956 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077671089 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120415423 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133526532 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099133238 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080389126 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127320412 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126920728 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09432812 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119649777 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.094530706 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123298158 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095354802 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128189015 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09857061 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122924331 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096404755 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114285452 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099541984 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123588939 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084684233 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119823875 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097144718 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116126647 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100938922 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126656415 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092615976 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123574396 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097545077 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12782667 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095624705 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.124955438 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09126345 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.123630098 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095094588 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126513127 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096956802 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120504681 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121312643 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093162434 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075343231 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121631824 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074214345 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124219196 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091671819 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119961706 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094635568 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128278974 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135329739 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094918331 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130233126 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094087586 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12110226 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096375803 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111392057 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096576706 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137212989 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139140563 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.0927541 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119373235 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107456277 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124364271 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092164459 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104986904 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.099747335 seconds)
  done (took 12.825404264 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.125976657 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151908043 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095452789 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141456463 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.153983621 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156327385 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100114473 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129974836 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.093565451 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140886075 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092877106 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.129929009 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096717784 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134984773 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15470369 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102954512 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123657339 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106612392 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130078804 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168287016 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111044697 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.140673941 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107695352 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122531839 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126739401 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.109708344 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159213005 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108060034 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135218909 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140374497 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106897745 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159096781 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141728017 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097667937 seconds)
  done (took 5.43616252 seconds)
done (took 49.20686959 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.218699559 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.419379559 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.196746138 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.081485911 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.215555958 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.206592924 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.209082273 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.197091322 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.48185283 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.198853764 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.455341214 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.795146502 seconds)
done (took 59.803598627 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.30728759 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.329888826 seconds)
    (2/2) benchmarking "String"...
    done (took 1.462683009 seconds)
  done (took 3.93257998 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.551926723 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.114496509 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.458072039 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.196509593 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.200979196 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.488312988 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.814278997 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.471705007 seconds)
  done (took 27.87033506 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.199248754 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.575383054 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.868171924 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.859347839 seconds)
  done (took 18.629792893 seconds)
done (took 60.41824019 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.221362829 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.283094805 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.216938534 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.1771706 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.306583714 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.223815298 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.225540148 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.283974091 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.216405649 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.181241108 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.219462007 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.208835713 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.22191126 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.48950874 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.205593435 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.202655922 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.245089577 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.869067874 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.590419254 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.207149085 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.216121885 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.220304688 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.214311749 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.205254941 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.256472579 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.210451371 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.214303652 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.214461859 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.673748964 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.20716469 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.20604814 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.614410556 seconds)
  done (took 190.375807574 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.198769194 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.148854239 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.305296294 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.259155572 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.61989461 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.402526567 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.321672136 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.696587484 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.22048346 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.205387266 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.363762557 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.205978881 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.43673179 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.181905356 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.210324823 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.283775908 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.435146523 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.457134936 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.222958395 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.474596132 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.223218036 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.313419368 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.232008318 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.336349738 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.22200278 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.215760228 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.224844533 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.229831373 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.395297319 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.353366132 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.240927737 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.263854768 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.803020453 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.0638967 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.225996785 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.235354789 seconds)
  done (took 149.358154442 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.471521267 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.200676806 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.200798168 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201831656 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.231748948 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.202047915 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.767234709 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.770922199 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.738177628 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.791868445 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.265620911 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.452189512 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.201405411 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295299904 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.215660547 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.202937061 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218062732 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.242850255 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207061831 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202723071 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.768964582 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.220175974 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.202328165 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207872565 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.203361306 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23495399 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.59223383 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.203461871 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.269296116 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222025374 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236108784 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.530739288 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.250741422 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202992123 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.584034696 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.99786991 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316286795 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205287708 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234900669 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.203555815 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.483792766 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204468058 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.204872115 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.20631294 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.203024666 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.20441575 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.772005402 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.210193413 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.18960529 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.851027631 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.207572348 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203715739 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.693162275 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.939851653 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.219134512 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.204122635 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.207125769 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.205334855 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203598037 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.237159736 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.692676578 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.301536311 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.221040605 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208247346 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236163888 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205366103 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.372000144 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21190222 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.372789929 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.271405128 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.31440248 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.77255265 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210784853 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304329819 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326520238 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.205556608 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.207634681 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205247783 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206382539 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.315201548 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.206421916 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.632767797 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212065862 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.208065054 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.266407062 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303268466 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.206487812 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618615608 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.211827846 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.206403924 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.958341067 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303237609 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207433148 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.206608482 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206298656 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.635512591 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.774006057 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.508402544 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.213299913 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.686595501 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.212086594 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.205808701 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.652527652 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.756322132 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.848692269 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.207777816 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318792825 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210350721 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.208219913 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.206873084 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.236327118 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.223790799 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.266331395 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.207281648 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.604378041 seconds)
  done (took 347.783725071 seconds)
done (took 690.1163078 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.886125228 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.873994628 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.981695078 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.863115938 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.851252709 seconds)
  done (took 10.592107489 seconds)
done (took 11.727100476 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.390403109 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.390899668 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268842826 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.391930718 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237754374 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.408040853 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.3720592 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.232762739 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.306393881 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.290376735 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.309469698 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260788429 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236638743 seconds)
  done (took 18.232333514 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.524634538 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.511999764 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272513404 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553582066 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247764936 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518039396 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407843702 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417643941 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419071223 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2410915 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222546324 seconds)
  done (took 16.473389952 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.548069788 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.541592547 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275625177 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.526193773 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249951659 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.523286645 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.423371638 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.424097718 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.421222804 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241454718 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222726402 seconds)
  done (took 16.535420312 seconds)
done (took 52.376225018 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.219905047 seconds)
  done (took 2.35799321 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.254612166 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.419047611 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.240077721 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.224270964 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.220286928 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.219761399 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.2245803 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220604926 seconds)
  done (took 11.162586273 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.216572666 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.218791632 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.217080298 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217631577 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.219224507 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.216086126 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.217524494 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.220332184 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.220023764 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.216733313 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.218907953 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.217311395 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219394233 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.21761898 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21922743 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.218421595 seconds)
  done (took 20.631507861 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218514132 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.216733612 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.216907593 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.218630806 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.217502953 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.217958653 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.219391501 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.21747947 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.217582948 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.217449468 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.219361042 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.21880539 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.217849191 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.217432455 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.217865981 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.218020152 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218450129 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.218017392 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.222554635 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.218362024 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.219012554 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.218376037 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219790105 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.219964838 seconds)
  done (took 30.384848971 seconds)
done (took 65.67533388 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.272851488 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.827044385 seconds)
  done (took 9.241011962 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.221295472 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.220452018 seconds)
  done (took 3.584541092 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.221085602 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.221553401 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.220511737 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.22073206 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.221271956 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.220407444 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.220359915 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.221605504 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.221352016 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.220640974 seconds)
  done (took 13.350600828 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222549958 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.221295993 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.220069709 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.221161671 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.221531802 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.219653123 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.222867226 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.222049976 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.221966273 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.219977294 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.222067144 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.22075453 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.222112445 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.22069835 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.222514264 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.21973093 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.220546847 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.219890388 seconds)
  done (took 23.123160864 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.222650433 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.221537184 seconds)
  done (took 3.587607489 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.221198608 seconds)
    (2/7) benchmarking "second"...
    done (took 1.22060884 seconds)
    (3/7) benchmarking "month"...
    done (took 1.219526971 seconds)
    (4/7) benchmarking "year"...
    done (took 1.220483971 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.220163063 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.219346656 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.220335979 seconds)
  done (took 9.685550041 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.224162774 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.395009097 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.474835556 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.859439063 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.224910775 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.227171592 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.118749497 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.226226079 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.22891161 seconds)
  done (took 14.123899296 seconds)
done (took 77.837079057 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.241697266 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.234368806 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.354977262 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.22851411 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.238473719 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.561930386 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.255063071 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.344871962 seconds)
done (took 37.603083665 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.231107714 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.941472204 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.954876195 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.223245135 seconds)
  done (took 11.264338962 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.197880917 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.151453969 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.211325752 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.237563644 seconds)
  done (took 17.944179996 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.236074049 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553887728 seconds)
  done (took 4.934452768 seconds)
done (took 41.518430066 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225780431 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.225850091 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.225091901 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.223986406 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.226012463 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.222656406 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.223933687 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.224216585 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.225374451 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.226130743 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.225334275 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.226320399 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225934347 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.222779167 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223630572 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221991141 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225815728 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223251378 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222535815 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222740562 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225972853 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.223411353 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.222617032 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225931143 seconds)
  done (took 30.533932077 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.226259712 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.225308604 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.22589586 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.225996989 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.224113603 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.227247524 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.225921385 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.223873655 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.226920633 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.227577054 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224435211 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.223205725 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.226596761 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.224010923 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226170619 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.225202295 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.226488854 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225314775 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226897898 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.223441691 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.227895107 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224902406 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.224647209 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227771752 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.225953781 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225128527 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.227956975 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.226065612 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228150138 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.224583774 seconds)
  done (took 37.920154975 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.233845797 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.234680498 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.226853378 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.228826258 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.228154649 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.228524354 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.229094806 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.228774422 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.228546296 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228482239 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.228230574 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.228418018 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.228915398 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.229105395 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.227800828 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.228352529 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.228869089 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.228760371 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.230030076 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.229145599 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.229912742 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.229935536 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.229297115 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.229274061 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.228856592 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22946891 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.229609814 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.23032681 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.230476943 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.229370393 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.230244513 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.231632226 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.23036081 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.229645254 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229857769 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.229911261 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.236042086 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.236834372 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.229690006 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.22902032 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.22997714 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.23027715 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.230147824 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.229153855 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.230999489 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.230712299 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.230475648 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.231054767 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.230957692 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.229551133 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.230206538 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.230283607 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.230966682 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.232558412 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.230222451 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.230798343 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.231710436 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.231793761 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.230715101 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.232143728 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.231669011 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.232533244 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.231008983 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.231719652 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.232133771 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233227771 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.232187862 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.23215299 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.231286796 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.231856696 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.232113752 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.232203026 seconds)
  done (took 89.742783201 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.23381624 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.229992108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.231073851 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230203823 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229058223 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.232035601 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.230280585 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233064753 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230075193 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.23282472 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233710199 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.230385382 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230493444 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.233842633 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233529943 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.232805376 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.233157999 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231493023 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.234561943 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.233784405 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233817579 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.231522237 seconds)
  done (took 28.258473466 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233984668 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235727362 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.230920814 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234393819 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230141663 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233435461 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.233730804 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240623221 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234557559 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231277055 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232916119 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234621481 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231912028 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232399363 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232412164 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233879057 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234543689 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233414714 seconds)
  done (took 23.358373961 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.232772598 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.232065369 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.235316245 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232722232 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.232877356 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235596011 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235297823 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236297359 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.23545223 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.233651003 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.235626455 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235962157 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.235365222 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232959715 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234891227 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232750708 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.235420033 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232936716 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236820517 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233878984 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233736647 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235831132 seconds)
  done (took 28.312648116 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235997793 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236315172 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.233941268 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233087422 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233087296 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23574448 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.236936616 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.233938568 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.237794634 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.236396349 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234812119 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.236671686 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.235585202 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.236268467 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.235623568 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233107447 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.237718693 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.23489244 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237002331 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.234533903 seconds)
  done (took 25.865696368 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238524885 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238852036 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238609249 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238893936 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239629402 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.239257757 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239676222 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.239078847 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.239722627 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.239536123 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.23900188 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.239074545 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239465446 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241078177 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239743171 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239667447 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239281668 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239524166 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.240108037 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240941022 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.24130705 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241430782 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240014445 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.240308948 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240289721 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240841382 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240715226 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240601765 seconds)
  done (took 35.872449315 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240538315 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238693892 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.238021896 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.237312698 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.23709985 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.238055578 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.237542126 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.23753445 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240817052 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23711436 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.241254983 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.240103541 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241431941 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.240324381 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240902138 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.240050296 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239504872 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.237541781 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237348607 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237615327 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.240833622 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239861571 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.241897008 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238177363 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238476631 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.24111249 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239241383 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239262473 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241197326 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239197675 seconds)
  done (took 38.337308912 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.260389909 seconds)
    (2/2) benchmarking "in"...
    done (took 1.260310141 seconds)
  done (took 3.680712344 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.239278492 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24161278 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.241893844 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.240331537 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239971961 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242436441 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.242426777 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239865348 seconds)
  done (took 11.088108061 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.242173703 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.241566806 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.241840295 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.242931554 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.24276018 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.242023371 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248200607 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.262166631 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.243519209 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.244171098 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.248662038 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.250861312 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.245010535 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243062791 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.242420858 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243995872 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.244481045 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.243609253 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.244202411 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.245413399 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243740008 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246516959 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246203524 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.241743628 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.246191909 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.254890414 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.266655357 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.244558133 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245272571 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.248164448 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.24393119 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.24243169 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.245071373 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.246029123 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.245935022 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.245644443 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252757855 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264052636 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.250834191 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26422406 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245011907 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.242424518 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.245182001 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.24645498 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245644644 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.24532536 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.245898187 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242966675 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.24554913 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.248573778 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.250943021 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244902148 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.243430577 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247736025 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.246757474 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25175281 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.265679148 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.249793436 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.255531414 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.256046644 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.276751908 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.269800859 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249345228 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.246689055 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256912965 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.269678054 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253142671 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.26437346 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.243697512 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.246065718 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.252716989 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27928642 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.27278607 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247043829 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248268619 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.247364259 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24713178 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247856949 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253678226 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.269453641 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.248858342 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248777778 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258934343 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269789056 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.247362287 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.247992552 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.247768881 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.247950956 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.250354883 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258900248 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.268195443 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.249366508 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.24858791 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.249192392 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.250716756 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.24976212 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.249522983 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250218413 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.246989847 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.247777573 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248659255 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253557523 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.256611903 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250118693 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249945029 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.255407494 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.267888665 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248879948 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.254952695 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.249600407 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250687743 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.252658829 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.254937598 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.246963106 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253100751 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.257822786 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.249234564 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.251199619 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.251118513 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.25218316 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261115703 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.273755072 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.249843312 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.251237009 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.254709899 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.262146481 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251737713 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.253482028 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.251753486 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.248328856 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.24841148 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.253514299 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.251699041 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.251021949 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252055099 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252815691 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.249910616 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.251835348 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.249843243 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.252309485 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.252072203 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.251943815 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.252710457 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.2532563 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251474256 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.252825625 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.258295502 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.271606693 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.253467618 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.252592358 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.249372385 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251827768 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.253116865 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.25404564 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.253758493 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252372999 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.25327524 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.253598426 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253897994 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.25304632 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252743037 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.254301742 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258293313 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.253572355 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.255183819 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252115516 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.249970449 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.253556747 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.254311482 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.252936735 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.254321944 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.252601037 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.256506666 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.260832316 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.253902275 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.253312749 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.256066206 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253574749 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253797805 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255115594 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.258864386 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.261750636 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.25442905 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.262173799 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.274059839 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256399344 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.255575288 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.255871205 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.254855238 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255037853 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.258593205 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.262218411 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267216345 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279279987 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.257655814 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.260048162 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.256848668 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.260528173 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.258919586 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.256450291 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.255651251 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25607352 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25680797 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256679409 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.257076194 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.25613916 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.256307944 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.255881053 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.256484074 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.254684896 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256027881 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.25576509 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256687771 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.254286868 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257049011 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254493822 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.256663994 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.253853997 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.256519747 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.256387759 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.257243204 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256385067 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.262569676 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.254032169 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258318832 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25860721 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.257473233 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.256468737 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.257554524 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25850061 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.257342402 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263996917 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.277388171 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.258830364 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265045352 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.278293122 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.25825071 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.258779663 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.257877104 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.256734861 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.260971118 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.265882665 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.258000289 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.258198297 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.258632754 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25988949 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258146775 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.263256778 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.276196674 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.258676746 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.259439764 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.260490217 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.256915335 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.259715322 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.259084457 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.260486313 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261185734 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260813124 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.259840934 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260697547 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.26114736 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.26110501 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.259865977 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262805964 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.26763057 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.26392683 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.260279657 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262578643 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.261453952 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.26376943 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.259995725 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.260446175 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.261082543 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27305664 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.2860648 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266674613 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.281030798 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.261677855 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265962384 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.28103158 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.264539959 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260385894 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261826811 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.261049926 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.261654129 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.258892042 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261771309 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.262121697 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261835959 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.263315928 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.265797009 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.260843741 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.261575014 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.261705095 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.261479861 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.262077893 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.260957696 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.26230674 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.264115763 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264352071 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.261140077 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.263132179 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269523559 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282184062 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.263138491 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.262676459 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.262149408 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.262707031 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.264126662 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.26282883 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.267267631 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.271005906 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.26507589 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.271857013 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.264488086 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270878006 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.263174072 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.266782591 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.271311795 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.260630117 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.264006053 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.264433441 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.263995663 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271021684 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.282131144 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.266200122 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.267375502 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264438512 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.264285432 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.265131714 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.264098396 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265150273 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.264202823 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272259982 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.284407726 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.269526174 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266893183 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.262069218 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.26501102 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.266483758 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.264991319 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267608233 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.26540448 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.266446626 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.265784077 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.265894234 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.266406327 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.266124278 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.266031061 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.263457474 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.266157801 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274338961 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.287597258 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271731611 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.26715449 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273397486 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286610391 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273749057 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.287635055 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.267172587 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.267370017 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.268480775 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.268791283 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.267071146 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.267595284 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.267090161 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.269211663 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.271097631 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.266965182 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.268486633 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.267814107 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.267520686 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.26700863 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276870088 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291334403 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.269126083 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271688354 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.26658716 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268901803 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.274226836 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.268040789 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.267858218 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.271148998 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278623454 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275828444 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267778157 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.268371584 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268839258 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268445055 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.268605251 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.267270222 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.269043886 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.269650816 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.270486649 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.269369266 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271289606 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.269327279 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.269301825 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269450101 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.270112708 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.279629356 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.288387273 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.270718792 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269149692 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.270570739 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.270111909 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.268929217 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.268972064 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270354192 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270296813 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.271383301 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276801892 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.276918222 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.272339163 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.270041364 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.271207613 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.272293243 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.271374133 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271116299 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.271370906 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271390631 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.273237643 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.271460291 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.273197592 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.270625281 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.270592725 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.270206424 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271547748 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274178959 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.279374359 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271003602 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.268776804 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.271374725 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271904531 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.2718617 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.271083909 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.277432971 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295319158 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.281459347 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280591468 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.276561343 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.273108063 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274288183 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.279804241 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.270479087 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.271713044 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.273527297 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.273099981 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.273422348 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.276868111 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274128626 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.278907076 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.292874493 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.272555402 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281239588 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.291732856 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273534414 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.274041116 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.277940178 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273706695 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.271730753 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.272805462 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.272886817 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280342324 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.293604005 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274557692 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275236921 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.273965337 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.275867366 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276747511 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273996643 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.274925365 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.271384391 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.274443209 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274122195 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274179013 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.272300907 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.274730959 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.275057365 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.278305973 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.281822026 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.272538466 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275589549 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.274816434 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.274547659 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276145182 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274614133 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.272293997 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.272676476 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.274927499 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275142811 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.27606957 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.278432134 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.275340059 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.277486602 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.278642529 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275644672 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278311742 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.285553801 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.282155503 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.273659675 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276102654 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.276424547 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.278267928 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275905258 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.275788703 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276765566 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.27775409 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.276515229 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277074823 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.27633486 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.279065523 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293234973 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.295281523 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277181118 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.276223485 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279173638 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.275132433 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.274976774 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.278538424 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.278464326 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.281027257 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.285156037 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.276744913 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283557476 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.295259218 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.279414782 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.282067616 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.281221254 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284964152 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.279873834 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278275937 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.279200565 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.283330338 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293402461 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279129394 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288379428 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.308410006 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.297735903 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.278753034 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.279484498 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278608895 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.278621444 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.279930715 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.278753962 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279152583 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279656184 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.280331605 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281208196 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285381515 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.279298393 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.280968979 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279283951 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279405771 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.280681474 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.277611077 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278929978 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.280453169 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.278806083 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.278374485 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.280413914 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.280602048 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291645634 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.306107712 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.279150686 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.28079075 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.278969348 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.282257355 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.283724924 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290175612 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288551803 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.279751954 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.280709946 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.282553835 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282305084 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.280029052 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.281455009 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.281188603 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282484034 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.278476139 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.293238211 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.306598595 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.284518988 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.28105222 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2827894 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.282417185 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281651456 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282271698 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28185191 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.28261055 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.283300327 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286033449 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.281777001 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.282734009 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.28600979 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.289768515 seconds)
  done (took 755.334254136 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280246771 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280493808 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280487141 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279269541 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280311443 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279828772 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280563489 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279783108 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280155354 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281653601 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.281265274 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280313591 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280389694 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.280844606 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281676874 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280761729 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280791423 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281325454 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280034504 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282596662 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282443388 seconds)
  done (took 28.093520153 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.284040998 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.281083508 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281774813 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.283974688 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280471877 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.283644375 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.281816881 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284481042 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285010093 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281802774 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.284404728 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284567128 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.282081428 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.280845359 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282640619 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28507359 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28475472 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282453048 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.284449647 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282534035 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284373734 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.282437228 seconds)
  done (took 29.427402985 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.284643728 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.285197764 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.284903291 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.282500941 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.285516946 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.283156965 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.286108746 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.284672365 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.285005853 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.286827993 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.285614335 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.287427223 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.293057533 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.292049437 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.288391839 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.286302106 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.4309122 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.286334176 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.28671511 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.28595501 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.283230276 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.291696052 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.303687876 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.284134215 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.286857828 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.286869893 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.286497697 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.287480678 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.286001159 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.288484945 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.291526724 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.286735503 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.286857078 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.288254651 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.286155283 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.287877132 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.291247545 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.286399564 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.285326431 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.287493369 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.296910916 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.309083479 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.286676419 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293340219 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.30891588 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.287432695 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.291618336 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.295876881 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.285038068 seconds)
  done (took 64.490152796 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.287693291 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.287682078 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.285846717 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287900316 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.288941423 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.288609209 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289316037 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.289187891 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.286406487 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.28598276 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.289151924 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.286385535 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286268475 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.290940255 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289758518 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.286464862 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.288610181 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.28657628 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.28759241 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28728428 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.287480815 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.289414256 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.290094962 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.286858176 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.288532265 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287664702 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288095568 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.290012724 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.287862832 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.288237538 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.291011774 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.2902481 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.290020691 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.289112359 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.287605724 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.290934608 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.291235919 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.288985598 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291195909 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.288082041 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.291798998 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291715293 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.291606202 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.291526179 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289085065 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.289531848 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28789489 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.289949114 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.288597006 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.293085278 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.292913255 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.289358192 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292387661 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.289231306 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.291738557 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.293686113 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.289921839 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.289061036 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.292724286 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.289930009 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.290588844 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292513341 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.290327563 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.29268864 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.29287883 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.290556397 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.289967563 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293908371 seconds)
  done (took 88.894981895 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292501255 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.291609248 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29247853 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293996771 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292924226 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.292451356 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292719523 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.292018793 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293130369 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29324786 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292486747 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292262927 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.291693921 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29282207 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292542313 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293131093 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.293900503 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293417935 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292648531 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29296035 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.29244534 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293770739 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.292969161 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293552094 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292794663 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.29388937 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292936349 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293861907 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293516128 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.294129018 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293581599 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.293879447 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292548349 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294567532 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.294134216 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.295052742 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295309266 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294202083 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.294897738 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.294918137 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294760419 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294251526 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.294690829 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.294166747 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293933602 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.294743016 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.295038446 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.295245298 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.295453774 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295736448 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.296475495 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295592427 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295006003 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295315587 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294550027 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.295366704 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296491618 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296246447 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29619821 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294712231 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296187787 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.29725479 seconds)
  done (took 81.438850292 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296049507 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.296828581 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.294602174 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.293056493 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.297823995 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293515491 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295717286 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.296205506 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297151495 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.296657882 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296820319 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293980156 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29369933 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296718871 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.294823161 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295293138 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295155211 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295439226 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297899426 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294956105 seconds)
  done (took 27.123152549 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.294561036 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297988382 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.294712869 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29529807 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.297546266 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295890121 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.298330638 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2984732 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295296364 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29824551 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298856212 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299625117 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29527276 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295940305 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299379623 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.296402843 seconds)
  done (took 21.963749104 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.295806991 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.298853979 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.297796447 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.297933267 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.295818438 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.296152206 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.298458357 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.29667593 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.295669422 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.299982427 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.299441737 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.299583971 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.298418688 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.299402411 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.2979235 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.300308951 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.297497714 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.297382054 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.299736066 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.29953165 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.298413213 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.298426605 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.300107755 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.300435718 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.29758191 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.299017027 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.2990509 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.297541875 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.29870845 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.300448194 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.298893911 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.297737557 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.29752538 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.296877639 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.300072054 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.298394176 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.30036799 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.300519805 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.300100331 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.299479058 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.299766331 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.299137268 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.300600619 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.301301036 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.299627006 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.299721084 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.299311497 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.29842764 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.298471175 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.299516902 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.30141495 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.300823844 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.301744272 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.302445466 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.301501963 seconds)
  done (took 72.660163631 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30150327 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.30152354 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.299977619 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.30154762 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.301343533 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.300137593 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.301484622 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.299824908 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300145751 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.301908152 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.301136596 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.304092636 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299488073 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302757164 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300009178 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303041432 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.300083439 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300469103 seconds)
  done (took 24.637599839 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.301685458 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.300898041 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.303034187 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.300190402 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.300110467 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30415127 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300385909 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.303443923 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302105988 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.3014373 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300757781 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.302936725 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303436804 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.30350779 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.301793112 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300639644 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.303896597 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304338915 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.301121762 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301953534 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304286574 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303425241 seconds)
  done (took 29.866742048 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.302523396 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.30382127 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.303099452 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.321148176 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.323851535 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.326328747 seconds)
  done (took 9.099115994 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311954753 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306054313 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303103505 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30564838 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304414211 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301755791 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302648787 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302938022 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306152549 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302884843 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302894712 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305554429 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306463852 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30336019 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305823051 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305727478 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303912014 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303799924 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304887819 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30638741 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302084768 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307133849 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303639359 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304068571 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303263856 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304222304 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306163149 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304653554 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303485895 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305102368 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306885791 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303282361 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306840734 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305350555 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307997562 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306412062 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304254697 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305980539 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307967153 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305046082 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307681905 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307037926 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307457014 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306061599 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307424654 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304757232 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305268962 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304783435 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304544294 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309038246 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307768033 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304880993 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308550458 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30871545 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307304311 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309222249 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30610912 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305324918 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307409533 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305464245 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305040677 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308180768 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305474346 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307177986 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309843406 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305701562 seconds)
  done (took 87.418765178 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306787498 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306844842 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305394555 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307577616 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306862101 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306770369 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306170441 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305716879 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307279408 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307296526 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309824651 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306399975 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307033459 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30760723 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306401761 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30688766 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307998872 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309285439 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30834378 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311711133 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308772854 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30894299 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307432538 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307812924 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307872719 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311415763 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307404485 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308455233 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306983198 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30691064 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308639156 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309059943 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309037748 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308591818 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308312774 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308380319 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308502289 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308480209 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309252399 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312302213 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309421253 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310757926 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309604024 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309178205 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310612155 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308626006 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309112679 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309638387 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310028044 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310805398 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310452114 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310112733 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309723445 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309359931 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309567979 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310334906 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309600991 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309512287 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310479977 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31185419 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310859921 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310217618 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312300454 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310058052 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310129093 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311316949 seconds)
  done (took 87.608957034 seconds)
done (took 1762.172348198 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.359058014 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.409944097 seconds)
  done (took 13.995039114 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.475264284 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.427010422 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.311728797 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.329816499 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.310796019 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.332821527 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.308088731 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.312077495 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.312494972 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.311914141 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.311422935 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.498128864 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.306622537 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.312010496 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.312251071 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.408163982 seconds)
  done (took 42.814507831 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.340528398 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.318543802 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.433763093 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.339863423 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.340468838 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.509300711 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.374927434 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.318221993 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.494974475 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.357967257 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.947857961 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.339456411 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.317530233 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.475933681 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.335451354 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.506631799 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.573926649 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.953543789 seconds)
  done (took 30.506338067 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.789239949 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.340744748 seconds)
  done (took 9.358685713 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.356143138 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.368919897 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.333962165 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.333768556 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.344605418 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.379339138 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.3402214 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.354136927 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.338572997 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.379897893 seconds)
  done (took 64.764439969 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.335800933 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.318154018 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.319684385 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.317115673 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.310656215 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.326330288 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.318738668 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.314919079 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.205699881 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.455479733 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.325756817 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.327640542 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.338502823 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.31859924 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.317150657 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.355054679 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.460073002 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.318258468 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.316050753 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.324274223 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.318709241 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.43806467 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.361154556 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.317047523 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.450739879 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.227469108 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.328702133 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.327233258 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.443340992 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.319079513 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.320388354 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.320363761 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.321186291 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.943164942 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.858410779 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.328755334 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.345603239 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.327752938 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.317025922 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.485243277 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.322308072 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.327857268 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.313607805 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.840616445 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.454104573 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.437392942 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.571778457 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.338573043 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.321117577 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.382899777 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.320954975 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.32330165 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.35207795 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.085242455 seconds)
  done (took 111.347334596 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.356454272 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.704538045 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482862186 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.332101574 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.960447383 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.966317157 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.33638922 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.619213218 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.37850857 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.314241906 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.616957856 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.835199466 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.339192231 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.339426217 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.95541681 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.39785886 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315998674 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.106364556 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.330631831 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.315985777 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831135173 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322186778 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.33363235 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.474434605 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.352450657 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785759039 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.834204628 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.620446405 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.335436737 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.316130447 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.794504781 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.339040368 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.328063522 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.318076775 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.584704406 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.688648658 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.684241743 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.336635654 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.354230756 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.315462019 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.345434041 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.781128275 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.689635888 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.335090879 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.324297347 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785248383 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.333118602 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.324995284 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.317087391 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522530325 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.923243397 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.316793377 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.815010591 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.323487119 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.684316895 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.324405928 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.374416214 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.817609618 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.334462412 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.295799541 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.354215673 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.319585886 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321150782 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.317585067 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.31940308 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.681485237 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.461928221 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.325301073 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.678863705 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.806982934 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.335196204 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866034974 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.255736917 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.327164221 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.42254052 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.318785647 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.925941344 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.825826245 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.354019024 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.31896845 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.667722416 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.338394555 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.608208682 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.3451884 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318084372 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832721943 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.322655426 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.334564536 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.318939051 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.318896461 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.989587325 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.320839456 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.611039585 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.362075001 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319009155 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.320959337 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.367023981 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.319907329 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.3208622 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.325665183 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.862832353 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.342635496 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.29609867 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.336575419 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320470606 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.327498158 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.320994642 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.320632923 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.542126758 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.918447916 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.344329958 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.321835093 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.320992663 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.326856666 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.491241973 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.322261786 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.643638656 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.341936909 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320698463 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.323630181 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.029720833 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.37694059 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.335240069 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.322673334 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.214168203 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.526265273 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.338570147 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.32126612 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323692166 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.338098578 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.619776897 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.343305937 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.374047538 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.324503633 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050100275 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.381671526 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.358288678 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.586584391 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.326468232 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.250815228 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.3438481 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324154142 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611428188 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.594600137 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.372949862 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.322441739 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.339767551 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.0471314 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.375385192 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.47097735 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.344132567 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.352913078 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521852187 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.686358524 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.324517935 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.948835027 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.323898694 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.536417864 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.324600066 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.626222561 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.833088103 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.346525685 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.331899774 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.045659548 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.025818466 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.016742166 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.328207739 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.607331667 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.294281518 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.801178885 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.324402971 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.326629427 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.806735821 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.328022184 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331324366 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.324727662 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.325900012 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.47011586 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.499262024 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.526543019 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.331892268 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.792484929 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.372235525 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330830481 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.334415206 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.32830879 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.66964359 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.423378079 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.327457854 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.365479741 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.326438985 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.334741673 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.815264049 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.293728041 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.332822576 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.477420479 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985692422 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.349018871 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.325887709 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.009396678 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.628332757 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.853063683 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.411697632 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.651239725 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.349618507 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.363418064 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.922509837 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.368554857 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.814275663 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.348214934 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.332721724 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.942422073 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.34428622 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.680409717 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.328308723 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.330241237 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887377451 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.34469521 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.328828821 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.629811355 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.34881204 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.578695041 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.329233448 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.341845194 seconds)
  done (took 1109.123248707 seconds)
done (took 1383.135353846 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.327634267 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.336780873 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.315773354 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.334281271 seconds)
  done (took 26.562175455 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.336589029 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.335070142 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.33563131 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.333609182 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.336390203 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.333794717 seconds)
  done (took 9.256898113 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.431131753 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.334679124 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.33510435 seconds)
  done (took 19.347994403 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.548525821 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.700853468 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.712406049 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.69714614 seconds)
  done (took 10.907343633 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.335912295 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.334899292 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.33530313 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.337279271 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.338944623 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.339915906 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.338035778 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.337783705 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.339580118 seconds)
  done (took 13.283555928 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.51844046 seconds)
done (took 86.123039073 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.456217633 seconds)
    (2/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.345220269 seconds)
    (3/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.652906568 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.03405718 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.620048572 seconds)
    (6/309) benchmarking ("sort", BigInt, false)...
    done (took 6.345851663 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.999489777 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.65192436 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.39313661 seconds)
    (10/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.446176184 seconds)
    (11/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.988733285 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.361164435 seconds)
    (13/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.701386613 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.330671967 seconds)
    (15/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.343387008 seconds)
    (16/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.436975024 seconds)
    (17/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.435089277 seconds)
    (18/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.687492822 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.742952303 seconds)
    (20/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.229548923 seconds)
    (21/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.318297734 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.139702268 seconds)
    (23/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.357108107 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.33072405 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.783961546 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.839385631 seconds)
    (27/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.695877437 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.464905881 seconds)
    (29/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.348073237 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.317916502 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.333397417 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.604716365 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.43473229 seconds)
    (34/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.356192563 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.389337117 seconds)
    (36/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.052369425 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.348922796 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.468740347 seconds)
    (39/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.722435914 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.430490429 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.348419167 seconds)
    (42/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.417261349 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.362803199 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.322188121 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.510522499 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.009469817 seconds)
    (47/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.430071737 seconds)
    (48/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.703690918 seconds)
    (49/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.348934038 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.313171124 seconds)
    (51/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.348888571 seconds)
    (52/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.826836599 seconds)
    (53/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.136201183 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.435574033 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.352255413 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.445777573 seconds)
    (57/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.396864958 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.878149273 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.355995454 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.610999128 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.304258536 seconds)
    (62/309) benchmarking ("sort", Float64, false)...
    done (took 5.671542504 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.005860809 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.759203882 seconds)
    (65/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.760372782 seconds)
    (66/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.446889046 seconds)
    (67/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.360101556 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.307928806 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.342230357 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.401207034 seconds)
    (71/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.519230232 seconds)
    (72/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.377600977 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.987757321 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.407167421 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.334797843 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.728240576 seconds)
    (77/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.003673906 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.138290269 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.334852134 seconds)
    (80/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.419852797 seconds)
    (81/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.397781991 seconds)
    (82/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.706334262 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.833784726 seconds)
    (84/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.590626461 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.831247387 seconds)
    (86/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.713154922 seconds)
    (87/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.033847787 seconds)
    (88/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.421511448 seconds)
    (89/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.725171667 seconds)
    (90/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.722554058 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.567244875 seconds)
    (92/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.007789741 seconds)
    (93/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.883311755 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.194818619 seconds)
    (95/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.569466326 seconds)
    (96/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.990485534 seconds)
    (97/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.958783608 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.379396779 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.747127739 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.1711294 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.384198067 seconds)
    (102/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.393270836 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.36509162 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.198232252 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.393443861 seconds)
    (106/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.399617239 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.460052417 seconds)
    (108/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.013142882 seconds)
    (109/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.424036277 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.471534427 seconds)
    (111/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.767014651 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.337363286 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.484885814 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.698653221 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.333535566 seconds)
    (116/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.346628525 seconds)
    (117/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.35167012 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.558683839 seconds)
    (119/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.860252622 seconds)
    (120/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.029695839 seconds)
    (121/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.147353741 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.886802871 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.034610226 seconds)
    (124/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.736064902 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.33722744 seconds)
    (126/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.369740727 seconds)
    (127/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.728137877 seconds)
    (128/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.422716449 seconds)
    (129/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.735764813 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.587070911 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.353095214 seconds)
    (132/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.963196141 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.304647532 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.702132399 seconds)
    (135/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.462751729 seconds)
    (136/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.24959564 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.319310811 seconds)
    (138/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.349313178 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.343739831 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 1.860621122 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.378771117 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.600528277 seconds)
    (143/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.064297825 seconds)
    (144/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.336127663 seconds)
    (145/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.332878877 seconds)
    (146/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.394629868 seconds)
    (147/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.396832205 seconds)
    (148/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.557496813 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.781694037 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.164860137 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.252560166 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.619228207 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.458348764 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.983988805 seconds)
    (155/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.425940075 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.101998316 seconds)
    (157/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.768266033 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.210141766 seconds)
    (159/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.465036024 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.353518843 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.102328791 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.425901015 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.398974594 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.769419126 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.533010962 seconds)
    (166/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.339585097 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.82879904 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.157444384 seconds)
    (169/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.367364009 seconds)
    (170/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.367083539 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.026322805 seconds)
    (172/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.535141093 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.382441806 seconds)
    (174/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.048929261 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.365520991 seconds)
    (176/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.444859313 seconds)
    (177/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.423469276 seconds)
    (178/309) benchmarking ("sort", Float32, false)...
    done (took 5.37413295 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.747323731 seconds)
    (180/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.534425698 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.383619764 seconds)
    (182/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.363193676 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.573402629 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.282090685 seconds)
    (185/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.805546358 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.951214613 seconds)
    (187/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.966295496 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.341363909 seconds)
    (189/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.367809402 seconds)
    (190/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.676393969 seconds)
    (191/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.91660379 seconds)
    (192/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.108058937 seconds)
    (193/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.459408581 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.394943225 seconds)
    (195/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.241269513 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.342510599 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.368498451 seconds)
    (198/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.743615432 seconds)
    (199/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.448584609 seconds)
    (200/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.301359905 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.326868917 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.385680302 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.339914522 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.329857869 seconds)
    (205/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.37441513 seconds)
    (206/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.355882602 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.223903038 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.399617179 seconds)
    (209/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.156933572 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.412111121 seconds)
    (211/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.380142208 seconds)
    (212/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.496015041 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.072014827 seconds)
    (214/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.349751755 seconds)
    (215/309) benchmarking ("sort", Int8, false)...
    done (took 4.386451557 seconds)
    (216/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.61348838 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.976143652 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.55414243 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.638570018 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.363330355 seconds)
    (221/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.408602676 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.441439724 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.343912065 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.956844259 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.354194208 seconds)
    (226/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.662191926 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.83122964 seconds)
    (228/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.911326583 seconds)
    (229/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.449409133 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.463478773 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.367266591 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.36049651 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.949858277 seconds)
    (234/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.669263178 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.648446467 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.343545252 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.416009728 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.381968059 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.393050577 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.259719195 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.394371565 seconds)
    (242/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.835186926 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.345687582 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.416648369 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.908974183 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.365792967 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.063158249 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.378080953 seconds)
    (249/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.360139232 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.346354833 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.326267347 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.588982688 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.154848584 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.370692959 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.852469399 seconds)
    (256/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.211421619 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.329594294 seconds)
    (258/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.363973077 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.908956617 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.762721379 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.343553243 seconds)
    (262/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.886488112 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.586917785 seconds)
    (264/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.388442195 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.349325081 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.402571137 seconds)
    (267/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.800029762 seconds)
    (268/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.287900698 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.371656094 seconds)
    (270/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.369408651 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.742276883 seconds)
    (272/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.723845191 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.943660942 seconds)
    (274/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.418380702 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.375375971 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.007498091 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.513947881 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.353187064 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.362671341 seconds)
    (280/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.838715965 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.335689669 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.05539073 seconds)
    (283/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.829897537 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.355104804 seconds)
    (285/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.948165426 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.600783724 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.358276542 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.431437593 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.954247487 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.225037621 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.999755882 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.448940357 seconds)
    (293/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.321569949 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.465910589 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.191954612 seconds)
    (296/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.538964388 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.465620931 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.35569405 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.392034553 seconds)
    (300/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.374416074 seconds)
    (301/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.374918531 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.24908927 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.979301481 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.372510667 seconds)
    (305/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.349476496 seconds)
    (306/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.50147296 seconds)
    (307/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.328700103 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.914880089 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.19491973 seconds)
  done (took 936.856323056 seconds)
done (took 938.104409769 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.383525216 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380201164 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.362054544 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.383040143 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.473197797 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.386423033 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.372302863 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.364074563 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.409443363 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.410626057 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.361100676 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.385018138 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.363104882 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.362155728 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.361423468 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37643327 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.474268489 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.36337544 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.379867284 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.373443342 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.380061783 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.360948125 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.412389549 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.386165475 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.367423816 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.366531338 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.366439458 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.383686947 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.474862641 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.367496262 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.367694263 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.374529165 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.474360473 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.362434809 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.358433608 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.383501373 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.375379514 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.371856434 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.366816085 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.397405343 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.914055339 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.382530355 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.366546006 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.364056305 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.365212931 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.367640256 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.365158736 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.37169543 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379056045 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380855694 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.898752118 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.397526182 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.367709113 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.366709774 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.375522471 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.365793976 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.369037868 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382408469 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.384604223 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383501195 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.457217697 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.370269599 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.368267368 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.382811955 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.374021062 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.934356999 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.378889404 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.369990124 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.906371267 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.390027983 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.931108924 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.392503107 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.36790963 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.381082459 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.3980509 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.469803304 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.361613784 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.365349299 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.37368302 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.364087209 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.377741547 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380273227 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.371358097 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.368092743 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382033037 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.392415204 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.378101429 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.369760316 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.378359204 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.388064674 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.375961589 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.379705395 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.371761545 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.363218012 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.375672713 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.372650774 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.372192084 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.371492955 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.371247292 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37994651 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.905922166 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404485994 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.364570334 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.363767791 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.367280847 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.382189634 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.908101696 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.386997613 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.390471024 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.414257279 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.369947997 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.461853239 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.371441966 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388043382 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.379482221 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.372334889 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.365698331 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.46520422 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.899098705 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.403366298 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.370868745 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.367985741 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388261542 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.371128154 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.366557043 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.479753048 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.370126257 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385350611 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.490748057 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.381339865 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.402607755 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.368792934 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.374577127 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.394709648 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387748115 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.402449535 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.372943601 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388322582 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.386429996 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.367548151 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.382963945 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.383154728 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.372514598 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.376974566 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.365626484 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.395190739 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385111665 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384506249 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.392561152 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.493327815 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.367772522 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.470358509 seconds)
done (took 232.05471198 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.429012352 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.365426106 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.457152424 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.366742333 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.468974793 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.468578095 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.365880276 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.366052152 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.364865402 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.745622624 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.365185049 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.365336581 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.368812158 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.364462727 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.44918746 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.368862011 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.363459463 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.709726359 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.369589412 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.438456697 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.367156049 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.365835566 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.368553485 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.74755203 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.368050243 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.361258468 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.436799045 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.367235476 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.713776835 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.36878682 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.365975281 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.713261978 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.457926077 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386410283 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.377429368 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.376296828 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470386713 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.389536854 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.447820724 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.449922192 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.459596153 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408332436 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.362399669 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.363272414 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.370727341 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.369400073 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.366906403 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.397912147 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.37004362 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.367773763 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.710725934 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.380097708 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.367958758 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.368396161 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.367977645 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.399823279 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.368197539 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.36987306 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.460107319 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.370692931 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.432710536 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.75026045 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.748264986 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.369953777 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.366359785 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.36888002 seconds)
  done (took 150.776420023 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.436747972 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.443143841 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.488464284 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.388781638 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.421482078 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.493264775 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.390335548 seconds)
  done (took 11.341328734 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.378040223 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.373169095 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.420049956 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.421774566 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.371919607 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.518067464 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.371373214 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.384754211 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.368872348 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.424493835 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.373466462 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.372761342 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.379853731 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.373122084 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.421432989 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.383550591 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.486697317 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.372478942 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.373609373 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.530041013 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370874112 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.379823637 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.424531888 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.384071042 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.374668955 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.379223782 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.942229765 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.373846811 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371024596 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.374062769 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.37189389 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.4102404 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374062149 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.37306624 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372137021 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.489067593 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.373940553 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372142441 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.374421342 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.369220923 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.375397935 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.373113262 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.374366334 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.371437856 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.37413345 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.39584486 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374675739 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.373906148 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.37399915 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375618653 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.424688455 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375474165 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.371968564 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.371741358 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.430785925 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382787097 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.375829479 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.372446325 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.374990847 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372447032 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.530768087 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.423188653 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375754386 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.423090527 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375514561 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.376663402 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.3747135 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.376361357 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.430123799 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.376836589 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.424640511 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.373485742 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.52979094 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.399182807 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.377073924 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.378306194 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.379178666 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375323069 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.370063477 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.382205578 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.374368432 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.377012827 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.38166571 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375111529 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374271426 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.479020091 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.486324362 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.375665651 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.388892866 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.384986725 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.374719624 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.430014895 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.378035169 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.374908911 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.428974416 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.49276652 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.430714188 seconds)
  done (took 157.213613701 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.381615984 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.385569747 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.378569732 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.394547471 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.378712357 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.378449249 seconds)
  done (took 9.583110509 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.381832514 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.3801302 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.378200546 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.379652798 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.377793919 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.379425431 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.379043055 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37969607 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.382274947 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.378587305 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.379776294 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.381247296 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.38000849 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.379498322 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.377610676 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.378224433 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.379221858 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377248168 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.378028867 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380117204 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.476078976 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.379375316 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379467287 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.380465863 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.384793329 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.379559035 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387238429 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.379298446 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.380191704 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.383535014 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.40061989 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.380823509 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.380498965 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.386270885 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.384285501 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.381515085 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384911413 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.382569935 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.377504206 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.381634725 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.383355201 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381076178 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.380410672 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383133121 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.383199209 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386989361 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.387130832 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387555838 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.382091113 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.383247934 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.383233525 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.380274099 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.381424269 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.383360076 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.383983063 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.403951386 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.38838837 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.382473827 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.382166171 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.383619397 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.384065169 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.382941369 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.384198184 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.38762919 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.390090821 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.383625164 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.385401151 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.3862377 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383636497 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.38209091 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.384595413 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.380183512 seconds)
  done (took 101.932858105 seconds)
done (took 432.122829403 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.444415869 seconds)
  done (took 7.735727297 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.554759042 seconds)
  done (took 7.846168036 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.2913373 seconds)
  done (took 24.588416666 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.403391406 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.383559299 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.407122497 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.386097206 seconds)
  done (took 26.872931807 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.6450818 seconds)
  done (took 7.937236335 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.384730094 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.8390207 seconds)
  done (took 14.517284622 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.535915537 seconds)
  done (took 7.828334008 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.858749488 seconds)
  done (took 8.156376042 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.378109403 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.399425216 seconds)
  done (took 14.339726523 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.357863265 seconds)
  done (took 7.650340653 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.437826978 seconds)
  done (took 8.730890051 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.375896278 seconds)
  done (took 7.668404414 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.46050718 seconds)
  done (took 7.751910392 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.131148424 seconds)
  done (took 10.422214743 seconds)
done (took 163.336886314 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.375490444 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.378450328 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.378844383 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.376936685 seconds)
  done (took 26.801769764 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.417191598 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.416322772 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.419947364 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.428451708 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.42119866 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.417172143 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.409649254 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.410743411 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.428609678 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.42112273 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.419059083 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.420524193 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.418608023 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.410401181 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.420646076 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.420814656 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.429987198 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.421395781 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.412060077 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.421813647 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.385551519 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.430905288 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.421741594 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.386586886 seconds)
  done (took 35.304128873 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.910708223 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.457634263 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.540077472 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.439829917 seconds)
  done (took 7.642777836 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.436884494 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.439847379 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.452989556 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.499123388 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.521640318 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.447013443 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.413173432 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.40750233 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.393841292 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.440019822 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.514421325 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.455946776 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.529766983 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.387302003 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.580718687 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.385718603 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.386798426 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.438418691 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.490681538 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.503887817 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.38662458 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.438898562 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.445341536 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.456254823 seconds)
  done (took 36.147655301 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.386850574 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.395521649 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.386671288 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.385878503 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.393214867 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.386670744 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.386376218 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.386371847 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.385723413 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.392430446 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.384437324 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.399041695 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.386603111 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.385031115 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.392411937 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.387241575 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.393149595 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.385829105 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.387162514 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.390886825 seconds)
  done (took 29.073026154 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.379696842 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.295991744 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.733130628 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.637095103 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.382028257 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.38912675 seconds)
  done (took 29.113668252 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.463743814 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.634956114 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.395462603 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.793148667 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.892798017 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.413815046 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.389100394 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.654545994 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.01133763 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.007161502 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.456622764 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.459511603 seconds)
  done (took 20.8700875 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.399746524 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.389687243 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.401833124 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.405598423 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.448829817 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.40871304 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.395972211 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.382680678 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.45526096 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.470671858 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.410993088 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.450113884 seconds)
  done (took 38.317956099 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470187195 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432396573 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.418838589 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390577234 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.116411949 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596618749 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383673626 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.826158749 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.390104694 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658459502 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396990271 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480506361 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642813092 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397670303 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392630259 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.39514342 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639017543 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933230636 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394097181 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.591802728 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417859429 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396381844 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.691971556 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.423467864 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597409344 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.532032653 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.646849303 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.162455223 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713428288 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404663816 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396456794 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384739373 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660262577 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090750753 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502795142 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395760448 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402440677 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.93427675 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.365484809 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.615406731 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40669379 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395507055 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398078079 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386831815 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322345685 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386749584 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834332792 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.394224775 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.09838146 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387436051 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398679322 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483717893 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.391916648 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.961419174 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408265248 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.40317212 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.384728487 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414193062 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978759685 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.188238659 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397249033 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.348931914 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391896174 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.588219335 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067363639 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.508250866 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.391580858 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392581213 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323426541 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.589371184 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413353409 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530646974 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.410658455 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.079813772 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234781329 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.429766645 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.325456258 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996570334 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410440585 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.332213272 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618723353 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164862634 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329387613 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.338820262 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.324499706 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137951234 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400202111 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.875640392 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409671943 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.852592879 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.402615927 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409277128 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412416111 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614878667 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.269857665 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390767926 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.397857471 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518630037 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411893657 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.827503967 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326355055 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.394462105 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648394166 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.600941347 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400769193 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.41236296 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627610412 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392771822 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.414349508 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.397921625 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.40931491 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.023533648 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427827837 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14969892 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416126644 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.168222666 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180992649 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40987656 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.49841033 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392324037 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661459598 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.205519028 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.561108054 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459323114 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397029503 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392690961 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.694246587 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994690575 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.551756505 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.390131905 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395794941 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.409534776 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.392891369 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35353275 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.394951762 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394618204 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.178351096 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618003091 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399115947 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676206681 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326875012 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537692928 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439355062 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.61742287 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.718193587 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.419417148 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663628913 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398874368 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401216059 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413237876 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412712668 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496262833 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415997007 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.401180143 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.659227128 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.398797265 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.398287869 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.727852751 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.181466658 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395505231 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.399300572 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397727744 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051528621 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407701893 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399088628 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287255459 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.409427179 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464306959 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399194239 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.406676774 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.403250995 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435923854 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.408035257 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.393714486 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639060315 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406400998 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.645008486 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482116724 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.600823233 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035217971 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434496717 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.330061522 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.107238432 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.088192184 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397767024 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.59194629 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396743987 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408096781 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407473612 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397183593 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.04148203 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423072052 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.660323262 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.409448361 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406410265 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.402182283 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395680156 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.376161645 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.247988897 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412226694 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.414035497 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540189724 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.410639436 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.332437803 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.915005759 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40303011 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397696798 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.177321744 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432292959 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.627870021 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903042461 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661270187 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399086161 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429622319 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.847581906 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.438489909 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.402140801 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408911631 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41837425 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.4108712 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432618476 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.409601926 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.724056452 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.81024636 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965939893 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203478651 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019901604 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412300126 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.417655287 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.302326525 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.846265276 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335415495 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.058255604 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602863475 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.860301603 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357595763 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608919086 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.726654135 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2568498 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412171187 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629675055 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359767454 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.415035983 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418706724 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612325347 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434430876 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.399586121 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337798025 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.917971664 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649516175 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401811556 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48657369 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844763054 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408271587 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.187745104 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.453343087 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.878837543 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610334335 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.950493879 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.795279446 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413255855 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409271865 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918972622 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405592039 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.930431281 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06320489 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.436604374 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.617941406 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343719186 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.41246243 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.412552665 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.401839195 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.927429639 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.41262145 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.666190064 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412649099 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337248094 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408309583 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981502535 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.281637646 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.408638743 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403840255 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205934107 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424262137 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736303649 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.423392317 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.410198707 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434217556 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.339513225 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341772427 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.0990211 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414739581 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390682456 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968036168 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.424343286 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41844882 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41997147 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256731561 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661061937 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.416465255 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045312937 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65722055 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417931686 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426909865 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.50576584 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404172368 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.393459762 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.302969091 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640479052 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406655398 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.629975849 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.461354622 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.30590545 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.432688175 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617650938 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.300177177 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405783511 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702603133 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.13697728 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.428100763 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245095396 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456388296 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.4055308 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.4619185 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409763011 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425995505 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498211898 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417497161 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.415818646 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.416857493 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588828602 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421710466 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417175963 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.419854179 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500871834 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.216245664 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.41873304 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.187069647 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056336767 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300786785 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.079287973 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444581281 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407539314 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408047445 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341605979 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558460396 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.937097692 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682794592 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534121157 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.408123665 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43043039 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410919878 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432936154 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625417018 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682707777 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.381815617 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406392909 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.223585798 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.288761236 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419265058 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.618516866 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977455548 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03336908 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52871194 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419361219 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.854771586 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683743798 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.500979456 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409175485 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.002522522 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.412865722 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.880217939 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.438698331 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407979278 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563597033 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418562922 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120338749 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.44185961 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.569309965 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.181975754 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.77409201 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.673940834 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.953847339 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.422072095 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056722103 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.214590287 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68243148 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481291491 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420151645 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.525753863 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55844202 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.409950509 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.305314054 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410789586 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260372877 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.12159024 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.420339382 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061548276 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702191269 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.407044746 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.414884331 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434158218 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.420660701 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636189928 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181862284 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643773453 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423025956 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.420465422 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.984551152 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058062 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449901362 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345635362 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.414992345 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688468522 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.669154941 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434179735 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.864873754 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.124282197 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016294847 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.386903362 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433761322 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419568269 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197458219 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065185626 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.4501895 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992949956 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082867938 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427494649 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694109388 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.41780659 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.422856888 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696805463 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.417524503 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.425262719 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432975446 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.061735732 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.280789247 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.41494001 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.733180497 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.358611688 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.642396871 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422783651 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364361315 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414172992 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.601647799 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415076961 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540931981 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42464088 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.41934087 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436212626 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.177029072 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.732663226 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.419851814 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.412726241 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.40961106 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.431747703 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446711942 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680588405 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420924316 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.088865272 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.770130323 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674379028 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.415344065 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.420558937 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.419402161 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416471263 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140151944 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.434020109 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420017189 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034739033 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.420371934 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.433481085 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42005278 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.633371794 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627259616 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416018085 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.456422641 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417190976 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438551546 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.316278934 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.217430874 seconds)
  done (took 1684.068745729 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.450650481 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.457256094 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.439322368 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.448315394 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.477064825 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.449540069 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.481363533 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.479200802 seconds)
  done (took 53.011444662 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.415560361 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.582750038 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.448096702 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.433216914 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.434748359 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.423340475 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.914179143 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.434025313 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.426334468 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.42797012 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.429670744 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.419982461 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.109337013 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.427138119 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.418125983 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.418093136 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.42793609 seconds)
  done (took 66.924554284 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.417805751 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.881641636 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.449487486 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.422343945 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.916180233 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.444533596 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.771637255 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.475531621 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.430491297 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.798281159 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.095238665 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.445306594 seconds)
  done (took 81.880161414 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.426181178 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.426340539 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.428310989 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.427599674 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.427113406 seconds)
  done (took 8.468042802 seconds)
done (took 2118.916062577 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.78199011 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.173788668 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.085631012 seconds)
  done (took 5.591410983 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.563139039 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.616532348 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.7907745 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.806320502 seconds)
  done (took 8.109438154 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.704993324 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.799185593 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.617456166 seconds)
  done (took 6.454577385 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.993565717 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.4543178 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.421855894 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.418577607 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.425107257 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.425675034 seconds)
  done (took 20.604704389 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.425234528 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.427872505 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.424851589 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.427839701 seconds)
  done (took 7.039671109 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.402985939 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.112288507 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.401471474 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.424892879 seconds)
  done (took 18.675467031 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.170654594 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.185322918 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.168995488 seconds)
  done (took 7.859240836 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.420330781 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.294936749 seconds)
  done (took 10.049233557 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.720632954 seconds)
  done (took 3.054435095 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.558250388 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.753924461 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.586105038 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.541971432 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.628138452 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.712510113 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.251047417 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.784946059 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.501033105 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.859983873 seconds)
  done (took 30.51234175 seconds)
done (took 136.932527796 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.588969439 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.826389045 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.628775056 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.60326473 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.653282134 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.628064766 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.948110172 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.569869618 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.077030465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.058993705 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.604979271 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.655258136 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.676302071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.828520854 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.675835485 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.826477222 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.655391008 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.632728027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.288874092 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.423048597 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.947558038 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.201420545 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.436724581 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.22133172 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.65740649 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.579518483 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.780752765 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.826993589 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.431868307 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.799819435 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.581123926 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.424001224 seconds)
  done (took 200.074921534 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.433042737 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.423674075 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.441428441 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.433705885 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.425416663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.442220397 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.426656951 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.442730189 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.425564512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.439492756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.425486785 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.432476652 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.425083466 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.456044262 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.426094647 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.454232773 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.440126226 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.424967417 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.425543714 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.4263556 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.425205473 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.443056653 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.442810167 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.434240262 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.441857567 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.425521277 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.44674839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.425463425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.432399341 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.436153267 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.427382301 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.456035916 seconds)
  done (took 207.244396123 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.425325541 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.425709263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.426706849 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.443854223 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.428183806 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.427874516 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.444253051 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.442603899 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.426194236 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.427451595 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.445439609 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.426652483 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.427085325 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.444547777 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.42746922 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.428085223 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.442716661 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.444695408 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.427550448 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.439445754 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.428452679 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.427179003 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.42754953 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.429327716 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.42829308 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.446417753 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.438841644 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.426570671 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.459760339 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.445222682 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.429886572 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.428104654 seconds)
  done (took 207.227475498 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.630847016 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.436068249 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.437330556 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.393580081 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.4364098 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.434481301 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.433396406 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.626800061 seconds)
  done (took 15.16917788 seconds)
done (took 631.05157182 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.832574835 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.538318037 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.6426986 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.46404375 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.281053456 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.477234432 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.455824371 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.637780388 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.389784725 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.650642636 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.75611284 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.480716938 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.888125664 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.455382133 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.725885466 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.559183989 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.347310824 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.473900037 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.789744233 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.032291254 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.732605103 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.979661835 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.661213185 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.408762972 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.912919604 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.973968034 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.249594853 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.336434653 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.474898246 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.803746188 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.247456528 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.515468843 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.526254681 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.532361454 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.583837191 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.561617428 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.476997925 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.521948336 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.66322817 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.737031255 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.033548455 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.198234108 seconds)
  done (took 97.352536691 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.421186223 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.421787596 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.421760703 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.421715255 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.422366144 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.422550526 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.421455207 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.420600556 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.421411258 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.419740462 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.422003979 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.4245904 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.421456519 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.421809366 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.421939983 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.42216358 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.420331227 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.423995911 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.421970127 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.421157754 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.424329944 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.421077571 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.423083412 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.421999886 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.422119489 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.422023551 seconds)
  done (took 38.314492396 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.441182965 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.696873324 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.873822497 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.445444055 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.441240625 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.446252547 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.528050981 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.448391276 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.445478126 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.444806525 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.624458254 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.445039844 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.479702311 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.905588502 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.444555849 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.443590184 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.443493965 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.441567945 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.707030383 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.451730247 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.552329077 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.443955958 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.528945797 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.452526207 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.46791617 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.445327445 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.447638495 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.976958208 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.465627439 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.622290179 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.345282712 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.533237985 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.919757002 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.905344856 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.345519306 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.453757014 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.444592151 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.630147134 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.444859544 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.4440488 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.537311425 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.444651639 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.885594041 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.077268068 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.463856425 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.445101831 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.989054898 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.644263664 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.716270176 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453396191 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.917767133 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.456892339 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.447839402 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.446604464 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.717447023 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.451712807 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.445800169 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.006996425 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.479933208 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.530676361 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.446306361 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.445797558 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.712941397 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.446031978 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.704483928 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.447742096 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.453902326 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.467627395 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.898081324 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.456657511 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.107409008 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.464907301 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.447557837 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.624618167 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.705087042 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.034243191 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.468784648 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.720530915 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.93013368 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.550324981 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.45102541 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.962129335 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.551717589 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.450861809 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.451704121 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.449458735 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.447987718 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.496673896 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.53028546 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.037331118 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.111861491 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.020727749 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.556936676 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.460247328 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.448957447 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.005292251 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.477023047 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447528006 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.887596719 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.109297832 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.467517926 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.456432189 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.106621316 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.469908193 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.534866349 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.453395391 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.900034643 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.45561892 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.500190392 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.449678414 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.456290401 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.471708123 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.537664354 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.458549962 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.450889448 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.075585706 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.65313383 seconds)
  done (took 190.161935339 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.441813527 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.44323447 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.441640178 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.442726915 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.444085943 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.451711796 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.443636485 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.442468799 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.449374586 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.441774409 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.443734393 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.444352951 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.444053333 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.444129804 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.45550915 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.451079266 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.054949955 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.445462078 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.448816731 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.444884031 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.267594876 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.454063203 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.444359209 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.443906787 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.445200304 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.444768901 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.449797696 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.446960969 seconds)
  done (took 155.270497049 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.452991462 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.089915826 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.479299637 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.598255376 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.480994808 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.449349994 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.59504566 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.523246262 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.471326593 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.45113819 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.449870318 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.792718571 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.459799877 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.020698339 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.666374791 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.622857808 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.02816968 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.471638085 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.449237468 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.450375929 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.60091482 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.457263172 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.785517021 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.077373673 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.473128092 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.077411741 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43840965 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.453099514 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.451160971 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.078521493 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.470291996 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.786017787 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.539423139 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.52544222 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.09936412 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.040149526 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.04016324 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.616000202 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.452822949 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.452330459 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.451430787 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.436922591 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.081143332 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.473140969 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.455675926 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.069755613 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.473610658 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.455026102 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.459137258 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.45304216 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.519199597 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.536759642 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.810431483 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.085530509 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.557978646 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.473088139 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.599676035 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.849135038 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.456003542 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.025265987 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.437360212 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.085696801 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.474530325 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.437698322 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.455429079 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.459779524 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.624506437 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.606530317 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.025359063 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.471697328 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.024245134 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.641550999 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.462014178 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.45330629 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.456919727 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.087165755 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.045078761 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.641912065 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.614122131 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.684411037 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.449560529 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.455020394 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.438933956 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.542329064 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.462735208 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.090050777 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.045986639 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.475927924 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.457343605 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.457562641 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.4581242 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.653318518 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.115949613 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.562072442 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.023112737 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.813351196 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.793983977 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.458340215 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.521250342 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.475314111 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.797157663 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.459496934 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.519173799 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.918860478 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.798004015 seconds)
  done (took 174.431773178 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.7241356 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.717086618 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.553566637 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.598138578 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.08180548 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.045905951 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.807104915 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.608471279 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.57297105 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.733414827 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.700731717 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.54885636 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.649602725 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.54453435 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.21005467 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.552938692 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.572137905 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.608571261 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.579231941 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.515811132 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.129782688 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.75721869 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.645082047 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.35294885 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.555262134 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.275295291 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.059986299 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.997669347 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.644840429 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.817193665 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.997617632 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.62116942 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.486462626 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.181179765 seconds)
  done (took 69.809625689 seconds)
done (took 726.680941394 seconds)
SAVING RESULT...
DONE!
