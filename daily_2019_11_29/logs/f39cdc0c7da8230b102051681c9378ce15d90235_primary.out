cset: moving following pidspec: 9491
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343918592 seconds)
loading group "string"... done (took 0.629580423 seconds)
loading group "linalg"... done (took 7.303886809 seconds)
loading group "parallel"... done (took 0.157807508 seconds)
loading group "find"... done (took 1.162506878 seconds)
loading group "tuple"... done (took 1.815102241 seconds)
loading group "dates"... done (took 1.313741309 seconds)
loading group "micro"... done (took 0.221615578 seconds)
loading group "io"... done (took 0.959878288 seconds)
loading group "scalar"... done (took 37.727625382 seconds)
loading group "sparse"... done (took 11.896109332 seconds)
loading group "broadcast"... done (took 0.931604873 seconds)
loading group "union"... done (took 12.217739423 seconds)
loading group "simd"... done (took 4.442515999 seconds)
loading group "random"... done (took 9.233326508 seconds)
loading group "problem"... done (took 1.870291879 seconds)
loading group "array"... done (took 21.181803862 seconds)
loading group "misc"... done (took 1.698843547 seconds)
loading group "sort"... done (took 3.361173724 seconds)
loading group "collection"... done (took 17.50690863 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.515691016 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125488917 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119279771 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119920655 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147811853 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112817664 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124310611 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084524721 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.803583191 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149988396 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118272075 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432625236 seconds)
done (took 5.168147824 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172545382 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08269723 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082547964 seconds)
  done (took 1.298169839 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065573672 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122901224 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066887763 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0674646 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066833757 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066150336 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06639538 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066314651 seconds)
  done (took 1.653901341 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073650301 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068806558 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069872792 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067774238 seconds)
  done (took 1.413869484 seconds)
done (took 5.749103916 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.799448301 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202841594 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187890387 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413562019 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131370816 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15953452 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640257844 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318247998 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194608871 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082096954 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105832622 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.330194496 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109133581 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63188634 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077334676 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090588367 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136637801 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434628783 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067493984 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082225426 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088736876 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127553819 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086322706 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074731266 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146427883 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067753341 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137518056 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079855383 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066376581 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213823423 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172010694 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657181079 seconds)
  done (took 10.28600708 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097554613 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097748613 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069307761 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123376871 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098871518 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070302416 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071309767 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067613604 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087328909 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129282688 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088943802 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102150049 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065882552 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069106804 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084954439 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203985073 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080084187 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082021107 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071110279 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07613652 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108281485 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078536653 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077416404 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077774832 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129109979 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182877998 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098512858 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098128138 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068087807 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080756917 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115262396 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128935993 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067977468 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068666733 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127882285 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097027069 seconds)
  done (took 4.61126985 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.009267748 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144261745 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090532057 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135265502 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111723049 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064129907 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065106594 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109228366 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065876822 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081168175 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210891394 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.439807076 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.593188586 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111252109 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103899848 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06778043 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068183673 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067063986 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.488856795 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096767542 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10852348 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082763016 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070927356 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069473279 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355182715 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068096689 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064198463 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068277435 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05743364 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125940264 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068358731 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.947057052 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126357109 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066317119 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100401006 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161485011 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087812219 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.278033788 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068239442 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065021609 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154434823 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070302585 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065701802 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084741778 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103579984 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113421265 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065113291 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068029381 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162052884 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065016751 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079525627 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.678884976 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155303411 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079249014 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066191392 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.259341863 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087647497 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069403461 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064767598 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.206102751 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136194947 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067906791 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066658638 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06773275 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069856127 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360246702 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065802865 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.179649481 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068273713 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076832748 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069375156 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072489658 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07335221 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07233709 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088073559 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066046062 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075514088 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065864016 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065995837 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066925903 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083554552 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.376209103 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066873402 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06880669 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065027285 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089375256 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09670649 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069362051 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067543968 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102099354 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069946978 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066151602 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107101123 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066822752 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064008395 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083581447 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069077888 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113183686 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06581246 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.202091292 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067994792 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066316455 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099151321 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072667963 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101274513 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084239109 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073509305 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.420164609 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065025977 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065473724 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067796074 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065782442 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067806365 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066962634 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081217701 seconds)
  done (took 21.494936419 seconds)
done (took 38.535937511 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238936266 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074450051 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074225036 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074221526 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077177253 seconds)
  done (took 1.768398985 seconds)
done (took 2.979125035 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122972454 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101048666 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06582208 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099299708 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064165548 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102846995 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101726207 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081543487 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100702515 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064739742 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098165136 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064642972 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064096627 seconds)
  done (took 2.353979728 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084483135 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086441666 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073475911 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086804646 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065473155 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085362625 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084230844 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09262104 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084369189 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075229532 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065697991 seconds)
  done (took 2.081104919 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083731762 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086240424 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072515511 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087872691 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066102883 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085640966 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084131417 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089059306 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085346738 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076207886 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065624797 seconds)
  done (took 2.07624982 seconds)
done (took 7.705371893 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077549314 seconds)
  done (took 1.262828644 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.599847575 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.155010639 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081860126 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112415065 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189525324 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119565266 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276044739 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086759275 seconds)
  done (took 8.987863107 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091006077 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084013771 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069458782 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072347466 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071277359 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068789841 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070765777 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068345554 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07072948 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071347101 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071937956 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069034625 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070984418 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06822425 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068506895 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068992956 seconds)
  done (took 2.415235171 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093115139 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092231413 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074197535 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074808593 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07207348 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071918151 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073888034 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07385954 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070881338 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071570568 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074597689 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073456899 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071608137 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065216205 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073201674 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074812256 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070638314 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073506457 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074412798 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074601594 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074628573 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06364235 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071184052 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074021422 seconds)
  done (took 3.073913754 seconds)
done (took 16.936354268 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118785198 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07403426 seconds)
  done (took 1.385078036 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082249973 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082374065 seconds)
  done (took 1.366363109 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083912693 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065536402 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092551498 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078799195 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065694961 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065198602 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088640139 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065616188 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065592318 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065932163 seconds)
  done (took 1.939151903 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068439536 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078814814 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070359931 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.0808114 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07385618 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063853961 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072156947 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06752193 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078115689 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0625583 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070791771 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082611993 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070912776 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084588037 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072718027 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068312897 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070630923 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066816748 seconds)
  done (took 2.511274734 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065023276 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06659848 seconds)
  done (took 1.339873504 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067322818 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064041984 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066731923 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066625943 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063225856 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062601451 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063147687 seconds)
  done (took 1.660778573 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385077393 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113232896 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310601333 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071044752 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081816778 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257280096 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065829323 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070398579 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070818214 seconds)
  done (took 2.670909703 seconds)
done (took 14.081711746 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079930697 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086028235 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096570345 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.376789443 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091280541 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065870027 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114424304 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190330427 seconds)
done (took 2.320123112 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21254946 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.631771767 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402292775 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204456524 seconds)
  done (took 2.449714036 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342077638 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088053225 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058528965 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067374469 seconds)
  done (took 1.77527425 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065831321 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068991821 seconds)
  done (took 1.350576399 seconds)
done (took 7.004690807 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066808034 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066063626 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083830058 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062854617 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06618714 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063420433 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063278453 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062998771 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065965625 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06575388 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068581888 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065659472 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065862928 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065638746 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063468763 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063370462 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066236697 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066398001 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064068779 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063522769 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063221559 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065878393 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063234328 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063355709 seconds)
  done (took 2.828482561 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084394477 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066154738 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071415821 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072489985 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069733378 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071174388 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071796443 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065420035 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07107177 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068270005 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068986244 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069568973 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067987095 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06999188 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06836608 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069584129 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071264135 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065936846 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067935176 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069445693 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071685044 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066217029 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070052501 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071050392 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069761953 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070933257 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.0685303 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065994714 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071260344 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069320744 seconds)
  done (took 3.321372694 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070075501 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063318672 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064086996 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071156098 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063623021 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06414921 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063434762 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064289626 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064497209 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062808961 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064468719 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063002597 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063659078 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064424866 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064353832 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067010803 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078972065 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063952835 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063552156 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063767754 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066702892 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063913315 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063559286 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062973549 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063671446 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062741982 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063830784 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063609123 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064240863 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063541224 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.0663766 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067065992 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062847201 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071069804 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067026329 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06330591 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067168214 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06277039 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06386914 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062658797 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062699389 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063046794 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062888664 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070528536 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064496192 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066746827 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065847457 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065821772 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063731252 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.181424818 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062636723 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062777747 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064964658 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06408417 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067396773 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062224484 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063422551 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06245542 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06365491 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062733812 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062652633 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062530381 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065677737 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063322251 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077820047 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069872139 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063140668 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064979137 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06432843 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065679243 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064960328 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076739413 seconds)
  done (took 6.035044437 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093365294 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088705045 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067067701 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067148596 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062620779 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064971668 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070227696 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064819933 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065389648 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082058709 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06445089 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064485622 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065349477 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067199872 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064356066 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065031038 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071551999 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061320051 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06406362 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067094281 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064958414 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070928983 seconds)
  done (took 2.748544046 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157519913 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070336643 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105526341 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075680662 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070113218 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075507524 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069392132 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069890585 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070318109 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067139398 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067764325 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069852312 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069861172 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067305482 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067255715 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067185375 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069483094 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067276851 seconds)
  done (took 2.611111254 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076392157 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066219055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087057719 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066120741 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065343518 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068566081 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069937441 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073937747 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068507849 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065690054 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.0739685 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068429101 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067939422 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065271729 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068058102 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065274661 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.0685681 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06592019 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073719027 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069824919 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070018973 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07381714 seconds)
  done (took 2.773674373 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079985111 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067913424 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08238595 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068270457 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061797985 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064114999 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06991606 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065282719 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070139888 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067480043 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065155864 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063607362 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068298882 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064866909 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068392919 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065841703 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0674452 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064893918 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067638884 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061157907 seconds)
  done (took 2.589760183 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086182732 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067053272 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067290652 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075492998 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067455431 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067472336 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074449762 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067046915 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066650433 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087991579 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067027046 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066801243 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07492582 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07177361 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067337635 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074509158 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074715589 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075001741 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067408718 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067157898 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08764499 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066488791 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074937913 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067093922 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066909041 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066958006 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067138023 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072033253 seconds)
  done (took 3.239306758 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065965554 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065498547 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063902819 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063854336 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.0637874 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0639546 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062948783 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063030682 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065677939 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063306289 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065913779 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06578029 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066155285 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065976225 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06602674 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065814747 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065757003 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063019654 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063486856 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063420737 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065646575 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065454627 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066257924 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063244955 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063296457 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065855424 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063183596 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0627993 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065646591 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063172223 seconds)
  done (took 3.178205781 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076125545 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073322313 seconds)
  done (took 1.389205922 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063415394 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079963434 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063915224 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071897041 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07165063 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06822452 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07343923 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069706217 seconds)
  done (took 1.800173394 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082067417 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077546982 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066985155 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080357559 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076737307 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08346309 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134149307 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066748957 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07244057 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064213867 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079618161 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065543748 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072615841 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066209325 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071290157 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072013631 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063481174 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071707806 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06809768 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064819543 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067024673 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074474883 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06878717 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061430184 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06692256 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088349013 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076862284 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065678731 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068982651 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073384874 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071691715 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05999283 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065905375 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066337195 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063594403 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075491866 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080650903 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068463561 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074573879 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066948366 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076471905 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060927165 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070834021 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072649443 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076041582 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065847304 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066766025 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060910838 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06381597 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06870105 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061026355 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068254633 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060291813 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072508252 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069620514 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076232149 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064280159 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066951243 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068757078 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069731299 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072871111 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067595441 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068857117 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065373033 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075392604 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070445997 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074779551 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061173998 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060006854 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.0639356 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075813087 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089389686 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072412935 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067100352 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066531842 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06430574 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069173834 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067388973 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072300942 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072473859 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065574101 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071443796 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073400604 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066258374 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068205206 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074206873 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064271172 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068461029 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06386761 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082617437 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064901121 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063807871 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064206066 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076208345 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069148521 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065317161 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064128214 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072643178 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059971262 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066388672 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066771025 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066499178 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076164692 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068778914 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069056534 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073271331 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072437139 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065106978 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067582331 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061409275 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066365164 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064024962 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072056662 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058966184 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06808149 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066308846 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064929992 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072597309 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063170391 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064755949 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.199284212 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075259061 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067562596 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063621941 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069760754 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067261382 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070477497 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075510963 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065067034 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061093014 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061826993 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069446321 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066112116 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070557044 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071362205 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069107375 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061669512 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063823095 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.0717422 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075977491 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067185411 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068080263 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073188015 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068297118 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066292003 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073818222 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069153743 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065982747 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072649669 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067007813 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061693814 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069845588 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069287797 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065655905 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069759195 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069914064 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068133775 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067166065 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065090755 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073557369 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066626307 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.0661961 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066063564 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06568026 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077064801 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068857509 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061707698 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064184289 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075649375 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064428361 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066104782 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065586408 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068958284 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066312921 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06420495 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065613701 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068632661 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076549098 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069918078 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067098846 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071382854 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078064687 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065920464 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068572276 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065521508 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066646951 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067149643 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075037382 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071761967 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071003978 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068522256 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062576232 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07110144 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073228514 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065423615 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063186072 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064724103 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070049401 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071888186 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070823815 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067535335 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064765411 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066557386 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069493932 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068909624 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065411986 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065284032 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072179159 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064400723 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073352043 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06701638 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076044106 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068887081 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06117793 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068760684 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064203607 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07250618 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060755356 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063954605 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065459839 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066453898 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065652845 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068550533 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059706789 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073021381 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073569258 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065915715 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06531525 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064958992 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072125263 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066084493 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068273893 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068252529 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070657644 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074830344 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064005568 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067740195 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074778293 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06442773 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058902218 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070555576 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062861509 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063372337 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063560897 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063019764 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.197866692 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078899139 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075663821 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060473836 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06966975 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065433477 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066342626 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061743527 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072722902 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07093333 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069476105 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074884503 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067437762 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067712946 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070964843 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066471184 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067330132 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067818474 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069607478 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067641271 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068278409 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0653375 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069811167 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065436125 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06457073 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068453937 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067109138 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066495859 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072498771 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066513623 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066392461 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068773466 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067856911 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066807969 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067009009 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066286595 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069929763 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067576 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066786546 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069299394 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061775224 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07338193 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065950973 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073405454 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067087309 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064506351 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074005475 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069345145 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07170927 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067479855 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067191773 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067563852 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066848903 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068736636 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073238297 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064119143 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076882513 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07430563 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067039508 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069146895 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066409178 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068208239 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066224315 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067420192 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066986411 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066507776 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065828177 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070948255 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068970507 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067080844 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067505553 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06710732 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066533467 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067432919 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060526366 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065447885 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065394823 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066051465 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075414834 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066680297 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065847741 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064959522 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066879345 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065181878 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063287471 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073930336 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075983627 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066802307 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073626884 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065787158 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067754886 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077052031 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060398722 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064473564 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064045133 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064332071 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073582491 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06635068 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07508415 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066059276 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065150936 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062786476 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06664062 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065030254 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060467553 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063687692 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070169801 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06555524 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064740697 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066140488 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068447317 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066594488 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074664131 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064341809 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065497563 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065026595 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061719267 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06421087 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063653147 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067479402 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065309285 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.0623594 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062286825 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064310759 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065793607 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066944858 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067180837 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066634034 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.205304197 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069525881 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071707367 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070172273 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061554408 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069556114 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066136675 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06609395 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066694636 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069895427 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070736175 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068061913 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075731732 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067047749 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068053872 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067559279 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064311383 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067041716 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06665306 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066197674 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065586739 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067763106 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074776457 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064469764 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070503088 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066471175 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066598318 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073512847 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067446532 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069450728 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073427498 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06660493 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068498561 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074729128 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070381057 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069882249 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067658553 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068728647 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072737624 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066346031 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073488059 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066705225 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066775431 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068043086 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064618174 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066674373 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066371654 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066745301 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072311248 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067499693 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065926916 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066462973 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064381485 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067252589 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070046606 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074388862 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068444931 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069168831 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061956787 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063863241 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067763409 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064092687 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068361334 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068394398 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072417065 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068323587 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066464705 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065408021 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075211727 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072411372 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.06989454 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063903445 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069779785 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066929234 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068280694 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06752766 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066079025 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067264847 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069816199 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067831791 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065631389 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073544684 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069723441 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066619631 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067467996 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067152751 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066648486 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061121423 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066606921 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068258539 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071500836 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06834409 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066250148 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076507843 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064105921 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066478534 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069567051 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065837983 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071002709 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061262944 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068044297 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067578017 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067353188 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061272282 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065731015 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063784035 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068476618 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065436145 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061827604 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076182545 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075052209 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069104748 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064344194 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064301065 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060908106 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060487202 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064095627 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065361103 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066505365 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074660464 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064218303 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063765882 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060209804 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064869697 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067860941 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068165933 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062454008 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059795548 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.195819943 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073310558 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074623903 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064971079 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065631375 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070163087 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069414251 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065099016 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070009873 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063607391 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07020182 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0788347 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066883306 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06822524 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073326868 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075224931 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067752564 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06239155 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067156804 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069766516 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067770004 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068268297 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06794922 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082455123 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069849376 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066196626 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065832508 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069581031 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065776241 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074398738 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06749822 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06689063 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071213437 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06877559 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075626297 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069203608 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073883132 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069619346 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069783923 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06578617 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066662333 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064597151 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065894368 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066982847 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067355967 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071692109 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075079514 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066213465 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077520382 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075846829 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06806426 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063622564 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065567197 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066467757 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063031958 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067161669 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064637168 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065114475 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064409668 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064963187 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067523574 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071687376 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067995143 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067369898 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066926379 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060466388 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069844664 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068748899 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066820351 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063460041 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066540916 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066914303 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069534178 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069125593 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063199675 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067947883 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067485863 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067091518 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061627259 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073043191 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064772615 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068618147 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065168881 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066571725 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067015253 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069491386 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071089274 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067007431 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067943632 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07006524 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068048846 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064154404 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063500397 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071161007 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063835187 seconds)
  done (took 42.45504924 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101295137 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06251273 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061882028 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062065598 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072814068 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062845844 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061586314 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062759297 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062150349 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064444047 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061654731 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061447938 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070034818 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077155943 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073212055 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065846892 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06138156 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062378956 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061011655 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062368224 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069907386 seconds)
  done (took 2.72905884 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074374734 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.0776033 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075624155 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08172256 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070879696 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069893442 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075185388 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070193362 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07882963 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072170719 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078354237 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070272745 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07197247 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072034937 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071879546 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070100164 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078069093 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070883041 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069844881 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075079081 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069969968 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075487554 seconds)
  done (took 2.930443798 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067997292 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065452138 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06715969 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060478297 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066111599 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060907226 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069622257 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063874431 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076679202 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065091636 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065207778 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065000884 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067502106 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060963639 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065344902 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063298672 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106913091 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068352991 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065627388 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065658744 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060583161 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06666132 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060366981 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0607744 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064155779 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068626192 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066036764 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063442792 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064793879 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064369549 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065190455 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063136843 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066340871 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065534636 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064185137 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064132896 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065068599 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064868026 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060567192 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063270071 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065726577 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061345197 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06585202 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06590058 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063589043 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063155862 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066619275 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065255357 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060268604 seconds)
  done (took 4.529373041 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079877816 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109364725 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.0668948 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088665654 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082897484 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072269303 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06888425 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089766006 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062632808 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063651408 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081215645 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07885815 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064982913 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069857362 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072267206 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064958269 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066287897 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063672443 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068920372 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064853439 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070178778 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073690576 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081720096 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080356795 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070691559 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066352554 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066087717 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070997466 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079705488 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071375542 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071475732 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072548169 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082229777 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07228365 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066219029 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069123709 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08301738 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066955771 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068931835 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064740046 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069354903 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071326903 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074017895 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083704283 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066950456 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.0724348 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066553701 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063989588 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079489243 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068987253 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074995357 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081097291 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071116755 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067069205 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071123817 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082316869 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066710016 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065002923 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069971918 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079263767 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064216529 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070826117 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080054475 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068647469 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074433807 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079852131 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070926287 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069165241 seconds)
  done (took 6.412781715 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077284721 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094877647 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08398175 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083122254 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075090192 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075118273 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074761839 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074905144 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074289222 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080005313 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075436348 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1156947 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070159048 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077773727 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074926718 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075360319 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076146999 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077018659 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076769265 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077498142 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076822523 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084803414 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076499236 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085133847 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081412492 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072242682 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077148844 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07714686 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08238439 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074338655 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078930408 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.0757911 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076411166 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083976221 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080220725 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074810981 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064534763 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073930752 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074407011 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074553523 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069839808 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082260542 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07419362 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070291485 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075736677 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074447482 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082496952 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078470625 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077598792 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079396977 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074709281 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082215418 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074280967 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074778089 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082973437 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085287986 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081727447 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082570688 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075055677 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082267724 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082618766 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085562933 seconds)
  done (took 6.198549734 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083518048 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074329272 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081863401 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060993203 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06338341 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071697979 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063560234 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063598622 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073910103 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073571914 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076531014 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071427245 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074147477 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076121923 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071317105 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074170944 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071650847 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07178446 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073494384 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071343304 seconds)
  done (took 2.780964007 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075559758 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083678902 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066417428 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071568062 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068681416 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071132701 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068265733 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068903256 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066861702 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068760872 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075935003 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075389204 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066598349 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070692699 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075231616 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070985292 seconds)
  done (took 2.475527419 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085784308 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072380305 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080403326 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066151112 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066567153 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061958717 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06507677 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061011239 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061595269 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078144174 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065485204 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075641769 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065271398 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063836468 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061983882 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070242326 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062167966 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06223138 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064911471 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077689484 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069369164 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063757554 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068704828 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065592047 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069046213 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07208664 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066337918 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06719366 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064395103 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067243442 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071271265 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07098098 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064134499 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065070816 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065853427 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065032869 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066848759 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068021891 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072397345 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067301228 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065164767 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069583932 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067500143 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068506085 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063511462 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06780738 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06352406 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069505249 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065079031 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070723972 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066820655 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069968849 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068263909 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074248355 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070272669 seconds)
  done (took 5.072099641 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080336543 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069140113 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061857617 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063900952 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068843912 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066810807 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069176061 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066679302 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067449552 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063919124 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066611454 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068660871 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067214942 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068825414 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066730237 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068963799 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061189954 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067161513 seconds)
  done (took 2.552022542 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071167168 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065694921 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073122409 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065346735 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065508747 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067872717 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061515656 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06417799 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063868443 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065419944 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065106062 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067903666 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064419601 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067568446 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065497742 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064922271 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067458285 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063586358 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065537545 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061104678 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067242694 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064532185 seconds)
  done (took 2.786709127 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094841243 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083021168 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139175631 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078484823 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084127613 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070745181 seconds)
  done (took 1.88714993 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090930603 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100843234 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066319057 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068470678 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075982365 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069345929 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069066209 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069271985 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077972552 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075247499 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069730032 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078321532 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077677495 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077509128 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074887213 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07584351 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069311099 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069187279 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065676102 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083159667 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069524861 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078516296 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07097192 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070572344 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070811521 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077604343 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079593047 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076068211 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069415066 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079741058 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077106694 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07221312 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080821881 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075604575 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069209116 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078277314 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07017876 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083365567 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075417873 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078708372 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068991006 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075529254 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077868123 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073995696 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078456882 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069627457 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073920245 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069483765 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069823628 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085737098 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075399218 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076845889 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07783421 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078843456 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078053215 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085484833 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075556948 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077104703 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075490098 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075525153 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077172634 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07561047 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077306936 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075395973 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075469385 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07725828 seconds)
  done (took 6.324850698 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105062601 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06624789 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0704847 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07573374 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077189061 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070242554 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07093627 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07034998 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070019377 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066363391 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10830627 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069673768 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077986504 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077660121 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06995915 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069603216 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069899974 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077934756 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066488999 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086590881 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071548876 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080325207 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07984348 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079432073 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077939699 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077821561 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071743273 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071814405 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071284436 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072254305 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077044556 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071999239 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07971241 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068731766 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079950433 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072216558 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072063604 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076657858 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070688124 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076559892 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078981058 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084461287 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070979314 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06961333 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075787216 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069453411 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069796801 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066441791 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070326849 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066766398 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075886118 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076925414 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075954007 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077628944 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07106128 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072210564 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072199121 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071450872 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070751962 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077179801 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078020388 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071442192 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088420288 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072150767 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072149837 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080481065 seconds)
  done (took 6.297499756 seconds)
done (took 129.164386037 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185386671 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164808873 seconds)
  done (took 1.678949493 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070224673 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098555366 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077797167 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128559178 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067060478 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100355628 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099545798 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078282735 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065792928 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065784847 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066037913 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06802568 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131064294 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066305773 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066164397 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06866562 seconds)
  done (took 2.665197987 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100390613 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162528783 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102605708 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06537862 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099215497 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072644005 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06502064 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075231923 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070854135 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064938612 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072851692 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070315859 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064626829 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070279814 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070852378 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072836436 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064673355 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072294634 seconds)
  done (took 2.785188187 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100739179 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090934012 seconds)
  done (took 1.538941666 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158498487 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105647336 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145403165 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.35353233 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.171675053 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.128060506 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129142208 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12798654 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117391757 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123753469 seconds)
  done (took 2.903936947 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101264644 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155432081 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26548266 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116489476 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072366711 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094081846 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11824672 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078325995 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080852663 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079950855 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079621405 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07583596 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100524817 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073140313 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073470105 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075559107 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103452565 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07254104 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074807562 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076118128 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10195405 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067438546 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074490139 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072550209 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076855044 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076791919 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065325569 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065321114 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076253569 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074662582 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077394469 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094532524 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079032504 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106400055 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07034062 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107265855 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07674913 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073256201 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074355412 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073558424 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078701 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078454803 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072726811 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076042092 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065483191 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076734143 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065665855 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065624481 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077599131 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066599527 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077677487 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078289778 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105817159 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066678102 seconds)
  done (took 5.971828289 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103178261 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107389914 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071681288 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114185737 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102883525 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072664904 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103471768 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095464929 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104022126 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069890929 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06849308 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07000838 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08278589 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083203413 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115985323 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107505702 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07394676 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071142024 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106180282 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106360754 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068425952 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096576577 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090962874 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103454942 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067421084 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069760236 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067710755 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06984332 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07754957 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078290948 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069870223 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080284287 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084875322 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078068428 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067373471 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067359183 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067618587 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079609689 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079154123 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078463331 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07719066 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067203848 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067510914 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069629873 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069880434 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067743654 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078919705 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080643342 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078924636 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069922083 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069934291 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06816604 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069571111 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08018464 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077836017 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080877212 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079582868 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067841824 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06817782 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072543534 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080217527 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079225512 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079420858 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069275618 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07848583 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067656082 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080017097 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084858078 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067805748 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070543911 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068411437 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069252407 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069518027 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077962061 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078063489 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069196018 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069227816 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067741301 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08012245 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078184787 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06811348 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076441015 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066803487 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067785961 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069376757 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069439174 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077133814 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079693175 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069519019 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068499172 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069407069 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06820499 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067096488 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076456302 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079969521 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078259276 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077237006 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068780951 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077246406 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076917142 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068886603 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07787593 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066698378 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068491578 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067953146 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076015778 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.205965886 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083870697 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073102217 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070705428 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080249564 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082160082 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069130348 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078841269 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081555417 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080407853 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068698019 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082051364 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068364831 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079842337 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0708897 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080443768 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069509051 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081208346 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068966688 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068051131 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06937901 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079538937 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073163563 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068485003 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071549304 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070728199 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079932306 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082310461 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070391365 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078724246 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080339566 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07094104 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07918215 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069047061 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079688587 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069783646 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071344444 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067796363 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081905851 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068394366 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068338488 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070065169 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080873061 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068578358 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080923171 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079005002 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06910182 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082249686 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080230194 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077968058 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080477767 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070373056 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068961301 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068363706 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069787038 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077605279 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079668518 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070177583 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068681363 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079012499 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079142789 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067723624 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078531772 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07880646 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.0792321 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070074086 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071141369 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083038728 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083840212 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080784625 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080903527 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081178134 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070560791 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079397263 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079316372 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068026061 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084478055 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067687944 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08337282 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07822779 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076708173 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078421893 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080462747 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080114567 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080083733 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08366467 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067724365 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068386695 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079576722 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068081835 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069134975 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078030279 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069675353 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069149258 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08314622 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068793066 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07944192 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06741376 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077547042 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065502948 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068711893 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082161898 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067018204 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06787457 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07756949 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067998882 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075987122 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077868851 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.208409975 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071283372 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073174864 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083234568 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081865086 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070080198 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069710357 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070881332 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077816647 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078199922 seconds)
  done (took 18.697582962 seconds)
done (took 37.601345935 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21364838 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156531796 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184285883 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119239908 seconds)
  done (took 2.120459749 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120059627 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101331625 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092691587 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065521948 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099314054 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065226697 seconds)
  done (took 1.928434578 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319548364 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213309976 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190502187 seconds)
  done (took 2.107411458 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206017066 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191365969 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.426742888 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265755359 seconds)
  done (took 2.589071517 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145284404 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089263038 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067498456 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084800508 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134619633 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161461596 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101099331 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126224047 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079009045 seconds)
  done (took 2.432944782 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149815829 seconds)
done (took 12.717534446 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.270114204 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.216623204 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.104062194 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089161532 seconds)
    (5/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.178183447 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082956386 seconds)
    (7/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.177441701 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.210627872 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078700205 seconds)
    (10/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.200305213 seconds)
    (11/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.115057003 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074352148 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.239562506 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.195436229 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.205703217 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.155664658 seconds)
    (17/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051134962 seconds)
    (18/309) benchmarking ("sort", Int8, false)...
    done (took 0.143796452 seconds)
    (19/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.144157522 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073137713 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120108308 seconds)
    (22/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075449854 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.108679176 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109990844 seconds)
    (25/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.195509044 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097602006 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091632453 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076231584 seconds)
    (29/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076676168 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171478289 seconds)
    (31/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.13855602 seconds)
    (32/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.152702384 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07133317 seconds)
    (34/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.162971839 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093551832 seconds)
    (36/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.0720066 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090436684 seconds)
    (38/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.112146344 seconds)
    (39/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079870652 seconds)
    (40/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156076808 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075653936 seconds)
    (42/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.141624082 seconds)
    (43/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.0763906 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05317894 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092038306 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074099866 seconds)
    (47/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111330141 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085805736 seconds)
    (49/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.175642342 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177838013 seconds)
    (51/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073912758 seconds)
    (52/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076572324 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.192425989 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052023565 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090516521 seconds)
    (56/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052115096 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067404559 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.204582143 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050463603 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.100897414 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062106843 seconds)
    (62/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.161954804 seconds)
    (63/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07198485 seconds)
    (64/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076747145 seconds)
    (65/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.093516775 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072895384 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095832652 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143431894 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071009993 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.147210103 seconds)
    (71/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074339749 seconds)
    (72/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.160007462 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.17093874 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092217629 seconds)
    (75/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076643128 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.115333891 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089814423 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094097382 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092384179 seconds)
    (80/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075320381 seconds)
    (81/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073203055 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088288451 seconds)
    (83/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072509001 seconds)
    (84/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.050604484 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.065198432 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.335177008 seconds)
    (87/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.12061649 seconds)
    (88/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.228294606 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077154219 seconds)
    (90/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06863552 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074696721 seconds)
    (92/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053536501 seconds)
    (93/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.144454318 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.095290008 seconds)
    (95/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.157428197 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.07328086 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064168899 seconds)
    (98/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052294801 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065741044 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.164100508 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065203217 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072336112 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074881888 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176732353 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07219207 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052578651 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077057928 seconds)
    (108/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.063633979 seconds)
    (109/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080389278 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052791426 seconds)
    (111/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051549776 seconds)
    (112/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091329933 seconds)
    (113/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.1132773 seconds)
    (114/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15621249 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051439534 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073730292 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143816964 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09224504 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074448084 seconds)
    (120/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061115227 seconds)
    (121/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051810817 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081773762 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141904664 seconds)
    (124/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064880681 seconds)
    (125/309) benchmarking ("sort", Float64, false)...
    done (took 0.131241889 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.181844694 seconds)
    (127/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073693646 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.137737093 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073835497 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129459635 seconds)
    (131/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194610516 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086111423 seconds)
    (133/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073987255 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066497197 seconds)
    (135/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09081365 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066275319 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052205708 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071451974 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073191742 seconds)
    (140/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076544878 seconds)
    (141/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051709921 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065148012 seconds)
    (143/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052859522 seconds)
    (144/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109292382 seconds)
    (145/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050482178 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065167594 seconds)
    (147/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.162324803 seconds)
    (148/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073159453 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072413976 seconds)
    (150/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.155729011 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081873458 seconds)
    (152/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051545431 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065014992 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066540477 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072333861 seconds)
    (156/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107584879 seconds)
    (157/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066771592 seconds)
    (158/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.154729197 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051476971 seconds)
    (160/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066055582 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140521725 seconds)
    (162/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066716807 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073921779 seconds)
    (164/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06662828 seconds)
    (165/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073616209 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.182018765 seconds)
    (167/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072659009 seconds)
    (168/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.317405035 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052028078 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079973376 seconds)
    (171/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.156039582 seconds)
    (172/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177549169 seconds)
    (173/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077548198 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050736338 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088746925 seconds)
    (176/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.0689478 seconds)
    (177/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051798168 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051576586 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13370428 seconds)
    (180/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.196470686 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071414173 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121340763 seconds)
    (183/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07499289 seconds)
    (184/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.152095381 seconds)
    (185/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086954525 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072136989 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066068534 seconds)
    (188/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098924224 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.075731584 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08748421 seconds)
    (191/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065820484 seconds)
    (192/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06811517 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073356019 seconds)
    (194/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.049603408 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091699937 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180356629 seconds)
    (197/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050077864 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064800819 seconds)
    (199/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.206931482 seconds)
    (200/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062499933 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066390811 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066689836 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093702778 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064414992 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065729666 seconds)
    (206/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050908673 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066122472 seconds)
    (208/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051488954 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092644903 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146107897 seconds)
    (211/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.100335557 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093405691 seconds)
    (213/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051213403 seconds)
    (214/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051898221 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074613856 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073322961 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068258396 seconds)
    (218/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074074351 seconds)
    (219/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066378225 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.185506905 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066402676 seconds)
    (222/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070051354 seconds)
    (223/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070092957 seconds)
    (224/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071573723 seconds)
    (225/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067701345 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071722228 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141100169 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067923743 seconds)
    (229/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078403167 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064700181 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064748943 seconds)
    (232/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088278742 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138535232 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136537886 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06470233 seconds)
    (236/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061017477 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092624214 seconds)
    (238/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060837256 seconds)
    (239/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051327201 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064857964 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065654923 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064502225 seconds)
    (243/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080809284 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05066532 seconds)
    (245/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067982557 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065998945 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064728138 seconds)
    (248/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05264421 seconds)
    (249/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050057465 seconds)
    (250/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072552418 seconds)
    (251/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064740015 seconds)
    (252/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189766727 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072854893 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064360852 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050691954 seconds)
    (256/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068223469 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066016069 seconds)
    (258/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111402458 seconds)
    (259/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050522731 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138878756 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071661089 seconds)
    (262/309) benchmarking ("sort", Float32, false)...
    done (took 0.132521446 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067158694 seconds)
    (264/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079519732 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073687916 seconds)
    (266/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051374149 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089205127 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113463238 seconds)
    (269/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052080495 seconds)
    (270/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072159197 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064708957 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051759685 seconds)
    (273/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050493938 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098633022 seconds)
    (275/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195605447 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071722527 seconds)
    (277/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149761552 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071544907 seconds)
    (279/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067255962 seconds)
    (280/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070476588 seconds)
    (281/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052571493 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073734779 seconds)
    (283/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051503098 seconds)
    (284/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051327472 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063788347 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063781064 seconds)
    (287/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050553942 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073005929 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139792738 seconds)
    (290/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050755821 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088869385 seconds)
    (292/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063988476 seconds)
    (293/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.0507722 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071261985 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096494656 seconds)
    (296/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051661748 seconds)
    (297/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050678657 seconds)
    (298/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050917941 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09602423 seconds)
    (300/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072396254 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070710146 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067610322 seconds)
    (303/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070182667 seconds)
    (304/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061784461 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050688832 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050853218 seconds)
    (307/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050551342 seconds)
    (308/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050751423 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110159422 seconds)
  done (took 30.939608525 seconds)
done (took 32.342784813 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087497184 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094427341 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074724725 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093896998 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080346578 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075952977 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072662496 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078878491 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079782747 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081698945 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078135384 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.0542028 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074034016 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073618489 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074474456 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091221657 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078250041 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072917305 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07313038 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064625303 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072628667 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065073076 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067202764 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053882044 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078156065 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071588991 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071626745 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073604081 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065426533 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065358671 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06948337 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073672385 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064521329 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078048017 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072141762 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072659869 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074115774 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076643115 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067216279 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065374316 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074302002 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065480318 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072546232 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073958401 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071583741 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071790202 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072675271 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077513147 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091449023 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067960881 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074971171 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076030878 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075622802 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073660234 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069436573 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073343876 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070898536 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091170142 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073270276 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067545975 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07400704 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074345813 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071283448 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072528607 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072551413 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075282655 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075693806 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071666075 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074444114 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070901063 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065095783 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072737287 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068885169 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064987701 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075212063 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076466931 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063992612 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070825482 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072547053 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070311496 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064622991 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06670102 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066879786 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071727879 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06708392 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053696807 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069006278 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071831482 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064047844 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072636675 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071727414 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072487016 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06687538 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075328643 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064715641 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07055882 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065425124 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064905523 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066490769 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068948215 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064689064 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066865193 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074222016 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066426573 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071198054 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078585132 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064579427 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071515812 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063774833 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064010355 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079298944 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074553434 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064577916 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06736971 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064167418 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072886982 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064250339 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064988239 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064784176 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064540201 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07148042 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065177069 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066756399 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072035189 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07744174 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06357654 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067427834 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065858955 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063547084 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069390359 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063666222 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063442397 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065449044 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060173185 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065716523 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063952597 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071470491 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.203124664 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073555729 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067209258 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074175945 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070609787 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071375353 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070393224 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063982189 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059516866 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068596579 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06723761 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067692909 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066076562 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067204933 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065887623 seconds)
done (took 12.39933481 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068225506 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14303569 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098114613 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095666847 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086107823 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065961985 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07540176 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102007773 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067488266 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101704964 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088006955 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084550486 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111617315 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064419049 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065271151 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070002226 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067145785 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081519693 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100822758 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086476769 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116212306 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064995053 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094503938 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088565467 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086613525 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101437049 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068765543 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069622096 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068962512 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090547403 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086489808 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069333989 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066154632 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096854285 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092214093 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082787613 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065740433 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081959456 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065953855 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065690442 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067261157 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.0974594 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078843294 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079822892 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069792613 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068446457 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066799467 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082827709 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088897833 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077888767 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085765621 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10225515 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067869669 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065649394 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063969629 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084975441 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065367374 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068479419 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065683214 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068299469 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065470575 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068989626 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081070505 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081403588 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069267477 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080261678 seconds)
  done (took 6.760236555 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086357098 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091142883 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084167285 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08449073 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065217588 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065731496 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066196974 seconds)
  done (took 2.027081901 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068959846 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088358682 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088641689 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088956611 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085285625 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087227409 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075784492 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065884462 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080571312 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067312205 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087086006 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101873996 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066814695 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073027109 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09050859 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066567552 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090487308 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065659622 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069621785 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090637567 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068117952 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082041778 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069639709 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066943192 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080880679 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06679115 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113817187 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070324688 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068218996 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069435823 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064135926 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108012159 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080408441 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076281561 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066639743 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08125001 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082459655 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066455134 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084440933 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071792207 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081529696 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068618922 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.0680992 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06453833 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070850255 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076581205 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067238289 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067389493 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068513148 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086783852 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066966825 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080867334 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069694952 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068483462 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068171957 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07019792 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076811117 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067443387 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086465481 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068023001 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083681223 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082912007 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080821269 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083241348 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06913847 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080866087 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080714375 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069785238 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069609936 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070279085 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083742356 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066547142 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070813848 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079776303 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071277287 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093452256 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093517402 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070743378 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077704245 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067048064 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066596663 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066590111 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089709107 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068795665 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066809901 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070650808 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06969066 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064864496 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065552487 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070151489 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064745163 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067826243 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069278192 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070160387 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069829436 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083255424 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068951847 seconds)
  done (took 8.791495507 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071730191 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068587065 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06960257 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06771797 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067959314 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068114382 seconds)
  done (took 1.921159046 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097211992 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069145659 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081827653 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072870771 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106473766 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087586281 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087296742 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078776987 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084251532 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078567272 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087380873 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089330379 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093144605 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073404125 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086921466 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072020768 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087604049 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076335139 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078343118 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073250064 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086701652 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07285794 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073686566 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082540466 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075957731 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07183022 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067449754 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079582648 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07930424 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078642863 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072308533 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076297546 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070387864 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077858024 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087439949 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070902852 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072620496 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077331855 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072019269 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075818989 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088054857 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073356514 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073749992 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077023437 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077523019 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069881343 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077518684 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075026508 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086619144 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076691696 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07721604 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071603888 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075344247 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077733499 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069896831 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077434681 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077096082 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087181963 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071982434 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07014795 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068374296 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075862539 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077238855 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076035426 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078190381 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07706445 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070701103 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072633366 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073793292 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07192891 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077134467 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068589524 seconds)
  done (took 7.086289874 seconds)
done (took 28.058665256 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535450426 seconds)
  done (took 2.007678142 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.621225079 seconds)
  done (took 2.11618895 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.559767645 seconds)
  done (took 8.054809345 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.407855035 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.499501095 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.723228994 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131851722 seconds)
  done (took 3.296873359 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.704475775 seconds)
  done (took 2.200859903 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.219111248 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.20255633 seconds)
  done (took 1.929010996 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37971259 seconds)
  done (took 1.88010139 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.141780626 seconds)
  done (took 2.642480593 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262636886 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176265912 seconds)
  done (took 1.945308445 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.483490808 seconds)
  done (took 1.985494663 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.882930059 seconds)
  done (took 6.387380136 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214735168 seconds)
  done (took 1.764138454 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242985568 seconds)
  done (took 1.747902226 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.707344678 seconds)
  done (took 3.207337503 seconds)
done (took 42.67286227 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083460612 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081124556 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081142682 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079066856 seconds)
  done (took 1.808816721 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08013345 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073476494 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077147991 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073238316 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077381167 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073270495 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074503972 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07729863 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072857995 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073315542 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073368454 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073027532 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075757252 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074370848 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071692863 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075053649 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077061617 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072650605 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076089833 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073197973 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071054388 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075106601 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074984828 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072353917 seconds)
  done (took 3.287125864 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08109706 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073055353 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074628521 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072763952 seconds)
  done (took 1.808545496 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08108209 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09555942 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090250187 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07909558 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093032035 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087510923 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069149164 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069160896 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070766037 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077707801 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068129846 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097116724 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088850011 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077890595 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080334597 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066013263 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068700503 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087472111 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078527831 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078515037 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06997102 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078132201 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.0683098 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089189594 seconds)
  done (took 3.411311226 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081707715 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105522916 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078161457 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089290955 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091163131 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065053765 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075394623 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091005753 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126613694 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065360592 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071485687 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065596329 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073031763 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065226402 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07683422 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108104103 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111585923 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068712294 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097076845 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06502867 seconds)
  done (took 3.188221437 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075283777 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069880513 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065449767 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069329085 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077148114 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072927045 seconds)
  done (took 1.94366915 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071450914 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069408624 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06738552 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066918239 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072177551 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067851742 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066004911 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06758661 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067272637 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067070115 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066280267 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065622924 seconds)
  done (took 2.320802346 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205337837 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068877835 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07011076 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065762868 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07069565 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065906147 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080586147 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067754656 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091355316 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066491221 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066536179 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068341874 seconds)
  done (took 2.497115168 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211014379 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076761309 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240738875 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140881644 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111873492 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116030211 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104656343 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115050334 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14365985 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101576307 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169259781 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169538002 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108681423 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138787607 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089488906 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100668093 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156105897 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163948296 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106085236 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168293822 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1470255 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126553623 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149579862 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101992424 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111856601 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123041729 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071320581 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080141988 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17164464 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13436353 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145586767 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111765891 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093640529 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178352592 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174422685 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142963701 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137717804 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0845473 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105784573 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136670075 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205731025 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08870634 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16136879 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108030281 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220906406 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136322675 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121998146 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121968948 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.1068359 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09046666 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148703164 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187976066 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138910141 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088676197 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115623102 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115301092 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117124593 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105383511 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185465845 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16515717 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129953274 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071599867 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101479462 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15535635 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135379768 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110701984 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127238591 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093487336 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136889979 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157672064 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121459452 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1471135 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.132354754 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089357406 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120881615 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141595718 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129095577 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162539341 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125450338 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07330785 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125635441 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103061577 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081123825 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145858924 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075656922 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177688613 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099431922 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108876721 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114739303 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109324396 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10907834 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160649197 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145620385 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102372415 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064668376 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249191103 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123627568 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149783271 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088386703 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109898638 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119283583 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079044652 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140086618 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07563263 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124513684 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077360329 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12990127 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132094208 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077229705 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124814204 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104567453 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102960251 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135608544 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163926087 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088808802 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082192393 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172250509 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123931417 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105927265 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146613121 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15976052 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102571267 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103002914 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151257443 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181858543 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089955721 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164970165 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107829035 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083877876 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088213165 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124929358 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112762144 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124498795 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081928568 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119110778 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169861573 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074981378 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096108714 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134822201 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079413044 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081066108 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106096007 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105447143 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095377566 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10019198 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103716899 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137223185 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12391614 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105126169 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124371186 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097733963 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166720615 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085773311 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099588509 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101403809 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068366829 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131170331 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153607626 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076947099 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158079513 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119318855 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103558982 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116089967 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081806179 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136640006 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077472494 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068459695 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135084283 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106187483 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10565559 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143965484 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101487723 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119618591 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112765347 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126122002 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123621357 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125086242 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100949619 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085955792 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107976101 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119677792 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070527063 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.08696354 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076769934 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100402258 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091989583 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079755709 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133287928 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116530546 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097319437 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10724382 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092200114 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141306494 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073313983 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121393348 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.114026786 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091545176 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144391515 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145543794 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125518231 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09428836 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128569045 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067586739 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072088958 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085359049 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117612396 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081124278 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07961946 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.376022971 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153248625 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135487441 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141723809 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11767277 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124548386 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161220707 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072484714 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122224731 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153942842 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125664798 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10468975 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093668509 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101848233 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146942403 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110834766 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185909599 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119878186 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126675261 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15707252 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102494555 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081099925 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105247614 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139161259 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106558505 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146733461 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101524644 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090016413 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112421834 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075603787 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100453421 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128973952 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121078597 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137478845 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117314772 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134240559 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07855999 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117700668 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12341156 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123850458 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064231851 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121224074 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164321501 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094667034 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119251414 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154201169 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079932766 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126972555 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175948389 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145242683 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235982342 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116572416 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122176282 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131292471 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122990822 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143086327 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109012182 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139050987 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111504374 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08700069 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089302974 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097809479 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105253427 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096173962 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107622072 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1150128 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096077511 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132696307 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10529549 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110679643 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119672177 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099396987 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091311985 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097193192 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17882606 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119412112 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172133357 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099856021 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146246992 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165065354 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074965891 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079438132 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078432504 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140488132 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085040181 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1312741 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100459907 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107696955 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125449592 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144439622 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09584349 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068724545 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109587819 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134970328 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114730249 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098930952 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104827104 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165009355 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102089167 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080076016 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114036603 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106056367 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102820197 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172474306 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061154265 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097962226 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076239758 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080684207 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128633566 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.302934763 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08118329 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104593553 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121456435 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113568425 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130003806 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102302577 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101589235 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117849514 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152561978 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130358662 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090570601 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112600938 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147875647 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158791128 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106671348 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09726225 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175402006 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154380136 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162143939 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089119742 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116395676 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115649526 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110020956 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139921668 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08425453 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164681473 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082497275 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1371132 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10480018 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090168052 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131205184 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100932536 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088783701 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149345183 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118381586 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083791784 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077920526 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118634185 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120852446 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107424099 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075662036 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140146118 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073757156 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133642948 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160479498 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080521588 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108294464 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096516241 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079426015 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10726407 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10237893 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087635033 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.239671697 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17870349 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088756499 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152623384 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136490623 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11366873 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137254455 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102954786 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641092887 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077860936 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154623393 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117302242 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174839433 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101545318 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12001976 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111420793 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124405287 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146008279 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104844376 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182421229 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13310222 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117271746 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079747802 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103183804 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10515056 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08951073 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108687918 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115411711 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116901297 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094420824 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117529162 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127045087 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082637555 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09953239 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158995718 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117715813 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145292139 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141299707 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086093648 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119285499 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139810258 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080571491 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12328559 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15361903 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105849167 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098486396 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080497636 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101627298 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159670085 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073174042 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160731312 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268949696 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111419908 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115752723 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115415402 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13248808 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109059501 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123113622 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094254232 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112046842 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113423295 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082096581 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077731801 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105757751 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112620698 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098913831 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098461376 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098792351 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153267324 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072841402 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099831103 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105910332 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145732928 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175344775 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089247297 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083213955 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120246596 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114609851 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114015322 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122794703 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079282886 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082578097 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082086793 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078741094 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110111056 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114107083 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105330156 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111956065 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16464803 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084106383 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233980005 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096090226 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106126651 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070199684 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078690619 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096963588 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099125884 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108601262 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101976937 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161393608 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096100903 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090653343 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092945963 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074504351 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083610982 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129747529 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109879147 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118121214 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098690055 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062283047 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108528306 seconds)
  done (took 59.021858324 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122495572 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083775018 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096028138 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144063325 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123785683 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203242664 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153631621 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189952991 seconds)
  done (took 2.777796525 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070369906 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096361182 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102822959 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083943206 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066439483 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068732772 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234061506 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081590012 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066817094 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090673433 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078963325 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068831636 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.428460857 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066137304 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067130463 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061723678 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067888002 seconds)
  done (took 3.436205371 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.38971297 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609156566 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.384631305 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073448961 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.466563045 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089450252 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.167828064 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128440888 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073929191 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537289688 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.706142925 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127832451 seconds)
  done (took 18.400572571 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079134994 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070050497 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084526186 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084591835 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07340793 seconds)
  done (took 2.035330883 seconds)
done (took 107.498547064 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084098854 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.384667182 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053274353 seconds)
  done (took 2.108913287 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08486622 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087154912 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085666306 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084067954 seconds)
  done (took 1.996065623 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076578857 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07687865 seconds)
  done (took 1.799903545 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236908185 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169813485 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.0883617 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085226256 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079331345 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080398146 seconds)
  done (took 1.90553899 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075427728 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074942684 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07376669 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077430364 seconds)
  done (took 1.956473225 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079605796 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052947344 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05473044 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05775599 seconds)
  done (took 1.90465142 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089342414 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078909073 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080115156 seconds)
  done (took 1.907055281 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104968834 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086164843 seconds)
  done (took 1.848544909 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085559914 seconds)
  done (took 1.742830733 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100993924 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105693944 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134207681 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112234023 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141422315 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110590451 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085317372 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086760082 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077185054 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087788187 seconds)
  done (took 2.70143982 seconds)
done (took 22.097123651 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081786485 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364312338 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360868544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090845383 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670463141 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356601698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034886985 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093006853 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116401621 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068194902 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085266033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649256154 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.993162393 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324023803 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.977561031 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318676388 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650925077 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068478313 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067765007 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068250916 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.022775354 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06768433 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068084385 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068546747 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.657396928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371958513 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068220461 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319033506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068244483 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069892915 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354725287 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068584715 seconds)
  done (took 16.288334902 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073768667 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122213592 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07447957 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085095476 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071036358 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070159232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071765751 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069349093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123444314 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068658085 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086164922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067857499 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072319469 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069057404 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088243615 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068568187 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068929572 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068609093 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068356323 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069153629 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087230209 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068101381 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068599479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068515119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068236756 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080747229 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068587849 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068167502 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068534078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070335079 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071399792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069038444 seconds)
  done (took 4.088103792 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121382502 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128880315 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07455217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105661344 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115693326 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0703766 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149021461 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094260355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131060497 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068200665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085849853 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068126915 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103301824 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068922684 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088648905 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06897193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06951719 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069534323 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069052836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069077461 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088362416 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068343052 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068715535 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068897104 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069172072 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082553703 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069552885 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068941546 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06966577 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070795637 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071699788 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069635826 seconds)
  done (took 4.361498937 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07540739 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07563535 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083938701 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085341918 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069948352 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072634513 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073848661 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07057522 seconds)
  done (took 2.284224727 seconds)
done (took 28.691779076 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081754002 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070001685 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073786881 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083368522 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073687904 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080006655 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068330576 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075826266 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07301207 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073909903 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075491426 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06804443 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072061104 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067808923 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074238792 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068344023 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07937491 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071722 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079351655 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080246668 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070464633 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074409695 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075835359 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079882091 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079731684 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080046479 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078279244 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073237758 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070315261 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071958207 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.0778479 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084652149 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068876724 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080125943 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068614759 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069107533 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072395621 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068443311 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081038591 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077608295 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070327867 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078143988 seconds)
  done (took 4.796867648 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091695675 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097066517 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088957451 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064263249 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067437238 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065989271 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089653467 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060475377 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059517711 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088639211 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056180588 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060102838 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06363959 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053764088 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06309694 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057017096 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062122843 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055647064 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060602806 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05980855 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08960886 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05378707 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077813564 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063318736 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056365163 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061570838 seconds)
  done (took 3.446116897 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076556765 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087598852 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090481282 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1308048 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106313891 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079820157 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081447017 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096901518 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089175771 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067790794 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07199733 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.0942769 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093073618 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074858209 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068058331 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088212904 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084278199 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069386006 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074682367 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097426224 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087970741 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087601549 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100076564 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084820056 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067370619 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07057178 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071903967 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083107335 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072926704 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077740495 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072328032 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072062395 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070497806 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080285943 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072236631 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069917294 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093666514 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078804526 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080128446 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068915689 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071732944 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069269869 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093574936 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134269676 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067631467 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074633226 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07642391 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078102444 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068312175 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088542322 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079939493 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067859967 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070820454 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068139801 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068165487 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081540593 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070339439 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070608303 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077404228 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071186317 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093363855 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072734351 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08409686 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067695213 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075783678 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067458748 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068803426 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066890904 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096220583 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069935312 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113182676 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070020539 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069155556 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07704068 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075981033 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074638134 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068619223 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084024759 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078563793 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071336105 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07700744 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071657263 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070847294 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092291384 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070504331 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070069193 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068962067 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073787723 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070847512 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06928358 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081120432 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067776522 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071398664 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085386916 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067586719 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06917917 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073766539 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072898849 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067046257 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078793308 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072546932 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068675341 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077383265 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068063818 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070936063 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080713939 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074570345 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066949064 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072968204 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073959133 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068617705 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068992619 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07123054 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070185645 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077079718 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074754945 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072978635 seconds)
  done (took 10.768355768 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169202024 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159372904 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070851508 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149930978 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077027611 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080092477 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15235953 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095970634 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068785095 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068802487 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069559722 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110868498 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107241883 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11687021 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079204862 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068007192 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085046553 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115727167 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.156375662 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148064747 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085421029 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077435951 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070787345 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069278727 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070961656 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079252854 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086012536 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078005406 seconds)
  done (took 4.470640054 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083651598 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101074476 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074766678 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091752127 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092697878 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068441484 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070941943 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070917817 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082278766 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079660111 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069099594 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074225371 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075772359 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071947375 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06952232 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075661954 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075436355 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070035076 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072001186 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074232058 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078797012 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092860204 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072360024 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067484705 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.0739116 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067507589 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064164322 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085508109 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068979656 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096308318 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066320486 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077030929 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083286336 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069179495 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068054243 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068171471 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068179724 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068090413 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070452298 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066820151 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067308154 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058157866 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067079597 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080277633 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074932756 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056365445 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073116542 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074409872 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073442162 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065796297 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070749644 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070411276 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071375769 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076175455 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073154256 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073035274 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069197018 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074431794 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07670416 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068047188 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065147236 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066414697 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073141271 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065396636 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076179087 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072413519 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06623214 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067563081 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06936411 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074382192 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067191943 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070897287 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065206478 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069746581 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071882404 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069415175 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.0690561 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066166893 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067811732 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067807943 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055652835 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067901314 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053269824 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070803524 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066090801 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066766411 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067972554 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072556763 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079514549 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069533333 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073929749 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068616927 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066807275 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071024091 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060197076 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070764832 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083284465 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082864889 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068013009 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065650669 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083016572 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072601147 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066706491 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055764819 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075236191 seconds)
  done (took 9.244901407 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093276742 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070323204 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087178127 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094786284 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088097859 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075578911 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078230985 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070419753 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083711744 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074455097 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.0779858 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069055893 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079187708 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078014667 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070602269 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078567671 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073024041 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085298121 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083382065 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068701739 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077174336 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081340567 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091337199 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083225382 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081657197 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083014945 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091119486 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072970656 seconds)
  done (took 3.95569511 seconds)
done (took 38.356671012 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.745949741 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.920595015 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.747597468 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.126423496 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.023538413 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.86683811 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.863465371 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.742377393 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.911910166 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.77585167 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.966195372 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.920365907 seconds)
done (took 65.292299372 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.801568215 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.890925758 seconds)
    (2/2) benchmarking "String"...
    done (took 2.011909123 seconds)
  done (took 5.581757277 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.042481964 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.305797767 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.992579241 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.741826102 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.748125699 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.083952525 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.545049579 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.269266944 seconds)
  done (took 30.368201237 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.864156695 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.977444393 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.410247181 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.441499613 seconds)
  done (took 15.419348801 seconds)
done (took 62.975319099 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.750805255 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.766586896 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.752866344 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.724044289 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.801441331 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.753855998 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.015345171 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.985842937 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.737767052 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.731036858 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.746272514 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.185550833 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.757396345 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.125271212 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.753137387 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.751615119 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.783702855 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.238753895 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.904963768 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.757720826 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.75715643 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.790028403 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.745452228 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.756932671 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.754211796 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.747642811 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.199303651 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.762338855 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.377096719 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.748149419 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.775582857 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.310823967 seconds)
  done (took 204.427070054 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.752918774 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.872533564 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.928127215 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.797801159 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.27483091 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.930513712 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.864060408 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.31958422 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.751005069 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.777185633 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.013512631 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.748245891 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.039808283 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.696973848 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.779315307 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.854029322 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.883234276 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.055614945 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.786879577 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.923068587 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.76951638 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.869931248 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.843127444 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.000289988 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.754726338 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.821413863 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.915090272 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.748913725 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.94379392 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.864352566 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.781589786 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.768504772 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.969869214 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.62362629 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.768341268 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.759392966 seconds)
  done (took 169.940314179 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.123377647 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.75039554 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.752712442 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.751564523 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.750789425 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.763768161 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.752429308 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.748911561 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.871074349 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.873786226 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.364041491 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.422024257 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.803097194 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.587166642 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.752661035 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.818282573 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.763472809 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.750636487 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.764495689 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.780248206 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750660135 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.751842463 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.874852182 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.760652376 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.115530895 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.762104416 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.753745799 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759490093 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.127018506 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.74764803 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.758386734 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.016210169 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.750479801 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.74871126 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.64372256 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.417541814 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.838500695 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.751566325 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.755752827 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.75498151 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.97485161 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.752763757 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.755720925 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.755396774 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.922022837 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.755127865 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.876774014 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.750958012 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.264664084 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.755316013 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.754553421 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.507895215 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.453119426 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.756277969 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.753381371 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.759131726 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.750421719 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.757224002 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.761375392 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.368042325 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.829598973 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.754395913 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.761173493 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.762988544 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.755192214 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.889531684 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.75932317 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.778056849 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.81046091 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.989738921 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.875052083 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.758547119 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.824156829 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.84786136 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.754269039 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.756881827 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.754606191 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.758740784 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.840089282 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.755793096 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.906958011 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76368047 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.758053758 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.807085745 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.828168467 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.754162312 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.650301624 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.759007782 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.754302093 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.081302275 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822448578 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.749727283 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.758229263 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.759402609 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.755523863 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.890814622 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.8796543 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.543503471 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.757009813 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.350512277 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.75608702 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.758754601 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.90230093 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.752073492 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.950327349 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.758459705 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838532556 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.759104983 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.759432625 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.756819884 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.789614774 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.759415507 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.820005156 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.760337139 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.133034477 seconds)
  done (took 400.147808523 seconds)
done (took 778.372252442 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.442997309 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.40235441 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.508629482 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.419698407 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.391684256 seconds)
  done (took 13.856346259 seconds)
done (took 15.550916902 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.842505637 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.850425053 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.775806212 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.850324603 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.77486353 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.847240863 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.82521007 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.78137952 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.816304237 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.785767843 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.817662789 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.783139556 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.772396597 seconds)
  done (took 25.21956051 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.99432274 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.99590076 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.827607622 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.00423908 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.805530512 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.003585812 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.924050084 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.909259959 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.916542641 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.775094261 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.774161337 seconds)
  done (took 22.629840646 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.996784506 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.998449651 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.836582995 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.001623657 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.808015447 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.998350661 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.924284001 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.913908089 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.915568446 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773037686 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.776631931 seconds)
  done (took 22.638213125 seconds)
done (took 72.179712319 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.766403093 seconds)
  done (took 3.461956545 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.793013834 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.945324501 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.773711513 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.774420169 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.772942483 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.768208175 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.770480236 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.768644084 seconds)
  done (took 16.063910601 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.769495943 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.7685846 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.767769671 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.770762634 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.770008921 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.765322351 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.766961066 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.766844916 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.768419177 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.769258781 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.770741277 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.764604971 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.772347039 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.765940414 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.763611828 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.767190327 seconds)
  done (took 29.988267729 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.770175486 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.767447124 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.76440159 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.769817809 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.766753883 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.766700658 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.768467816 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.767831274 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.768716472 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.769106581 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.769988872 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.768416889 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.76762056 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.767115599 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.769344794 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.768164106 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.768132873 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.767346312 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.771303847 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.76395211 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.768806951 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.769112313 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.769616553 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.773023495 seconds)
  done (took 44.140269901 seconds)
done (took 95.352367185 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.620626758 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.140325926 seconds)
  done (took 8.461811173 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.773058462 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.771610859 seconds)
  done (took 5.274213182 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.773210041 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.774538973 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.770012448 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.772023856 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.774458829 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.774366271 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.772712129 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.773088272 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.774021339 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.773384858 seconds)
  done (took 19.428153689 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.77322816 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.772562033 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.772184347 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.769898669 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.772466638 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.768134362 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.771255938 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.773318501 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.774194072 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.768137066 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.771125469 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.767949098 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.769193592 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.768985406 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.770194324 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.768377115 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.770417747 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.767529535 seconds)
  done (took 33.569879801 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.770264098 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.773896568 seconds)
  done (took 5.248473722 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.767047009 seconds)
    (2/7) benchmarking "second"...
    done (took 1.77051798 seconds)
    (3/7) benchmarking "month"...
    done (took 1.768986276 seconds)
    (4/7) benchmarking "year"...
    done (took 1.770332315 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.76648712 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.771044329 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.767591541 seconds)
  done (took 14.084483216 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.77404939 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.926927017 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.002435657 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.425938316 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.770043398 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.774013564 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.7018687 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.776705758 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.770954329 seconds)
  done (took 19.625812899 seconds)
done (took 107.392161823 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.606611472 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.762290996 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.141820131 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.859622667 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.781916198 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.062184787 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.788840185 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.074259323 seconds)
done (took 42.77624607 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.77426961 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.334312925 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.354255134 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.257395448 seconds)
  done (took 12.64970434 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.759618817 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.299996679 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.792722493 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.365878534 seconds)
  done (took 19.935656525 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.132525242 seconds)
    (2/2) benchmarking "read"...
    done (took 2.106734319 seconds)
  done (took 5.945807751 seconds)
done (took 47.003404818 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771844399 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.771086033 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.771220191 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.77162771 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.771295928 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.768512899 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.771735085 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.771608946 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.776540088 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.773036067 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.777163009 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.767318982 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.771843281 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773052114 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76723207 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768143916 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.772044443 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77106087 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.770426513 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766619355 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769169553 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772705775 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.772252003 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.767374999 seconds)
  done (took 44.205310655 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.771713246 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.772134844 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.771432939 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.770332656 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.769270574 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.770892141 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.773979734 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.767448557 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.770264191 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.772824754 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766423776 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.773901756 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.776252526 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.766964568 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771817048 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.769662592 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.773594026 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771449011 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770373279 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.770035978 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.772383689 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77123926 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.768760069 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772650767 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.774132565 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770249321 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.770995295 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.768443216 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.772393485 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.766995699 seconds)
  done (took 54.833177547 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.776274142 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.784930585 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.777430372 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.772693805 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.775833485 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.771087616 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.771622865 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.771300918 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.777340885 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.772882767 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.773494514 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.774701886 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.772772253 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.771429237 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.774910109 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.775617831 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.775444688 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.775023222 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.7731884 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.774621513 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.77514055 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.775191783 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.777711776 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.771691327 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.773201714 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.777158585 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.779129509 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.777176918 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.775853143 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.776563947 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.776870974 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.777867604 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.775030125 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.776774215 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.779006146 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.772953513 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.781818555 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.786445069 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.777358887 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.774174165 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.778510509 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.776109007 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.777041403 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.778481056 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.778637181 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.776885421 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.775526773 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.777476296 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.779751872 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.779384879 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.778551072 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.779092029 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.776296261 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.773316613 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.777820959 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.78232056 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.775032896 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.780794328 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.780180338 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.775309866 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.777263062 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.779176651 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.781969249 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.777511305 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.780406923 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.77802931 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.778988551 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.778122333 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.77847521 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.779857829 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.778583988 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.777404506 seconds)
  done (took 129.637003597 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.781062612 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.776851299 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.775347756 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.775789221 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772139069 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.78079224 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.779436193 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778287831 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781726125 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.78075315 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783977665 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.779619306 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781728657 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.784647474 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783861033 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.784081037 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.782474568 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782537183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.780286857 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.78434427 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783628019 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.779659791 seconds)
  done (took 40.880057502 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779783405 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.782457669 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.779964442 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.779579109 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779203893 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.783305582 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.779923627 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.783929422 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781063918 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777411875 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782042323 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784098904 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.780900081 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781014977 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779467058 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.781304861 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785407468 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781709113 seconds)
  done (took 33.774369388 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.784588985 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.780161711 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.786725578 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.781585316 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.783472819 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.784883417 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.782905141 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.785047708 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.784656552 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.783349297 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.786490022 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783615161 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.785630139 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784240841 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786814582 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.783172762 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.784556943 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782436677 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783117814 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782725767 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.785502587 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783689513 seconds)
  done (took 40.962789938 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787151027 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78757488 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.776653037 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.781635022 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.781115731 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.784236821 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.785023927 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.785382639 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.784948463 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.783565052 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781877626 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.782838822 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.784485979 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.786064934 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.777729077 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782160896 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.782227747 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.785916633 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785142364 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.783156717 seconds)
  done (took 37.384826845 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.785588027 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784532383 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.785141339 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787598036 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785220574 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.785965689 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782801044 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.788489562 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.786661026 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783647995 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.783763219 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.78646928 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783388883 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.786675997 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786814205 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788491018 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783289001 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786872145 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.784885579 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.7865731 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78907457 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786312434 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.789402555 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.786063893 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.786142307 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788184912 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78736845 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.7851542 seconds)
  done (took 51.722665658 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788224384 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786290936 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.783816869 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.786381837 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.785717277 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.784464835 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.782867593 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.784707948 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.788129143 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.78240865 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.788911109 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.785776916 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.78887247 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.787378227 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78614128 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.787001799 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784908085 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.784042354 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782011888 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781200065 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.78836609 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785714847 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.783476914 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.78349862 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782243905 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.787671828 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782764112 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.784383161 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786740166 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78495044 seconds)
  done (took 55.275630238 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.805398811 seconds)
    (2/2) benchmarking "in"...
    done (took 1.806096701 seconds)
  done (took 5.32820759 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.786862667 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787636298 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.785515917 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.783488893 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.785033923 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.788422957 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.788450818 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783355141 seconds)
  done (took 16.008047688 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.786993493 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.785788069 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.787196773 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.787605708 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.7868931 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.788331414 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790219213 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.786436901 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.787603153 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.784228167 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.796158095 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.796196909 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.793139619 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786163401 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.786809432 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.789546709 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.783881147 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.783895645 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.790940738 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.788303144 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.791450533 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.788133745 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.789254539 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.785874257 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.792005411 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.802364471 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.793641042 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.792992012 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791622833 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.794785875 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.786267772 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.785410652 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.789619869 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.791324778 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.790903263 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.787532792 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793654935 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.78772849 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.793865527 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78940458 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792841638 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.79024378 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.792246028 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.790693737 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79477461 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.789267261 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.792378953 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.78476691 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.784382719 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.7943156 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.796092111 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788588652 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.78665531 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793034648 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.788661161 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793516649 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.787566043 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.795046489 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.801632523 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.800612832 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.802594215 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.801851706 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.790279485 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.788845368 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802782274 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.813034582 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.795730549 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.789798339 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.789688196 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.79079819 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.79204881 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806020784 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.804025141 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.792348808 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794683496 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.791813854 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790570478 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788936355 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.798697485 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.78967948 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.79058507 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792114137 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799149482 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818941388 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.793184007 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.793221502 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.793449835 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.794934289 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.792850354 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803322948 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.793372989 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.788059518 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.789433789 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.790854605 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.796124944 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.794108677 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.787693591 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796453193 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.790901094 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.794785656 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.795001949 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.796238747 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.800452474 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796248095 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.796542887 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.798159723 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.793656395 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792273599 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.799696568 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.794694776 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.795399354 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.792100074 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.797791996 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.792225855 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801023148 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.803604929 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.795506509 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.7974906 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.794762124 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.797793807 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805143674 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.822401201 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.795011514 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.792951302 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.797733615 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.811943513 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.79614301 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.796516463 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.791829655 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.790600512 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.790749426 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.795455174 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.798647676 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.797554613 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.796393365 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793848561 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.792957427 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.795560552 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.79796608 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.796918425 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.791564574 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.796193115 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.798157358 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.797789329 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.798476186 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.795887704 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.799004064 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.793406495 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.795971565 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.793662832 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.795177908 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.798250046 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.798526828 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.794161064 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.794984922 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.79840313 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.795304462 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.796384381 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.795245933 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.795054643 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.797329367 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.795779696 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.796118949 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.800574094 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.799979883 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.796856353 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.796888798 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.797463152 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.7993697 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.792549517 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.798118494 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.793167691 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.798129849 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.804536553 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.798432226 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.800049036 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.802890492 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.794610965 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.798942386 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.797738205 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.802483025 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.805061473 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.798551132 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.804878303 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.799758119 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.798422789 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.797936811 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.800911684 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.799642442 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.801156151 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.805562562 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.808127999 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814151591 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811753023 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.799667852 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.806186488 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.799632281 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.805790245 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.802943727 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.797900679 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.799693717 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.797353129 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80042021 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.797814159 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.800666598 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.80161018 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.79806161 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.79833953 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.796136494 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.798859272 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.798547061 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.799413934 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.800059221 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.796769835 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.801820852 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801914165 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.796570172 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.798129008 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.796074441 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.799223637 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.802131601 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.800664203 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.80638885 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.799769947 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.800650689 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800371738 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.801205688 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.804355085 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.803662987 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805908814 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.803738037 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808003176 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.799920615 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.805189485 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809580569 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.796925106 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.802671205 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.802043705 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.801029472 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.800445586 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.804746235 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.810852838 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.80009389 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.801955769 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.801498818 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803097228 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.804208051 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.809588525 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.797808544 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.801675903 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.802546223 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.802650928 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.799102065 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.802613176 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.806373315 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.803211653 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802220425 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.802495827 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.803421931 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802788736 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.800877932 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.80168831 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.804497011 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806493405 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.809535967 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.805910209 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.80474141 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.804576389 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.807774913 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.810070984 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.806037055 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.800280016 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.804037644 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818877433 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.815249578 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.807594726 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.808694572 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.801601571 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.810385472 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.806931957 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.809280238 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.805663829 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806485334 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.803858909 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.805695893 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.802145632 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.804378948 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.806339987 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.8048652 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.808838427 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.807170257 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.803468758 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.799728803 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.807291114 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.808536714 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.804078718 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.803508838 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.80784492 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.806234717 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.80846582 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.804494073 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.805218314 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809977214 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.803239503 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.802564349 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.805795194 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.801549344 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.803481939 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.806602135 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.804857828 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.808183701 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.816947674 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.803744472 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.814391165 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.81090603 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.812628696 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.806090577 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.809029976 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.814613997 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.804289318 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.805460792 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.80455234 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.807458068 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.812794677 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.808291195 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.807930863 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.80704081 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807863836 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.8049152 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.808893793 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.809239184 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.808536798 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.808142922 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.815998885 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.810038725 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.813584457 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.808876745 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.799844935 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.807930114 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.80874847 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.808620187 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808810844 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.809338913 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.805977933 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.809275788 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.810067821 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.80939212 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.808388449 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.806127365 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.805666636 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.809507507 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.815351465 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.812284267 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.814544361 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.805572138 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.815510718 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.806482622 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.816748685 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.80827595 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.808378638 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.81003679 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.809187261 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.809664227 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.808482282 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.808140148 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.807930919 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.810062032 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.816012244 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.808929632 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.810656894 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.809671631 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.815418152 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.809544092 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817530112 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838682299 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.811988684 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.816368262 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.808388238 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.812599948 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.813914357 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.810712367 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.806265341 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.814715027 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.824238082 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.819408353 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.812134955 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.811813566 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.811865072 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810409956 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.812064022 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.812985375 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.81006264 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.814500612 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.813335333 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.811486668 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.814476371 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.811639352 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.814433669 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.811312701 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.813741804 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.825012086 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.810261295 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.810459922 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812968317 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.813265709 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.811365304 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.810813063 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.811595775 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810309712 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.811697884 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.815661456 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816575185 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.817952321 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.811957699 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.81377984 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.812445441 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.811819339 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.808825213 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812635756 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.810592473 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.814270397 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.814373953 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.811600266 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.811999335 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.813315206 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.814595259 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.815807667 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.817381739 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817027818 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.822429717 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815490728 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.810582057 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.812881307 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.81151744 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.811277529 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.812258843 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.820879774 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811002152 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.824162506 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.824838552 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.819066129 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.810543739 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.815739738 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.825316901 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.814458998 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.815340161 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.815611423 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.81491859 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.814933826 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.818153532 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814236743 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.823047893 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.814411122 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.816577095 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.820877987 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.813773532 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.812491961 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.817768419 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.818673882 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.814584767 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.809795278 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.815101803 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.813157821 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817749713 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.81682128 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.818445191 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.814874072 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.813860392 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.819662853 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.820975014 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.816871688 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.814221989 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.81070289 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.814033801 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.815707585 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.811788575 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.814148392 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.809419977 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.815256626 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.816553877 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.82558551 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.811679928 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816202094 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.815450813 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.814092413 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.817493881 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.818485113 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.812300644 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.810022876 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.817288528 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.816904652 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.81377574 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.818795914 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.808610408 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.815780265 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.813647356 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.813333927 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.814939108 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.832955717 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.824720326 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.81032679 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.813699388 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.812615735 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.819431028 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.818909455 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.815691085 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.815234068 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.819229047 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.815419098 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.816838097 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.819057813 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.819877391 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.834846944 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.817145591 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.816814985 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.819430882 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.821725173 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.814841161 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.81472888 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.81595608 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.818840577 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.820429557 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.825162998 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.81842516 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.821663898 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816698814 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.816488442 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.822842159 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.823543512 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.826835669 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.817677608 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.819057593 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.81698265 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.822967477 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.837233756 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.817432626 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824436194 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.855705524 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.81841626 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.817671619 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.814764508 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820610558 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.820562763 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.820152828 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.82036433 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.818092681 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.821688723 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.818329229 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.819550554 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.826397905 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.819187461 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.818290033 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.82084889 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.821033351 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.820937115 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.817353812 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.820831253 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.819900606 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.822441628 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.823341057 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.817312491 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.81992862 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.833991017 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.828245931 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.820971357 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.820222379 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.817066787 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.822146743 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.824381068 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.83271529 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.830672306 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.82200983 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.822831501 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.820514299 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.818778644 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.819921962 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.822026452 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.820461314 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.822427334 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.820092651 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.832378636 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.832960294 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.825183605 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.817857301 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.822974441 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.819241626 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.824068233 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.822354992 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.825239104 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.823743731 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.819866038 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827693876 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.824134487 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.824112294 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.824652591 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.833398493 seconds)
  done (took 1078.567224002 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.81871786 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818711146 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816553434 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.820477309 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816636534 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.820196508 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82013581 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.815826169 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.82047338 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.820672203 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.819424299 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818546183 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.820294051 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.8192638 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820855282 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.822632539 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820258734 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.818677071 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.820160632 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.820259576 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.823542286 seconds)
  done (took 39.964157231 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.822026496 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.823158414 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.817192947 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.824234785 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.820835221 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.822268826 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.822233282 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826243483 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.823106634 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820928666 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.819673312 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825102919 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.821618581 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.820391509 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815460615 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.826153666 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.824230987 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.82155472 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.820008125 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.821705023 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823673144 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.824114448 seconds)
  done (took 41.839158509 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.822249458 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.822420067 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.818387137 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.824111117 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.826639341 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.819830195 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.826359484 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.824504391 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.825369973 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.824171072 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.826537612 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.82766519 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.830537254 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.829366139 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.823095953 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.826366724 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.965241436 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.820651655 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.826538231 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.82659051 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.819016512 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.827477302 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.81634548 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.820347609 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.818402917 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.814401338 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.818176729 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.814468152 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.814918206 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.819189207 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.825462348 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.816396101 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.818738793 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.815596474 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.813912166 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.819520119 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.819265184 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.815820285 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.815363556 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.817401726 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.82719885 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.84096229 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.817413962 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.821977032 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.816105279 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.815785985 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.82016017 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.82859036 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.817264801 seconds)
  done (took 91.1580265 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.817608834 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.818512886 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.815705964 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.815008176 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.817418457 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.817584764 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.817633156 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.822127336 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.81295489 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.813482072 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.817140875 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.812562788 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.814374181 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.81224316 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.813458798 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.810712684 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.81198137 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.809977616 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.811208273 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.806586477 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.80812479 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.809782709 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.810420369 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.810497552 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.820539334 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.812599434 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.814081693 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.818616678 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.817718386 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.808359424 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.815494746 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.817483441 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.8163717 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.810785824 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813383513 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.817848146 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.819974254 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.817806722 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.81587081 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.816983092 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.816670114 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.818543537 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.821446256 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.817813263 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813363848 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.817356212 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.816140311 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.812272969 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.814466593 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.820055786 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.816120559 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.817277397 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.815537411 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.81515542 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.818370875 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.821994429 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.812862093 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.81642742 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.817906389 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.816440897 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.815185595 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.815367406 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.817008595 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.816836016 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.818983752 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.815752636 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.814848429 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.815787687 seconds)
  done (took 125.19674856 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.818217604 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.818627444 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820383958 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815768179 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.818055742 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.814880816 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.81831743 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.818378711 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.821656791 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.818943601 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.817112952 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.821672134 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.816555442 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.82368034 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.818077549 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.825094055 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.821605075 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.821142773 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.819716794 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.822036939 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.81881094 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.82002944 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.81691028 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.824605837 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.821315774 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.820973837 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.82343798 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.819786143 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820674177 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.823111332 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.821357548 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.820475962 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.819783493 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.821925582 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.82006592 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.821066356 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.819990998 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.823581024 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.820172706 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.820124453 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.814957581 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.820240509 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.820605033 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.82177914 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.823064689 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.821607831 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.823081423 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.818998993 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.825713675 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.823035243 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.822785707 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.823032178 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823606195 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.820895066 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.82263152 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.823702797 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824176909 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824412282 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819020396 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.826514668 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82517583 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.824715351 seconds)
  done (took 114.650953537 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825380754 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.821025584 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.823612203 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.822634047 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.823645066 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.82448981 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.825698409 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.826316917 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.824563653 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.828204019 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821687445 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.823992123 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817964533 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808008923 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.803884035 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80832622 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802628671 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.80276356 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.807889359 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.803821671 seconds)
  done (took 38.099033397 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.802018329 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.808993324 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.808908634 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.79921298 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.807875483 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.799007519 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.808902249 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807984538 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806588648 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80452171 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.804830957 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.808817036 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802551039 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.806661779 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.806662498 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.808367392 seconds)
  done (took 30.628481861 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.808196173 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.809442141 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.808287943 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.808799895 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.807174713 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.808553295 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.812313514 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.806995666 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.806645055 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.805119173 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.807866803 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.810135271 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.805613589 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.810567216 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.806734146 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.808648164 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.807100485 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.803005553 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.80834907 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.808845045 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.806453208 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.806948379 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.8095276 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.807528049 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.811822582 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.806745038 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.806988823 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.803767079 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.807991318 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.807659723 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.812058633 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.808752033 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.808440391 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.807735633 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.809082286 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.808295177 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.811381021 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.810785093 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.811398694 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.81170798 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.811415344 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.803607322 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.811117356 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.808815008 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.806079964 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.814351731 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.806671681 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.805775029 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.80729197 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.808336137 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.807568144 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.808925989 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.810701162 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.809110917 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.809298662 seconds)
  done (took 101.199387898 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808609828 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.815816828 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.807582718 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.810807505 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.809740108 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.809066907 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.813016414 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.807226956 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801806395 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.808497903 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.805802187 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.808398089 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805924261 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.804686186 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.805631214 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806886726 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.802913782 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.801496874 seconds)
  done (took 34.271309586 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.804911715 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.803264909 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.807676711 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.804139351 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.802534206 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.812294052 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803202609 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.810639738 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804999645 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.805331616 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80749781 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.805071275 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805179879 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.804445783 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.808227996 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804218391 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.809627651 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805306699 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.802799438 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804390974 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.811429338 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.809416314 seconds)
  done (took 41.475298897 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.804828264 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.799678149 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.820268109 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.826587914 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.833870088 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.837334984 seconds)
  done (took 12.654510161 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807530243 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801959018 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.80600945 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802338669 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803666117 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801626174 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802100832 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802898886 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806757504 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804849004 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799849448 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802611202 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802872719 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803602732 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806241741 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804397487 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802991017 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801202085 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804030432 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810307108 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800284079 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805607192 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802769143 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805423689 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80836301 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803472473 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808055994 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802813166 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803967805 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806211237 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806003282 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803493365 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80662012 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799617079 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806623745 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806806716 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802849467 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805883587 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80365324 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804003441 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.807274764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804042243 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805496461 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802882235 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803399911 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799802647 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800199274 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804038111 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802299966 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806156744 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800887998 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802581459 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804586528 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803374793 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805910003 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807980642 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802541488 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802541397 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808925624 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80200077 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803318358 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80693814 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800275614 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80400778 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803201498 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80383181 seconds)
  done (took 120.807865955 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802323504 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.80173274 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803166303 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801108597 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800130508 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803086846 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802749813 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804505767 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799829441 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802821586 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806682628 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801471173 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801725846 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804509567 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802030604 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805278675 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803853861 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803961351 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802666278 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80318083 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801663969 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804119748 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80124354 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799885379 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805569318 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802222941 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80408282 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804236824 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802892486 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803259481 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805903067 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802706118 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804085996 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.799996083 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801497476 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804878681 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804628206 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802500762 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800666766 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806632114 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804817537 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806531819 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803178516 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800545173 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800839388 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803902384 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801206989 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801144562 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802672631 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79900482 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800080224 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806300344 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801687238 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798782415 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80030655 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803739874 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80245411 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805986274 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80223054 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803967615 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798951504 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802625374 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806431503 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799403687 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800460094 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802630065 seconds)
  done (took 120.715417142 seconds)
done (took 2502.938491034 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.871885554 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.847022535 seconds)
  done (took 15.450680284 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.969086914 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.915070798 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.800965471 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.854164368 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.806620178 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.8189199 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.81341529 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.802583975 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.803742645 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.804847956 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.809320624 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.99175857 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.797898244 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.803188808 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.806467673 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.89243773 seconds)
  done (took 51.236440878 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.803517285 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.810838753 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.82095565 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.80757789 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.807475722 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.815904005 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.843253569 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.808276205 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.838793995 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.818313349 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.869487564 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.818000873 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.803534335 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.857421702 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.819638392 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.823729695 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.899035437 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.881039208 seconds)
  done (took 34.684373532 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.885884586 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.817518507 seconds)
  done (took 10.446130554 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.831939924 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.824449243 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.818082597 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.813318457 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.827113952 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.803974498 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.826145159 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.826696433 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.799322492 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.85342734 seconds)
  done (took 69.956610822 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.807664872 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.803911469 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.80230573 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.803041059 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.797541043 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.796241231 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.797807808 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.796092212 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.486985068 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.83684133 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.804192935 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.81278272 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.806283278 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.806364687 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.807726347 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.829263072 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.934628072 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.79997485 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.809910029 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.810211043 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.804559211 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.869167931 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.823610025 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.808626262 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.836924334 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.49481852 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.810217455 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.810550488 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.938888031 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.808529436 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.805227034 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.806335101 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.809229555 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.179159425 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.085074634 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.805841118 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.814829858 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.820166073 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.797752853 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.916911731 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.809115907 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.807718153 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.712650351 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.058641747 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.923823766 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.847501502 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.185668126 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.81059589 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.810625133 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.836570522 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.809930621 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.808093396 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.823817916 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.311408066 seconds)
  done (took 129.086562702 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.798614637 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.061619372 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.957462356 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.802740894 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084673677 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009355691 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.801780964 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.85154377 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.801150199 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.029672281 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.969403164 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.909707185 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.800952978 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.80044878 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.793286304 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.79497273 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.964810725 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.875440022 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.801605412 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.7948212 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833151782 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.047739028 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.92775437 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.803115201 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.818270744 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.007591911 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.928596884 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.911076679 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.076656281 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.800947524 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.868103281 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.799339493 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.802251071 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.796885088 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.956860088 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896539258 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889074947 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.799944382 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.798337969 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.799139962 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.471161657 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.996669424 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.901485119 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.942455434 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.040441164 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.003029784 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.58830854 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.79785632 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.535856338 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.957294961 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.030448981 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.031602813 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.923069375 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.805153682 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.322427004 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.797722447 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.803710842 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.034998181 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028684756 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.900966647 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.798989536 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.802259671 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.796884778 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.048506442 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.803328059 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.898980905 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.804485544 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.796052926 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.8947088 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.912007151 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.027210714 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019668244 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.837722207 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.131825445 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.282660034 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.050741357 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.867734262 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034647749 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.800982512 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.794918753 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886780371 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.649819748 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.962015985 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.057513759 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.059646568 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845358892 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.529714162 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.803788998 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.029884894 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.035458098 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.107544774 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.047174426 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.955443824 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.000693223 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.806739107 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.808775046 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.068700995 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.946121247 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.805971266 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.171031005 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046192969 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.370043683 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.832039182 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.119594363 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.936639196 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.809858713 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.448188853 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.806583785 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.032343506 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.846729708 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.801532281 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.806038207 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.024637617 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.879611774 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.805476017 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.441708692 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.869331773 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.807195495 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.039785426 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.805812109 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067830408 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.80768912 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.044570622 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.475487906 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.838836616 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.030105673 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.037826874 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.801340521 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.068281052 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.049990178 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.919721047 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.022628049 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.423930076 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.802644759 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093089925 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.802410691 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.805058953 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.979550896 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.807432656 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.979598975 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.810206341 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147497085 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835462938 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.960069206 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.806349679 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.066080301 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.840489166 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.856411368 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.801498173 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931130457 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.80904066 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.6754483 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.962718929 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.806832125 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.803375207 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.563373911 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.805195079 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.964157233 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.038200316 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834294944 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.878150202 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.47646054 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.802706834 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893609509 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.83041021 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.144017826 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.803576096 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.959050957 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.805995596 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.336637334 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.801111078 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.044909268 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.98835213 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.802863171 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.802282727 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.705179529 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.801115041 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.798726452 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.962210968 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.303090223 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.803197597 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006503618 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.801780623 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934183162 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.805813852 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.881366764 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.159473997 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.801076661 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.805202129 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.804868631 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.80219824 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.805811235 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.0719311 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.836896688 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.331077701 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.94141949 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079936284 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.124971151 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.057869884 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.854007269 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.811533901 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.052035977 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805791179 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.870527965 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.806680826 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.829756712 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039899159 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.808394853 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.016730842 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.083938287 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.754007309 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.854956782 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.807669087 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809958775 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.68115843 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.956497691 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899456404 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.810826663 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.811545852 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.928039087 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.929439354 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.024367921 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.80909685 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.921100659 seconds)
  done (took 889.387993877 seconds)
done (took 1201.97855322 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.804649859 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.806540355 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.797901027 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.809736137 seconds)
  done (took 28.960930646 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.816150827 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.809191004 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.810040862 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.814805915 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.816968332 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.817124541 seconds)
  done (took 12.621874786 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.825083935 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.809010345 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.809604423 seconds)
  done (took 21.188642816 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.89179156 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.211319519 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.916624749 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.245027367 seconds)
  done (took 10.007186705 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.812575325 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.812258133 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.81367355 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.817733492 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.812551852 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.817094077 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.811404695 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.814129212 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.810875223 seconds)
  done (took 18.066641113 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.215682159 seconds)
done (took 96.799311444 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.801457661 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.461784654 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.192955421 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.92876593 seconds)
    (5/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.152679198 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.939070944 seconds)
    (7/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.358005762 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.746540206 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.853685639 seconds)
    (10/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.025255237 seconds)
    (11/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.898542438 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.930139497 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.830515849 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.992910506 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.806050869 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.802957125 seconds)
    (17/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.15888784 seconds)
    (18/309) benchmarking ("sort", Int8, false)...
    done (took 4.777758813 seconds)
    (19/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.984084428 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.12382495 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.817963316 seconds)
    (22/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.239521769 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.917059258 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.829033259 seconds)
    (25/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.492648414 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.45788044 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.715421788 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.875426371 seconds)
    (29/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.959178945 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.809460374 seconds)
    (31/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.974012119 seconds)
    (32/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.364892317 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.914247804 seconds)
    (34/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.297029488 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.503140903 seconds)
    (36/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.905346184 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.151343191 seconds)
    (38/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.335758118 seconds)
    (39/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.993587224 seconds)
    (40/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.915885316 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.406263 seconds)
    (42/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.92419284 seconds)
    (43/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.211247711 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.80090258 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.230334266 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.923088242 seconds)
    (47/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.028645391 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.074867794 seconds)
    (49/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.885366424 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.816932048 seconds)
    (51/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.829112919 seconds)
    (52/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.938146954 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.11271805 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.165843449 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.730962165 seconds)
    (56/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.305608255 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.876585755 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.994677507 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.743797582 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.196383503 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.174935986 seconds)
    (62/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.275971502 seconds)
    (63/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.223550751 seconds)
    (64/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.827148224 seconds)
    (65/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.728155159 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.070511897 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.827026796 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.819224949 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.988765297 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.809079087 seconds)
    (71/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.923209796 seconds)
    (72/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.281915433 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.920438293 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.602723702 seconds)
    (75/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.817533933 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.916755049 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.79761984 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.885812552 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.494900615 seconds)
    (80/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.827406733 seconds)
    (81/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.863823786 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.105832917 seconds)
    (83/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.301988279 seconds)
    (84/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.052619027 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.496964926 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.815352345 seconds)
    (87/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.804621321 seconds)
    (88/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.444638349 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.109089049 seconds)
    (90/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.96035802 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.926870169 seconds)
    (92/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.799845615 seconds)
    (93/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.704550417 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.833457915 seconds)
    (95/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.119660171 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.010259752 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.232132767 seconds)
    (98/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.287969491 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.11185694 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.001763093 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.06334664 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.042774865 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.841554385 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.91184788 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.907133336 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.289940236 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.941392205 seconds)
    (108/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.204074817 seconds)
    (109/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.327745381 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.801266693 seconds)
    (111/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.02366386 seconds)
    (112/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.851568268 seconds)
    (113/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.119590623 seconds)
    (114/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.095895632 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.188692074 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.036198337 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.815662755 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.928240689 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.907806924 seconds)
    (120/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.008138439 seconds)
    (121/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.801087449 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.430311551 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.827832908 seconds)
    (124/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.920509828 seconds)
    (125/309) benchmarking ("sort", Float64, false)...
    done (took 5.607531404 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.796750356 seconds)
    (127/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.849576009 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.283924207 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.843888488 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.922216166 seconds)
    (131/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.805228288 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.708416453 seconds)
    (133/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.318703824 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.917961552 seconds)
    (135/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.815625567 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.844700335 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.842518914 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.03617746 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.074075951 seconds)
    (140/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.832380935 seconds)
    (141/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.379551037 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.963978919 seconds)
    (143/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.808005628 seconds)
    (144/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 5.117542186 seconds)
    (145/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.930238985 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.149230701 seconds)
    (147/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.37930255 seconds)
    (148/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.849534606 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.926682878 seconds)
    (150/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.445607484 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.662047758 seconds)
    (152/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.003312991 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.051018556 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.908154312 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.848935891 seconds)
    (156/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.99496591 seconds)
    (157/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.912923728 seconds)
    (158/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.029051278 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.167726648 seconds)
    (160/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.795758068 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.907412936 seconds)
    (162/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.793814705 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.927106248 seconds)
    (164/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.932006217 seconds)
    (165/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.833842471 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.210454166 seconds)
    (167/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.850501218 seconds)
    (168/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.838982072 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.808506393 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.51558214 seconds)
    (171/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.116543123 seconds)
    (172/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.824615303 seconds)
    (173/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.82027036 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.062336172 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.746700941 seconds)
    (176/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.90107333 seconds)
    (177/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.130801593 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.901509567 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.855204436 seconds)
    (180/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.80485376 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.944936521 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.444287582 seconds)
    (183/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.929656813 seconds)
    (184/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.937466513 seconds)
    (185/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.836891924 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.846438302 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.905223745 seconds)
    (188/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.971478836 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.211772891 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.041854057 seconds)
    (191/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.913551509 seconds)
    (192/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.886136893 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.856627109 seconds)
    (194/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.925548199 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.62681222 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.831149877 seconds)
    (197/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.922222425 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.82784483 seconds)
    (199/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.063290332 seconds)
    (200/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.112377953 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.961431703 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.828263208 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.860425025 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.659415943 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.526586158 seconds)
    (206/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.974775392 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.214636055 seconds)
    (208/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.813288311 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.476082538 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.961893803 seconds)
    (211/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.948182542 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.892883428 seconds)
    (213/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.014398512 seconds)
    (214/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.777189367 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.712684761 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.04540627 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.81898999 seconds)
    (218/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 3.240467512 seconds)
    (219/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.825311415 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.031771999 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.153523091 seconds)
    (222/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.846879848 seconds)
    (223/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.802199782 seconds)
    (224/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.49640008 seconds)
    (225/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.207104898 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.974739915 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.823630691 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.8251407 seconds)
    (229/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 3.374750278 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.866293117 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.125224075 seconds)
    (232/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.906193926 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.822114121 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.706785472 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.161447793 seconds)
    (236/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.330942713 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.88752068 seconds)
    (238/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.000792566 seconds)
    (239/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.959549123 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.530823183 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.1203078 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.052445425 seconds)
    (243/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.660243212 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.135385826 seconds)
    (245/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.895574005 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.19209795 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.101854638 seconds)
    (248/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.221532076 seconds)
    (249/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.032196027 seconds)
    (250/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.856160059 seconds)
    (251/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.230643229 seconds)
    (252/309) benchmarking ("sort", BigInt, false)...
    done (took 6.82706531 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.855889118 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.91486757 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.143367781 seconds)
    (256/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.903139246 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.067152415 seconds)
    (258/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.126478603 seconds)
    (259/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.149422907 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.940420266 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.855928756 seconds)
    (262/309) benchmarking ("sort", Float32, false)...
    done (took 5.551308912 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.844649093 seconds)
    (264/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.604539283 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.193572701 seconds)
    (266/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.9725901 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.766870393 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.938667866 seconds)
    (269/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.386623865 seconds)
    (270/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.856164964 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.154647798 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.307604894 seconds)
    (273/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.17588067 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.908582417 seconds)
    (275/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.190994532 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.858832635 seconds)
    (277/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.863948868 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.944658622 seconds)
    (279/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.950422996 seconds)
    (280/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.837320157 seconds)
    (281/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.755472978 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.997068389 seconds)
    (283/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.188816236 seconds)
    (284/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.96346735 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.915205268 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.949090028 seconds)
    (287/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.903314392 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.643002157 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.843820997 seconds)
    (290/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.917708657 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.056407682 seconds)
    (292/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.914055805 seconds)
    (293/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.057181846 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.870487163 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.037855636 seconds)
    (296/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.901106693 seconds)
    (297/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.44005495 seconds)
    (298/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.14007061 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.813642955 seconds)
    (300/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.963274131 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.847315838 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.914652739 seconds)
    (303/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.911507248 seconds)
    (304/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.113559296 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.078092974 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.209200206 seconds)
    (307/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.133461879 seconds)
    (308/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.038211763 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.908283902 seconds)
  done (took 1001.731218853 seconds)
done (took 1003.732837258 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.863992193 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.853629533 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.832757392 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.86365359 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.946864257 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.866473856 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.853447767 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.838304411 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.886929372 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.887412434 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.842354691 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.873836612 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.838928775 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.845282164 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.837181584 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.849339713 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.153874514 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.876037774 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.855376642 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.844304269 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.854052989 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.839763579 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.888687607 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.86139545 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.844502515 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.843480607 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.84799073 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.860542095 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.951581661 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.83866841 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.840800079 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.847722049 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.14886458 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.864148452 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.835319248 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.864696573 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.847401102 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.850251706 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.845717392 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.875271566 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.283300707 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.845212683 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.842456841 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.839320282 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.84183241 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.846010509 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.843537928 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.842996641 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.851042484 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.851024464 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.284360577 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.863318126 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.843988943 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.848333994 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.853175697 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.837046978 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.843313981 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.856946461 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.857730332 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.86349713 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.140894363 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.870187114 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.843146458 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.852466347 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.852443615 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.316024559 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.838393834 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.843881412 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.2842289 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.847456234 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.320833451 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.849861836 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.84376079 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.855607589 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.870741378 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.149162246 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.869378065 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.845043494 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.845613 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.843610052 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.847598055 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860459194 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.846467023 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.836507997 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.861893055 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.865274813 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.857302199 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.842087186 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.846999182 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.860602622 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.852765035 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.848776163 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.849594289 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.83778744 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.852285669 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.848715095 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.845148659 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.843649773 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.847107417 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.85035571 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.285226267 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.869159896 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.843266248 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.844633984 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.837909001 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.862488174 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.280682944 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.850324773 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.862041007 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.885234228 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.849703495 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.148632022 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.871956966 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.859218282 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.850267046 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.841876522 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.840558326 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.138382277 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.315455484 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.865068326 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.844971878 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.842397367 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.861111442 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.850797929 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.841353125 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.153328242 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.874058828 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.856468708 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.962955256 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.856893243 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.880248067 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.841116586 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.852875814 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.870950819 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853102062 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.86835138 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.847654713 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.861045539 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.860134089 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.842678343 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.849847726 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.849081445 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.841934679 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.854224674 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.839596444 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.876339969 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.85545675 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.854544782 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.870149758 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.958522524 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.84032966 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.137795132 seconds)
done (took 289.703167809 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.91280603 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.835910696 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.945602128 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.843726819 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.922175232 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.920569789 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.833346555 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.835026696 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.833807833 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.212689047 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.841998416 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.837695019 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.834656398 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.836831113 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.920954224 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.837417857 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.837661442 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.174533537 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.841324706 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.909616757 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.841130357 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.839100008 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.839275294 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.214488606 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.830601082 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.832097249 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.913483848 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.842415924 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.180937668 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.838330076 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.835657944 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.179571253 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.932195986 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.860713058 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.849492057 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.845457204 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.919789214 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.842381928 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.926440548 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.926530733 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.941703044 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.887844764 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.842726044 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.828085383 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.851950754 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.844073318 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.838900115 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.868003494 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.842335339 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.841686638 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.173072566 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.848649157 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.841727231 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.838893458 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.838496725 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.871891058 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.840392043 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.841598246 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.929232104 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.840368227 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.908227081 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.210668594 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.215132043 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.842379401 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.836085269 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.845722037 seconds)
  done (took 182.334632518 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.907022808 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.913408141 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.911513195 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.843730366 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.888936038 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.918411495 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.845621075 seconds)
  done (took 14.999244834 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.844141773 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.847428234 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.892358386 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894469073 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.844566354 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.99531505 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.84460743 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.852923762 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.842000438 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.899446783 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.836405796 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.839583505 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.849454501 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.839365263 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.88963883 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.847241189 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.956792263 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.84111085 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.842121011 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.989552121 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.837222865 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.850967986 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.892083408 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.848077866 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.835970137 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.850727027 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.423297395 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.84050499 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.837147866 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.843909397 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.83945864 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.885377502 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.843161895 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.838827027 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.832846929 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.956801139 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.83970347 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.836716962 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.850354411 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.833251906 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.839387686 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.843327852 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.846040805 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.84163714 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.841525197 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.8632976 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.843299537 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.841348657 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.847394567 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.843502868 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.891097071 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.844788558 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.847478054 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.837952926 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.897179036 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.846463978 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.846249228 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.835580867 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.841612691 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.841925115 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.994285097 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.893659723 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.847756877 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.891838451 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.850289273 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.847601655 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.845724543 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.84658138 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.938514022 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.849074168 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.893884327 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.849360479 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.002957779 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.868369431 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.84790374 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.846573418 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.84945283 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.850138473 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.840690588 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.854313133 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.843401015 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.855291095 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.850210918 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.846953427 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.84598141 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.963973762 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.957199249 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.842792406 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.862096944 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.850777656 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.846061959 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.901195255 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.850500526 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.840715357 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.902046584 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.962781462 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.902170313 seconds)
  done (took 203.29502821 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.847348925 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.85647897 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.853635433 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.868467085 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.847984743 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.843744812 seconds)
  done (took 12.893738156 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.849660251 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.850281683 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.852226525 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.852765638 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.848477712 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.853279746 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.848709771 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.852573576 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.850540648 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.854991157 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.850638654 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.849403668 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.844920545 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.848649821 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.850715058 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.858039124 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.857015601 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.849395443 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.854376147 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.85195564 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.995612875 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.855883742 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.852336902 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.853286082 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.857624395 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.84861287 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.857209508 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.846112094 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.849249662 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.853889282 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.859941118 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.846434661 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.85188748 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.861720031 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.857874217 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.853157207 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.859080177 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.857199974 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.849241708 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.851019503 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.858440282 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.857896821 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.853947569 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.853774329 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.852332429 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.857972817 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.859965109 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.861321166 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.850442701 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.856614065 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.852669454 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.853380697 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.858260329 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.856466587 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.850971844 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.855904298 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.862959614 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.852551158 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.856846237 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.858529679 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.857049139 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.85231319 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.857110041 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.854887717 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.86076641 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.85434543 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.8539746 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.860036181 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857348871 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.855623901 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.855834164 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.854587274 seconds)
  done (took 136.422890529 seconds)
done (took 551.726350086 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.932246284 seconds)
  done (took 8.716533696 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.890438213 seconds)
  done (took 8.77225661 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.433419953 seconds)
  done (took 10.208867226 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.851002962 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.858858495 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.841677942 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.849370949 seconds)
  done (took 29.18648885 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.912614995 seconds)
  done (took 8.695036658 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.863311887 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.841337204 seconds)
  done (took 15.515918323 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.895770533 seconds)
  done (took 8.671174569 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.932299167 seconds)
  done (took 8.712849209 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.871706168 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.880458229 seconds)
  done (took 15.539842541 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.828129738 seconds)
  done (took 8.599165191 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.513774622 seconds)
  done (took 11.300193553 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.853785404 seconds)
  done (took 8.64685819 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.848655733 seconds)
  done (took 8.630175542 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.97356586 seconds)
  done (took 9.750716135 seconds)
done (took 162.725532235 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.849629076 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.846571576 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.848673396 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.844103067 seconds)
  done (took 29.16455936 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.887179786 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.892398999 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.887727069 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.897289255 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.892397304 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.888330633 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.881350247 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.878340391 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.901786603 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.890261429 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.890316025 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.889806177 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.889038734 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.883715708 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.890413486 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.887794501 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.901258247 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.890033545 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.881831433 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.895239524 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.858057929 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.90108506 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.891442296 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.856841588 seconds)
  done (took 47.085039072 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.059228316 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.926285646 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.012622829 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.90622005 seconds)
  done (took 9.684954653 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.909740902 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.912769167 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.922543827 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.958791461 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.9847667 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.917160061 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.8858128 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.879472118 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.863440671 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.909189327 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.985901685 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.904776229 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.001862528 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.856146365 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.041146408 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.855126541 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.859109094 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.908705594 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.961894702 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.97396256 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.854587213 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.910239283 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.914858282 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.906967458 seconds)
  done (took 47.861685282 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.857561549 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.866439144 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.861986588 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.858048102 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.854302028 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.856870014 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.86397234 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.856568572 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.880688577 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.862028404 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.857375274 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.857716495 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.85500631 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.85709334 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.859668264 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.870033821 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.871755415 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.857263446 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.860337505 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.863378952 seconds)
  done (took 39.012443134 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.852766671 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.704882394 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.206014775 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.106508984 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.853897101 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.85051876 seconds)
  done (took 31.355185548 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.871858584 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.863543275 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.86266765 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.913853594 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.996558199 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.869719723 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.859075923 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.870982154 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.90530147 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.920605041 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.880981715 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.88774388 seconds)
  done (took 24.486231837 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.851343519 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.858598981 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.853226606 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.869720658 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.8697615 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.868764289 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.868425999 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.856566187 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.872783794 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.877938347 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.870022815 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.875989844 seconds)
  done (took 44.181329723 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947256157 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.760423176 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.871442279 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.532042934 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.323766133 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066447442 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382298239 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.196207597 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.857692729 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128606648 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.897258852 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959369465 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.110134574 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854428706 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87729677 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.341193458 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150151247 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075394746 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881352447 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.67708084 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904114244 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388977907 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.681958067 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.912662155 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069760091 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.988854377 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.136110069 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.814069214 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991310171 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891110099 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86742211 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.853029523 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133274187 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230969965 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959208321 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866314392 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.474224809 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.569799431 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.849992303 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.613705741 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.626089417 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.976661366 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866717764 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858764074 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.792762586 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370639739 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236792261 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.861230216 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.568917886 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.856428195 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870785819 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94678027 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.859006456 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.673201396 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77974088 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.13117558 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.856207146 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862631266 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425576133 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.950431109 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383955666 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.835421454 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.04928913 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617268625 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244266751 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.003692849 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.862298988 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.864787031 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793455075 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.598443519 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906220347 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.004847361 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.87726012 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507029291 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163640502 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.971283977 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801653702 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.573234734 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.644641728 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.838616231 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090738134 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.8175799 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798562546 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.771692548 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.794150721 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121674118 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893372748 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.485519684 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898541679 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195879379 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.871133854 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879539414 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871099603 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.086634895 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.744011076 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86012498 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.665934203 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005003343 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882705156 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.199821722 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795258107 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.863198706 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119757311 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.072875299 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.087949433 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.388183081 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017288976 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860263461 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.944290118 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.78616343 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.912683541 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.133593953 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915979629 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.969319017 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916488711 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.818865132 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157265159 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885088026 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.025852646 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.945418628 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984712324 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19273856 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.150114367 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925674111 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.864580026 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.861469833 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.634583946 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412071934 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.12401502 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.861573264 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36783435 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912543744 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.864732963 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799201936 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.485559526 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.930416071 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.836712498 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.085123991 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.825798562 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175469525 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795923542 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006918894 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.97863845 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.081592106 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.504126332 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.932237562 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118875054 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336666561 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.136938878 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908907923 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879476394 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977622865 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879089507 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.284436888 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.153026276 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.865411294 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.864153253 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.720519438 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.859513045 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859463223 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.867102928 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.611664545 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140028591 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.880662239 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.859725147 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.75294648 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.873875962 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927244262 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867122338 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.87232445 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.404088584 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.571608967 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.86945771 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.483678552 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085859729 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871211975 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.635037766 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973811954 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.944945679 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.141232279 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920146412 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.796972275 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.573903111 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.55625561 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86540468 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.799979582 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.866117614 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874289175 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875006515 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.243639111 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140018383 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903756773 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.634200236 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.905532133 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87450558 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.870210254 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864845696 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.409103192 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.983412557 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392515415 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.912104018 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000629308 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.876976006 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.798251109 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.865025878 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868615488 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.863177471 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.822121233 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916172047 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.641737268 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258514811 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11936086 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.475128121 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876333498 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.666603721 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.921529865 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.886948331 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.707794172 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815147393 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.90543549 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879319978 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.876768469 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.660922718 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.570486504 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.431841806 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184993658 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16719328 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314475136 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.344943237 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.171229645 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.206807825 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10073699 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.395360794 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925595743 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206711328 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810508797 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949879344 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.512971873 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215693109 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879094834 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094533049 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262744561 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.782518257 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887958992 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079326893 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899836745 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.794593118 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.829175921 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.070401071 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010846891 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.636887822 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063928239 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201236629 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.57788866 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.98320067 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.871036765 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.555688935 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952656835 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.575987753 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.229872237 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409908741 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.871140236 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361105122 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.87090764 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.316875465 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219919943 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.202396952 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.991188441 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806962479 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.878113691 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.8798305 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.868970631 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.860831954 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.722414685 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.118199453 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878485087 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102762976 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.131353606 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171709814 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.771049912 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.873397352 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870280399 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176000823 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.668102594 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038329519 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.301589402 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.394414137 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872073356 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.803918215 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805137489 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.562077788 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.879560303 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.855234137 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09048469 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.056470723 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785464627 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371284323 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110811183 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.124203116 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.885312518 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.143825385 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144179851 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.568593419 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890946186 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.97186285 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.589259342 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.975690692 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.142723661 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10683292 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.626964799 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098218796 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.912269088 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.68701924 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.869635391 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084506146 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.141436539 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.820366443 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102612524 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.592647751 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.944746396 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190454494 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928604308 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.854001997 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.023501192 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.070019131 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878138827 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957505034 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88123647 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.884071456 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.885867372 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917277058 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.854096883 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.996597201 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.88667808 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962441064 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.026229469 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.399372626 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.878722052 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149769407 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240071924 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.20432929 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931997705 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870249618 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876035264 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8091701 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007046918 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.32048961 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148653049 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.005737589 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.172020077 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901670537 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.602565206 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.245745206 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117059572 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150274071 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.771180851 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873597307 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.899657975 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.143192762 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887016779 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.086064694 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1053189 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187591601 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349609059 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.124986113 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.240014537 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148420357 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.246169165 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877170511 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.465299421 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.96093568 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.563674669 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.913589376 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.854654119 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140921434 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888999993 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266756762 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.899307896 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.075059522 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.394647513 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.677506203 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166290278 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.867291126 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.936084489 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154269192 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268423765 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188912133 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947492971 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886508781 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.589482303 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014793566 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.77521173 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.145281211 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876432863 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089215671 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.591363706 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.890318089 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159467704 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184932939 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.874967557 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.76132041 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893370036 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.891360835 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.108012909 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147749826 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131988178 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887394566 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.892369308 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.700450881 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.161534204 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942808102 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817764184 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.886106931 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983032799 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131878316 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904533519 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.400217082 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.593248712 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178012227 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.799063858 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90516206 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393554499 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248360721 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207267684 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.41947281 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107368293 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.445375309 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.857740408 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182226691 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.890894911 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386340285 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189423185 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.890195731 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.510209101 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921810524 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.157386437 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20462051 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.959745425 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750517259 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.852686391 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110068213 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.446285479 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82196047 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887226139 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.945645822 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.884844017 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.020083864 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895511008 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.783406488 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824664241 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.701786626 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375705741 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.886790109 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.872263318 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.654786736 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.517244555 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919387812 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030990685 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892604936 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.606920798 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.180595579 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.141071249 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.509289726 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.892528099 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.890083445 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886384204 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816193492 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.085030245 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.26358737 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180378924 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.326477255 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.920080668 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.886341837 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.097181031 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089161293 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.840146323 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018474211 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367719673 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922013825 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.654585642 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.558157885 seconds)
  done (took 1685.684400737 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912001407 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.930951708 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.930568532 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.913464109 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.938147381 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.937916502 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.957440652 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.925920443 seconds)
  done (took 57.257682965 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.879012438 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.078610724 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.887183569 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.87971477 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.884353343 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.880193954 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.048235131 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.886839101 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.888158665 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.889534105 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.879639942 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.878093127 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.191078599 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.900207278 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.878374324 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.865774767 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.884579283 seconds)
  done (took 74.516186281 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.878657155 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.088065611 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.915160361 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.894245803 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.802359394 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.888070516 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.818212026 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.939067967 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.886140823 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.098627832 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.516851747 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.896045608 seconds)
  done (took 90.436182588 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.890152735 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.884721967 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.887725984 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.884035186 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.886882822 seconds)
  done (took 11.249743392 seconds)
done (took 2193.780075921 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.297323562 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.102609429 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.103680482 seconds)
  done (took 6.019637033 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.024402549 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.071330233 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.188434772 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.198213018 seconds)
  done (took 10.290592911 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.171494001 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.257877377 seconds)
  done (took 6.2345267 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.284122712 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.891072252 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.270653671 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.876891407 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.876191397 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.875577662 seconds)
  done (took 22.439945365 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.880519428 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.882019336 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.879572183 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.881462409 seconds)
  done (took 9.328417054 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.860376411 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.555260557 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.863085173 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.876786013 seconds)
  done (took 20.963085376 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.627728794 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.275873711 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.623366021 seconds)
  done (took 9.334161757 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.384121314 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.770527753 seconds)
  done (took 8.962369905 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.138148334 seconds)
  done (took 3.944436664 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.012713983 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.153742902 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.39470528 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.398692398 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.483219733 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.733135379 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.194372948 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.123187594 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.282641329 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.310080874 seconds)
  done (took 24.89463034 seconds)
done (took 137.968397719 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.253950712 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.111603886 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.077158832 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.223614775 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.095059588 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.075996077 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.294016441 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.208901109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.718658839 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.717215737 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.219775309 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.101048382 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.050187204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.11803436 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.052802408 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.117587663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.128108044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.278430269 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.962720924 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.123421601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.299261891 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.85840977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.071723152 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.870362217 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.147351999 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.034583395 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.447655913 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.887169907 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.125038791 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.451814003 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.033036546 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.276257894 seconds)
  done (took 172.237141685 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.766314831 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.885516936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.886764698 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.887602773 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.386170228 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.88326946 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.888784887 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.885219334 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.027380463 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.012529388 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.888709672 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.43254582 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.896776105 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.885865276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.890446337 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.885075219 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.152873603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.83493822 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.897904583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.902125342 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.909261019 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.391157582 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.908014836 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.409859426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.184792156 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.909018217 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.886444181 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.910140594 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.891164592 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.89742523 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.896187789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.885464301 seconds)
  done (took 209.075534287 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.889186649 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.890161568 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.884442363 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.887466085 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.893439247 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.887463144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.887551869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.887939454 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.562551279 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.559089878 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.895589097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.914460077 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.893433758 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.889592101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.896691128 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.89110482 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.897726345 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.895539862 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.892307032 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.896608762 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.900399773 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.695143356 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.89309031 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.705519478 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.89445524 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.894843273 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.886773455 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.899617136 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.902125415 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.900096325 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.89571357 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.888062054 seconds)
  done (took 221.378327466 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.090295285 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.897808806 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.896832641 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.839072077 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.898133805 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.898582347 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.836143851 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.095798307 seconds)
  done (took 19.292497259 seconds)
done (took 623.802692795 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.354362289 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.19591465 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.066100011 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.921430122 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.172032576 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.94900911 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.918404217 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.984674303 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.644434019 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.980644382 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.609782014 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.931462886 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.69403489 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.936391127 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.039157273 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.976002796 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.456180643 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.542954121 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.090982338 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.014055758 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.085154689 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.849099166 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.995601835 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.663315059 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.718433067 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.894687188 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.088916176 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.45765533 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.925146165 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.078752682 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.634940503 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.292029178 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.924262261 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.917149798 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.973956527 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.950323869 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.261403214 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.927490989 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.035692688 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.655268226 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.990948605 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.522795038 seconds)
  done (took 104.143915906 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.889223469 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.885624954 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.886378768 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.886495602 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.888010077 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.893626824 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.892475486 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.893988652 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.890702314 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.88818941 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.890677382 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.89073865 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.886451258 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.887662828 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.885389462 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.888945595 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.886922156 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.888210981 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.885831657 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.887967369 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.886143234 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.889679439 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.903399438 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.888314124 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.888797695 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.888650047 seconds)
  done (took 50.95200254 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.903206759 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.049314203 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.150403014 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.914779232 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.896167366 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.901516438 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.917355565 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.907485177 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.901992693 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.899784346 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.003873122 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.908312322 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.919170151 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.151201504 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.909683105 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.899297314 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.897232777 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.90018582 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.051912863 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.915412902 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.91951253 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.905407716 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.918860469 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.913266116 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.90071029 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.898417627 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.902732671 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.36030343 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.908558657 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.005139637 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.942555388 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.920435015 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.34647436 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.165627622 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.950385899 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.910698693 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.902755779 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.007942971 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.905155528 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.900042123 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.915008705 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.906586142 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.155364525 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.392131926 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.911312985 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.903335074 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.369779295 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.021371301 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.943930265 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.912709548 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.158279838 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.913370011 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.902513966 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.901904158 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.939227461 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.912301332 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.898688235 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.250737184 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.914537991 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.920147277 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.906912161 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.903204381 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.061721692 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.911722151 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.047827245 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.90847013 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.909207524 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.900660148 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.152878776 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.915508051 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.401685895 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.91441219 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.8998301 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.00419265 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.055122422 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.397410018 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.913636857 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.071996705 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.36478663 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.925799764 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.908940546 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.355500696 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.931337217 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.909708483 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.903991333 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.905736688 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.90416012 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.94959535 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.918388309 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.327848825 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.406610125 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.265156445 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.92618626 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.919971807 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.906886863 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.250949953 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.908559735 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.903826458 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.146530622 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.411447172 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.913807808 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.910635035 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.390401188 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.915584618 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.921427533 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.912936084 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.159875871 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.915905847 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.948016923 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.906521714 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.911044931 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.906006496 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.92230055 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.910162446 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.906990981 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.378079308 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.023371383 seconds)
  done (took 236.03509505 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.898136074 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.897489891 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.898599678 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.895669391 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.896452426 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.90363173 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.900329001 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.897315479 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.905690334 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.897355688 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.896458564 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.899277232 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.89788843 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.900770853 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.936307811 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.90581386 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.512733202 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.897640862 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.897938326 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.906124282 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.549119992 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.908517702 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.89932064 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.89565226 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.900591543 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.902752378 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.911823534 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.933379256 seconds)
  done (took 168.376963309 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.905626658 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.017111156 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.923687689 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.934249141 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.911273531 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.903772857 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.928727463 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.917520768 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.910377933 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.903641396 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.904843809 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.966322708 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.917844157 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.003706797 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.936116882 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.936460114 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.005591952 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.913364784 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.90527102 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.904254785 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.933514877 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.897839448 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.964090783 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.031267573 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.918502329 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.021942723 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.905191143 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.908110521 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.905404455 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.023619258 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.914369249 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.968787137 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.935005873 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.924048833 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.023363643 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.024707852 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.008531882 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.938623528 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.908520254 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.907761298 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.904718095 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.897348216 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.021864413 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.920747096 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.909300569 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.010519066 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.921810815 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.910542802 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.916424154 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.905164887 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.922111807 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.926514882 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.973178865 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.037745167 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.934726996 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.933316656 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.933978891 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.174021564 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.917803765 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.006192441 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.902461764 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.021336402 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.925415811 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.898282055 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.905351257 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.913665207 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.939440276 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.937948093 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.007201262 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.913479187 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.004522172 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.938116989 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.916725128 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.904993088 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.909965496 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.019704823 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.020799007 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.943809228 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.943237668 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.941234442 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.899598353 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.910696011 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.895713497 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.92391375 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.914494924 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.019593291 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.020388611 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.919692782 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.912967771 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.913549056 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.911739202 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.934974882 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.033573252 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.939871471 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.001925744 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.976564105 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.984228217 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.925065106 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.91979637 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.915265278 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.971837764 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.922693134 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.91924845 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.223400856 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.979821975 seconds)
  done (took 206.42099896 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.386928574 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.956951231 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.966050156 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.230072748 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.329730086 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.755924794 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.953398309 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.956204264 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.979609211 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.145479038 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.022768002 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.978427246 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.939253135 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.929370125 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.955288988 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.977740078 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.966475149 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.268798812 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.0922761 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.073008489 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.933238354 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.267776831 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.271576654 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.351927367 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.991932147 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.302832395 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.623954941 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.20276076 seconds)
  done (took 62.649884154 seconds)
done (took 830.399309899 seconds)
SAVING RESULT...
DONE!
