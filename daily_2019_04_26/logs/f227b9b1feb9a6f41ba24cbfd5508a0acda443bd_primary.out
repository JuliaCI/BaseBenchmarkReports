cset: moving following pidspec: 10718
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.29951069 seconds)
loading group "string"... done (took 0.583842226 seconds)
loading group "linalg"... done (took 7.200182048 seconds)
loading group "parallel"... done (took 0.170705637 seconds)
loading group "find"... done (took 1.137434221 seconds)
loading group "tuple"... done (took 2.008132425 seconds)
loading group "dates"... done (took 1.304393749 seconds)
loading group "micro"... done (took 0.237278404 seconds)
loading group "io"... done (took 0.968540948 seconds)
loading group "scalar"... done (took 39.629140807 seconds)
loading group "sparse"... done (took 12.395948631 seconds)
loading group "broadcast"... done (took 0.970872803 seconds)
loading group "union"... done (took 13.214401314 seconds)
loading group "simd"... done (took 4.424524145 seconds)
loading group "random"... done (took 8.973508782 seconds)
loading group "problem"... done (took 1.932322723 seconds)
loading group "array"... done (took 21.178767116 seconds)
loading group "misc"... done (took 1.92123792 seconds)
loading group "sort"... done (took 3.213087973 seconds)
loading group "collection"... done (took 17.997632427 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536351067 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143738465 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119812308 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140189162 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186974957 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133480958 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146394776 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086743937 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.030715757 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.164301688 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141980535 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.479304412 seconds)
done (took 5.070428352 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.20927461 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088589789 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097659054 seconds)
  done (took 0.889874843 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067786175 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128175268 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081463308 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069870843 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068135845 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082498635 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06818508 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06753611 seconds)
  done (took 1.275133274 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075759275 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070232815 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085189611 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069904197 seconds)
  done (took 1.010781221 seconds)
done (took 4.173088638 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.90023747 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236611949 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190512411 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.456774961 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149788174 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190613889 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662411161 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.308341894 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211915688 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101152329 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10637362 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.381074178 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108298128 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.65743594 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079204503 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107663493 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159068526 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.412958951 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082501718 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083924163 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105062539 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142344057 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102365612 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078775833 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169481073 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071552555 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149446202 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09624188 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069852917 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.246797792 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191024719 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667377424 seconds)
  done (took 10.418801211 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101174528 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118856011 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071059594 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141323601 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104362514 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087498031 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073376164 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084917732 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093407438 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160116466 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116309291 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10732155 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082788114 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072448294 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102687697 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212414863 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108354009 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086952346 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088575233 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077581356 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123404575 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084768445 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095231806 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080206385 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152702293 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196341653 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114407419 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113702788 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071461164 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081997299 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132586937 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143007658 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068641299 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083155269 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141191421 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112321972 seconds)
  done (took 4.607741011 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.030774848 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086960646 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161565127 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.109670937 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152773061 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069684774 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.12843177 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082401479 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099483917 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235974725 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.150649303 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.482555079 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129248561 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088702476 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069289608 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087904839 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068743371 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.518638342 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147141748 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10274267 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105357793 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09131942 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071777462 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359033048 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069339933 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068703807 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086647138 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061437273 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146765369 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070044998 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.219512174 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.091010589 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089372991 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103376698 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198452339 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096707983 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125458912 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06768141 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083280615 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.171336077 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076065887 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068101642 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107189681 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119670287 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.106391626 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085296436 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06960651 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183088446 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068897248 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10102439 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.870170854 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165776233 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079748359 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067803596 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291770313 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085772444 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085725769 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065872754 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280390111 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.15500197 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065933753 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085253102 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069144282 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067451519 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086594349 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368112116 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071527783 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.75896118 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072765167 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079266574 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086888803 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06859752 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090591348 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073729491 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102270293 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06835235 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068803536 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085260182 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06835661 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085598197 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086854444 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203403693 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084688483 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069191802 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066433913 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103862408 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112234244 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072220669 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067295168 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117887781 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109512184 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070016697 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069075805 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.121474049 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068108121 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103488073 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086218146 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115370674 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08323512 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066971724 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.123189264 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083131548 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099779805 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088352024 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115459826 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080324625 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085066864 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153924957 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067193285 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066326849 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08551209 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066813906 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084841413 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071634773 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097216025 seconds)
  done (took 21.117598668 seconds)
done (took 37.882163176 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.293507461 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092621287 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092545114 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076148889 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092580379 seconds)
  done (took 1.432692229 seconds)
done (took 2.192660207 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121251114 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117688127 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065097491 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114137437 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065288021 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118799206 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115958482 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081990441 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119648017 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0660778 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112890092 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065735876 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065230229 seconds)
  done (took 2.016396751 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084821107 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086732615 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086707399 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083595041 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080073234 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08495344 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082366586 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10677717 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08225453 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089160811 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066885231 seconds)
  done (took 1.690399407 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084168808 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086777801 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086445338 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082945457 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080282657 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0837695 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082590205 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104040519 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081807242 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091011257 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066185172 seconds)
  done (took 1.691005986 seconds)
done (took 6.147489692 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079739037 seconds)
  done (took 0.827936057 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.701495711 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.598199909 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085131192 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135842829 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.224091144 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.158391883 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.449689398 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113542763 seconds)
  done (took 10.390280524 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.105405308 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09032691 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071075196 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090280684 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070638717 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087104681 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074421348 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070898772 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08747226 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071904359 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088048951 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073287403 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086876044 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071890269 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071257597 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08812888 seconds)
  done (took 2.117020674 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095745553 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094839994 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091859818 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078481765 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090808654 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074345335 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09417419 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076811345 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088655967 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074340755 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09317661 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076882715 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089481594 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068427771 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091994831 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07945723 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088883989 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076751066 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09323984 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078140345 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093101293 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067526345 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089813315 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077713258 seconds)
  done (took 2.886898639 seconds)
done (took 16.977816525 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.132629295 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078169659 seconds)
  done (took 0.96949809 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083049257 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099615231 seconds)
  done (took 0.948599403 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084731095 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08297989 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091900331 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094602612 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068647902 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082663136 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104547913 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068772118 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083009366 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068474099 seconds)
  done (took 1.595789637 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070413187 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095117669 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072963117 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099087413 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076151817 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08254623 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075106848 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085788059 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08174509 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080161939 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074260659 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100170238 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074003144 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102955674 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074321942 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085620087 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089259635 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069840322 seconds)
  done (took 2.256845597 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068365558 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068937852 seconds)
  done (took 0.905047345 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069691542 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06688121 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083487725 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069185628 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080742289 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065372465 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.08089728 seconds)
  done (took 1.284305285 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.402455458 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111114705 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.244157399 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089202813 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104569634 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26601455 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084903569 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072896841 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089978474 seconds)
  done (took 2.271191886 seconds)
done (took 10.997951104 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081514144 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088563654 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111999422 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.420530639 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107891474 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068034025 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.133182101 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.223517066 seconds)
done (took 2.002279637 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126631788 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.619351946 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405081015 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214421555 seconds)
  done (took 2.012128603 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.374380758 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093248909 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07564983 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068593399 seconds)
  done (took 1.383992502 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068121526 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071338899 seconds)
  done (took 0.913048377 seconds)
done (took 5.209985866 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06890514 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067929988 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.10201762 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06683359 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084702644 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06571125 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066247591 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085810667 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068802344 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068384243 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082097065 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.071022276 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.082850647 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068477841 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066630312 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081244385 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068343421 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065762974 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082077004 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065761698 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068244874 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080795235 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066772951 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067918191 seconds)
  done (took 2.569281999 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088476844 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084999824 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074532634 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090459415 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073018852 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.091047027 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073673747 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068729356 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089419844 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071126139 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087778075 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072454801 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085995674 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072344259 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08557256 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072661159 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089034666 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072367135 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071261805 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088116323 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07396234 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084255229 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073040554 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089839536 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072935304 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088108439 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071069043 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085067861 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074036828 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088514832 seconds)
  done (took 3.180715017 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072214534 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065888765 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082692804 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072646283 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065690182 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082886222 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066527795 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082558282 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066946999 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06595129 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082970071 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06565123 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065850881 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082996706 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066861116 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084947483 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082404307 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066639741 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081960409 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067163425 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068944096 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081746501 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066642581 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081890727 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065806942 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066644498 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081770233 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065190361 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066145534 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082218603 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068650185 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069347816 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081059548 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072205678 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085289676 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06602518 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069588147 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081205535 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066278535 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065312066 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081022507 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066091979 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065516565 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087802041 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066755525 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084169336 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066420083 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06749426 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082338811 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068559052 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081445537 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066105357 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068351062 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082793851 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069434651 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065720654 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.0825335 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06544864 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08325526 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065967534 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066196966 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081045849 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06816973 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066985556 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097277493 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072990953 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083052316 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06718505 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06730432 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08475425 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067762401 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079487889 seconds)
  done (took 6.069969835 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119075454 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093771099 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084289589 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068045704 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081428616 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066859893 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070580737 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082094743 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068098204 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088528667 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066497002 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06819305 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084319327 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079030033 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083173405 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067905843 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08789957 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064593317 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066623927 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086174692 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067617662 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085448047 seconds)
  done (took 2.514575532 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187245044 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089059178 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111496079 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092636111 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087344529 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075950439 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072156042 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088070055 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072883397 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087842829 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071234761 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087527828 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07051433 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086717824 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071349788 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086594699 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072259307 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08636496 seconds)
  done (took 2.380644302 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079677236 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068378958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107834004 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068794184 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085613354 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070960563 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090096225 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077125345 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086496456 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069093435 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092553959 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070967898 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086691014 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068477437 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071712394 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084245038 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070965482 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084705721 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0778132 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089923323 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07432713 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09311204 seconds)
  done (took 2.554164557 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083455826 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069896626 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102569277 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087184223 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065281842 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067835205 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090954929 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.0687717 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090721538 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069778939 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068383339 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082821489 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073376692 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084081401 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073607719 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084794803 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070635932 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068357494 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086167752 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065143159 seconds)
  done (took 2.339354285 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089212647 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086062021 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069436003 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09337873 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069890207 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085877132 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07763873 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085376023 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069155703 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110767187 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069723287 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085947071 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079266029 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090655381 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069970651 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094148674 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078393313 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093857169 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069915615 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085745504 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.219360039 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070228366 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093667573 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069732909 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085383471 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070035046 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069663191 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090731047 seconds)
  done (took 3.21427975 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068325237 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068035828 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082270048 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06623295 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065804182 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082908744 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066538586 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06644278 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084767059 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065737796 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068534548 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084098772 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068895822 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083760804 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068252531 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068753574 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084338903 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06583097 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066413212 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082296652 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06797772 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068578561 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083982284 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066689541 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082518913 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068517421 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066478887 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082363804 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068291261 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06660688 seconds)
  done (took 2.970109843 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079027539 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092836106 seconds)
  done (took 0.965299454 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066389604 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083223596 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08283144 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073039754 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089052201 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069888015 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093278393 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073334013 seconds)
  done (took 1.421851134 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084833151 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080110055 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087531955 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080609416 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09661336 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085003942 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15611777 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086354489 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076464119 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083344453 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082180916 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068078248 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091494967 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069626474 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091257582 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074813752 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066556277 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091313659 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072164847 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083495738 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070935298 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0939947 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070266737 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066050051 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087310416 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077900104 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095779296 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070157723 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088150993 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075444846 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074243958 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079572177 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069030089 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086112524 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067241298 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094780391 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08431288 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087405106 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077148754 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07031922 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095662908 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063961681 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089511725 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074928799 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094255774 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06904812 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069330563 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080614719 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067072938 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087216446 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064695081 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068292995 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079755243 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075445719 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088514751 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07956791 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070725004 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087038338 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071703644 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088011993 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075626575 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087457554 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071149567 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069572458 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09432722 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073573091 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09442998 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064879102 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063274515 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083536232 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078644785 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107441894 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07517865 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085895146 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069896109 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083728234 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071821425 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070252553 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090869087 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075306264 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085755458 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074991797 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091913167 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068275955 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071600841 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093000824 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067638003 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086960588 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066901401 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100933193 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067680248 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06730805 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.0822522 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07968183 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087458372 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068811348 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082182114 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075467487 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0640369 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085816241 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071236815 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084802141 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.0792891 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090765838 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074904465 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093895944 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07716608 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068826957 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088415748 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066416273 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086972236 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067509989 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075302904 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079669552 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071568662 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085257034 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069394103 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076748512 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083773493 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069562399 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091655158 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075016885 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083796121 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065548927 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07155568 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085049812 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072880228 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092165824 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067583372 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064400992 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080805525 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072387771 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084956183 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071691406 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090431118 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071557581 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064194505 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083286458 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073260304 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094069571 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069246613 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069116714 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090871422 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070536404 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084525335 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07551465 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086946766 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067612828 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073926587 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085390621 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064760049 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08862786 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071742639 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067097781 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088216678 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072953449 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087656485 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069601823 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067759634 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090411882 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069557179 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084203011 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068410902 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083459732 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078563956 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070430353 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081306532 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066570245 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09225501 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066288659 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068828465 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084531019 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071387732 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085810215 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067642537 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068439084 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087268416 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080243929 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090290703 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070078855 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090360674 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080145024 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085581777 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07137445 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06904485 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086559121 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069913118 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09364879 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07470441 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0905382 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071046011 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065870485 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091162093 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076030003 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084445162 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066735687 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067293117 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088898621 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074656433 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088096181 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069963707 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083960948 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069406781 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072906803 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08792255 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069593538 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084376482 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073408904 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084908428 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075793872 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070149834 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094498437 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071582144 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081017921 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072830639 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084132334 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074573839 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064447159 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083333181 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068105171 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086354832 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068321167 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07200483 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080346952 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075797203 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093570016 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068686308 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068504603 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085434318 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075585211 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087347028 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071960542 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072165432 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091733482 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078455847 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084539984 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071991066 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095548882 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069035793 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063457782 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090350052 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06814651 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084732116 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.0684295 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066599133 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088284924 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077892785 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092195261 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063821258 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087439361 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06811809 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068020763 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081685439 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072958649 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088424126 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069340768 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075250379 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087285513 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069955842 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088914469 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068747632 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069430208 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087175991 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071783198 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086858422 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071844374 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068106985 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087958692 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068352989 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084040542 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070571721 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069194126 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085563575 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07510324 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085524251 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06898345 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070798235 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08695996 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070516875 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085622031 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068541525 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07158732 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086875209 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068906007 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088122546 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065194206 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075800087 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086362838 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076591186 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085601977 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066468367 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091001743 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071166221 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074202671 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086763462 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07009936 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086419851 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068768797 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070609467 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092585312 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066665106 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095551705 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076556133 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085899902 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071360004 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068167108 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087601457 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067627519 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086306576 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070131121 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068324968 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08569376 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072999107 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087880212 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06947251 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070374571 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087488301 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069162364 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087605666 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06437987 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068034235 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085499832 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069069491 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094948606 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070108434 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084739844 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068341592 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070545598 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085575381 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066551883 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093349412 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077151525 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08632122 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076147219 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067822621 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087129923 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079065917 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079978207 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068358166 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066437598 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084088192 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076163472 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087084913 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078612722 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085963365 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068968799 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066995153 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.0867575 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068091754 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063265504 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08410182 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07252299 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084737107 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068854397 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069198067 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088975931 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071546724 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095162561 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069046167 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086326972 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069316126 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065879098 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085009504 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067676871 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071065679 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087536625 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067171832 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084039073 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069702843 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069808714 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086807838 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069403891 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086793553 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075117329 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068505648 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088747645 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072799506 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08443367 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071635616 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08577736 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068579705 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067867949 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089028706 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072451081 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087679669 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077713451 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068599599 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086272365 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069304566 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084597159 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068719935 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06898124 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086503755 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06812931 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086824783 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077544676 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066693473 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089058343 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068445349 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08600997 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076157183 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086912934 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071533345 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075265274 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086412886 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070918325 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093362437 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073263675 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089708973 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070485232 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07043556 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091743434 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068580736 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092531322 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070099063 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069396365 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087515449 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067366593 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086548552 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069377041 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067841307 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092295996 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070521997 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08523899 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067719034 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06719684 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087328501 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072945418 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092751418 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071419882 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088811698 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065445969 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06586625 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087295375 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067667879 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069885084 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088774355 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074490543 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087658948 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069370589 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084704646 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077375502 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074214144 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08966871 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066914246 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089510224 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070195466 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070330277 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086915381 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069218993 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087733333 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072809724 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069826597 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085566805 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075719985 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.0891253 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070695971 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087130226 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070022897 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069529601 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081473287 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070283504 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087560161 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074470314 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070410706 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085828912 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079139319 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084404451 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068672052 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089339809 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068946666 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07286426 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081701207 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071127919 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087261365 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070377842 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064216219 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085870474 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067075137 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070473502 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085294714 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065861283 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096659958 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078057056 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089215668 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068026911 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067916034 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08218737 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065016708 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085385804 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070572125 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070888089 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097223186 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069208941 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085774394 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065672429 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068955745 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08895226 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072722979 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084189308 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064865607 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068197589 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089319306 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074804205 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084793385 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069308883 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0724933 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088391326 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067439548 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089123141 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066403537 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073093145 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099017156 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069589305 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086984747 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075470942 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093230861 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069607768 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064287144 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087901356 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072663725 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086473152 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070618577 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08749958 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083295866 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089801993 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068367111 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068281225 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088895158 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067978699 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094129216 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070178159 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069894933 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090870628 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070954103 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095604093 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07236502 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092945924 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072286125 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088897657 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068646044 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069245356 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085452685 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067295959 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07033042 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088131935 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074540101 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094051751 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067748786 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095973402 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078381045 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088353335 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065875901 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067973328 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08609329 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064900952 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087669343 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067742413 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067579906 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085308123 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068030309 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069150954 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091286533 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069486338 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086962055 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069576103 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063432856 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087937768 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070753922 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086699765 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065950198 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06929708 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08741537 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073231493 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090466517 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06684413 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070399782 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087968128 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070068422 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082381679 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075436484 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067893751 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088408038 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068659418 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087454676 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071237481 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071667557 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091501353 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070098768 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088912168 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078357206 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088896053 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067195984 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066554385 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092004155 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067829175 seconds)
  done (took 47.284680867 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110093553 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083483877 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065235677 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08215152 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078071574 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084225542 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06507204 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065557005 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083335754 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068896541 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082261994 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06466661 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091942886 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089128617 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095035584 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069195682 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082417408 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065905075 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08175295 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066013039 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091623821 seconds)
  done (took 2.507288776 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077569504 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091669531 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075886189 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09730477 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070860616 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092139259 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076274423 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091400536 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097500226 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069572615 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096877294 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073943183 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088252685 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070351714 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087852707 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074551578 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097266278 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071007927 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.09136066 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076688828 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091445867 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07700624 seconds)
  done (took 2.673688352 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069713768 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068327421 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087772777 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064527958 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068420767 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081131346 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072543586 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.08445394 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072387506 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.075592211 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08493108 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067696302 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087779988 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063565318 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067949293 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08458852 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133275021 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07253043 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067406584 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087647721 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064344698 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088281755 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064703009 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064318419 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085154019 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073357579 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087558669 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067079795 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067893947 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084635764 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069009709 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08426641 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070252047 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068258487 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084941319 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06719113 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067599344 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086197932 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065267564 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084958669 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069351257 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065237754 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08768274 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069839894 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06659746 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084441439 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070025754 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086062859 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064704299 seconds)
  done (took 4.564422937 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087955036 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.132350311 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089636866 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092687289 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103817903 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095042204 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073500834 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113140548 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066009601 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086769043 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085446049 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105277258 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088517194 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074286292 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093752583 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069037758 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069341932 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086842312 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073076484 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087365804 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073451936 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093697383 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101974175 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082500472 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090896237 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069159997 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086808573 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073494988 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099784337 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074613525 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091556204 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074959319 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102991816 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074520426 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086664132 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071152582 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.104755612 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086819472 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071851191 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066494282 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089249777 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07327151 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093385196 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08538396 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088104096 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07363466 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086602036 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066602905 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10100221 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070625577 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095493739 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101666104 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073531814 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087260566 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074232538 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102163874 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069936501 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085446177 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072294627 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100636597 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067234443 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091194088 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084006273 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089430199 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076736677 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102396398 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074350904 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091458671 seconds)
  done (took 6.785185128 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077501933 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093912309 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085302424 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102783334 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094237686 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076334026 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09330316 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076447711 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093391812 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080546878 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094565417 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115153495 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071269576 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096243057 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075641178 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09414912 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076874059 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094217703 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07550423 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095071358 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094363427 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084290478 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093922847 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103473536 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106520768 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089300517 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076212953 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093130941 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084275855 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094311083 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105258221 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075526878 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09345821 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102438051 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087235344 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093105626 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068094192 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09278583 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075940394 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09316949 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071444996 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101956124 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075287196 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089025136 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07540367 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094032045 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101913794 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08745172 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09607278 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09870131 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076295532 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102459058 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075204617 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094932422 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101470965 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109037124 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102098731 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101618258 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075303611 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102523288 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101727347 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109403887 seconds)
  done (took 6.461105872 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090518096 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096094136 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098804703 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064518925 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066625484 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091559874 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068055121 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084932499 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077899802 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096249506 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080588038 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091225532 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075832165 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09778917 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090555824 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076456732 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091298914 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073601185 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095912487 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073288333 seconds)
  done (took 2.532220525 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077704554 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104974868 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069296957 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074606967 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091024024 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074732069 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089692781 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072287882 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088445032 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072559853 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09745649 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079478884 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088254892 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075223995 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096591701 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074589618 seconds)
  done (took 2.181264258 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081629538 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097941564 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083834174 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087669824 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067689109 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084176356 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068858496 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064352575 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.0839812 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.0833916 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087867356 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071594242 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087650477 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067531462 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066082433 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090522618 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065026336 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085442758 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068728662 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101625014 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080264697 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085938575 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07013924 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.07067253 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088382489 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073867392 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087820356 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066666103 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085948247 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069461997 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087927356 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076914981 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08429662 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068136088 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068051703 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084848224 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068612194 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087154934 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071523358 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06799803 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085953692 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069024564 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086779846 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070038375 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083089398 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069160784 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065903026 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093867556 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067020855 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087368273 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068824624 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089507906 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070522995 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079534186 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091549616 seconds)
  done (took 5.17573127 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082785285 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072204247 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083466455 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067082877 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090611796 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070405806 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072261551 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089780656 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070667843 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085508205 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070965151 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089844831 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071267402 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072457783 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089153767 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072880009 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083756759 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071152831 seconds)
  done (took 2.265087053 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074726346 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068933545 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094720885 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069438099 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087458064 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071807565 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065059471 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086430642 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068228454 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087944986 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069125802 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071222456 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086876686 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071812922 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086888885 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069674768 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070744428 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086151592 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06953795 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08324689 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071726727 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067816446 seconds)
  done (took 2.540010317 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074017528 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095889119 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16506831 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109387113 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.086046664 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.10063176 seconds)
  done (took 1.492915732 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092943265 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100647274 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069958555 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109256024 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077866297 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089920528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071708062 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089799851 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080495739 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103537858 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070935793 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098927093 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098857917 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08025916 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09615357 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077398026 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089671292 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071134411 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087898273 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108217776 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071086513 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098163943 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071528962 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089538854 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07167975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097879995 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079889143 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10467408 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088966384 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080315151 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095841466 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071448081 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098753602 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103434643 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073309601 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098679735 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071598801 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108690942 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076766494 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098662468 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072193266 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096680865 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098872322 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075877297 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098035332 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071096787 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094673294 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071022541 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090929739 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115539898 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076916144 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098810189 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095680549 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080531502 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098227981 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11551662 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085456615 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099060409 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09640071 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084849719 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097831723 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076971382 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098951437 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103597703 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077414148 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098666579 seconds)
  done (took 6.75172427 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088457905 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107829719 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072034092 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103960355 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098643662 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071092916 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090085771 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071674714 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089706824 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07155036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130972704 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071514788 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09934746 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098652821 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07124204 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090155285 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071689904 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097997713 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070676888 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114461462 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090177867 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080183881 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09806613 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098713292 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084902167 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095870785 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071211676 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090242802 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071872749 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09017948 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076452189 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090259548 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098589169 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070627747 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099210469 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071628885 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090152733 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076557789 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089842853 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077331344 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099533152 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108173492 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072184467 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090202745 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085105236 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090186974 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071688868 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089755685 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071440386 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089841936 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084895667 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105380869 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104166079 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098002783 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072408596 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089857148 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071878678 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089976154 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071918672 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095652084 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079315748 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090096135 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116013538 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071979764 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09005081 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080190202 seconds)
  done (took 6.643207208 seconds)
done (took 130.811786505 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212916173 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198857941 seconds)
  done (took 1.276918667 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071596381 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097578913 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099779686 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130206211 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088387116 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102575269 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12032208 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081307022 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068666682 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088402135 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069809463 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089648079 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133924028 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069357052 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087590476 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070939683 seconds)
  done (took 2.346663541 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104981744 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.198054671 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110908659 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068040964 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100857949 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08049857 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086734335 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079123746 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096830972 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067926933 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079967443 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097808438 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067540833 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097506513 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076421784 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099877849 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067933094 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098839265 seconds)
  done (took 2.555960297 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105648588 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149114428 seconds)
  done (took 1.128035349 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205736762 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124431888 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203908234 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.416539355 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.207539997 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.283373672 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.17511089 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.172771538 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.177352988 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.171241117 seconds)
  done (took 3.011419826 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101089165 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172415355 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31188561 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138748388 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087720766 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.117829389 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139561916 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.091536838 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.10310498 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101833918 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08309308 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099016621 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1000031 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097078882 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076987253 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09929319 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122163049 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076973623 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078167436 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097948814 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119739478 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069313661 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077085531 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095483752 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079791653 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098953851 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068492017 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088331546 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078044606 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09690167 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081237664 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115453887 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099240181 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132479776 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083622921 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.134185647 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099845895 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07473184 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096590072 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075620755 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099161808 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079937205 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105390442 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079138406 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087920446 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080185539 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087136707 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068770193 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100305726 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079596153 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.101072709 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081203434 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.132412489 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098449715 seconds)
  done (took 6.316379052 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.753831806 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112810007 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095560085 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.80958903 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091743483 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107696532 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.71794557 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120045821 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.212013983 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.770644531 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.091241 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101387867 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.182815601 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.215863348 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.909000345 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.283394344 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.640200051 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10701398 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111590568 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.134653878 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14047563 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.178254624 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.152036054 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43952817 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077623002 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094067905 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138204447 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075924442 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.140457719 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107531473 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095203819 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155922196 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.228690186 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.158416872 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098548354 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072256617 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092201459 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.149458894 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.221697947 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19451551 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159945708 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070055276 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092178449 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141398398 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132101145 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069994138 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141209234 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.154422346 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170909884 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07598809 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07653489 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.163438263 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140429799 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.145039349 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102753036 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.267475109 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.286523618 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071491252 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121188333 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105161666 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218679963 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106080021 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20227755 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142428301 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.170147599 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091990518 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.741133181 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.149599604 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093360188 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077470867 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120072868 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075162245 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.160710927 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.126782136 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.371891797 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164064614 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075915058 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071072522 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231696858 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085579074 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093123844 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142913691 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077380217 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124211996 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145349826 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164761924 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.148523236 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.209765206 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143347936 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141298186 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096560849 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125181241 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.078063769 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.193041143 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196110907 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143400073 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.188001412 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140987915 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16379057 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.149279895 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078190595 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.152630138 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120536325 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101787703 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140376856 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192229141 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.103370334 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107075714 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07504926 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.1618097 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.128009175 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087909743 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140783905 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.150154524 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479961868 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.150058465 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069632258 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108786838 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142868077 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.143685532 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097441763 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214920368 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125310234 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.148894824 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122406841 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090523454 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100426137 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162557019 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08040961 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123989629 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139106906 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099078814 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.215634067 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.170356485 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100166588 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195007725 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.162962542 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097544816 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.150343312 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120899315 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147558991 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079936022 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139096002 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098843362 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756962538 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.165933158 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123114985 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076509494 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179249318 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072376226 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105073542 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085293842 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09139191 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.745204054 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108937381 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081418664 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105982885 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075091472 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123366715 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.157602964 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076771462 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.142083784 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203110569 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077226327 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120286281 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10573036 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.142924007 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077331989 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107198946 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105898429 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085730121 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124787939 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09525439 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086751487 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148642737 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.142375087 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.19554226 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.542365796 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094154193 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08426578 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203538671 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093109939 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.245235137 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137644354 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.200188525 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142378702 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102251795 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.267463755 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.144176947 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.179714978 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109558661 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154634975 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070242632 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.15868071 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.146357246 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073015156 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098246555 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.142885414 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146434066 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143590575 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.942758782 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07245483 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20528916 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09149613 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.153067874 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077322245 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099775109 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.263505652 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073776163 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147227868 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143980603 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09642022 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084565998 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.705562571 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085910494 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.162091049 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07663584 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.195276858 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.14547997 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138633421 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139932878 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097509158 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.142165044 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.19033811 seconds)
  done (took 40.819829589 seconds)
done (took 58.329449831 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.268149192 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.192156229 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.244252289 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145352979 seconds)
  done (took 1.823843533 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145430686 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107046242 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119653196 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087684159 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104923102 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088010544 seconds)
  done (took 1.551659998 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.405119843 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266397527 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232186886 seconds)
  done (took 1.80250966 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264466548 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.215285289 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.452494479 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300729398 seconds)
  done (took 2.262015774 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.179145505 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115503417 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069567111 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.108977446 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16214591 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.25556146 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.131083963 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.190730395 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082106788 seconds)
  done (took 2.243393705 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.200304791 seconds)
done (took 10.787610026 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.113442026 seconds)
    (2/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.116923552 seconds)
    (3/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.101474086 seconds)
    (4/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076565852 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.148991543 seconds)
    (6/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094264736 seconds)
    (7/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.265746331 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08419239 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103500759 seconds)
    (10/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.075996529 seconds)
    (11/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.107126546 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.225945429 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076573964 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.206836195 seconds)
    (15/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.252209886 seconds)
    (16/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.154541934 seconds)
    (17/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135742848 seconds)
    (18/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081103937 seconds)
    (19/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097863493 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.10658041 seconds)
    (21/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.20819034 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.102650778 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.201560764 seconds)
    (24/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.064890633 seconds)
    (25/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.080915437 seconds)
    (26/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.232094305 seconds)
    (27/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.244998924 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118655678 seconds)
    (29/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.180189341 seconds)
    (30/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079921122 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.223542917 seconds)
    (32/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052726955 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.195202284 seconds)
    (34/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096887999 seconds)
    (35/309) benchmarking ("sort", Float32, false)...
    done (took 0.130174196 seconds)
    (36/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097794155 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076373279 seconds)
    (38/309) benchmarking ("sort", BigInt, false)...
    done (took 0.217096042 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088879859 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.144702158 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120018086 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075054403 seconds)
    (43/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.101084527 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.162974633 seconds)
    (45/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.233587107 seconds)
    (46/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.095151335 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.145254656 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.099344533 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.12005266 seconds)
    (50/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.179273791 seconds)
    (51/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110503981 seconds)
    (52/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.17054763 seconds)
    (53/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077258691 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.21452318 seconds)
    (55/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085797975 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097752698 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095203222 seconds)
    (58/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.210819282 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.210952642 seconds)
    (60/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.124993162 seconds)
    (61/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.209331303 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082974217 seconds)
    (63/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.138790204 seconds)
    (64/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.102254304 seconds)
    (65/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.158716335 seconds)
    (66/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.20284714 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09397594 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070156551 seconds)
    (69/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077650102 seconds)
    (70/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075779113 seconds)
    (71/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054724839 seconds)
    (72/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.098881559 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068698686 seconds)
    (74/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.132470506 seconds)
    (75/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053611213 seconds)
    (76/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077565508 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169786103 seconds)
    (78/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.100110814 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114083055 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075030097 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.134395976 seconds)
    (82/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076110593 seconds)
    (83/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.137520511 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069314475 seconds)
    (85/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161104528 seconds)
    (86/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.173447037 seconds)
    (87/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075964408 seconds)
    (88/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.115833539 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.136685079 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116413438 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.069332322 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.102081929 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054027923 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096085493 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119968164 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073170722 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.117476032 seconds)
    (98/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078961241 seconds)
    (99/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.076395876 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174582454 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.167370942 seconds)
    (102/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068860676 seconds)
    (103/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.098287529 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079231418 seconds)
    (105/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077847547 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.181128403 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195312094 seconds)
    (108/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090818018 seconds)
    (109/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064610284 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075099206 seconds)
    (111/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.186669007 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.160525249 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055669393 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.079763509 seconds)
    (115/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.102827121 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076324267 seconds)
    (117/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.160757722 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.130155181 seconds)
    (119/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.087012882 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148823433 seconds)
    (121/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091004335 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054294869 seconds)
    (123/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.187823947 seconds)
    (124/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076681838 seconds)
    (125/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.123740841 seconds)
    (126/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053850933 seconds)
    (127/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.219395443 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.161214709 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077566533 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.07496981 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.127906908 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074792811 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.115539029 seconds)
    (134/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054062966 seconds)
    (135/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100016358 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091354476 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09560537 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10567735 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.115873766 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068308456 seconds)
    (141/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063275998 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089081442 seconds)
    (143/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071016926 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053554629 seconds)
    (145/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.076687919 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054402308 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076111685 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089672989 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.078320864 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.095922686 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100843145 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088868677 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076252113 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.139636875 seconds)
    (155/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.111713968 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121500372 seconds)
    (157/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094619891 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.099527428 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054113443 seconds)
    (160/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.162246389 seconds)
    (161/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073008569 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194325807 seconds)
    (163/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055752259 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115422283 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090517644 seconds)
    (166/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.120837417 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144390043 seconds)
    (168/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.166922825 seconds)
    (169/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063317019 seconds)
    (170/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.077631604 seconds)
    (171/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05379538 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068712421 seconds)
    (173/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.097992461 seconds)
    (174/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070910018 seconds)
    (175/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.163584789 seconds)
    (176/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.082923943 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068204357 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076073102 seconds)
    (179/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.153485728 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.076275753 seconds)
    (181/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174978476 seconds)
    (182/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.090939539 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054331941 seconds)
    (184/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.093840692 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053741948 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091246759 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077575659 seconds)
    (188/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084310111 seconds)
    (189/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.123180041 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07566318 seconds)
    (191/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.07137222 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099045764 seconds)
    (193/309) benchmarking ("sort", Int8, false)...
    done (took 0.166572387 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151299518 seconds)
    (195/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095589675 seconds)
    (196/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054847222 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068019389 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160881652 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05420732 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.161225865 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105992475 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089728847 seconds)
    (203/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.324034712 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.103742858 seconds)
    (205/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05434143 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076668117 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111087162 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.19503836 seconds)
    (209/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06852655 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069101775 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.09079765 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074674419 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.070888056 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.076784424 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077629938 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.174627371 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075928484 seconds)
    (218/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075202239 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.116865422 seconds)
    (220/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067432852 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.07467333 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057066696 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148105785 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068085037 seconds)
    (225/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169868623 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073804474 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06777678 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077660684 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056164808 seconds)
    (230/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054750192 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089240723 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053859627 seconds)
    (233/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053991151 seconds)
    (234/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.090170764 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053838631 seconds)
    (236/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055091887 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093887959 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067854932 seconds)
    (239/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076167154 seconds)
    (240/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09569307 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142481765 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076682143 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068655608 seconds)
    (244/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062801902 seconds)
    (245/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.075813843 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056150472 seconds)
    (247/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064730426 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.14245622 seconds)
    (249/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079756142 seconds)
    (250/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132459377 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068729217 seconds)
    (252/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097165192 seconds)
    (253/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054898955 seconds)
    (254/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081114876 seconds)
    (255/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105627623 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091987704 seconds)
    (257/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07699087 seconds)
    (258/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065648982 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06818728 seconds)
    (260/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.092336468 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.133239511 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.118859717 seconds)
    (263/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073152058 seconds)
    (264/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053697555 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096622367 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068321717 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090390544 seconds)
    (268/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06770447 seconds)
    (269/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068675648 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111810908 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076993281 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09805586 seconds)
    (273/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053999162 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.159351329 seconds)
    (275/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109329853 seconds)
    (276/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054084082 seconds)
    (277/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075664501 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094785332 seconds)
    (279/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.099161321 seconds)
    (280/309) benchmarking ("sort", Float64, false)...
    done (took 0.128359954 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090708823 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07611042 seconds)
    (283/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070920445 seconds)
    (284/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.086147554 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076106043 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068141183 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089174878 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054431853 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080512783 seconds)
    (290/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09205114 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067405143 seconds)
    (292/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.0667689 seconds)
    (293/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114446787 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123956039 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076246857 seconds)
    (296/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073426342 seconds)
    (297/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.094180166 seconds)
    (298/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055292523 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084617275 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096242542 seconds)
    (301/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075034076 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104305706 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069809531 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073633822 seconds)
    (305/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076588953 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.204505155 seconds)
    (307/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054636423 seconds)
    (308/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092839789 seconds)
    (309/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.092645318 seconds)
  done (took 33.773902188 seconds)
done (took 34.687792706 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08343678 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115405379 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077447818 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117855879 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083597468 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101633302 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075858656 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103766787 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083630172 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106592682 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081987875 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056561695 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098819552 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077529861 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098676248 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094725473 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102326963 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074913758 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076152237 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089901754 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076348863 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089644613 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072752098 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057320801 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.10186164 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075219383 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096403285 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076814885 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067486952 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089842806 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071545219 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074560021 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08927635 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081328157 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095824321 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07602021 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077340973 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100824166 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070662798 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089360792 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075752611 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067505464 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095714285 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076228759 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073472461 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095175159 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07614492 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103826118 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093815789 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092062208 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07625525 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101119292 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07868248 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074950889 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094023459 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075808141 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094440915 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094507422 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098301135 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070578438 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076183609 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098535447 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074282749 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097957347 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075815648 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077422789 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099905684 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073777519 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098875333 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073809006 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067330743 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097605294 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071809362 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066986539 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100666385 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079456241 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088709541 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073806922 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074739196 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096562302 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068119417 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091240698 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070126545 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074495095 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091052142 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057117655 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071896655 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096022179 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067474707 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076674883 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096215828 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075160326 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.092210396 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079141958 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068070934 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095212045 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068611732 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067880686 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092149726 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073067425 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067475774 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092307515 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077483531 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091095879 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074226247 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082782825 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089862121 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074924441 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089887795 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067809348 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083874508 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099883502 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068039912 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092830685 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067806866 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075549435 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089252668 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067609671 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067861612 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089777019 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073930624 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067739614 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092725501 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076030548 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103896709 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068237218 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071967388 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09197404 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068037225 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073390011 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089715607 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068313809 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070161574 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088199591 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070936021 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090060711 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075477637 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070388047 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098374965 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070291543 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098686382 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072940074 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073865 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095167419 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067968764 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061077241 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091964684 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069740678 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071196797 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089816077 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070785287 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067395392 seconds)
done (took 13.463155636 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068556261 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169943416 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.12854237 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09787105 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112154023 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069153097 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102544363 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105921385 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092799083 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.129189795 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08973828 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110608815 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116940118 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090279743 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068553278 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072715761 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.0922399 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090290161 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126920101 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.11042551 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11935162 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089844998 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122683529 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093261723 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.114191846 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09605506 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090784746 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072719758 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071628994 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127176901 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.111093822 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07239894 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069029359 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12470257 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119370627 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088475135 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090556825 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087608175 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090272937 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06856012 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.1156577 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103441644 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106618534 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083976577 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098033259 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072389379 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091853382 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088851568 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115018443 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083354699 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112918477 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135881745 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071647714 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106326577 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067823802 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112400509 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106609872 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070764634 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069305818 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092645844 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06846255 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071890386 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11349219 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117785972 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073158571 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106803395 seconds)
  done (took 7.384823911 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086757203 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.11840476 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085909433 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109322366 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.0683504 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069091971 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091635196 seconds)
  done (took 1.600879054 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069394485 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091466229 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114198988 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09166977 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110087103 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089231414 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101857933 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069471579 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109718866 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070236391 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090586572 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129749932 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070583229 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098887946 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092990065 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091873966 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092785571 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091535617 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072416479 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115196137 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072539015 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08924232 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094011956 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069277779 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107492693 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068995175 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139831774 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074915096 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07085343 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09559489 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067805221 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141981925 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105923367 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080373216 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069939964 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107041052 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084348492 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0897624 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086132946 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09743467 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084007411 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070252211 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093498752 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068416806 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073876 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102478159 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070735961 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092832631 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072223886 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089890142 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093033252 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083936053 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092081385 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073900078 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070377291 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097694341 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07984118 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093079523 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090169935 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071436879 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109412655 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085449153 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.107038733 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086060222 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09475925 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084700161 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10642648 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072400523 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071240161 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095582252 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086419017 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090090099 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070893104 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08002693 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093923432 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092890629 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115797266 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071525803 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103036587 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070252989 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070019198 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092409823 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092921153 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095998563 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07031735 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073671636 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095903132 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067238081 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068570112 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095817327 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068377194 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070592086 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095888203 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070654598 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094619274 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086671544 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069968508 seconds)
  done (took 9.483884262 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070765985 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070809767 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09391691 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070439561 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070897953 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092715999 seconds)
  done (took 1.455748783 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101194001 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.09424747 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083965459 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097761308 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108696666 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107217444 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085431271 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10811671 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08768447 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10498094 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085217584 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108217072 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090951013 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098773225 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085064561 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097963628 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084953153 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102427231 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081599138 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099716275 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090650775 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.09940535 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076543944 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085737507 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09655021 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075250044 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102645319 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082242345 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105166722 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085324594 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09857232 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074157873 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096527871 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085741993 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107647661 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075079988 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098250863 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074086588 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102672851 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073620058 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109103554 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075825303 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.08056757 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09803928 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.108913396 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074265479 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07435177 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102349151 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08493454 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097591149 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074385362 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097629671 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074005335 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097694004 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073970196 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107798639 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074565529 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108262449 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076085757 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074265741 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095462154 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073696189 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107857081 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074319709 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106084636 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075119562 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097009061 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07664197 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099050301 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075090836 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074487772 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095829451 seconds)
  done (took 7.498467145 seconds)
done (took 28.394649709 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.650674413 seconds)
  done (took 1.631367091 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.804757239 seconds)
  done (took 1.787359788 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.72770192 seconds)
  done (took 15.718551513 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.617370213 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.761385278 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.818491714 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161519933 seconds)
  done (took 3.343363745 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.889874322 seconds)
  done (took 1.895011323 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23702228 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226629469 seconds)
  done (took 1.456099061 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.737891839 seconds)
  done (took 1.734899995 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.292180587 seconds)
  done (took 2.280525662 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323168143 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183755072 seconds)
  done (took 1.505415942 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.52608957 seconds)
  done (took 1.523530595 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.580339035 seconds)
  done (took 7.583506542 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232171978 seconds)
  done (took 1.246780926 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270084484 seconds)
  done (took 1.274169002 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.140393868 seconds)
  done (took 4.142828551 seconds)
done (took 48.112741802 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079843246 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083498726 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105974494 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081464512 seconds)
  done (took 1.347787284 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079546475 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07609782 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102934216 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075399523 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103068533 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076316211 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100300671 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079493778 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075444864 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099224272 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076312723 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098690307 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078132657 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100581943 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072730744 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078611069 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102113492 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076029809 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101582347 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076540993 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073075536 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100828713 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079448927 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098438522 seconds)
  done (took 3.09025443 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079516346 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075866459 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099558908 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075059205 seconds)
  done (took 1.335719577 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079397129 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118212237 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09145301 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079780247 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118741587 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112597228 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072574698 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.0739274 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09849335 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080176592 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09443069 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101653207 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113854069 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080040807 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105308917 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069269551 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072135329 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113884029 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080461086 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103302875 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07321488 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081884416 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093948961 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09308927 seconds)
  done (took 3.212775103 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079150257 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106021209 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104722358 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092007159 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.118090373 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068728032 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.102171996 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093941753 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.151194322 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068292852 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.097390201 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06883686 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098885204 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067209473 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080080621 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.13553453 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114695607 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.094894553 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099435478 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.092550461 seconds)
  done (took 2.948505203 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076429618 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072681703 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091422002 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071003402 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078866245 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098658271 seconds)
  done (took 1.499670577 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070239755 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069885153 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092806602 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069430081 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.0741763 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09332411 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068657856 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070038073 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093045148 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070286705 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06935443 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09136801 seconds)
  done (took 1.944191312 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.386607477 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093916656 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071343428 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090260906 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073587963 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092798932 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082665965 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070377011 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117563144 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068788649 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093501438 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070892749 seconds)
  done (took 2.327610436 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264084496 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080083118 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.327314359 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170645889 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142656741 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157516587 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106838201 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142974672 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201585963 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141054999 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204612174 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227569557 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136693069 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171292288 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117999053 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.109816938 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213907962 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225275647 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108133953 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22800338 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20868712 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159472092 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182748639 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131090486 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13816482 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153533344 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074536636 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107907108 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23611641 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162793261 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204304531 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141378965 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100026671 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233767472 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227386003 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198474367 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164932711 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087670132 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158788675 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166751088 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257198552 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115725256 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195717243 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135699999 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108734308 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175312341 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148672047 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.14843656 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139946846 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117447853 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175479408 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244427634 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.167589144 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114082126 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139784767 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143866562 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14683004 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105015332 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244337186 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220529112 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160737701 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098393649 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099749308 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213606191 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161981216 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144695687 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.156495136 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121682395 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169866745 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213431892 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14781542 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176269739 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183127414 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091312793 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149726155 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197469065 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159060549 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206550999 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180308194 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075734803 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156313169 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132305733 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084656549 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.171461946 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079203694 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23622548 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127213276 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.141510519 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140737602 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138512204 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113895429 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223425553 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204216406 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107202514 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093479582 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133605063 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.152111999 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179433005 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117003117 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137188258 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149787282 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082357414 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168838502 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103199537 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155764436 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081806927 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17949856 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165570079 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079484362 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15805174 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130728158 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130743626 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167288307 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221760841 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093863183 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109718905 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204114439 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182555908 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109916743 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203311953 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192132339 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.129395524 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131998164 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207768655 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246401339 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092486396 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225946235 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137560383 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086719634 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.116075687 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157677562 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142433408 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151284177 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086246132 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179323911 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203349695 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10268313 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099073089 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192809644 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084402024 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11025409 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142054029 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130109732 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098010449 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130035553 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136494494 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171759032 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156930976 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138000139 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156637302 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127641634 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227897706 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117390065 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.108349339 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132070969 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097231189 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166829539 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193808622 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107752191 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228624538 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158449194 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13382549 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150118074 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085950234 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17210221 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106855226 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074051116 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201034289 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141485636 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114202028 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211978012 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133544414 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156994801 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15472351 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165650119 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161728313 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163673168 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135064176 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115716582 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141898785 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15642779 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.10161579 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098391737 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111008142 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133080226 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099597826 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111197659 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173200479 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182948544 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101221215 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142427414 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126917322 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18200737 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105311277 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161662996 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.150612963 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124343607 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187479089 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214469855 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168409415 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128791233 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178256826 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09895914 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076721699 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119540333 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159363933 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112896582 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085977823 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148470528 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207566713 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160617491 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170375459 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141311666 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152986762 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19048409 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09949376 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121093397 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206812646 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156644835 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157120392 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093767581 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127910462 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178130292 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137222687 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247007111 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145808419 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153682483 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209556727 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.133328076 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083909866 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134907754 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17016035 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136278962 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210133031 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129315005 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092348635 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13904296 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110751816 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134249626 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1596496 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151881068 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166752906 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.146858514 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1900131 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080612437 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148559404 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1548252 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154317212 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.09253736 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150843228 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197602562 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123577264 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149412634 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213744117 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08328168 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.154471162 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241392029 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203702957 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087980574 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146205651 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153381665 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15975068 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147895083 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171723922 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164725332 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16764659 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115903877 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113123911 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116288095 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101144077 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136327541 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.12473378 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142011777 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147624872 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124335805 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163574707 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142671001 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141078085 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150852556 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101895845 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120475942 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128458628 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21142065 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153037679 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236378866 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.130955787 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.209768667 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202922255 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10434154 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082514093 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109522222 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172971278 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113798338 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165596614 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125919598 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108568371 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158730721 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201729969 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099601569 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097010955 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140647198 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167804056 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141561047 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127509338 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1097683 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224838924 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133134511 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083239375 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156380385 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134269629 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132951305 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238626346 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064654616 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126436811 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078514973 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109430099 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160205778 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191124308 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.111256456 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155402774 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152371544 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151698275 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161572606 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131587484 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102104179 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142128309 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20839267 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160133835 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118734248 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11688114 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186752748 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191561917 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136097783 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.125309541 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236064778 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1895497 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224978703 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.119066612 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146560804 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147495051 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113582543 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19970268 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114813632 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203319369 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11191377 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168820005 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134193247 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123408551 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161589539 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.143604942 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091880003 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207289252 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150130977 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111396457 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08301478 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149191231 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153822407 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137029766 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104022915 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171860259 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075217065 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195269422 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204651651 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11068411 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136620202 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100221287 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112076724 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140070158 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133866645 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116232865 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.122257754 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233043241 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121173509 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184766154 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201326292 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145730264 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169720687 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129681663 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666327134 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081380522 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216301951 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152200735 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241995107 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128200048 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150879073 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14116357 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154952148 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177423029 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134071471 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.207061078 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165556776 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152623683 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10826033 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134479268 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14235885 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094063948 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136769943 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146082474 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148509812 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131100669 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151695876 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158532298 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.11204466 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099043633 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219670367 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148324297 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175892674 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199670905 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087929848 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150650246 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200046496 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083615626 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180217222 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192008765 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138696005 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128212519 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084579482 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136567545 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235482148 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076276364 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223913336 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155540089 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140868622 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145837227 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150296303 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192423367 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139147221 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158642897 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125529843 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.144121478 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147716872 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088127171 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107411659 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136800394 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144027458 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103586854 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132384856 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.147188803 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18713763 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.100856148 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099847956 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132180258 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176369212 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239679626 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.118396537 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087045768 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175376508 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14354485 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148995471 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157152747 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08464651 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113286558 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085608045 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.139939367 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139936685 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146899724 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10710507 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141281603 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230418336 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114466601 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227664911 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125453408 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137833805 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072375024 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109372613 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127245697 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101807528 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138793789 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128556971 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237710992 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.101377728 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120278741 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123408261 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076079278 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113436619 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161394424 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142500321 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153846895 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128496784 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066636647 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14050983 seconds)
  done (took 72.53723162 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137570595 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105368591 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.11874416 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.174300484 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.147294664 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239690755 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.18185112 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.225132974 seconds)
  done (took 2.422111984 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070806234 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118904874 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104642931 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.118304901 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091596226 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070661947 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.296932219 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112113457 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068905515 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.116882694 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.121871041 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093235169 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.473910264 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068170862 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096251515 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086479172 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069368166 seconds)
  done (took 3.262343199 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.43162974 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.640050967 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.453050452 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076217557 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.936402874 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091255967 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.459567249 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.164396875 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073947179 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.439503011 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.748172056 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132746116 seconds)
  done (took 17.740414407 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07705418 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071103289 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11170666 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085555482 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.10032357 seconds)
  done (took 1.547468418 seconds)
done (took 116.21533984 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082024227 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.345872947 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055341822 seconds)
  done (took 1.528556484 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084454261 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086331902 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112741541 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084759029 seconds)
  done (took 1.472337254 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076295197 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078635605 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112088295 seconds)
  done (took 1.369202998 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.281292848 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169199527 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090559077 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084798724 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080013616 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106277782 seconds)
  done (took 1.373173434 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074132031 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076936299 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101091695 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080089491 seconds)
  done (took 1.42727295 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078502058 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054103656 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056852634 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083852138 seconds)
  done (took 1.374803747 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092085427 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108808141 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082601544 seconds)
  done (took 1.382449411 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109190906 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.115125913 seconds)
  done (took 1.327168443 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083557513 seconds)
  done (took 1.181050276 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094340895 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.142857804 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158428594 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.1390871 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167678044 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138249066 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088905128 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116658563 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105926705 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089989613 seconds)
  done (took 2.345072971 seconds)
done (took 16.497665026 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079908416 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.389294222 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361783208 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11877382 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66916522 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358263588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006306371 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120916158 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122763688 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096030515 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085657082 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676535375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.971423951 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.351382862 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.957150554 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322033094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676138485 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070105309 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069652296 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095832985 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966687961 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095443633 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069415012 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070419283 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675576034 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373512558 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096072081 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322001765 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06945173 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09701741 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356539719 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096547268 seconds)
  done (took 15.983310864 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072009188 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145908393 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076051987 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085715173 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098655439 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071607693 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100211894 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07121994 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154614628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069269422 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112996135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070242318 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10012607 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070632961 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088962276 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096709885 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071181961 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070380638 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096419084 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070726664 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11517822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0697427 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070266995 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096436084 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069890005 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108845914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070889403 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07004759 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096331905 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071845731 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099117335 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070854357 seconds)
  done (took 3.908035279 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118129485 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.155623777 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075717109 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131239301 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116124213 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099004531 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172888022 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095452754 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158158226 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070070611 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113064189 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069976215 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12956069 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071305144 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116224348 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070752137 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071765466 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097144657 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070853545 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096442494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089775263 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069718136 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096813402 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070216642 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097261606 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084082154 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096282975 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071036619 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070507926 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098855433 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073561051 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071036698 seconds)
  done (took 4.202757597 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074114673 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077513101 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111555329 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085725792 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098161577 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075464583 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075915905 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098802869 seconds)
  done (took 1.81161867 seconds)
done (took 27.011732468 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080570461 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072629342 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102085244 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084190567 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101774498 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081033073 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070427355 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104131328 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079260263 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075058137 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.105115746 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069539955 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100026192 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069463802 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076883693 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096166429 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082219257 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100765664 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081938561 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081974891 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099560377 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079072562 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103046498 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081154273 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108184626 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081585433 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085601343 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102034673 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071355017 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099305763 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078982252 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085696945 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097620745 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081171332 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.097296089 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070354697 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069794325 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096182194 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081347888 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102489646 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072449915 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102928407 seconds)
  done (took 4.76554246 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090245725 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093092886 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113398651 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068132309 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099056256 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067806411 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116855553 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065265111 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.0615376 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.117332882 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057696577 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061309317 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.091689971 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05598616 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060698419 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058228875 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090477509 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057968033 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061436712 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088590258 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.060203877 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056049619 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089396273 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065095289 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058367041 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064134864 seconds)
  done (took 3.085883772 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07745553 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085171312 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117435212 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131477626 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136565153 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078907602 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106942664 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089888174 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114495679 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069843303 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073567855 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126732131 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089158571 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102942229 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069798361 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115907605 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084746838 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071297515 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103206625 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091770539 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113746959 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080534386 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.121324876 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083303578 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070123173 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099085737 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073924361 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110718434 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074368804 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079604959 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.10112036 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073358414 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098517602 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080878181 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074526399 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098985435 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091764308 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106720039 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079977321 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070346466 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.10051115 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070671993 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116730446 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113813828 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09642886 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076785623 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077078846 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105707218 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070043323 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115138368 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078776407 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069940146 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.100159258 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068852961 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096696065 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083069048 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072025681 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098676822 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078795595 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098992243 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082226951 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073076282 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111712945 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070350305 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103917428 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068927449 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069946593 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096159588 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092957909 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070954057 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.138463858 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071012286 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097521622 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078850568 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104299337 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075295945 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069630669 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111514469 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079609018 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09981734 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078134251 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073125617 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099434214 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089627212 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099901255 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072515258 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071150281 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.112697102 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07192397 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097806435 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083500935 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069515516 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099464604 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08710598 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096119646 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071287534 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076538967 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.102049611 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069387121 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108442782 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075101708 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097182624 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078931245 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069037272 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099992065 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079842584 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.100325024 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069432767 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075158608 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103424336 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070731521 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070733427 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099983295 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070899184 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10670717 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076139834 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073967765 seconds)
  done (took 11.549767872 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.194584185 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.187828107 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072310007 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.182673194 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077852141 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109746663 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.182876162 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098337258 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099570359 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070935081 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070974774 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.133444123 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.12664071 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.108615512 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.108637655 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069208726 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116636188 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.106839861 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.186321538 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.180115407 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118257592 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078575149 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07198103 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.099615713 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073022777 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079914595 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.115831838 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078391635 seconds)
  done (took 4.331342782 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084126659 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131898299 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076583765 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091014357 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.122566926 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070506098 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103455297 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072243573 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110670256 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08207937 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097403359 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076186377 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076789713 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.108754371 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070908492 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108909556 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080017082 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071519161 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.10108897 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075293715 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.107260926 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083087613 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101584467 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070024562 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076790064 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096876494 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067704964 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116164072 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069671592 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120035168 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068660846 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075695683 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.112003462 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070842546 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097771248 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073410843 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072792129 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.10221669 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072070289 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068667244 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096914873 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060137498 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069134859 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.11026393 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076754603 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089865825 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075483348 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075306248 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103123206 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067762009 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100358027 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072357378 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073399773 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.107435634 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074746693 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075036998 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.103017274 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067678322 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105894106 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073922921 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066459056 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096543812 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074989793 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069258648 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.106141085 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074818421 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.0970987 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073615765 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.076244403 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.105230817 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073551649 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07294039 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096949437 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073112711 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102829717 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074315513 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07390474 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.097463784 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069886046 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069910267 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.086467664 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069340294 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055973296 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100802193 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069110298 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068088239 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.10046885 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076016071 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111642088 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071552984 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103773949 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071504312 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069251057 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100750818 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065765954 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073055097 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.114081614 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113426835 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069897846 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068349404 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112819202 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075153855 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069366012 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.087167408 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077156105 seconds)
  done (took 10.077399821 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097449118 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094445658 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.10009009 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085222889 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126389634 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095147919 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106851223 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07620686 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07193492 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115405969 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070228992 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106875231 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070413431 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07976413 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.127162636 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077899069 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100760632 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078882447 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074185712 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.138352984 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084686351 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112933808 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082281159 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098814972 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074463195 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082686948 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127220954 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081550107 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109217954 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086531319 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082001746 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126413353 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087681331 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102349577 seconds)
  done (took 4.379032537 seconds)
done (took 39.297569365 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.20198425 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.406085132 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.191284112 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.10021125 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.219318762 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.237446306 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201843476 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.192393249 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.314327966 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.19099315 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.467428194 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.831751172 seconds)
done (took 58.692333606 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.303923932 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.331682468 seconds)
    (2/2) benchmarking "String"...
    done (took 1.477726737 seconds)
  done (took 3.94594211 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.586023868 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.082561435 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.451413007 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.191679223 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.215605822 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.487676156 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.803909843 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.020734811 seconds)
  done (took 27.389254092 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.193062468 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.560923106 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.667325304 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.665933203 seconds)
  done (took 18.225185394 seconds)
done (took 59.58773494 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.226400893 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.251588401 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.235928114 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178114406 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.31729385 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.224505152 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.448625062 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.403170603 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.194316739 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.180621614 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.225225772 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.193477355 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.204489211 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.422831705 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.204594765 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.192217582 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.221516604 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.628259441 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.573194069 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.214071629 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.193999385 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.239953866 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.209198619 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.195287243 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.241133533 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.200123451 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194231686 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.19461721 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.496219638 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.198312868 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.286567313 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.641978643 seconds)
  done (took 191.170189034 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.19376182 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.243820815 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.346679734 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.244848241 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.6407843 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.397134522 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.329363321 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.720318667 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.211784882 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.219513385 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.49526742 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.194231058 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.563199124 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.196735673 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.202829469 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.241145463 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.397633279 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.541133257 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.207839338 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.460597195 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.193932285 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.529522975 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.473226676 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.44049535 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.199200883 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.292486365 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.206965289 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.201825835 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.390475538 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.342489099 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.217628675 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.205644241 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.780251619 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.056252816 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.199753806 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.203856612 seconds)
  done (took 150.121474221 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.459534796 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.195753622 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.195202709 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.194653646 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194497178 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.224214634 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.195406292 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.727702226 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.719715738 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.696697713 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.729684855 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.256033033 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.386786052 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.195685387 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287015892 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.208755609 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199488418 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211043775 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.220431021 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195621928 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196348271 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.733637006 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.210257994 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.29465572 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202282355 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.197988375 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226255643 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.589929407 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196620616 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226381215 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.512642428 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.240920433 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198203149 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.481987858 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.452272821 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304372805 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198163487 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226988799 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.196762333 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.46467971 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196925635 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197230583 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.200240695 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.773252924 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198420637 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.732478065 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200059403 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.069909254 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.19727963 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197368504 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.206491527 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.574813972 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.196719919 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196837653 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.200410153 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197663326 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198080852 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.227820334 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.262109637 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.296354113 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.198725361 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.199171216 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.201576331 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228852244 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.198147313 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.281354489 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198564359 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.187204466 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.25320673 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.423491586 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.736761855 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200858923 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290891568 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316647688 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.199309359 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198428727 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198240479 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.198320797 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.303942852 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199234515 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.593399928 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205567242 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.200077843 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257900908 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.291963305 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199580526 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.498882651 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.202278388 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.19903126 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.895608531 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.199567092 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29062019 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199347514 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199360986 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198907793 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.592551917 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.722190582 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.36656887 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.201992403 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.200166779 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.194241127 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.202245635 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.605388739 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.71340798 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.76253625 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.201293551 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307448983 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203318639 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.20231143 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.201183275 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.229544326 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.200261527 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.256716173 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.20318013 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.595951271 seconds)
  done (took 344.261624431 seconds)
done (took 688.151987184 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.866962605 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.850406884 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.961492953 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.848196138 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.833051799 seconds)
  done (took 10.505762793 seconds)
done (took 11.652117304 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.379331994 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.378289162 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258737962 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.381131396 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228166589 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.397722752 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.358238402 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221730585 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.299167844 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.274535294 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.299061981 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248600101 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227885495 seconds)
  done (took 18.09828408 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.497897367 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.498019725 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265970188 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.501720342 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242777958 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.499078446 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392123357 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.399826908 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395313542 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.217471347 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217173525 seconds)
  done (took 16.274660813 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.505168909 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.498691618 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269627717 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.503007825 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243413246 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.504596241 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392572878 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400385104 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.390885274 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.218102959 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21568933 seconds)
  done (took 16.288134019 seconds)
done (took 51.806336629 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.211049614 seconds)
  done (took 2.3581897 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.242732815 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.408380026 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.225806251 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.215581045 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.21174582 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.214024251 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215241756 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212576811 seconds)
  done (took 11.095322797 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.211367587 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.212207268 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.209991435 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212057824 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.20849242 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209204201 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211166396 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209965081 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21186311 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209278278 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212402082 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.212656921 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210172473 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.210207398 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209527893 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.213126527 seconds)
  done (took 20.521832905 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212416265 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.20982799 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.211760627 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21132712 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.210477225 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210623984 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.211702395 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.210195082 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210989094 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209624287 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.211088322 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.209679495 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211735979 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.210862392 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.211203538 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211216861 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.210760343 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.211116011 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215425718 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210734696 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.213353534 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.213037209 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.212993946 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.212781536 seconds)
  done (took 30.225179055 seconds)
done (took 65.346687263 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.234372196 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.802439492 seconds)
  done (took 9.187333576 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.214862114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.21602294 seconds)
  done (took 3.583644626 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213620013 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21346975 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.213729391 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.21332984 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.213932822 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.213232802 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21439162 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.21307205 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.21365459 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213756668 seconds)
  done (took 13.287985427 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.215308295 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.215737935 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.212868165 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.216627898 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.216190386 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.213273092 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.215181156 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.216339243 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.216797875 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.213610772 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.21622685 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.214047786 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.215857415 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.214149709 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.216332323 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.213139938 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.213629061 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.21372848 seconds)
  done (took 23.02031399 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.216806401 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.216519542 seconds)
  done (took 3.585182684 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.214445774 seconds)
    (2/7) benchmarking "second"...
    done (took 1.213635355 seconds)
    (3/7) benchmarking "month"...
    done (took 1.214716603 seconds)
    (4/7) benchmarking "year"...
    done (took 1.214016198 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.213786901 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.214020608 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.214451541 seconds)
  done (took 9.650711784 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.216983149 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.390440699 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.468288799 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.775025237 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.216804446 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.218273618 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.067080507 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.219271714 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221721827 seconds)
  done (took 13.946567013 seconds)
done (took 77.412111444 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.21598914 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.208907727 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.012317786 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.212925077 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.223134943 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.55060858 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.244660076 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.347604802 seconds)
done (took 37.168401856 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.223535288 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.950970695 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.952625299 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.222396689 seconds)
  done (took 11.27949591 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.205471531 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.118088339 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.201816141 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.199783775 seconds)
  done (took 17.878174039 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.824558593 seconds)
    (2/2) benchmarking "read"...
    done (took 1.544233806 seconds)
  done (took 4.521447656 seconds)
done (took 41.055169739 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21661624 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.217079406 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.215965239 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.214340234 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.218098379 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.214375336 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214936325 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.217031025 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.217488694 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.217193245 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.215261652 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.217819533 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.218231555 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218286269 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215234765 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215343766 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218003295 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.216145969 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215242623 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215715932 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218765051 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.216069861 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.215619084 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.218580462 seconds)
  done (took 30.351015098 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21810294 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.216662538 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.219315994 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.217925998 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.216956284 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.219002938 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.219669591 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.217842244 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.218756222 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.21840456 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216176467 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.216409864 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.219482281 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.216991922 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219334206 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.216879196 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.219519684 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217177966 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219352584 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.217621764 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.21882854 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21675668 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.216240198 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218888933 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.217422919 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216886753 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.220234649 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.218229412 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220518917 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.218041587 seconds)
  done (took 37.698608547 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.224496764 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.226603935 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.219928871 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.220470349 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.220123551 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.219663523 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.219423234 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.221045468 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.220518285 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.219799587 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.220572885 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.220508647 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220483259 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.221035312 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.220668629 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.220749612 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.220534332 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.220090967 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.220866532 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.220263366 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.220740002 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.221290648 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.220623869 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.221555183 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.219107488 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.220717419 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.219738294 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.219572685 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.221924811 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.22051821 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.220691264 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.221130291 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.222525978 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.219971171 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.219795206 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.220807482 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225199916 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.22780408 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.220781467 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.221153365 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.220508763 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.218357415 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.218263414 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.218104767 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.218361103 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.21928576 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.218685104 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.218309445 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.218893473 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.218615729 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.218809859 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.218572242 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.21963676 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.220446426 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.219371425 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.2192797 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.219884865 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.219215666 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.218924822 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.219283645 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.219429957 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.218882478 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.219142548 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.219192937 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.220907912 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.217654183 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.219731974 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.218057421 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.218379069 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.218610888 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.219013455 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.219422462 seconds)
  done (took 89.009652003 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.219308075 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216784998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.215601999 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215237676 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215859914 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218617852 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215940632 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217920095 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216379357 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217839494 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218171735 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215826697 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215072508 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218013399 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218521813 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216363125 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.218578838 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215043797 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.218496143 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.218759006 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216503319 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.215955987 seconds)
  done (took 27.930649431 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219414297 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218777458 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.21548755 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21859701 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216395674 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218232938 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.218128183 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218373218 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218711327 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217660788 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217160638 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218588288 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215877711 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216555313 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216443505 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215836896 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21904257 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216578747 seconds)
  done (took 23.070522393 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.216391639 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.216644949 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.218831837 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.2168026 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216965135 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.2184358 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216571935 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219670448 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.219997921 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.217213492 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.221060218 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219042636 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.22053367 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216116697 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220438435 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216647933 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.220031245 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217143896 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21997763 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217384067 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217717716 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220141814 seconds)
  done (took 27.959867 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220503183 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221007313 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218012528 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218142252 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217836081 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220451502 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.22130847 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.218946402 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220945204 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.220769989 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217883196 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.22043991 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.218634492 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219528065 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.218331205 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218959107 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220897031 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220105838 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220647757 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.218803977 seconds)
  done (took 25.549167784 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220935403 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222105672 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.2220385 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221707145 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222977284 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222330423 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221077632 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221893917 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221359882 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222339178 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.221984043 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222756703 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223883632 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22259567 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222622335 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222881219 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221711743 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222116797 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223182133 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222690423 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.223870181 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222251575 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222502284 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.222841732 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222220665 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222239378 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223542728 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222764933 seconds)
  done (took 35.385586949 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223329935 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222862384 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219125159 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.219754688 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.220687308 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.219584236 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.220804759 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220446324 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223516944 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220586641 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.222771168 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.223177542 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223169878 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.222554172 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22231642 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222693034 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22332539 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221152473 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220007808 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221299519 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222443952 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22290846 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.22293295 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219533654 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220984504 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.22351303 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220839771 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22148537 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223497798 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.221245981 seconds)
  done (took 37.811991578 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.242623583 seconds)
    (2/2) benchmarking "in"...
    done (took 1.242750049 seconds)
  done (took 3.644644122 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.221607771 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223956139 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223836059 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221499825 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.221732223 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223820455 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223982395 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222190037 seconds)
  done (took 10.942334901 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.222214438 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.223622349 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.223882544 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.223323064 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.223803405 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.223708654 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234125295 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.239407039 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.224566248 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.224114979 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.229035677 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.2314255 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.227812667 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.222696596 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.226233599 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224882976 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.223156361 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.223769524 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.223007017 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.22251087 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.222456368 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226388236 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226780226 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.220655547 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.223584737 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.236564381 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.229661689 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.223017457 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.223108569 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.229092438 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.223410966 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.219633229 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.223105562 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.222973619 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.223974528 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.223239446 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234975113 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239123305 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.231943464 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.225028471 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.22391425 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.220691151 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.225182779 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.225353186 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224776274 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.223376889 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.22424573 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.222554542 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.222810873 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.225743725 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.228241305 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.223197922 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.221223093 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230136414 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.225987318 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234470028 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.240499291 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.226237244 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.232546976 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.236164807 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.239524703 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.231626014 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.227117952 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.225603597 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234439571 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.248418575 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233391651 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.238658741 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.223372222 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.226011537 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.235630561 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239974558 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.234442612 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.22446788 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225659833 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.225661413 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225562512 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225740562 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235033192 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.244477543 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.224622397 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225474155 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.234777408 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246672079 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.224194276 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.225010142 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.224538881 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.225830085 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.226407022 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238281145 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.242243602 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.226150563 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.225635814 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.226647977 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.228943319 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.227009472 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.224310465 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227632636 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.223847354 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.226611558 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226590512 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.22928281 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.235634547 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226978167 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.227109888 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.23642778 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.227651885 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225588623 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.237988631 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.227087487 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227301566 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.226477628 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.235817271 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.224699399 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229998812 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.234594277 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.225641175 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.228850197 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.227288392 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.227518598 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238946764 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.2537411 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.227372142 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.227157034 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.230990571 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.237252148 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226760036 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.231294345 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.229311907 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.224263056 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.22419294 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.228658481 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.226826473 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.228053575 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22663194 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229127594 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.226393606 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.226830552 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.226713095 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.228555467 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.228846445 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.227350943 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.229696474 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.229765155 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.228808382 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.229048981 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.234783701 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.22788837 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.228351298 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.22752246 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.224688816 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227564675 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.230348177 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.22682112 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.228332637 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22742063 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.22608407 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.227188889 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227216898 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.227846001 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.227426246 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.228696385 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229035723 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.227415622 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.232372067 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.226521931 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.224714016 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.227509884 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.227879016 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.22669108 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.226999067 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.224956111 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.22863872 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.234244803 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.227320593 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.226626448 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.231140215 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226661817 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226864909 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226495323 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.229687687 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.234552558 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.22647059 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.236155512 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.227705319 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227740323 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.226682105 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.226822989 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.226287339 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225894096 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.229496179 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.234651349 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241758272 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23626066 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.227066643 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.231333334 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.22770676 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.230303472 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.233405239 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.227254668 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.227729538 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228185942 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226549855 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228357097 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.22957648 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.226630932 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.226668984 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.227421085 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.22758335 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.22842375 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228474474 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.22884726 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.230060088 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.226020009 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.228415392 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227356532 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.227032284 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.225257501 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.226584571 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.226210284 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.227874434 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.228018024 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.23786241 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.226598749 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230665953 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230093292 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.228517709 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.226753728 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.228421743 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231350957 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.229015015 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23783428 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.244026652 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.22925624 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23728869 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.243824002 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.227561181 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.23261816 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.229041823 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.227287293 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.232385744 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.236850354 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.230649139 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.228026135 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.229025885 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.22893095 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229888491 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.237861329 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.227490044 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.227536576 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.229829158 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.232481768 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.22776034 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.230454164 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.230012269 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.230653478 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232673428 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230001946 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.231649673 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.231085508 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.229224783 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.22962227 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.229411872 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231120379 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.235105351 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.236043232 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.231711468 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.232140353 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.230790257 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.233499368 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.230504888 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.229443861 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.228369146 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244105549 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.239734543 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.237725023 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.231789135 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.230152215 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237242038 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.231528173 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.235087126 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229923219 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231164521 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.23118512 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.227711457 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.226514292 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.230802937 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.230403628 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231070621 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.230678644 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.234103843 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.231277342 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.228191667 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.229270731 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.22935139 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.229607 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.229266324 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.230295319 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.233589777 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232622242 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.229192646 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.229409039 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237969035 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243726418 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.230934179 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.229446792 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.229636797 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.229912435 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.230900884 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.229772378 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.233518002 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.237473949 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.23230626 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.239322211 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.230305542 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241030042 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.228862507 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.23127892 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.235906116 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.226555478 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.228721978 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.229879428 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.22896157 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239901292 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.244897648 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.229944158 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.232390507 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228909462 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.230244264 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.229633227 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.229250814 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231960895 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.229169503 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239481095 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.244232464 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.2321177 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232088488 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.228082746 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.229895957 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.231627384 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.227596459 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235631422 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.230047562 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.231405074 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.228451599 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.229966187 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.229677767 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.229868687 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.228376005 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.227355256 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.230455272 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238189693 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.244040969 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.232860333 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.230864502 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.242416427 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229987187 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238723151 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.24304801 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.229996619 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.230131366 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.229972921 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.233043815 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.22997942 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.232481728 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.229874649 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.231230919 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.232490638 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.228817377 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.233075901 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.231045611 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.229313238 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.231215039 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239035918 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250539309 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.230618099 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233659305 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.226975221 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.230331956 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.233165628 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.230980762 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.228379447 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.230865821 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238404583 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236698798 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.230540774 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.229273302 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230440973 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23163694 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.23002376 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.230756748 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.229690897 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.231182974 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.230999238 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.22985116 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236149307 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.231809795 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.231680788 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232429726 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.229061929 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.240621232 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.230775701 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.23250011 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.230151204 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.233533272 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.23150284 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.230385067 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.230077022 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231597353 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231025893 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.231555356 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236097709 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.236532214 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.233825078 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.229948613 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.22991533 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.231896214 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.231513783 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.22980563 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.230863218 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.230861235 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.234324054 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.230882813 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.23191307 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.22854832 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.231284167 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.231707704 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232223791 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.232339764 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.236579949 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.231308619 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.228866369 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.231177599 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23054932 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.229701964 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.230785084 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.242393653 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234207664 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.238871284 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.237439409 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.233922842 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.231160467 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.233137469 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.237434523 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.229739375 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.233357983 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.231443458 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.23378123 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.231829996 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.233924857 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231677355 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.240368973 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.232686883 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.233222137 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241652897 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.247768451 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231516529 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.232686517 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.234859902 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.23245117 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.229860321 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.232242015 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.23091659 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240902693 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.248737706 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.231952607 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.234277971 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.230166561 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.232418151 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236320617 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233352341 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.233026674 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.230121381 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.23345049 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231892034 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232287574 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.230411689 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.23258421 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.232482332 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.234706663 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.238027337 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.230495299 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.236018533 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.234471108 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.233496367 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23393202 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233517727 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.230984868 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.2309423 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.233584137 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233042459 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.234341858 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.237147825 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.233489119 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.233445426 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.233904562 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234089613 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236094038 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.240987546 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.240706082 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.232202353 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.233235459 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.235761724 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.237618877 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.234322316 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.234011946 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234498432 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.237234971 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.235105148 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234270688 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.235752644 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.235736472 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250803842 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.248850501 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234713309 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.234827041 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241573258 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.234826588 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.232932243 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.234261858 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.238064945 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.23661727 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.240792699 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.234889651 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242809704 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250007997 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.23487577 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.238021701 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.237757169 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.242316414 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.239365353 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235542431 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.235718597 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.239565968 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.252079956 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237412921 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244281207 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263942497 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.251043202 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.236814861 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.236122454 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23499368 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.236315195 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.238468299 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.2362447 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.237163894 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236369238 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.236031174 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.236049939 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241238946 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.238228234 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.237412383 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.23663657 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.237066828 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.239068405 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.234083205 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.237265766 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.237135761 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.236967009 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.236635117 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.23757284 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.238301521 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250687155 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.247551379 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.237956336 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.237835477 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.236435994 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.241638068 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.23985014 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24620471 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.243793845 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.23818 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.237340416 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.240178165 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238952765 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.236887309 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.240632648 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.239451564 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239394732 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.237390351 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.252730806 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24483032 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.245037364 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.239573987 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238645304 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.23928817 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24040812 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238360082 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238876813 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.240622319 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.239837779 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241212722 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.238981236 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.238955093 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.240751923 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.245146192 seconds)
  done (took 735.549796388 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.23646768 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236883171 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.236379328 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237040507 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236829573 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236820891 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239077139 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.236604041 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.237283452 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.236987135 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.236448144 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236580553 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.237239442 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.237762748 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237371776 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.23648818 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237377697 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237607399 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236813555 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237268049 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237723199 seconds)
  done (took 27.154319231 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.240414249 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.237609821 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.237536097 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.241123484 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238217137 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.240108289 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.237900201 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241633674 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.241032134 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238649012 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.240530394 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241481835 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.238027729 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.23812802 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238473425 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240915754 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.240917498 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23761627 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.241242064 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.238482589 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242512478 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.239557474 seconds)
  done (took 28.44865368 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.241468738 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.24089392 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.240496475 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.239065804 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.240374188 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.239370886 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.242067961 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.242188473 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.242138038 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.243223642 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.240528492 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.242629047 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.246724091 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.245910381 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.244959497 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.241695033 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.386313273 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.242666617 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.241812387 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.241948658 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.239466081 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.250658241 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.240646555 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.240123162 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.241060268 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.242943146 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.243275022 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.243079942 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.241977769 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.243315954 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.246047426 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.243418082 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.242224347 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.245006319 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.242529955 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.244112641 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.245868655 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.243498615 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.241472607 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.243278758 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.251665604 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.261030856 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.24425402 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.252149707 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.243742112 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.24364382 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.246312467 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.249552974 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.240792025 seconds)
  done (took 62.261699749 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.24427086 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.243841702 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.241617127 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.244360222 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.244602614 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.243738516 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.243902675 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.244742087 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.242133685 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.241776224 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.245189106 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.242858882 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.242110789 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.244977795 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.244610129 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.242560619 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.242318225 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.242174637 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.242126802 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.242731304 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.243106188 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.245071283 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.245107878 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.242710566 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.245865418 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.242631427 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.243627813 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.244573071 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.242973386 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.243282636 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.244994027 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.245098405 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.245992141 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.243764456 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.24266867 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.245412342 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.246182597 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.243057281 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.246182427 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.242834776 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.246612028 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.24621121 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.245871094 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.245598326 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.243566589 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.245072957 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.243414385 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.242678661 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.244695398 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.245807715 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.245218511 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.243811222 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.245823904 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.243516261 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.246012993 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.245790407 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.244933143 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.244637444 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.247274523 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.244860495 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.243908763 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.246668374 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.24431312 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.24610709 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.246755814 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.245207547 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.2441486 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.246607189 seconds)
  done (took 85.798942226 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245925724 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.246872601 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246819864 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246469131 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246975448 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.246623087 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.245741952 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.246115843 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.24669543 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.246669634 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247282813 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.248092549 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.247375387 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.24859634 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.248146793 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247813034 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.247660533 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248113978 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.24849101 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248758249 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.247407183 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.248288054 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.247549709 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.247537901 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.24930125 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.248570431 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.248346035 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.247596092 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247950669 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.247803569 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248169077 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.247994185 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.248111568 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.248038908 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.248514027 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.248345111 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.250747008 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248745241 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.24821115 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.24889033 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.248928521 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248360883 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249036975 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.249222988 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249557869 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.249870392 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.249718828 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.250061587 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.250359377 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.250449772 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.249473155 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24956957 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249524279 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24935151 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.250034484 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.250499196 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25079414 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249441374 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24978471 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.250409068 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250451636 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.251335045 seconds)
  done (took 78.592077011 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2511885 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.250644499 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.247762173 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.24811281 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.251711981 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.248255218 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.251815398 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.250949571 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249993449 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.249919684 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250658185 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248604874 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248710472 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251414172 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247976432 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248329057 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248480375 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248731276 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251555544 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247806497 seconds)
  done (took 26.178366808 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.249214146 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.252474098 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.248960287 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.249169309 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.251300832 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.249041712 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.252965525 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252294207 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249271868 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25235319 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.251392156 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252559805 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249527594 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249869779 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.251821453 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.249809549 seconds)
  done (took 21.198223295 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.249988319 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.252337201 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.251898312 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.251127211 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.249280457 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.250978792 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.252289072 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.250417285 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.24984769 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.253353087 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.252378935 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.252526183 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.254065956 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.252465508 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.250395003 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.25274943 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.249832226 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.250595749 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.252427047 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.252285846 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.252096928 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.250612949 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.253348981 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.253152084 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.251743105 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.251665566 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.250564056 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.250885495 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.251193153 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.253688855 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.250215099 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.25083161 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.251058595 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.251533615 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.253344693 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.251287428 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.254424755 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.254278391 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.254185131 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.253573238 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.254529792 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.25142431 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.254847672 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.254950028 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.252735924 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.254529093 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.251990948 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.251677504 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.252325701 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.252548618 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.25408912 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.255705548 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.254544516 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.254974919 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.255129068 seconds)
  done (took 70.069436167 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254689673 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.255510761 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.252956675 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.255575391 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.254811184 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.252855411 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.255299172 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.252176548 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252968946 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.255617807 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.253083518 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.255313384 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252519874 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.255909066 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.254051185 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256031696 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.253534061 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.25401909 seconds)
  done (took 23.767004612 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.253466533 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.254330864 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.256369091 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.253736587 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.253647228 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.2559891 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253191026 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.255836538 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256624861 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.253675439 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254401259 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.25702248 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255565058 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.255645855 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254828601 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254043741 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.256610805 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256713604 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.254478853 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254545534 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.256755777 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256691997 seconds)
  done (took 28.805034592 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.254664552 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.255180708 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.272327657 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.29634638 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.283689139 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.254586357 seconds)
  done (took 8.807331853 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255040737 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257483941 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255931943 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258419295 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25749983 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255077821 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254133614 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25617875 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257792355 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25650313 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255596306 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258235382 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258017021 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255219875 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258255613 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257962278 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25583637 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255488608 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256227354 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258298335 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255493991 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258239171 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25592137 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25539408 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256352027 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255885442 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258159532 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256767996 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25614675 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258237423 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258830587 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255934178 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258665263 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256293505 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259543165 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259481826 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255843868 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259410375 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2588944 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257398588 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.259433835 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25858099 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25949614 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256380313 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258643285 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256541265 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256741313 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256762903 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256789287 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259972531 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259628021 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257042876 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25921193 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260078965 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259527602 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259720668 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257914466 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257748303 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260702532 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25820834 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257976333 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259873322 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257115778 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25807337 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260670234 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25824801 seconds)
  done (took 84.195725112 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25737467 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.256815911 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258017572 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258705996 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257243849 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258261292 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25827454 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258757942 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259768031 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258411029 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261874863 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259241931 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258660277 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25907884 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259454238 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258350853 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25853313 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259675852 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259313775 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261909795 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25912855 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259374317 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259697314 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259414579 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259772898 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262176138 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260160122 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259814207 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260023089 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259976663 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259628647 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259358629 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259601886 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.259693045 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260345915 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259972792 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259513557 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260269908 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259199546 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261682811 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259763856 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262676022 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260383979 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259755015 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259905259 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260188158 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260652942 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260678017 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260076634 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260405693 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260546154 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260951551 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261017122 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260717547 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260363453 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260459838 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260750351 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260786407 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261304625 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262914776 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259721514 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26183554 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264725603 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26041507 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260760554 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262189679 seconds)
  done (took 84.357648846 seconds)
done (took 1715.692220963 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.352349521 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.354144431 seconds)
  done (took 13.903401138 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.423840751 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.378711072 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.259609942 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.286435227 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.260410259 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.255673688 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.262617183 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.260591954 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.259719887 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.259734658 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.260108107 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.447702668 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.255989107 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.261322898 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.260128607 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.350268169 seconds)
  done (took 41.943270951 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.285764875 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.267765621 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.362863864 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.282736311 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.286252531 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.424478639 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.316034967 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.265230934 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.408868832 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.303694798 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.601189949 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.28597308 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.265381577 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.220963338 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.281731609 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.423886955 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.480667357 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.605609608 seconds)
  done (took 28.566913092 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.640311168 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.266180161 seconds)
  done (took 9.103824323 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.271065661 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.293196448 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.294769768 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.30219844 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.29830856 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.29180775 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.294208824 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.293706388 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.265733765 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.274618165 seconds)
  done (took 64.079583022 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.28154862 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.265727661 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.266377476 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.263497207 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.256900057 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.270303148 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.264663972 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.259885676 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.310342409 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.372894395 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.279780475 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.27168433 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.265741638 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.267150078 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.263495529 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.299401298 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.389790967 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.263503951 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.262808404 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.27105591 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.26654419 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.387494137 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.303094096 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.26602107 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.37194512 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.324456926 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.270511587 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.272281421 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.383729702 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.264375151 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.265488063 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.266171093 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.266747218 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.8125375 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.686943463 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.283389174 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.287888983 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.276147183 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.264773194 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.439773338 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.267505544 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.273187242 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.265226229 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.662394983 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.420055905 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.365193302 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.372157999 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.270001316 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.268318097 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.328814895 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.267900436 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.268465309 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.293769974 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.97428258 seconds)
  done (took 106.104874659 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.266849872 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.755053025 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.426601784 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.277484063 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.011925222 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.902961196 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.262954878 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.501268817 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.32389768 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.261084664 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.585180671 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.715931113 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.263168971 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.270787721 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.408988356 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.344310352 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.259926576 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.992288247 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.263498623 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.263040257 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.659982863 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.277351533 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.260871187 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.317827668 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.298195622 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.683646376 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.520636911 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.672702807 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.264372427 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.2610911 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.680999148 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.272618108 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.292390656 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.26093988 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.51350052 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.575360413 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.56100202 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.264986885 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.290158551 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.263701575 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.291186416 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.681530802 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.569181687 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.264746294 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.264388177 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.689580349 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.265269278 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.26813439 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.267679986 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.462116049 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.27737481 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.264107047 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.524389065 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.263872379 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.599198842 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.340102719 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.34049962 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.708830799 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.260740093 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.305022621 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.27980784 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.249942293 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.250291014 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.236947165 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.239163312 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.540642261 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.653958282 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.236887334 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.540004001 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.64405387 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.229880114 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.704827034 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.174997406 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.257372461 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.282748469 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.228954191 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.769036633 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.681985868 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.271269879 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.228260627 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.524897795 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.230634149 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.526107527 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.238590955 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.225313451 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.63005309 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.240524968 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.277734663 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.221556992 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.221524482 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.842761279 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.219520193 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.478792406 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.247909051 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.214809831 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.211842933 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.24526839 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.21109028 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.227567549 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.215185983 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.689225109 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.220248048 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.488002657 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.231479395 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.21597747 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.214134127 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.212325114 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.212574678 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.429271843 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.735987341 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.220472018 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.214326215 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.213177253 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.214568469 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.213067973 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.215024283 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.480128645 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.216036998 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.212974839 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.215347186 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.897953659 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.23738772 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.213519153 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.216893651 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.048229003 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.423043391 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.229558626 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.226327874 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.214592275 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.226305769 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.436927911 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.215756444 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.259271843 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.217890662 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.873826399 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.238600796 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.230916941 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.877067435 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.211973985 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.105037167 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.224876939 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.200589665 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.495991997 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.461095438 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.554157406 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.199367797 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.214947019 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.836254184 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.215371611 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.330419185 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.214913322 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.200529282 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.396364364 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.439312415 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.199869866 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.763640342 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.201410261 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.411520809 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.199997042 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.509172046 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.646399867 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.203699591 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.206821254 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.857078226 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.878758217 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.814931968 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.20075875 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.513547869 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.189048873 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.648015124 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.201089822 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.201306921 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.631709434 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.203422829 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.204566178 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.200267913 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.201552802 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.264871922 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.373494988 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.334780046 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.209921809 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.623413102 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.21616596 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.201960252 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.209401338 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.202043323 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.552799529 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.292876335 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.204153529 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.210379916 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.203181729 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.202167191 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.640801338 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.160538417 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.205502602 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.352595949 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.784826533 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.20423784 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.203225042 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.894991097 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.501121063 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.67252512 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.212446691 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.473135789 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.205198926 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.239765359 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.88702261 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.260491406 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.635629075 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.209078091 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.205995318 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.747214056 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.205151064 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.268210073 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.203625989 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.204338112 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.68898124 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.205787277 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.206833459 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.435332195 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.205980711 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.4515116 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.203957774 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.214868316 seconds)
  done (took 1084.252256021 seconds)
done (took 1349.151224862 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.20430714 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.205050676 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.19047982 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.206047426 seconds)
  done (took 25.954205566 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.213125211 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.209751093 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.210411476 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.209560707 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.212222774 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.21000287 seconds)
  done (took 8.414118551 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.26749226 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.204347099 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.206057165 seconds)
  done (took 18.826338984 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.399480537 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.358394881 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.53178213 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.105981124 seconds)
  done (took 9.544608488 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.210687824 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.211686029 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.210971153 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.212912252 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.214159608 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.215735387 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.21352372 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.213762938 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.215437352 seconds)
  done (took 12.067750077 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.678761434 seconds)
done (took 80.632906946 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.216423122 seconds)
    (2/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.675758612 seconds)
    (3/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.317050781 seconds)
    (4/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.333837251 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.861803067 seconds)
    (6/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.29225973 seconds)
    (7/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.585356669 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.45341653 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.263603624 seconds)
    (10/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.025208638 seconds)
    (11/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.333864646 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.582772436 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.25167533 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.207224994 seconds)
    (15/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.42834337 seconds)
    (16/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.224250079 seconds)
    (17/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.22481583 seconds)
    (18/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.292296152 seconds)
    (19/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.234851245 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.21699741 seconds)
    (21/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.319494876 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.326386449 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.192552736 seconds)
    (24/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.76084395 seconds)
    (25/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.269771679 seconds)
    (26/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.638429981 seconds)
    (27/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.177874945 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.986316404 seconds)
    (29/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.46195442 seconds)
    (30/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.220188548 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.208502047 seconds)
    (32/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.903303135 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.19634031 seconds)
    (34/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.225661894 seconds)
    (35/309) benchmarking ("sort", Float32, false)...
    done (took 5.176021374 seconds)
    (36/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.220121034 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.310701359 seconds)
    (38/309) benchmarking ("sort", BigInt, false)...
    done (took 6.213601026 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.046753623 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.31425092 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.81335257 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.883025764 seconds)
    (43/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.233570797 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.408428102 seconds)
    (45/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.776018398 seconds)
    (46/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.402758225 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.272972693 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.978871491 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.566943583 seconds)
    (50/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.197261842 seconds)
    (51/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.49195302 seconds)
    (52/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.334493016 seconds)
    (53/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.235704977 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.427691394 seconds)
    (55/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.445044714 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.320987106 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.490025279 seconds)
    (58/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.22532006 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.605953323 seconds)
    (60/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.547815336 seconds)
    (61/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.794607898 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.191650343 seconds)
    (63/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.844158348 seconds)
    (64/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.763242013 seconds)
    (65/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.54573804 seconds)
    (66/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.200946443 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.383526881 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.269604262 seconds)
    (69/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.7178157 seconds)
    (70/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.239030866 seconds)
    (71/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.74506572 seconds)
    (72/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.26308828 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.444070171 seconds)
    (74/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.942353127 seconds)
    (75/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.668869114 seconds)
    (76/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.494520794 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.210857386 seconds)
    (78/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.389305009 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.160622857 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.983406977 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.196711392 seconds)
    (82/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.222049076 seconds)
    (83/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.199824335 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.246621522 seconds)
    (85/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.355935103 seconds)
    (86/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.206473624 seconds)
    (87/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.242135023 seconds)
    (88/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.296315785 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.353288709 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.258630859 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.331402317 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.226274873 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.412429586 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.312026062 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.806538339 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.617406483 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.3113642 seconds)
    (98/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.269126299 seconds)
    (99/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.015093048 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.213891689 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.309218498 seconds)
    (102/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.314578421 seconds)
    (103/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.233181046 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.325575972 seconds)
    (105/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.512313092 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.201312144 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.215674849 seconds)
    (108/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.270672036 seconds)
    (109/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.719986044 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.299409147 seconds)
    (111/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.98169211 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.528683295 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.788863976 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.551720208 seconds)
    (115/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.335848957 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.413610118 seconds)
    (117/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.481404512 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.236064085 seconds)
    (119/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.370188527 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.214705956 seconds)
    (121/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.22866753 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.021056888 seconds)
    (123/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.423047418 seconds)
    (124/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.219430792 seconds)
    (125/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.397848757 seconds)
    (126/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.514140702 seconds)
    (127/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.525064545 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.730395848 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.240829089 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.343478325 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.295014066 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.473748091 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.912528659 seconds)
    (134/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.371227525 seconds)
    (135/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.218227822 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.455847637 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.886447604 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.289024706 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.472021772 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.885647861 seconds)
    (141/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.543954691 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.614495706 seconds)
    (143/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.337950364 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.80326823 seconds)
    (145/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.204180552 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.502528027 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.337670702 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.669657235 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.559808972 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.958680589 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.71270199 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.892349539 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.24267956 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.205762837 seconds)
    (155/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.33660333 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.267485463 seconds)
    (157/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.217087163 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.241222083 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.58531061 seconds)
    (160/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.3672323 seconds)
    (161/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.281044808 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.253536698 seconds)
    (163/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.216839663 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.236008858 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.535924351 seconds)
    (166/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.412477674 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.219297466 seconds)
    (168/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.1983727 seconds)
    (169/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.555431515 seconds)
    (170/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.286716079 seconds)
    (171/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.752220604 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.717503425 seconds)
    (173/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.341896423 seconds)
    (174/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.303397451 seconds)
    (175/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.022832692 seconds)
    (176/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.728751319 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.621902209 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.251614018 seconds)
    (179/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.428225837 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.692156137 seconds)
    (181/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.221042772 seconds)
    (182/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.23441767 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.761978932 seconds)
    (184/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.232981395 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.985384739 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.464890999 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.741203317 seconds)
    (188/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.927611437 seconds)
    (189/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.783622297 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.248351242 seconds)
    (191/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.364435695 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.261685998 seconds)
    (193/309) benchmarking ("sort", Int8, false)...
    done (took 4.219208279 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.221720782 seconds)
    (195/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.285025481 seconds)
    (196/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.555398971 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.823927227 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.222889939 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.215620429 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.220765339 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.217639606 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.289569701 seconds)
    (203/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.221251634 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.287841225 seconds)
    (205/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.939839915 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.34528303 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.53825811 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.236838387 seconds)
    (209/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.304594981 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.219582162 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.615814141 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.319403942 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.659878739 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.370883971 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.751757065 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.241943471 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.436584514 seconds)
    (218/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.433148737 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.295552719 seconds)
    (220/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.991751554 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.720320095 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.208044699 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.245205595 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.608866711 seconds)
    (225/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.524402302 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.245842928 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.658171837 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.209393345 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.212785717 seconds)
    (230/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.037641181 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.263003772 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.418064619 seconds)
    (233/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.730736983 seconds)
    (234/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.23421563 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.824878408 seconds)
    (236/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.208347242 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.325469483 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.048520748 seconds)
    (239/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.303123914 seconds)
    (240/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.248178199 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.221076702 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.213815647 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.057092604 seconds)
    (244/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.54849226 seconds)
    (245/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.719610388 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.209900159 seconds)
    (247/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.396683436 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.325815572 seconds)
    (249/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.22148179 seconds)
    (250/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.53389313 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.082294521 seconds)
    (252/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.249051691 seconds)
    (253/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.218716848 seconds)
    (254/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.21599278 seconds)
    (255/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.366567341 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.469413068 seconds)
    (257/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.690931067 seconds)
    (258/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.37169691 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.425590006 seconds)
    (260/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.269496368 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.323140055 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.046974181 seconds)
    (263/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.254119334 seconds)
    (264/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.972478472 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.248937513 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.894529069 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.236571893 seconds)
    (268/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.467975295 seconds)
    (269/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.234399636 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.479892543 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.600636669 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.246965069 seconds)
    (273/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.500465397 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.335101271 seconds)
    (275/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.570663115 seconds)
    (276/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.431246347 seconds)
    (277/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.906416932 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.037598515 seconds)
    (279/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.264977999 seconds)
    (280/309) benchmarking ("sort", Float64, false)...
    done (took 5.463127194 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.254976519 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.251872324 seconds)
    (283/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.288789034 seconds)
    (284/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.907340177 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.305361821 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.753022418 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.303345696 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.614818536 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.902253007 seconds)
    (290/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.319024148 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.338333227 seconds)
    (292/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.339066735 seconds)
    (293/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.22099912 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.276203813 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.386147627 seconds)
    (296/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.245755296 seconds)
    (297/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.305522165 seconds)
    (298/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.672929047 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.369497462 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.264875089 seconds)
    (301/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.246077114 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.462337943 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.322230166 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.243794738 seconds)
    (305/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.195212058 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.222575406 seconds)
    (307/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.759809898 seconds)
    (308/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.251231986 seconds)
    (309/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.221332287 seconds)
  done (took 872.788869811 seconds)
done (took 873.942367431 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.25444682 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.247178339 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.230756693 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.253602495 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.343410359 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.260616871 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.24278943 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.235132383 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.281945438 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.281847415 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.231088021 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.259627786 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.233383938 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.232740402 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.231773177 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.246565391 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.13542485 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.234453789 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.248906745 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.241422163 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.249002871 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.230872981 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.281536908 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.259804481 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.236318719 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.235675382 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.236416401 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.251857699 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.344451896 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.235546074 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.235746922 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.243825327 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.135909165 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.232747107 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.229353471 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.252993131 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.244853194 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.244037952 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.236776164 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.264777486 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.493573331 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.234763161 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.234788245 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.23452949 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.235106091 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.238135494 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.235296909 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.240086849 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.247109264 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.247550306 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.500416263 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.250546008 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.23813332 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.235942572 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.246122785 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.233979486 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.238734031 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.251378014 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.253880385 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.250390572 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.132890077 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.241756957 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.237162701 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.251622837 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.24240317 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.544179559 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.233377478 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.240049728 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.500845693 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.242015952 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.544845227 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.245769339 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.236875121 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.250165693 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.267158745 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.143824682 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.232664737 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.23507484 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.243061804 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.234490403 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.245293391 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.24853042 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.240555134 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.236413311 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.250316629 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.264965391 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.246810867 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.238020746 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.246287746 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.255539868 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.243382959 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.247017494 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.24032543 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.232648915 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.246414371 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.240173435 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.239217806 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.240524212 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.241974874 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.248041156 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.499826254 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.254651971 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.234179679 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.234064901 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.236471584 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.251657682 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.505234162 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.23966122 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.259355507 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.285902994 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.239546127 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.140034468 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.243158522 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.253660651 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.247085727 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.242714709 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.234021614 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.140950114 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.51325824 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.254537639 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.24148449 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.23725718 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.254779145 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.240339759 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.23470306 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.149035762 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.24313455 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.251678291 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.359804854 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.249233748 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.270225193 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.236737062 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.241414404 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.267035521 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.254023092 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.269629799 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.242518691 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.254419108 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.25474373 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.236228226 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.250488912 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.249113704 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.2411295 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.245353634 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.234568992 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.271984168 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.251629635 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.25191848 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.260318249 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.360077014 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.23727201 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.14341358 seconds)
done (took 208.211656219 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.29737001 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.229686037 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.345403505 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.236372513 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.333089336 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.332718658 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.234514933 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.235139185 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.234849517 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.64313711 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.234968877 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.234746055 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.230468637 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.234997522 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.318127126 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.238151205 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.234523779 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.580482099 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.237868889 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.308207874 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.235523657 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.235916651 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.237666107 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.620607914 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.236109253 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.232361334 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.308284639 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.237786112 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.606027648 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.238912684 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.230097919 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.583968663 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.326948656 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.264479582 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.248394969 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.244098857 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.334005014 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.253347983 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.317535005 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.31813295 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.347821038 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.267736625 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.238228329 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.235736474 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.239936408 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.238328893 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.236769652 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.265530088 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.239217358 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.236492406 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.602469973 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.248862502 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.237756955 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.236705558 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.23749541 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.268790232 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.237549385 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.240023441 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.329293356 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.239490781 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.301374435 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.647844508 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.621720238 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.240574636 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.23347645 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.238254595 seconds)
  done (took 142.166939006 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.306906685 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.314800876 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.34404709 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.240604741 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.289885395 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.34837511 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.239767472 seconds)
  done (took 10.260246388 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.245147742 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.239970877 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.290187965 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.289419807 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.239819759 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.387486619 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.240613076 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.251707516 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.239089113 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.292498785 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.242939709 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.242101327 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.247023409 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.24216405 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.287552777 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.252162895 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.355518123 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.24126426 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.24153345 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.394769949 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.238931656 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.249028475 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.292849748 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.25236331 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.24194582 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.247508257 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.805436539 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.241769508 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.239207957 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.241249036 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.239344623 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.27935883 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.24273657 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.242049181 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.238856584 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356358311 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.24144702 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.239414439 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.242697606 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.240221483 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.242962875 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.242297028 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.242315601 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.239837891 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.242238607 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.265975212 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.243062906 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.243466426 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.243839567 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.243869109 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.29286684 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.243734693 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.24114359 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.24082666 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.298750839 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.249534175 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.243965105 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.239921514 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.243991186 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.241215505 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.397343184 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.29119661 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.244033685 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.291527811 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.244423048 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.244110339 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.244099584 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.243172036 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.297229345 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.244013812 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.291097697 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.241327353 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.397808667 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.267705562 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.244742493 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.246277999 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.246019219 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.244144478 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.240581372 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.249857419 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.241831122 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.245195635 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.249907913 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.241584764 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.241624137 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.346470226 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353023333 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.242482166 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.257103089 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.250945515 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.242150644 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.297138054 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.245071608 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.242182203 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.296553257 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.358864331 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.298270716 seconds)
  done (took 144.302290731 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.249701405 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.251403316 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.246038155 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.261176241 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.244966905 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.245740774 seconds)
  done (took 8.679631893 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.24701691 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.245134939 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.245341778 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.246915681 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.245894664 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.246747269 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.247079364 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.246508633 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.249372907 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.246140572 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.245664663 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.247436973 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.247123132 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.246601289 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.246439973 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.247004326 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.246276047 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.244565475 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.246377149 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.246435768 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.341814486 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.245544219 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.246281795 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.247251939 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.251010224 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.247536695 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.253672443 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.246432128 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.247520037 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.255271641 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.249337225 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.249317639 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.247511707 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.251857341 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.251015252 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.247428613 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.25070599 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.249460011 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.246250797 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.248757396 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.248842123 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.247850395 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.247964851 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.249928471 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.25005895 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.251326316 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.253207778 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.255774763 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.248935285 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.249414388 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.250032824 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.249736099 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.248819244 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.249953838 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.253051874 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.251259472 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.253014006 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.249208486 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.248827049 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.248934022 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.248875362 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.248981929 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.250389923 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.251802752 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.256258524 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.24970172 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.25049202 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.25232373 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.249691108 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.248892254 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.25045197 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.247259134 seconds)
  done (took 92.199222739 seconds)
done (took 398.78180644 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.41007794 seconds)
  done (took 7.595331849 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.48064867 seconds)
  done (took 7.667647403 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.180086256 seconds)
  done (took 19.375016672 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.316851528 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.293943719 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.242906198 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.258490346 seconds)
  done (took 26.299750455 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.354632533 seconds)
  done (took 7.54225168 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.2422885 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.259560978 seconds)
  done (took 13.690530284 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.566823117 seconds)
  done (took 7.75441979 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.018340529 seconds)
  done (took 8.212216752 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.254895089 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.26751168 seconds)
  done (took 13.721151134 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.232294437 seconds)
  done (took 7.420382389 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.824217014 seconds)
  done (took 8.015271967 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.255198339 seconds)
  done (took 7.445531288 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.244626776 seconds)
  done (took 7.433672788 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.392580249 seconds)
  done (took 8.581215166 seconds)
done (took 151.94028839 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.246438894 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.246368743 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.248232929 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.246768116 seconds)
  done (took 26.177140092 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.286664297 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.286491247 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.288048408 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.298139572 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.290427602 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.286224476 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.279857726 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.278657464 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.297559433 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.289982032 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.288527475 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.290090655 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.286941893 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.279539527 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.2896582 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.289493742 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.297776095 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.289521615 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.279960469 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.290298053 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.254896676 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.298498132 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.291187483 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.255272062 seconds)
  done (took 32.054413875 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.453775427 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.325196964 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.40732393 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.306079971 seconds)
  done (took 6.682556932 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.306025255 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.307712349 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.319969987 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.357948578 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.384273168 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.317619416 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.280543587 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.276032157 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.262731574 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.308296258 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.384359987 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.325730195 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.390756918 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.254881815 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.442363095 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.255711961 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.254537593 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.307705676 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.359712315 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.372890889 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.256846705 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.307352329 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.310576025 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.324925877 seconds)
  done (took 32.860931357 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.255066516 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.264309037 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.261618458 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.255513706 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.25558047 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.256216139 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.261949847 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.257018713 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.27635028 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.257336399 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.255329161 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.255544754 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.25467367 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.256106413 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.255825266 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.268205468 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.269100286 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.255523306 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.260627162 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.262595133 seconds)
  done (took 26.387098399 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.249817389 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.10314756 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.601021707 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.505358691 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.248823056 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.250757888 seconds)
  done (took 27.151014276 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.317275976 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.43409587 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.258945416 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.573578444 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.651187388 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.258669415 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.2574942 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.465249112 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.73652919 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.738820132 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.307786581 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.319118908 seconds)
  done (took 18.513572046 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.250528411 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.253005704 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.259752568 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.268233703 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.305669462 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.261931087 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.263568918 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.250895992 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.308408778 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.310588725 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.263675858 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.307492006 seconds)
  done (took 36.499813131 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339101034 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296253838 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.132043639 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975340557 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.631138516 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.464440266 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.000391837 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.671529938 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.257932491 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526185433 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.912845059 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356272971 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.506857893 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.252669532 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.256626655 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.174059999 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481657672 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70279565 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255787524 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908979351 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281329541 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.25925356 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.995145556 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.281937636 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.464686652 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.382853081 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.515459902 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.253615524 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508498756 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267872121 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26417538 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.254550812 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.527707366 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893297454 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346767183 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264545975 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.93731015 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.96799606 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.250051295 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.92323086 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.644389673 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.258459692 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.265645922 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255172487 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.188113728 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.265361243 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679928643 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.261037384 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.965772345 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.255096063 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.266435422 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349408021 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.258674157 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.070438261 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257947568 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.25663843 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.255013106 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261361477 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830233614 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.368351282 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.260501173 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.192077687 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.621178751 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.916667165 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833337388 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.360418579 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.259297415 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.260141465 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190294044 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.917791924 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.275964128 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403303753 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.276813933 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.905831013 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895887002 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.901493721 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.199908774 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.765509638 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.262784887 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.193249209 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.48441278 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257470379 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192528859 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.212882438 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.191043589 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906915254 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266249045 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.593974041 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.264295804 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.673423127 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.268782786 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273718899 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280422413 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.48027865 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.140719186 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257222696 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.693969273 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414751331 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279219631 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.676118906 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193051156 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.262893637 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511619994 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.468885499 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264802432 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.186169786 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.445280572 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264097815 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.275976628 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.259380092 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.270991719 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.783413635 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.272978527 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.381759447 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276879081 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.25899502 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946412089 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269437497 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.361728422 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.936048215 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.499989212 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.992926227 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260073904 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341203424 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.261226685 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.259632438 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.035830739 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.775736387 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.260084188 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.26133783 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.260520994 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.272900541 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.259489951 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206370726 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.266543004 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.975579275 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.26331905 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.482790197 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.270984801 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537509651 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193072569 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406998376 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351709305 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.48259385 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.365953489 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.261389387 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517824786 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259774096 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.270077434 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273316243 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279649877 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359652152 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28217304 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.269823349 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.516867304 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.263502798 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.690277661 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.032049088 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.264488252 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262096773 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.266516324 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.081936432 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788414993 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240307044 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270218334 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150155711 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.274814422 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325235361 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.266259087 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.271446 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.909991587 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.065324301 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.26700692 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.270715765 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485606853 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.272466029 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.943642871 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343387325 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.443144081 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.793406638 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.276625589 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.195533529 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.972771492 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.954591522 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262216975 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.197197089 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.262556281 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272099086 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273437176 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.767779572 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.791847049 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26664592 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.938181845 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.270358059 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.272849169 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.268069954 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262763032 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.904758461 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.399545003 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.266188697 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.289540758 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404775251 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.276199972 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.19662024 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.267439893 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.268359514 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.26250614 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.262763485 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295757489 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.941745582 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730831647 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.521067749 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.932785302 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27615007 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.029410246 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.295539981 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.264463003 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.738119877 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282222482 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.28541175 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274401123 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.274855076 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.951788379 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.924715756 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894568129 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924627415 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.746804134 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141600848 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.269729001 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.266937415 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.688619017 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199856347 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.821461234 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435363337 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.688679335 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209731506 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.449219015 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.372448762 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.964251095 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.275422309 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.492496407 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134711214 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.75686237 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290527562 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476165238 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300090837 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.265288296 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.195807985 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.551459504 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484622857 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.742691293 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347588437 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68740236 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.750623231 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.280496477 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.26360802 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.535528748 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423998226 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.981530088 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.437114317 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277697287 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.992642942 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741999058 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.275104225 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.491019669 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843731853 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.273716429 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.451661622 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203929285 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.277638043 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.276635082 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.267485798 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.398915445 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.259542902 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.533916034 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.277704464 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200293091 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.274951516 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749635449 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.178831703 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.272525378 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267505085 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956386566 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.273558543 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527243419 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.278762331 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.875310439 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275143073 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.200658441 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201094293 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.959785334 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.270059727 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2426306 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720074237 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.61437406 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.257296121 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28523213 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133004537 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.521291477 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.281431735 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.799576267 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495188642 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.05422849 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291673961 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.368411588 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.796961719 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.268182588 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.268303388 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.503036308 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.09083985 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.492705082 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.183582999 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.176868059 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.266718926 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.482703669 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.269161225 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.005840187 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506640394 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.979753647 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.284265496 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926169274 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296286271 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.020838841 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.197745074 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.635885703 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.277865218 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348885996 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279513091 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.280008844 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.280056521 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426803542 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.013764093 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284818689 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.283543785 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36374034 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.429298121 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.882145625 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.275206946 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805833261 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95301893 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.809443579 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284229596 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.269973749 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270575006 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204868417 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418830024 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.495742947 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544408422 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401817203 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.698615029 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294301903 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.796543928 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295279122 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.483323136 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545891656 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.165564821 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278707432 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284194075 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.270972451 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281714243 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.482092036 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73225037 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79446672 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389088847 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278603998 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.694568707 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547790141 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271963398 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271270935 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.861566482 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.27701305 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.554084224 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.277155418 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046610707 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4217867 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281778993 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912068409 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.281780367 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.431010968 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.045310167 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.970108174 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.528516252 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.685536558 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.284435238 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808918455 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.916626549 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.537632692 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339849456 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283816507 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.394916268 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419998155 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.272816843 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.274166776 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273017622 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117344103 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.982542514 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.282625462 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81315157 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539144569 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.270356179 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.272805404 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297226729 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.283309754 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.495994981 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938053861 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498182613 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.2832898 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277480245 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.09102554 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.814245101 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287374922 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208482043 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.277355252 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497074439 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.510174749 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297697855 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.726322311 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.985086576 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794918794 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.246571282 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295391696 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282193024 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.920020502 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814689305 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.891137655 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73434062 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.833758371 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279433236 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55023145 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.28027048 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.279988299 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55244123 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.278577708 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.279492167 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287024434 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.812276026 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984101689 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.284148435 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.99392066 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.212956173 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61609627 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895267121 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213990356 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279285816 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.445729218 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.27860579 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407686479 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287611823 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.276946586 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282189427 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.01085685 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548800341 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.28069373 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.26721807 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.856332028 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.281092394 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284309012 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.497620817 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283662487 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.944694521 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.625321746 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.530460847 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.28293658 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.26429165 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.279999343 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276461957 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.26289203 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.4773286 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.776116788 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79868952 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.29166148 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.288579862 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.281309603 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.493412314 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488227961 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.064575716 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.303586824 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287640933 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294643966 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.182939544 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.778307477 seconds)
  done (took 1544.057767533 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.299759407 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.286782868 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.296026011 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.357637704 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.333255261 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.310930264 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.322977217 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.36438268 seconds)
  done (took 51.79142901 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.289288678 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.496663152 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.306182312 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.277697449 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.288190957 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.279985724 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.684976539 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.281134479 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.288035612 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.286738207 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.285736292 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.284357429 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.855494558 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.28813448 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.280354089 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.265097674 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.287823673 seconds)
  done (took 64.250857131 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.281650407 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.508898502 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.350539185 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.293016899 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.984837667 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.297214797 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.548834823 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.34134404 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.288867189 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.31174193 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.933295862 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.279947692 seconds)
  done (took 82.641538878 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.286607718 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.286487947 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.28613483 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.28541716 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.28636521 seconds)
  done (took 7.651520578 seconds)
done (took 1957.911351152 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.532191876 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.9092251 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.942796716 seconds)
  done (took 5.072410733 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.426417585 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.474849691 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.59556505 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.601322825 seconds)
  done (took 7.320156793 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.557155992 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.664086485 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.466886088 seconds)
  done (took 5.909144562 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.565683631 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.289956768 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.398564548 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.281193898 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.279807073 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.281768576 seconds)
  done (took 20.065158226 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.283140722 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.287068177 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.283426737 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.285967829 seconds)
  done (took 6.362310308 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.265319105 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.024244733 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.267880361 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.281992102 seconds)
  done (took 18.061002629 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.032545146 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.043917107 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.027574681 seconds)
  done (took 7.326360551 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.279881807 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.1232608 seconds)
  done (took 9.625416976 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.5698997 seconds)
  done (took 2.792394748 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.416129793 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.552881814 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.227389282 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.172069259 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.253227458 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.718850606 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.748630387 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.373335816 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.16117452 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.221099364 seconds)
  done (took 26.068994502 seconds)
done (took 121.609964849 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.801550484 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.521309879 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.486039799 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.776846116 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.509127873 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.486707705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.494167187 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.743706339 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.323637592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.276094628 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.777349643 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.504718868 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.443410756 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.522633244 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.443776887 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.521844895 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.504882024 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.837846412 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.459301934 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.658835487 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.503396249 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.413865834 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.610028311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.475395583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.509285621 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.436206086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.006889232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.523803791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.637618258 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.070214211 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.445021985 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.831499688 seconds)
  done (took 187.780359437 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.282222194 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.302683928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.293165641 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.283197122 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.283078116 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.286564798 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.285039464 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.296448032 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.297272481 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.285045936 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.282767055 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.283521707 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.295635358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.288906629 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.283549008 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.308004823 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.283552514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.284275437 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.301316182 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.282308901 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.28549423 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.288326391 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.28820172 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.283470048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.297594822 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.28491775 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.305089829 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.28465009 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.284685106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.296964029 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.284681076 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.297554977 seconds)
  done (took 202.496035841 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.29390516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.284814741 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.285909242 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.290975121 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.285322285 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.286767078 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.285084296 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.284920049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.284906148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.309852919 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.285069719 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.296064598 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.287760799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.294908075 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.28611223 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.291737667 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.284237253 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.292266697 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.284437616 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.291165118 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.283491891 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.290463723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.285623788 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.285992197 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.298443391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.291569811 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.28508771 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.298526124 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.285262617 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.285089074 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.294387817 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.285761831 seconds)
  done (took 202.483336727 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.487547858 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.293028131 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.293723127 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.249120997 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.294506749 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.292459654 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.285355967 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.490587633 seconds)
  done (took 13.915452986 seconds)
done (took 607.899090556 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.491815828 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.21399319 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.484961452 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.316643235 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.003465948 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.31544651 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.315444748 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.471343355 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.18984313 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.474712264 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.503855656 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.312689165 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.631820762 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.313967351 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.553346208 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.408016414 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.168189767 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.277072865 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.612275845 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.785191036 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.555888751 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.70201061 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.471833597 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.188423719 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.637758577 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.70174624 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.915261631 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.167974278 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.315822667 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.610054788 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.818648942 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.231393145 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.367747574 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.350102733 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.405237779 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.38714834 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.140290501 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.348841902 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.486253537 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.457053537 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.783348009 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.009899474 seconds)
  done (took 88.126670563 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.283168335 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.283575469 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.282971956 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.283873367 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.284708019 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.28322431 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.282465866 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.282437334 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.283295299 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.282521019 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.282932013 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.28422718 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.282727061 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.285137698 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.283681913 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.284566339 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.28427826 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.286411309 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.28408997 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.283411042 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.285051942 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.284571323 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.284670229 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.284335326 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.284954935 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.284878002 seconds)
  done (took 34.615200311 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.297741572 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.526704848 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.686901694 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.304649471 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.297378112 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.30021111 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.367576909 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.298332765 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.30019367 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.300460885 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.444562623 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.300982526 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.331707144 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.693837549 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.302095555 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.299352941 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.298535221 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.29881206 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.534332075 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.310077981 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.369471135 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.299777661 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.369881699 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.310333645 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.300771428 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.299164871 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.302948427 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.786602729 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.302069942 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.446305653 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.989612348 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.368489036 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.738554046 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.699303614 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.993867912 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.303516198 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.299628485 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.449905454 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.301144435 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.30012076 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.36839269 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.30091338 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.696062737 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.908118375 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.316535322 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.300224836 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.807891859 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.449568656 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.519305048 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.307996341 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.71665732 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.304576658 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.30121775 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.301012957 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.518887232 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.307379071 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.300413517 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.808245518 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.307291074 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.37031069 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.302295077 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.300763685 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.536221975 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.303636161 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.523857428 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.302396347 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.309298159 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.301723966 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.69845231 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.305614172 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.92320187 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.318062451 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.301702831 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.447511278 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.528629506 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.841806459 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.306558338 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.540807523 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.757277548 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.37131997 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.307690369 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.778540994 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.375175234 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.307711387 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.304719429 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.304990186 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.303038281 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.352245094 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.369462076 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.857745692 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.919731424 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.826459857 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.375352762 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.315030869 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.303525966 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.81074981 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.30686397 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.30244947 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.691736117 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.929451223 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.319176541 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.309656622 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.92430949 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.321284382 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.372693476 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.309947654 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.703028866 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.305083014 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.347179361 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.30349937 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.310042306 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.305384265 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.372988429 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.308690907 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.3036034 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.902245446 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.474374542 seconds)
  done (took 170.63001249 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.29770539 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.296280902 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.29718077 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.296707384 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.296104418 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.306741676 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.300387591 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.296743225 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.302832213 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.297564232 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.296865368 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.300288338 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.298445936 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.296103123 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.306834996 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.304483102 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.906115216 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.29744464 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.29741883 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.310182 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.074689673 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.300497094 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.298433443 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.298605918 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.298724377 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.296841401 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.303898654 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.300452901 seconds)
  done (took 151.013485062 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.304565575 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.81894066 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.309227767 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.42265494 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.326552692 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.303116346 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.421508943 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.35874527 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.306444657 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.302916229 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.303511942 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.579014206 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.308740288 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.77271932 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.475803584 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.423694039 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.774436434 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.309033124 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.303772857 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.304046908 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.424397632 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.312142498 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.577935761 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.815821796 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.307265478 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.815978948 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.295468869 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.305523005 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.305048547 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.816594694 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.304983951 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.580663073 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.374848107 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.35910891 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.817061821 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.774391585 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.777531968 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.438668664 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.30535371 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.304419151 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.304387651 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.294811472 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.819218688 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.307501621 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.307017185 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.812258173 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.321505376 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.307357856 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.315959435 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.304865886 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.360192887 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.360533953 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.584734276 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.82388603 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.37561466 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.32707026 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.423923942 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.665585156 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.311957786 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.776489609 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.297644656 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.823164731 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.311304181 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.295647614 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.307792642 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.311749148 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.441001634 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.42559083 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.775920233 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.310772109 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.776863085 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.444334656 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.306171296 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.307260119 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.309332624 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.821468382 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.778866283 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.444272996 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.427725505 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.480537457 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.297777838 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.306638745 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.299112674 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.376608618 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.307580545 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.822176143 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.779105757 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.311940258 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.309897696 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.310133095 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.309686918 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.46474802 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.825331808 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.377785605 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.766929524 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.597533511 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.584838957 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.310330788 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.361792097 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.308666084 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.586542226 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.310883073 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.360514047 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.726763884 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.588109062 seconds)
  done (took 154.789891161 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.528913087 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.423646548 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.391762342 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.412786075 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.811568734 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.853124289 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.454137513 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.424068414 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.411705136 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.540115637 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.389061182 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.400348573 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.477341394 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.392481972 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.963431261 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.374276256 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.394566034 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.426205961 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.409644752 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.268843022 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.900397713 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.578902723 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.464314381 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.374269903 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.39589574 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.013088335 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.828528948 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.804924316 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.468161247 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.488533627 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.797788283 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.380477815 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.209027593 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.928821707 seconds)
  done (took 62.627061713 seconds)
done (took 663.030798483 seconds)
SAVING RESULT...
DONE!
