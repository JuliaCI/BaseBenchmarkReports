cset: moving following pidspec: 9128
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.32838893 seconds)
loading group "string"... done (took 0.586905439 seconds)
loading group "linalg"... done (took 7.278904151 seconds)
loading group "parallel"... done (took 0.166593788 seconds)
loading group "find"... done (took 1.162618863 seconds)
loading group "tuple"... done (took 2.028117443 seconds)
loading group "dates"... done (took 1.295943031 seconds)
loading group "micro"... done (took 0.239178926 seconds)
loading group "io"... done (took 0.985032915 seconds)
loading group "scalar"... done (took 39.583077733 seconds)
loading group "sparse"... done (took 12.776975533 seconds)
loading group "broadcast"... done (took 0.998126952 seconds)
loading group "union"... done (took 13.810339341 seconds)
loading group "simd"... done (took 4.658950747 seconds)
loading group "random"... done (took 9.409262777 seconds)
loading group "problem"... done (took 1.995676353 seconds)
loading group "array"... done (took 22.312447474 seconds)
loading group "misc"... done (took 1.998046073 seconds)
loading group "sort"... done (took 3.39634819 seconds)
loading group "collection"... done (took 19.189885173 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.565083485 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146815579 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121857113 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145589814 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191407559 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134353745 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.148294598 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08760729 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.946929199 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171494807 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.146281362 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.53015634 seconds)
done (took 5.080436482 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.199557367 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091428633 seconds)
    (2/2) benchmarking "String"...
    done (took 0.100501868 seconds)
  done (took 0.883056421 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068095171 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129226196 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083452495 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070001857 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068631298 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084356723 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069788269 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068049058 seconds)
  done (took 1.271962853 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077309395 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071553288 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087315594 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070252844 seconds)
  done (took 1.005413273 seconds)
done (took 4.13104212 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.950135948 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.25380635 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193939603 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.468600075 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.154340854 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191827603 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.663661973 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.339184182 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.217791321 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103832 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107124084 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391542863 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109602277 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672367327 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076668718 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108373344 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159301301 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44954619 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08304796 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083674484 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105068888 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142079834 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102181421 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079301108 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170785994 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069914344 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.153707688 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096462519 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069405566 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.250961197 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.19018726 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684096466 seconds)
  done (took 10.62943052 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100449816 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.123571921 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071971108 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144746455 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122147014 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074463957 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074678116 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086659789 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.096743964 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.166454551 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.121312568 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.127445286 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069296851 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073329702 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.106317223 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232926638 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.095507102 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104558622 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074754807 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07779159 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.128614485 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10104188 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084306523 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098279554 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154764496 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197180552 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101815927 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115273751 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073029059 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.103068827 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132936259 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13677237 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067444463 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085778844 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.162044276 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099422125 seconds)
  done (took 4.696429323 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.134699054 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.178863987 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09600481 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156450349 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086622277 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130604338 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067962032 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101776834 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257944278 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.114889131 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.50455736 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133795258 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089318988 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069236675 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089367 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069067685 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.651567142 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146644409 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105569185 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103599288 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076366151 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08814239 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364391118 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071785703 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069369713 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088039277 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062634801 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154047072 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07101378 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.297016109 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110370069 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0707999 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121125196 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179156526 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098071782 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127317785 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084645542 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069982634 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177630141 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074389658 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.126978023 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11146352 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068331017 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12414978 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12325282 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070642474 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083833924 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.186499833 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067440192 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103084992 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.963945605 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167932184 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080682356 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069165538 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.302468217 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105845288 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070434794 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066982176 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.270867919 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.163692314 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.069961115 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.087801347 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070653964 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084384028 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073009858 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377025667 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071310013 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.738517225 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086252166 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080030578 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087278504 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070274673 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092626176 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075878236 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103248519 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069192246 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068693273 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087022651 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067831229 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086148196 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088648225 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212055459 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086889381 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072148671 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082045971 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068092335 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088123143 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116966025 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071524377 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08476896 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116021147 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071270172 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068993261 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.123925461 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068800463 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106698355 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065262348 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087092744 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.13065892 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069450421 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.140065956 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069330017 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.11716873 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075412146 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11773084 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.105733653 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07263042 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.160307803 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066902637 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084928377 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070792455 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084403322 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071626042 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071149615 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103369536 seconds)
  done (took 21.65305024 seconds)
done (took 38.809706936 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.310307913 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094251668 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095267663 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076214643 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094834196 seconds)
  done (took 1.442589144 seconds)
done (took 2.182998551 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.150505498 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103197364 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081514727 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097805604 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081126659 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104828537 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117321563 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082762973 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118969431 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066393881 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11445058 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065182062 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080403892 seconds)
  done (took 2.029117735 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084563545 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086397655 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086791446 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082887977 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079486706 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083071425 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080896162 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105427784 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081514585 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088791952 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066048919 seconds)
  done (took 1.660336166 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081904947 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085538295 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087324169 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083674711 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081195965 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083992264 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081778063 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105904832 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08311253 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091276537 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067279464 seconds)
  done (took 1.674273713 seconds)
done (took 6.096772648 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081227983 seconds)
  done (took 0.808733064 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.744028778 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.867802124 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085320963 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137518202 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223380439 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.159688642 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.457744151 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114990464 seconds)
  done (took 10.733440812 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.115525948 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087057532 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071217171 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088216714 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073282038 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086819031 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074859133 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073378658 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085935892 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06978772 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084451313 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073851413 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08572645 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074087838 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08620214 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073620447 seconds)
  done (took 2.108472579 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.104897188 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.104586611 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092272979 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077223373 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090891815 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074611693 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093123647 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074939095 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088219771 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07452709 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093251776 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077112057 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089200588 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06700688 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091988329 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078532285 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087922821 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076937314 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092510949 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077222621 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09283388 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067269555 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088459104 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076721383 seconds)
  done (took 2.885340678 seconds)
done (took 17.272012558 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.135237243 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077969036 seconds)
  done (took 0.95544061 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084216965 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099974037 seconds)
  done (took 0.933989116 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084776908 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081891587 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091246373 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094186517 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083340678 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067465109 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103919884 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068346072 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082547903 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067876811 seconds)
  done (took 1.572101909 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071346679 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095638382 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072677378 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098136322 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07539102 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081949355 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075887534 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085319234 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08004027 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079943254 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073689994 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099696563 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073015079 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101462706 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090360497 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070359216 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089209142 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070166296 seconds)
  done (took 2.235433674 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068770278 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069522992 seconds)
  done (took 0.890315737 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068940016 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065425114 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082679565 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067993275 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080247169 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064331989 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080727226 seconds)
  done (took 1.264176973 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.412234182 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110583744 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.265909461 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072949215 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106641363 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.29651633 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068257122 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071920583 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089028796 seconds)
  done (took 2.287167796 seconds)
done (took 10.885530645 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083074785 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087405233 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112628224 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.441573689 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107617208 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067682384 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145204491 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.215363876 seconds)
done (took 2.012248279 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128627986 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.627615111 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.413612467 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.216931434 seconds)
  done (took 2.011395888 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.388020542 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092308751 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074578869 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068496872 seconds)
  done (took 1.384265858 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067069039 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071056319 seconds)
  done (took 0.893708059 seconds)
done (took 5.174990969 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068477876 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.114973084 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067334438 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065989452 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.083003793 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068076644 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065638836 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082807314 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067169046 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084516652 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068497039 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068174953 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082735939 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066111147 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064789489 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083030854 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06798075 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065680554 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084217938 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066105681 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080292759 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068140785 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064839677 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08056161 seconds)
  done (took 2.573783095 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087633936 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085178 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074774452 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090749737 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07336325 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090983048 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075931526 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068187697 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088511711 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070247573 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087287849 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071865766 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085661412 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073062439 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08557338 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073590935 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089333906 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068558503 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069844596 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088091819 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073975127 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083525376 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071976097 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08894515 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072425467 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087564654 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070673569 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083730977 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074382157 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088391118 seconds)
  done (took 3.152968931 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072780745 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065173985 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081947585 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072608272 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065053954 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083197687 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064949472 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08168792 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066591794 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06508102 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08298903 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066025344 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06536389 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082130248 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066587715 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084627281 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082121243 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065814185 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081025205 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066347552 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08442888 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066362584 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065202545 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081206805 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065420303 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064885231 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080984315 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066099303 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081891135 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065525559 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068477546 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084410187 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065639775 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072168588 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085511189 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064564253 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069830805 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081821922 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066191214 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080644968 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065443557 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065799837 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080522165 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071991908 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065618418 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083329293 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065636939 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082792942 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066665044 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068610645 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081158689 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06586648 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082958718 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067263552 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070323155 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080627946 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066553279 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065002053 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081538864 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065414406 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080715396 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064555744 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067832446 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081657211 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081343616 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072371923 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080808529 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067657835 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081631954 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068751157 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067607006 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09485418 seconds)
  done (took 6.038752737 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.121424624 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09453523 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084576407 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067488912 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080429024 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065854188 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068761168 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081245926 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067990218 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087983074 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066470868 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083165085 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067359365 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081058303 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082078546 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068198613 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087664089 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064070042 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066392974 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085542086 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066556068 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084709315 seconds)
  done (took 2.483692724 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.193145304 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089648945 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112128382 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092028278 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086818996 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076146924 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088236061 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072612589 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072689524 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086061748 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071280523 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088199994 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069995662 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085855369 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071528482 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087762536 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072753723 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086581832 seconds)
  done (took 2.364103113 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080173338 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068570653 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108459777 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06812053 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085106599 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070429848 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089540428 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07757961 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086104976 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068549428 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094320553 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.181432526 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086827497 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067923504 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070584494 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084367181 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070538129 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084415512 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077813486 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089267277 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073757589 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092383597 seconds)
  done (took 2.639100683 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083577598 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069627804 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103454609 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086924159 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064399277 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066303058 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091478998 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068783026 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090082151 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07032582 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084055537 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068960001 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073038537 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084144516 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073794779 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084795152 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07020689 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084238466 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070988831 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064331135 seconds)
  done (took 2.319224965 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089648542 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085671262 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070407365 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094394581 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070216026 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08594251 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079174982 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085459341 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06963268 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109936511 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070057348 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08575597 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07778719 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091326532 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069886936 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093663454 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077754601 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095210768 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085496969 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069318943 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110223898 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070293911 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09373307 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07016976 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085652632 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069932296 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086030121 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07501324 seconds)
  done (took 3.08742721 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068509264 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069030334 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082089458 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065791146 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066023367 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081938332 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065300484 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065669576 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084684674 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06575127 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083980228 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067768897 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068411261 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083760053 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068234331 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067697622 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083911086 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065676052 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0655591 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081366781 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067724635 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083674406 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068280672 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066032546 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082073856 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067933106 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065644117 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081817044 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068083799 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066265691 seconds)
  done (took 2.940074251 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077997919 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093431609 seconds)
  done (took 0.947881162 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065752961 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08284032 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081542804 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072631165 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088640898 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069183163 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09345819 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072684742 seconds)
  done (took 1.397270824 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084179404 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079935995 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08627067 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.096675637 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079626144 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08588701 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15923101 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085919668 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075088598 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083220153 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083037328 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066749875 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091826147 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068518917 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091180021 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075407582 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082297817 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074468171 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071233401 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083205967 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070063141 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096032137 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070318801 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.081687374 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070143455 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078350872 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097654562 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070135888 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08825306 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075764954 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090385877 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062834288 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06827495 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085623524 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066810961 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094692509 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084643877 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088354497 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078443941 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086190625 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07941648 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080235059 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073963059 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091181722 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079622042 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069087493 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086209904 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063992849 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082787597 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071120179 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064711359 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084909664 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063884382 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091274779 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072266324 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079146696 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083017252 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069991093 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087898339 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072658624 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091567042 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.0699905 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070693989 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084568579 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076098278 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088577886 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078163185 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079991405 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063257302 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065869506 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095185607 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091519513 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091045262 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.07011421 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08643472 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06689757 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071614211 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086106248 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075755488 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091451955 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069231855 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091154864 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077011435 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084842035 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071339473 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076838857 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083568574 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070346536 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083130153 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085694347 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083672381 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066685192 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066605471 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095173237 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07230184 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084714042 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066941249 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092355727 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063210493 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068886948 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085896882 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069314064 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096368378 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074013823 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090728135 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078916996 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093568629 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068842127 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071428488 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081606239 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069436094 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083329739 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075740437 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061989758 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087649006 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070242023 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084817169 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077949065 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083044806 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068782704 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07729161 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091093851 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067285418 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082653076 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071559424 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068406722 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089090855 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077104695 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083808345 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064011495 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080504813 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072846161 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067943128 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088805765 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073562251 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087756167 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064369351 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083036403 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073141403 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095443952 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069586253 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069768302 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091321366 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07074352 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084472676 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075451033 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070786028 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08509592 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074736269 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086274713 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064976064 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088957172 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071185412 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068007513 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089198877 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072401316 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087047545 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06924218 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067355486 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090644586 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06936341 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084814022 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06830509 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083338895 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07923075 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070916527 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081091404 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066668321 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093523897 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06662819 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067950943 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084859775 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070808341 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086413409 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067179311 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084415832 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07010479 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079722207 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090088888 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069971178 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090677654 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079905971 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.0851456 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071496957 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085318057 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071228323 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.07130994 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097502356 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075976553 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092894026 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073315945 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083582259 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076398098 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078293419 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08689298 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06727242 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085209855 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074016943 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.0914171 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074569425 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071251263 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085409629 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071397784 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091792283 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073560921 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070030196 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085073654 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073017589 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083960776 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075753237 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086208773 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079800781 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08865248 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064582702 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071505902 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084268533 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074434125 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081235464 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066371343 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067351235 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086827208 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067622752 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087952376 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063187625 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075665098 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093150781 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068490585 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085214697 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068950629 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09281545 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070471853 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072514823 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089280445 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074947277 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096243783 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067802994 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088341744 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080535058 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068996334 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079542404 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074017354 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084449452 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067704018 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067206495 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083260135 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072810183 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094232317 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075901182 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079761161 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07144441 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067442088 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084437734 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064159262 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090435962 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073194129 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070407342 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094113596 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070279432 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087761067 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074365457 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087059596 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072158536 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071313762 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091264677 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071961759 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090394119 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069635735 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091236386 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069560671 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.069011091 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090412875 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070726733 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070658504 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09396196 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070018912 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088270059 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074217893 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088709716 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071282028 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071470278 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087166499 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074308692 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088960003 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071105742 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073437854 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083851234 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078199098 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08776483 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078983923 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070340603 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085912445 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075898947 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091115566 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076496453 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089175933 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.072200422 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071827092 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088985221 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074091391 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095150263 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068109662 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.100633299 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080014341 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088475993 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073094472 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071053594 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090472305 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069542555 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071257989 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089401412 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070958583 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088025663 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07599416 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0900252 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07121579 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072364886 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089420786 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070696511 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088596158 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064693821 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068294584 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087034669 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.07027684 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095867987 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069645123 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085235052 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067392306 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07028043 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085118189 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066318458 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093975624 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078581189 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086888356 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076441752 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067942592 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088082967 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079375559 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082723403 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067575249 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084053502 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066747557 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076000912 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087427827 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078433769 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086656869 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.070768555 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067203497 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089158885 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.0696708 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081566971 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066670149 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072781334 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08528378 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068562486 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085947475 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071427845 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069763099 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095924674 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068374258 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08810413 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070227654 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083601333 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06889442 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067921181 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090886111 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071777268 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068228548 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084647721 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069278487 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087781409 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072259444 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069913556 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090185953 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078639895 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087746316 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074489499 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090804295 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066175637 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073592692 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085585994 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06959377 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085837243 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073027916 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071302681 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087258655 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078141075 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085425605 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069895328 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085910453 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066984422 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068678748 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086551316 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069281747 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084883516 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070303594 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076840658 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083940228 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072062137 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085559142 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069602488 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093117941 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06997981 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071963514 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093355953 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069144391 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087669141 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077168671 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089670469 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073584368 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071800652 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08786619 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076120138 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085907981 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075865791 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086121793 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070016738 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069982653 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083921551 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068794152 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085334035 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067915639 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075225284 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088189772 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068969536 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085179676 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067201836 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069630646 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090486417 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07648861 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088637712 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072003854 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081461933 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066708904 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07037504 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084454629 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070904249 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088952949 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075285596 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071760652 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087087344 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068035831 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095757904 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075470214 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090072486 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06710391 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07276861 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08673142 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071487189 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087415598 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069066651 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070939339 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090124736 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071104537 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085283456 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077370803 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071734937 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088057605 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071143282 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087071935 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069423872 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063691037 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087510947 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071597421 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091202633 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071508085 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085397405 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07993468 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066596041 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087313845 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072120407 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085425686 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073575065 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081728127 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070387026 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069722679 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087280494 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064215878 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085297451 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066536493 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071858004 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085538729 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064204208 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097460732 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078745735 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090168654 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06872652 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067406721 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081857819 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063834635 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067891631 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087777713 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070803692 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096748075 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070263134 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087087669 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065467497 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070096815 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090505358 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07395335 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085127507 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066392409 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069455063 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090703807 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07469294 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086083918 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069881687 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074317041 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090144302 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068520825 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09224443 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068099449 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073346767 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100274003 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069509863 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087504822 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075590824 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09445768 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069828727 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081184512 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070472837 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071585356 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087017227 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070275084 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087638041 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084640568 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089493117 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068681492 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068076123 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090159403 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068217248 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09463111 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07068524 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088181663 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075351446 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071137341 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096071049 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071789194 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097550283 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074056881 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091869418 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069805387 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087591171 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067506077 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067914045 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088587729 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070355759 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09297963 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.079940032 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087806597 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081495797 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098348019 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072465487 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067640856 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088309728 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070128121 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065488817 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090306274 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068731188 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08662043 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068873792 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06988649 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090083089 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076697465 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090407471 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072659943 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070155035 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.083683301 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073332704 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092081064 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072328194 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067375704 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089346611 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.072446573 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092710182 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074840754 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068601585 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091294566 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072268555 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089901855 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066675448 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076428744 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089001114 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073663332 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088294629 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071559662 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070730763 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093265948 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076081862 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090280915 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073310223 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098568312 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073897181 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086710779 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067805687 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076010555 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086824449 seconds)
  done (took 47.716603345 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111927688 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085609846 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066335365 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08488583 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079837128 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085900619 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066066379 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067046605 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085987654 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069762842 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084698506 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066040367 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09457761 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091136411 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097134441 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088718079 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066137059 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066781159 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084231212 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067922224 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09410603 seconds)
  done (took 2.517760492 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089322777 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104140874 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082506783 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103608084 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094786525 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081636974 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100223725 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081226184 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103592509 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096280994 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085150915 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100440204 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.078076611 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096659323 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07851444 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098649741 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103654805 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077397721 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.101258629 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082323847 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098257832 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081260885 seconds)
  done (took 2.830462409 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070805488 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069831636 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089287736 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066057052 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070096835 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084346618 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074718567 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.0866244 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07386891 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069155366 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08896661 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069355072 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.099001549 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068919564 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070260122 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086349626 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.138127278 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073977819 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087955892 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.072314801 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065199985 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090948827 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065976048 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.085072371 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069313374 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073806751 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08960063 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068782834 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088191567 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070300551 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070564017 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086649259 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071777079 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069698399 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087744611 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069213387 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088450325 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070505141 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064902716 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.087114324 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070641538 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083839306 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07033597 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071781004 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086855386 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068872215 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070461366 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088559507 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065346757 seconds)
  done (took 4.63790872 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08892446 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.142801481 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089975056 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124212107 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083674771 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095296956 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072891012 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124480422 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086733333 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068517221 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105830433 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084660451 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.09021202 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074991163 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093490674 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070411412 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090552138 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070250187 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.093333404 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070626881 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.09385595 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.078261428 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103895023 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084615033 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093750661 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070274267 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08843416 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.075629912 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103205042 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093940362 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075541115 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094771951 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087136149 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091092333 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071019603 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091194512 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088636346 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089420973 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.073522653 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.08661821 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072958257 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093306508 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.078236592 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105926577 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071286228 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.095212979 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070781122 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085592419 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084761628 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091759267 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079964723 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105268352 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074300008 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089625087 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075618114 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.105074834 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070328794 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087782627 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072805337 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.10343146 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068057341 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094064786 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103535367 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.072600156 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09691911 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085762766 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.094099896 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075290078 seconds)
  done (took 6.909120065 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078864158 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093118919 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083971297 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10468116 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095955799 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07818567 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096075406 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076925984 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095581195 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082804364 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096571788 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119518414 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072616587 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099028229 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077338165 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09631334 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076224545 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096503371 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095420411 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077434576 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.095804012 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085929491 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096173452 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104081517 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107697781 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091082441 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077229967 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096158024 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104941332 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077923618 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10814364 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077759408 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096898554 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103132429 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.089869548 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096524833 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069984754 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095603111 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077432917 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096813891 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07147184 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105197305 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095724117 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072235917 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096101628 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077186502 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105249472 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.108229059 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080816482 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100895188 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076347694 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105270836 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095662656 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077352648 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104687756 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.130148754 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08558168 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104191713 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095935833 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085788164 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105110002 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.112669596 seconds)
  done (took 6.563905486 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092283747 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099225288 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101914328 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065871955 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068438709 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094334092 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068614965 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087312632 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079701955 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098805121 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082017267 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093341315 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077591433 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101925072 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093944706 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078514381 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092984872 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075320864 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099182439 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074128529 seconds)
  done (took 2.552842568 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077841593 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106659193 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071843518 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095438628 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073963399 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076950259 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093500978 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074668215 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090726124 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074305308 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101354097 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08178938 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091267804 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077720456 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100364143 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075118938 seconds)
  done (took 2.194585291 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08197022 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097987469 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08404605 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088137779 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067002678 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084443926 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06873554 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065203274 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084508335 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08311783 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088053464 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071630012 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087861885 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068190111 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064964768 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091198457 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065292061 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085393705 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069308493 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102831332 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079977053 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086293567 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070037484 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089454828 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069823296 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093316468 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069419174 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067384559 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086076153 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069114684 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08801621 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076954209 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084943129 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067669707 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085261658 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066853939 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068540106 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.0886626 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071900224 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087400686 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067539477 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068199794 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087850098 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069900638 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083417965 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069440361 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083412129 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.074753212 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065800626 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087333389 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068404873 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090684814 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070564764 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097747372 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073192999 seconds)
  done (took 5.159477818 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083355618 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071221637 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083524824 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067071128 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089771173 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070940778 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071688192 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0902729 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07147975 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08591068 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071195007 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08996487 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071050322 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070854869 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089544952 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072618935 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083407545 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070713266 seconds)
  done (took 2.241766899 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076135113 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069076644 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094934778 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068773702 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087671251 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072324407 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064169397 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086507055 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068524699 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08683908 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069596864 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070201682 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086705711 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072198037 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087302882 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069614208 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07125037 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086493385 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069555818 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083054175 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071707251 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067171906 seconds)
  done (took 2.516569428 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075707423 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096497708 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167208752 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109458111 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084036733 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100918863 seconds)
  done (took 1.472378731 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094011623 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101907739 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07058326 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108770721 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077289864 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089053391 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071468675 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089412559 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080678875 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103635123 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070051411 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099019989 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097683272 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082579942 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095607114 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07637779 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089454438 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069719418 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088556198 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108762167 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072104601 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098074776 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071755486 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088949256 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070445735 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098028876 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098749902 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086512118 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090879362 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081832353 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097680307 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072036581 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099173097 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10568682 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073293705 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098447069 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070763214 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107838739 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095696511 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079861139 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090593254 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077657771 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099522278 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075820446 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099095559 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089882161 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076373204 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089379735 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072183368 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115114676 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094655406 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079492936 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097910346 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082726901 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10210503 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118727928 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106825156 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082170134 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09865361 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107146208 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082297048 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098855761 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081296855 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106617307 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098755085 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081089662 seconds)
  done (took 6.768501473 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087660471 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110059494 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073372861 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106302034 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101252506 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072654373 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092031242 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07413008 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091549603 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072969872 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13475367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072788144 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101392868 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101291182 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073628021 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092040145 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073193628 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101102182 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072405274 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118732781 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092410076 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08178631 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101920157 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101121106 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086762551 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098564021 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071549399 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093021222 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07235227 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092930344 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096447828 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074125562 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101016622 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072089914 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100390039 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072597031 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091713521 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077975065 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092304855 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07788525 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102677373 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110594933 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072479992 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09297138 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106978778 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073049041 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09193608 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072709027 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091581307 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072293296 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106112415 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087435723 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106872263 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101700024 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072785563 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091828254 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0727778 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092176866 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073773555 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097976097 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0993333 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072541297 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118651424 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072661124 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091935092 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101480375 seconds)
  done (took 6.767206622 seconds)
done (took 131.547710709 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202947933 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185232803 seconds)
  done (took 1.226781756 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072223008 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098938903 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100164544 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129920854 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088892333 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101977417 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120112394 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082540867 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068263977 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089001816 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069873239 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08905196 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133991864 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068881921 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08834035 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070571558 seconds)
  done (took 2.320476092 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106375434 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.200400025 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111840456 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067123169 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101375313 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080460852 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086893213 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080918418 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094069665 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067869466 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100181087 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079014903 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067276359 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097649151 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093359715 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082131578 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066753828 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100341175 seconds)
  done (took 2.533497457 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110600706 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145941884 seconds)
  done (took 1.100069991 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.204666259 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124495787 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207768969 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.434941271 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.233836809 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.279751417 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.176270748 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177753407 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15731069 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.172165213 seconds)
  done (took 3.013541602 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102461896 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175622449 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320749143 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141089276 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091128065 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118605012 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141598799 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.112279707 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086334927 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104696897 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103799416 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080658338 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.12057733 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078301169 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096597293 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080440207 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123235849 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076253656 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09935256 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078653807 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121743347 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068561392 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097286187 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076566713 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.100796539 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.08118675 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088718271 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069182185 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097140277 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078858978 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.101236283 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117252601 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082056628 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134814192 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105377824 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136533481 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079928708 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095052697 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076506418 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094157845 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08064776 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100265444 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10681792 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080684864 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068652932 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099652278 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06887134 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08776364 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083650021 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100030708 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082593901 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.101471335 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133999777 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100140482 seconds)
  done (took 6.377572052 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.763535284 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.136946472 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073941106 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.830727979 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120530954 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087868213 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.76802515 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096771681 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239533944 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.779581662 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11769886 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080046776 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.216251017 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.225192392 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.94105349 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.298801434 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.658701902 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108086487 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112290568 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.139816805 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.167914341 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165794944 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.157976281 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.409331812 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10148724 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076717909 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.146141338 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104367616 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.149411231 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.11153398 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07954184 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.163811438 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.236346692 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.18970212 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.080360039 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096921995 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075310085 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.155782664 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257186499 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.200950582 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.166209667 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0734989 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074124522 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.170210336 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.139172719 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073212817 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.149328125 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.160786935 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.178984428 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.078723343 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.102809574 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151527695 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.149693987 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15215841 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10782186 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308967049 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.276128692 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096951947 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128575276 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.089732112 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.250165592 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087100125 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.213272991 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147876316 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198546036 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075588628 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76308703 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.159038151 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074773029 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101879147 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126656677 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079901889 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.166855571 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.129699572 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.377133656 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.150352645 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101373449 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073828265 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21264696 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088855517 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097104548 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.15127796 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.079028551 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129795435 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.174755946 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156528599 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.157251503 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.221470667 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.173645153 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.150479902 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.079094712 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132840108 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100933375 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.201037143 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.207618481 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.151490839 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.199455005 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.148924921 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.151608068 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.15695171 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105016063 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.159094032 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128041767 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109926039 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.150782932 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.204360882 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.108582817 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109555773 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099322064 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.150229334 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.133329414 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092424076 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.170127819 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.159281801 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.436726751 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.158002351 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09340168 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092446903 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148013604 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170584075 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081899428 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246580875 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128752212 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.156397953 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129950574 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072808899 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127892675 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.151047357 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106843113 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130567822 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.149746894 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081538588 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.244931982 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.181766922 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106655963 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205920135 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.169561845 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10199439 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158834594 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127807194 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.155292966 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082865557 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.168881985 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.080382407 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782455038 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.151246462 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130203043 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078055465 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171049646 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094139168 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086981244 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108786204 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070294927 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758494678 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.090219617 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106211069 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107730547 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.081205372 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12856933 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.145376779 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.100506745 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.149608478 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21482594 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.082446404 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126620511 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.109241652 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.147470627 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.080110265 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.110548046 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.109764648 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.089452427 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.131743722 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09879769 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08927915 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.156317042 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.14925955 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.206734859 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57372593 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.076026424 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.110314554 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.192820872 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097298082 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.274902908 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145695743 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.190331388 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172211949 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.086893217 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.294722636 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.15284754 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.172654709 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.091094532 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.182622341 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073452647 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.146214964 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.151617664 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.097990451 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080779975 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.171450169 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.157368619 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.152910456 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955018198 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073965905 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.21112888 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.093384345 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16114185 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.080597692 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105399571 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.281886018 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.077959477 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.15653523 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.173311372 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078621077 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.110678833 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.681167588 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108472917 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.147000505 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.080020468 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208854913 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.151256577 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144540467 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16749554 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.082730922 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.149701044 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.195932321 seconds)
  done (took 42.306519187 seconds)
done (took 59.719301843 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.283520193 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195171491 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258038376 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.15017503 seconds)
  done (took 1.837967129 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.151809073 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108917231 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122044121 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087571186 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107735072 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087824658 seconds)
  done (took 1.535348369 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.442489318 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281817583 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242145406 seconds)
  done (took 1.84070069 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.305140824 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.234801566 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.459743842 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.304935145 seconds)
  done (took 2.287587636 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.19750747 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117765052 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.090767564 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087287466 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164796676 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.266695558 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.133192323 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200819414 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083043423 seconds)
  done (took 2.26372885 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.212515511 seconds)
done (took 10.849342141 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.339146828 seconds)
    (2/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.134486502 seconds)
    (3/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.320787659 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.299563846 seconds)
    (5/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078980874 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.185569997 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.28605685 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084661812 seconds)
    (9/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.203117087 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103767227 seconds)
    (11/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.078157025 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.194964773 seconds)
    (13/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.114987055 seconds)
    (14/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.17358809 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078692367 seconds)
    (16/309) benchmarking ("sort", Float64, false)...
    done (took 0.151414413 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.179912994 seconds)
    (18/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.279612553 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.135547495 seconds)
    (20/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.084947451 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.217998599 seconds)
    (22/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.175467178 seconds)
    (23/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068509121 seconds)
    (24/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.26569101 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.225459777 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083436771 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.284182123 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.249517481 seconds)
    (29/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070276459 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.121521259 seconds)
    (31/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.28079896 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.097336313 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.101306746 seconds)
    (34/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.253545976 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.117376348 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.266597668 seconds)
    (37/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.195895379 seconds)
    (38/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07719922 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.144128231 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054066077 seconds)
    (41/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.260413948 seconds)
    (42/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.120346806 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.096667346 seconds)
    (44/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074633824 seconds)
    (45/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.130136405 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.223657148 seconds)
    (47/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.130908368 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.125677735 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075978391 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.119752615 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076492968 seconds)
    (52/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077896532 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.239880114 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08845192 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06873588 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.097656952 seconds)
    (57/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.189572749 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.251344556 seconds)
    (59/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077936442 seconds)
    (60/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099498797 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070657375 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054615374 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.074124668 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110773028 seconds)
    (65/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.13443852 seconds)
    (66/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079800593 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198827871 seconds)
    (68/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.220749971 seconds)
    (69/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.144015186 seconds)
    (70/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.074743558 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.102114509 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100450097 seconds)
    (73/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.075958716 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075186685 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.123928777 seconds)
    (76/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.146040034 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092958229 seconds)
    (78/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.166818109 seconds)
    (79/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074569832 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094396579 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.068992023 seconds)
    (82/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.244003328 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06854191 seconds)
    (84/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101418265 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077022999 seconds)
    (86/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087754642 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121524364 seconds)
    (88/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054852592 seconds)
    (89/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068647645 seconds)
    (90/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075744356 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.118574832 seconds)
    (92/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.144858187 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072020079 seconds)
    (94/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.184081539 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125707681 seconds)
    (96/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.07173453 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.121097331 seconds)
    (98/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08532582 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.253326281 seconds)
    (100/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076046788 seconds)
    (101/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.07498381 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.23371612 seconds)
    (103/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.095649138 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055271624 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.164285771 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089450362 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.16968088 seconds)
    (108/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075979211 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09800838 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068604397 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113817149 seconds)
    (112/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.103272897 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099886295 seconds)
    (114/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079760057 seconds)
    (115/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111541068 seconds)
    (116/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099559914 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077056329 seconds)
    (118/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094969004 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05660813 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109831869 seconds)
    (121/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.22359217 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.161690419 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098423686 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097716419 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118154185 seconds)
    (126/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112421507 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.171312665 seconds)
    (128/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143600781 seconds)
    (129/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084165669 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073552278 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09054053 seconds)
    (132/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069483765 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.096851938 seconds)
    (134/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053649577 seconds)
    (135/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070104023 seconds)
    (136/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.242041618 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074297776 seconds)
    (138/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.07510423 seconds)
    (139/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054744567 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.07992739 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.116367018 seconds)
    (142/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.318445639 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.116042494 seconds)
    (144/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080429851 seconds)
    (145/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.241869931 seconds)
    (146/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.119948992 seconds)
    (147/309) benchmarking ("sort", BigInt, false)...
    done (took 0.215148077 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076295745 seconds)
    (149/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115380247 seconds)
    (150/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082763971 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08937453 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113419028 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.157036959 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074181054 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089544526 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076603951 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11905299 seconds)
    (158/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076417188 seconds)
    (159/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065557954 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116126664 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137935533 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.18398297 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166603285 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076832581 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.159175321 seconds)
    (166/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.138825582 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070126604 seconds)
    (168/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083648613 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.092439759 seconds)
    (170/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080226629 seconds)
    (171/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096296679 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053624897 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068768875 seconds)
    (174/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090567267 seconds)
    (175/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076605997 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053601205 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089030322 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.235769118 seconds)
    (179/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103985614 seconds)
    (180/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079289568 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075521847 seconds)
    (182/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072990435 seconds)
    (183/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05475889 seconds)
    (184/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077019762 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106925198 seconds)
    (186/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064928846 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.100521723 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053866636 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076259339 seconds)
    (190/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055091433 seconds)
    (191/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069058555 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054548654 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090912247 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.109532483 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096686106 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091888851 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098985659 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067653074 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067171862 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.075413432 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069258652 seconds)
    (202/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053198122 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089754091 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068384725 seconds)
    (205/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053538386 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.089005973 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.101795665 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077630032 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.197457996 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069686579 seconds)
    (211/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071861793 seconds)
    (212/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.100426377 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054928652 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.167420855 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063679361 seconds)
    (216/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.260946979 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067332964 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115461667 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06838969 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.193586653 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053729263 seconds)
    (222/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091712327 seconds)
    (223/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055203554 seconds)
    (224/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054341973 seconds)
    (225/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.122192608 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.229878473 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.07673771 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053909867 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171783538 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076830431 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07652172 seconds)
    (232/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096803176 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070169865 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149534982 seconds)
    (235/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054998441 seconds)
    (236/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095000656 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05443575 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172111663 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091325189 seconds)
    (240/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054489752 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114792003 seconds)
    (242/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07352559 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201147548 seconds)
    (244/309) benchmarking ("sort", Float32, false)...
    done (took 0.153930967 seconds)
    (245/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067477204 seconds)
    (246/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.106139502 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069409928 seconds)
    (248/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055878817 seconds)
    (249/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.099723162 seconds)
    (250/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.053821937 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.165754773 seconds)
    (252/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053532894 seconds)
    (253/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070031066 seconds)
    (254/309) benchmarking ("sort", Int8, false)...
    done (took 0.169154928 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076944784 seconds)
    (256/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053999292 seconds)
    (257/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075792678 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091366437 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053626868 seconds)
    (260/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.055800236 seconds)
    (261/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.092618375 seconds)
    (262/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06986585 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089339942 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090400785 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076593532 seconds)
    (266/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053673788 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077162144 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194815522 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117137166 seconds)
    (270/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091632128 seconds)
    (271/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075620297 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075312696 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099625961 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068167136 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090663122 seconds)
    (276/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055281178 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06905952 seconds)
    (278/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054301895 seconds)
    (279/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.085438664 seconds)
    (280/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055177043 seconds)
    (281/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07380332 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098102643 seconds)
    (283/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064712167 seconds)
    (284/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055832228 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.099196086 seconds)
    (286/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068186925 seconds)
    (287/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114645433 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067258056 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067178151 seconds)
    (290/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.076173291 seconds)
    (291/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068209181 seconds)
    (292/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054214088 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097752985 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203864343 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073678877 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054344022 seconds)
    (297/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054040679 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.116616384 seconds)
    (299/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069497299 seconds)
    (300/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095920483 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174087262 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.119620613 seconds)
    (303/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063895312 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089895373 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074212614 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05443979 seconds)
    (307/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092621236 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054230863 seconds)
    (309/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.055037016 seconds)
  done (took 35.748070386 seconds)
done (took 36.625736161 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086157122 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121171325 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077884687 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119807873 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084280391 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105418384 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076667857 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103698621 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084879336 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.108246817 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082666457 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056463916 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099488109 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078812461 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100210218 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096511387 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103351435 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076425221 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.09943959 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067989079 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076176326 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091007832 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070470277 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056598722 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.10326331 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076272593 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097552774 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077944706 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.090278379 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068612974 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072554074 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.09744986 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068162275 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081564074 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097475584 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07684768 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100017179 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079993754 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.091886795 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069311435 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076841553 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.090045427 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07604784 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.0767306 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096411299 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074617884 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.09875457 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083419123 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11796855 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071009496 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076199985 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101822882 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079886404 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097409187 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072484965 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099075122 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074011722 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118502207 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077151621 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071701464 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.098825648 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077552479 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.095799027 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077268104 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077773974 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100756691 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080043016 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096118241 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078666439 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074631982 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089643027 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07710642 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093069475 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068872643 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078903393 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100917613 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067743737 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074390698 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.09717674 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075143751 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.089444136 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07006209 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070499656 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096515385 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070503887 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056874954 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094443894 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074657217 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.089285821 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077306295 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074506483 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.097121741 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070745504 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101642438 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068039722 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074200569 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.090437762 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068554678 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070295701 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094719731 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068413473 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070337453 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.099844527 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070782356 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096488264 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083643127 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068020089 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.096524577 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067794167 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.089879835 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084606237 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100890425 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067940966 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071392637 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088947853 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076393911 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067731221 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089960601 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068426622 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067955462 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096185054 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068607467 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091808279 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075914837 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082279202 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092938289 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072180111 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070196238 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089667284 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075080941 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090955966 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068642841 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070003961 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087709138 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070625203 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069045221 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098449605 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070772439 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098786921 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07063494 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077966406 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09458177 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074382053 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074011694 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.088840915 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061516973 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070356766 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092233222 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071058858 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089816286 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071465191 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068242216 seconds)
done (took 13.552416131 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070572952 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176822647 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.129964041 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100831314 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113946419 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068901473 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103034276 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.133151694 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071265648 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.132503409 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091286438 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111282033 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143472019 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068595522 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068519262 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094711269 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070553937 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.114904502 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107161594 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112079415 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146293455 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067815657 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124349465 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094723344 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115843864 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.130357184 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06980258 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09466717 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072214619 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119894906 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089500022 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072195402 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.091554445 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104193479 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.1212714 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.111273337 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069280226 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.110350525 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069318656 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068935719 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120099301 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126511021 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.085467258 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.108218393 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072641585 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093615017 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070473534 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112631901 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094796537 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.106725301 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.114995422 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13945372 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07295425 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108585417 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067941107 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114146145 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.087200529 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093181768 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069777489 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071386647 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.090585923 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072560555 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.115196622 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.097916777 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.095155832 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08618945 seconds)
  done (took 7.440072474 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090675576 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.1195011 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087633418 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110452759 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06897819 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068895709 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.09196931 seconds)
  done (took 1.578085985 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072679077 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093117243 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11573266 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093343128 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11214376 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.113840389 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079477192 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069461151 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109938481 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071194385 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113857317 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109495428 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.093682094 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077563787 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117156064 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070199152 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117501786 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070242339 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072594949 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116909765 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073048322 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112283601 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072171375 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06961224 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107491994 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070491232 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142329025 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074440236 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093447142 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072496488 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067685917 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.144094257 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107245707 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080726726 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092197612 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085497352 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10723021 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068337409 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086114886 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098241704 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085007063 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093345807 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071040994 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068378648 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.096777581 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081647089 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093493128 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071315805 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072204827 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112893261 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07169426 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107623017 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070792814 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073447112 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.093734487 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076243349 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.101665265 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071709212 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090506952 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094404332 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088114203 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110441931 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085275007 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111202036 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07315666 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107345255 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085047598 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072362614 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094631478 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074553848 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110017263 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.0688957 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071864252 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104579164 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072314387 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117261497 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093854449 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09436268 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080492851 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069520591 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093469782 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070941674 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.116268423 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073563119 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070110008 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097245435 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073628126 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090478963 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069772312 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073775536 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091037095 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071486458 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073288777 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.093324569 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072967538 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110214643 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071630969 seconds)
  done (took 9.550136773 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0727971 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072517474 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094287092 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070507674 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070303546 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093276907 seconds)
  done (took 1.423080305 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103971666 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094954353 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084777878 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097899411 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.11084642 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107425445 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086759873 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109449346 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088944885 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10559983 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085709531 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109203747 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091715494 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100097686 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085638377 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098282573 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086878438 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103711098 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083447425 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099344896 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091711663 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099616339 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076664477 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109442402 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073712891 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098697243 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080991682 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106133231 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08354035 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.108675077 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076514828 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073750404 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098127542 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109020086 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086759909 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098130783 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078601715 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076649122 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.107941396 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076260735 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113256358 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078699074 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.109105432 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078024452 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113149138 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075734621 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097431868 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080783913 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108318202 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074422871 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097524346 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075798374 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097064456 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076496032 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07742556 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112967593 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077155058 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.111478933 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077774169 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.099655766 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073384878 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096492587 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086197907 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096913601 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084054809 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096703005 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076108374 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099406674 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076625774 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099078018 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075222936 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072636294 seconds)
  done (took 7.560912512 seconds)
done (took 28.479712946 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.668101294 seconds)
  done (took 1.611016793 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.816445829 seconds)
  done (took 1.761518207 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.551407806 seconds)
  done (took 16.503456963 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.675762834 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.82585145 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.843758539 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162545036 seconds)
  done (took 3.45165035 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.897280831 seconds)
  done (took 1.864013008 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.251763954 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261228657 seconds)
  done (took 1.463147948 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.736400395 seconds)
  done (took 1.689883756 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.334023936 seconds)
  done (took 2.284588294 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.353319929 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.195173073 seconds)
  done (took 1.507491806 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.536570913 seconds)
  done (took 1.494052381 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.94673202 seconds)
  done (took 7.910578082 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239551117 seconds)
  done (took 1.213291327 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.280445742 seconds)
  done (took 1.241217555 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.242544454 seconds)
  done (took 4.205296402 seconds)
done (took 49.15250696 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084292717 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084371126 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10697176 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081284398 seconds)
  done (took 1.312186647 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.084512358 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077192634 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104983789 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075201878 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104779786 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076400326 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101187872 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080942036 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098252567 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077626832 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076840941 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097964298 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079519053 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100430787 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074062889 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078712808 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103302082 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075451429 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102156746 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076410571 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.096868912 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078816175 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079063764 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098176272 seconds)
  done (took 3.067689447 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082173637 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076223959 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100937628 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076016559 seconds)
  done (took 1.302745175 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083065715 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119987453 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094294502 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103489753 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097571489 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114113608 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07320872 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072919738 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098200897 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080758478 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094257862 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104087276 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115837066 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080350165 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105365744 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069346208 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071482557 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.11430329 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079882598 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104501868 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073546 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103042932 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071953115 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.117535311 seconds)
  done (took 3.213881604 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083045318 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.132045689 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084827464 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.11737518 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095822344 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068356814 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103256834 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094527714 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.155885655 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067638445 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09733402 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068236185 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099591519 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069331403 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080075446 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136863291 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140294279 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072546058 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125050861 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069445447 seconds)
  done (took 2.928473075 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080798875 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073400019 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092209349 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071714281 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079659562 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100221865 seconds)
  done (took 1.472954843 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073805804 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071397702 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095674625 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071616789 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074982429 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093505887 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068666591 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069161069 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093666646 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070422505 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092609793 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069554415 seconds)
  done (took 1.918165731 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.476774948 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07203654 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095532666 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068220855 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074220494 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093331704 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083976507 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070476559 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118610974 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069002405 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093506696 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071752228 seconds)
  done (took 2.362947821 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275860986 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08353041 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.345190853 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177764627 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148097396 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165897305 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11116713 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147319144 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.210216893 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14786635 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243634578 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236136864 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117876201 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200579263 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097607963 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.142305513 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22449865 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209735744 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140027569 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24159372 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195378616 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16562372 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214921615 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134686878 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118008698 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178168513 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.078125388 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110503543 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244513259 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17240709 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188466441 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146843863 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129708472 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247212213 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234124319 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181856177 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171581118 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117508271 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166279182 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.17694686 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277731979 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120848797 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20732828 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142358777 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113443341 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184858725 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156688812 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.157298469 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146899816 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122526383 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186822041 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255764273 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.1784925 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121342036 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145771217 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149506545 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.153122184 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135666966 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262695717 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207457228 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194098406 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.077208506 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131047694 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200325903 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169693065 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.150481833 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189655315 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10093662 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206905139 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202439829 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154826086 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212787837 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.17127478 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12193397 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15963819 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182718013 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189611388 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220562047 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165251516 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.104071426 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162494218 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137213473 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088428169 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.17851637 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08136837 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250014711 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132757808 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.150238068 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145746746 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117614352 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144410658 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234488345 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217895672 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112981211 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.097208739 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137938551 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160389519 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189519028 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121850952 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143445372 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158407318 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.085832648 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204624889 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080747148 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16154482 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.111427088 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163752378 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173153228 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.107293673 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162635981 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110872504 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.136512594 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174454374 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234619234 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123108059 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08932376 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244154778 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166107051 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141798278 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189009575 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23061295 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.136769911 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135991512 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190992891 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259840571 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124055228 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236988415 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114137126 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118194984 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.12025323 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16478199 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149550068 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15915194 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089502989 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.164769312 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244143834 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.107041662 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103780025 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20075049 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088710748 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114677946 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150082021 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135193142 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.103552901 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.137096472 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.142812011 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180859038 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164671493 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142707552 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16432617 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133871437 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236229472 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123542029 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.13845914 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113947376 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.101639533 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.177371164 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234336257 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086928473 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242832544 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.166643296 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140154061 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158604897 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089897988 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208997197 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086540932 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.103242269 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185451179 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148074655 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146799996 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198913341 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138531662 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16629764 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.162536409 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199628253 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174627885 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.174109648 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143088965 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.120942047 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123901274 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192278095 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.079964608 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.129908498 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.116165838 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112621378 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130298413 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117079403 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185825623 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166242125 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133980044 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150393488 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131667234 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195776146 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.109803865 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170937472 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.159317841 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1287617 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201896761 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232882156 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176996773 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136224614 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188815402 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.104056201 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08041629 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.12374844 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168413653 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116329631 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091117475 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154572387 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220777355 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169570634 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178161513 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146719283 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160566605 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230552573 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.077694044 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.151540963 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193579799 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16299318 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.166688029 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12319675 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.108034912 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.214098121 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14147637 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267320024 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154153181 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163853756 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195566986 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.138755292 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118601098 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138044717 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180655439 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141709812 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195894693 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134800959 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123143368 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147616049 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.087606956 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139260413 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193744526 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157493055 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178840693 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155681406 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173947565 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1100132 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155452534 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162982165 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161091145 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069955624 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181800314 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211091148 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130317059 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155140554 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228717163 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08600455 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.159708748 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253761223 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215019437 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092925083 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144152082 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159556755 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168927123 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182813808 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184300157 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146541933 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176392691 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147408519 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.093110682 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121028408 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131242253 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140896758 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103770702 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149541444 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.180318568 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.103832469 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171690187 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148025763 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148192212 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158025889 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.133018098 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.098440002 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132544389 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254475195 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160535259 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252332543 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.136472931 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195561719 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244637737 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108741755 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086517953 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.114583101 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184454958 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090882212 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201729123 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.103879188 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141057592 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165219881 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214250375 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104136123 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.101413297 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147858772 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176230997 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147600474 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134784718 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.11642023 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23811797 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140445671 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086518088 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165230309 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139461998 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140419623 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25367802 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.0665647 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132103569 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081772383 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114603779 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170892464 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229413454 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.089449569 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.164513792 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158617214 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160713141 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171178852 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137019727 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132550916 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148451832 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192795853 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169115043 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.125565525 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152020262 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170392409 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232456712 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143475254 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.130272119 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217490993 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231722869 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.240123055 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.095938612 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153816613 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154381416 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149432182 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214534364 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090725594 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243638711 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116935698 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179087724 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141436768 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129053693 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168927379 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.131570402 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097042807 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221411353 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158671876 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115216014 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105160103 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151888711 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161985171 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139050712 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.107886518 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183264773 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078290985 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206345277 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241982824 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088811229 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143198361 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130949085 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089696255 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143793133 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140075612 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121596638 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.129096919 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249521893 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.126364059 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223642833 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184313908 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153391058 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207534829 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109675666 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.673390095 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.113039743 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201911737 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157548466 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283426712 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108029595 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160293534 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149638456 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163045601 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211788656 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142232083 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.187223981 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200659757 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.161703988 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086797152 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139138526 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149856672 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.12566542 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144492619 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15404414 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153665045 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135913928 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.159335397 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169376978 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.115889557 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104162613 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234190033 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158793662 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185601002 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2106016 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093829099 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156786804 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212146511 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087553763 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.186705382 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202457317 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146096337 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135555377 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.113669317 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139530911 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217493604 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105904435 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233348886 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163676918 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148450561 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152456095 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.161595213 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173558315 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144927563 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164691975 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132014596 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150254163 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155647001 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118894046 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.084458315 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143189272 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150067823 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.134919853 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138953632 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.129321327 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224757887 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076974435 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130492318 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13752581 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18888455 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25816889 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.12443343 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090683636 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156778709 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150506102 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.154106509 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190475032 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.089362779 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116446508 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.088777792 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.142904268 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144566945 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150311058 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110776815 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146189212 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240146751 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.117737127 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.23504283 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128450157 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142432961 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073305195 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.111608492 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12962325 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102003722 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13823875 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130720671 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243557654 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.104957134 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.122059278 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124343442 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078275155 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114148832 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167862697 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147034076 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158127559 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131218884 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068096589 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141660726 seconds)
  done (took 76.252021827 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140117486 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.107211396 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122213957 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.178027983 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151494163 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243247286 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.185810815 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228119434 seconds)
  done (took 2.401332351 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074791692 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121530254 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107035223 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.119604636 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093015456 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071837693 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.307638249 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.114314153 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069639697 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119060637 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.124115757 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095031361 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.486527084 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068884092 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.097426165 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.089236062 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070319284 seconds)
  done (took 3.264318677 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.460063023 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.641421748 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.456952657 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.103053563 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.935963154 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111117498 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.358703249 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.164236184 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093670709 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.42703676 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.734346464 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.155501208 seconds)
  done (took 17.687742717 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079431634 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072477768 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113398947 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087261991 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101397371 seconds)
  done (took 1.498745033 seconds)
done (took 119.634856705 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085554797 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.387229118 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055699248 seconds)
  done (took 1.521993303 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091238704 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091230512 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115032413 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087527206 seconds)
  done (took 1.441062977 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.08055438 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081588757 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115805848 seconds)
  done (took 1.328561054 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.306106841 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175998136 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092961351 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087013162 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080933143 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107385902 seconds)
  done (took 1.330456658 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077755066 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078713711 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103050412 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079949401 seconds)
  done (took 1.385845867 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081398464 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05483073 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057493006 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084135108 seconds)
  done (took 1.331309608 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.096431155 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109212702 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084482719 seconds)
  done (took 1.339540576 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.115512201 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116918251 seconds)
  done (took 1.285627037 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086635145 seconds)
  done (took 1.134621646 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098150665 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.14615758 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.164380843 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.143101685 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.174929125 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143204096 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.11801631 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093639546 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.110455089 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.122374637 seconds)
  done (took 2.369963994 seconds)
done (took 16.165000057 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082823534 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.39694416 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364494389 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122393254 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672413189 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385990435 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987379738 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12262345 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111886641 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097986008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088157209 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679560772 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976668764 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327300395 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.989400016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326941155 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679150711 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072236518 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095851815 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070906325 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.970368163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097726519 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071399279 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096527178 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652891216 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374650367 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098104292 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327101298 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096449955 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073286578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357817183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09746513 seconds)
  done (took 16.00823638 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075757327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147548255 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077785886 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113003378 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075175374 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074202721 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101261949 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07251626 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151837751 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071487046 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114784403 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071629859 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101428403 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072192117 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090382292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098436418 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071839337 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097201455 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07152644 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071527535 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116127101 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071260635 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097713909 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072913943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070880525 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110808393 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071509831 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097248212 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071664758 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072935683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100521178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072067467 seconds)
  done (took 3.897671377 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120885517 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157278603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078101369 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133208726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.14445996 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073886633 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174959562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097284698 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155413344 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071734071 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115053064 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072448254 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132230883 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07187614 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11815819 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071567381 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098725556 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072272162 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071060214 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098347444 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091066435 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097670282 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071602397 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071862083 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098567094 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08503862 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09801948 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075064441 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071673667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099832436 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074455928 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098010899 seconds)
  done (took 4.223002629 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078496297 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079047467 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113986022 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087881618 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101287053 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076470493 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076889987 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100830481 seconds)
  done (took 1.770469878 seconds)
done (took 26.942597742 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084097911 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074376381 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.104860735 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084741455 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102916416 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082867231 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070295469 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105429527 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078243684 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076045586 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.105647397 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070863622 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100384919 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070819684 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077412283 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098176085 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082507366 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101132232 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083666303 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110579129 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073779205 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077630561 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105673475 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083075397 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110327959 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083138691 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110695798 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077376569 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071951391 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101487707 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079718628 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.114962281 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072381522 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082320137 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099307969 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072123103 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098642512 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072796028 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084682178 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107961935 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075812685 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108420219 seconds)
  done (took 4.778961852 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.096021054 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09845898 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11756902 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064758498 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100418063 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06534496 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120885791 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063498917 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06525443 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.119896143 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058441118 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060427717 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089949993 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05683836 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060328425 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058984824 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090487145 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059464519 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060726301 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088476184 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064580454 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056512266 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08955819 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062832701 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058339916 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06487638 seconds)
  done (took 3.054778858 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080889306 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087727259 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.12094214 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134766818 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.138242357 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078111603 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109143191 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089293408 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115768304 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071783754 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100333918 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100158062 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088709897 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105252009 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070859861 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113325893 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085384767 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072022109 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105308788 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092555934 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116172707 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082337851 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120060691 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083371885 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07043089 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101682502 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075882497 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112534654 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07625976 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07972015 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.102997435 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074709677 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099907999 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082358234 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102294434 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073260778 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090448881 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110428983 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081876317 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.100508787 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074824511 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071097464 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.121577607 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115802909 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099062419 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078816251 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104972837 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081333922 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070411132 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118083562 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080019727 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097845806 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074661509 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069792161 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099031748 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085315153 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100018194 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073785746 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079300444 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101433435 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083941927 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074679554 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114933372 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070661338 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.107228786 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069999006 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07250163 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.097340412 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093900436 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099980498 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11260274 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099719363 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072630238 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106982903 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078731341 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076501839 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099291858 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086614605 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107540581 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075368024 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079292284 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103693326 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075136386 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116785573 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073755044 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072690719 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.099470451 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.086909835 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100905412 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072713571 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084194105 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099442124 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075384083 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.115917314 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071284426 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071776211 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106244601 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077538534 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.099170528 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083796864 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103662176 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072454756 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080475524 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.099508066 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073763806 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081128386 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.103796561 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069879222 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103848214 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077873353 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071131284 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099756611 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07412636 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100153303 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081300495 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07638995 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104365914 seconds)
  done (took 11.709910656 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.205075156 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.194688313 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073483143 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.187070795 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081729773 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.111500342 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.187702455 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102142931 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.100423157 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072174824 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099930809 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111014039 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.133408726 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.149308819 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084823751 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070600498 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.120328657 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140687721 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160863239 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.182648727 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.120406364 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078466232 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.102736652 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073083306 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072101262 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.110042329 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087667984 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.109703695 seconds)
  done (took 4.396032045 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087745083 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.13424637 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077169219 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.118893101 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096257063 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.0984616 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075889171 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072964875 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.112546509 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084613892 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099414481 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077807247 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078630658 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107322898 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071861176 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.109375827 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080565672 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099938185 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074859253 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075815056 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105907547 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084651851 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103282639 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070897141 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077979988 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098631002 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068484274 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.120093693 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072184734 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121158983 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069590769 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105602172 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081145934 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071124538 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.099716934 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073543386 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073763181 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101297143 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072645742 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096936123 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070737714 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060523383 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.09839844 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084518438 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104921652 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062732041 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076894343 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.106190329 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078302847 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070654378 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101053784 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073222721 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101296178 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078589761 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07581763 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105809777 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074674104 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096916408 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077823673 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072567248 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.09509786 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070635965 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07541481 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099289266 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079057388 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103828133 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07049311 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072335549 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.10392518 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077667717 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073077911 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101471378 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068898212 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100802545 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077123522 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075200852 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.103213098 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069576567 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071104448 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099270765 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058541375 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070779979 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.084293947 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074785626 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.097496318 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070684428 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07275631 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.108955893 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086181635 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101047823 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078021609 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071923212 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.098228968 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075015 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.094389546 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075054531 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085351646 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.119291752 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071571047 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.098631035 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085264712 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103932721 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071381848 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058949281 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106471145 seconds)
  done (took 10.1640501 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098760315 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123704302 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073928575 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085622246 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.12735999 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096788507 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106980206 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077159897 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07219392 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116809298 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07022333 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108218688 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07526768 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079345816 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124599599 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07840165 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101773851 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080304623 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.10672854 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.108605204 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084777736 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.113763966 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081331881 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.099671774 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07589176 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083537367 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127517981 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081023966 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109053963 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085052964 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110078242 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099000805 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085917589 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.103962271 seconds)
  done (took 4.336962717 seconds)
done (took 39.490620533 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.131999279 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.347745712 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.129564326 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.018998493 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.182652322 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.143960077 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.140905705 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.130616744 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.566522547 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.133447852 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.380759887 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.747116481 seconds)
done (took 59.128894099 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.183439669 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.271500159 seconds)
    (2/2) benchmarking "String"...
    done (took 1.446444146 seconds)
  done (took 3.791244061 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.482409948 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.135462551 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.417373136 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.130143271 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.129129821 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.595505665 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.681103743 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.971417398 seconds)
  done (took 27.133106191 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.133342513 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.485985719 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.438305778 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.444884421 seconds)
  done (took 17.577575725 seconds)
done (took 58.242606226 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.133026994 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.151490235 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.143455326 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.11351209 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.232875071 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.150932081 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.395160729 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.128651223 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.137069764 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.119515153 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.146682892 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.12629741 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.133695983 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.425545694 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.136448314 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.135862926 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.132733318 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.605887385 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.500867382 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.13547115 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.13007526 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.144936554 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.130928498 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.126280664 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.136555685 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.12357863 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.124426638 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.139100449 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.219047032 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.127797269 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.21020567 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.625113391 seconds)
  done (took 187.495244205 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.125408069 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.113646574 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.202942238 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.168306551 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.568432571 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.323792678 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.253476814 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.623474022 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.141243306 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.15548399 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.37144522 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.12951692 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.433231098 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.113004829 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.136335074 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.228884453 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.420594708 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.47886889 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.140411838 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.370868619 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.12738585 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.367594676 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.276405494 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.379681592 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.146301528 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.229171452 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.14386531 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.151171387 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.315370287 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.353331976 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.148790324 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.172044563 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.654875469 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.984189594 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.131151152 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.136455039 seconds)
  done (took 147.286790631 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.393765034 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.124449723 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.124850609 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.126068526 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.152540272 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.124314896 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.616521239 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.620422282 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.623534077 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.513161625 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.183046982 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.300364107 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.122880504 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.214677524 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.135779929 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.125952649 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.140070197 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.151683772 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.123708845 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.126202263 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.619935458 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.139461905 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.297481649 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.132212332 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.125827771 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.153526025 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.517442921 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.12539934 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.152324351 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.432615079 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.161732447 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.122657373 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.383877366 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.808875574 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228785388 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.12378944 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.152903777 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.124243771 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.386314822 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.123605721 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.123671764 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.129009211 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.124503794 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.676204767 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.123531595 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.608746428 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.124704138 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.960609982 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.121157328 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.124322384 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.310913358 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.421729166 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.120139506 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.123704783 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.125592393 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.12401113 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.122722053 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.150705201 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.301002017 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.217432576 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.124330717 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.123225349 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.125958575 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.148695376 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.122916736 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.257009402 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.122795112 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.174619512 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.180882748 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.22913569 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.594852804 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.123980758 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.211818286 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235503687 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.120048589 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.122391258 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.125256038 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.12257769 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.225881494 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.12271211 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.483269865 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.127277914 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.123665403 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.180402017 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.124647553 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.2129667 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.123166918 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.361185767 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.122772071 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.122240966 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.753022441 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.209493089 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.121550872 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.123479592 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.122481837 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.48412551 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.122640969 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.595545607 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.243036494 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.12402455 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.298313253 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.124378731 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.494054383 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.57901296 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.655585182 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.123822225 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226736425 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.125934404 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.125013477 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.122516568 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.153427213 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.124485369 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.182238597 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.120762736 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.516157931 seconds)
  done (took 333.641244982 seconds)
done (took 670.890396706 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.811374689 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.770006776 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.890627759 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.78027361 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.765624014 seconds)
  done (took 10.082825188 seconds)
done (took 11.147796477 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.288103381 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.290756565 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.175649984 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.289729389 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.146820117 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.303417656 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.265158794 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.144122893 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.215582708 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.188385822 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.21498285 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.163572457 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.145756613 seconds)
  done (took 16.896443092 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428047485 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.421147804 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.188337398 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.426209121 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.165310783 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.43567074 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.317078477 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.322904594 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.311961845 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.138133897 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.13620052 seconds)
  done (took 15.355854348 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428457775 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.425543696 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.190396369 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.432612573 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.16410808 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.424571053 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.322045985 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.325558963 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.316557825 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.137286189 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.137638007 seconds)
  done (took 15.369298457 seconds)
done (took 48.689035463 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.131787214 seconds)
  done (took 2.195848225 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.16407629 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.321590288 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.143122869 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.137796339 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.132390777 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.135272636 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.137408405 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.131583885 seconds)
  done (took 10.370774879 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.131136017 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.130478366 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.129004258 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.129672984 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.128692955 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.128356311 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.130662066 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.131005853 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.12921256 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.127932698 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.128545165 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.130534435 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.127967586 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.131380555 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.129173038 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.130501192 seconds)
  done (took 19.140464149 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.130835371 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.129801445 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.127980153 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.130125327 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.128515251 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.128693512 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.128496871 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.128530893 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.128628491 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.12923007 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.129163363 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.127661417 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.128633242 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.128744535 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.128826367 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.129891314 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.129206546 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.128860029 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.133275156 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.128815267 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.128229692 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.128485334 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.12888927 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.129980173 seconds)
  done (took 28.16721542 seconds)
done (took 60.940473028 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.908862083 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.524498506 seconds)
  done (took 8.50009925 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.13208601 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.132834548 seconds)
  done (took 3.333282958 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.131910488 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.131520167 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.131361568 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.131215666 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.133129998 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.131450458 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.131946242 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.131017334 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.131602074 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.132111296 seconds)
  done (took 12.382942588 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.13246596 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.131792732 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.130057326 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.132039196 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.131680161 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.129649545 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.133128145 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.134224933 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.132661721 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.129960187 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.131608362 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.130820082 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.133745506 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.129009687 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.13196756 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.129275359 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.131011709 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.130002586 seconds)
  done (took 21.43298419 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.131591747 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.133377963 seconds)
  done (took 3.332116603 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.129932798 seconds)
    (2/7) benchmarking "second"...
    done (took 1.130308703 seconds)
    (3/7) benchmarking "month"...
    done (took 1.128791728 seconds)
    (4/7) benchmarking "year"...
    done (took 1.131524914 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.129972847 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.129958547 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.131230319 seconds)
  done (took 8.979586237 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.133607711 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.32209929 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.399166973 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.705963869 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.134909005 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.137807277 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.991878202 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.135436177 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.140629077 seconds)
  done (took 13.169064092 seconds)
done (took 72.195467634 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.092238046 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.127831212 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.91791752 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.143435779 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.145378738 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.470769035 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.139627847 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.242142392 seconds)
done (took 36.348950626 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.138547743 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.785930417 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.824111544 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.125664463 seconds)
  done (took 10.804070599 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.11676262 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.949929576 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.116019464 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.028946349 seconds)
  done (took 17.281882416 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.672275862 seconds)
    (2/2) benchmarking "read"...
    done (took 1.45574174 seconds)
  done (took 4.196673827 seconds)
done (took 39.489920178 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.134025938 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.131912639 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.135473425 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.13188166 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.132769126 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.135701361 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.132126403 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.131946602 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.135214358 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.135106273 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.13340465 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.134585106 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.136039743 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.129932998 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.132284201 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.135292838 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.135592847 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.133291466 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.136223101 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.130833485 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.133759334 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.13622446 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.133332818 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.133439743 seconds)
  done (took 28.278825904 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.134794054 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.133742015 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.135980464 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.136706344 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.134559765 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.134845787 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.136062107 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.133465495 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.13767861 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.136365508 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.134333608 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.132767865 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.135912447 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.134082073 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.136690823 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.132062425 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.135786083 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.132985101 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.135251792 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.134250378 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.136680711 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.136791995 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.134178626 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.137848602 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.134597438 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.133460474 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.136702107 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.134156746 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.136901306 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.133522369 seconds)
  done (took 35.123792563 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.140158355 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.143539117 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.137296838 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.13561437 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.135391195 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.136549107 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.139683233 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.137276728 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.136441425 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.136912724 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.135583797 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.137591988 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.137008008 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.138030766 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.137092539 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.137150918 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.13838201 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.136633481 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.136260754 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.137527271 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.137340988 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.136512557 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.136726638 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.13683007 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.138913786 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.137168371 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.137416534 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.138384364 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.138177145 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.137636897 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.138189934 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.137594534 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.138178765 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.137093888 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.137266877 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.138028633 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.141561387 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.145043969 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.138965602 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.138346323 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.139444425 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.137343359 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.138711508 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.140293394 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.137363716 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.138215304 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.13852392 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.139263415 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.138772759 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.138002324 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.138302997 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.138034712 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.139161412 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.139092467 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.137420516 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.140327374 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.140012423 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.139820487 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.13844738 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.139418751 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.138723467 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.140413213 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.140108136 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.140845167 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.140778127 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.140108044 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.139478042 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.140255147 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.140608649 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.140705982 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.140545298 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.139444545 seconds)
  done (took 83.046345623 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.140330819 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.136942379 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.136107414 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.137407108 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.13701416 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.142349774 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.137408834 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.142096033 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.138226344 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.140948871 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.140457352 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.139433129 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.138719067 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.141958793 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.140905187 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.13944581 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.13988757 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.139243302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.139841779 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.142088202 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.141689181 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.13868893 seconds)
  done (took 26.146067184 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.140884671 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.14169894 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.139480211 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.140767038 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.138329527 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.141128321 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.14300795 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.141348226 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.142817943 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.139317099 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.137576639 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.142862218 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.139428164 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.138944342 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.139546865 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.139738064 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.142853735 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.139513058 seconds)
  done (took 21.605081474 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.1410411 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.139107307 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.144157023 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.139455094 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.139889226 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.142777621 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.139324533 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.142236688 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.141868316 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.140481479 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.143830571 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.142121568 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.142928487 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.140268453 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.142091117 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.138719928 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.142446182 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141072047 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.142592642 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.140764339 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.139923428 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.142499893 seconds)
  done (took 26.184295411 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.14427176 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.142223981 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.140296722 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.142493432 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.14091628 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.142292631 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.143123444 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.140019666 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.143382121 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.143789638 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.14206943 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.145275032 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.141600005 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.142157731 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.141019606 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.141685951 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.14542475 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.14126614 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.14423094 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.141479207 seconds)
  done (took 23.92596593 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.145440335 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.144429505 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.144085762 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.145049862 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.145072443 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.14559418 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.14421271 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.144736293 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.145204697 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.145995135 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.145888202 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.145336199 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.14617559 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.145972581 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.146682188 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.145245922 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.145369529 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.145572676 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.147323942 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.144918264 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.145690406 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.144611564 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.144503974 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.145746161 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.146561466 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.145824374 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.14738741 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.146468106 seconds)
  done (took 33.15454029 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.146006413 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.144244892 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.142223619 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.143355842 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.142057576 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.14216102 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.144325688 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.144707786 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.145791297 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.143841443 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.146178912 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.147074891 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.144564436 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.145693119 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.145549416 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.14798265 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.145345843 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.144634153 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.143945656 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145058512 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.147061419 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.145748388 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.14533148 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.143350923 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.144027782 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.148928766 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.144680128 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.145321368 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.146974072 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.144633376 seconds)
  done (took 35.432147981 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.16469909 seconds)
    (2/2) benchmarking "in"...
    done (took 1.165891545 seconds)
  done (took 3.410833833 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.14364824 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.146149228 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.145929987 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.14585513 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.143019677 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.146231727 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.14573427 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.14506647 seconds)
  done (took 10.242847987 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.146310937 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.148104911 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.146535666 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.147307005 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.148366756 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.148843725 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.154105573 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.162024206 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.147675934 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.148382205 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.152201381 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.154032469 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.148890509 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.146903872 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.147344292 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.149669873 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.147663837 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.148831907 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.147298007 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.149086833 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.148397573 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.151044014 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.150558353 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.146202324 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.149036595 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.158424842 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.15165703 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.149114044 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.148882634 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.152783295 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.14795899 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.145847232 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.147509773 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.149470647 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.149119495 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.149962095 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.158891462 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.161960378 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.153941739 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.149796712 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.149439872 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.145028402 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.148801712 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.149250355 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.150204037 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.148185707 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.149238471 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.14688385 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.147442368 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.151967461 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.155042372 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.148034059 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.147325987 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.151655823 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.151486646 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.157397606 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.164951024 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.15198813 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.155976567 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.159201336 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.163058748 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.158582184 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.151942116 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.150000391 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.158876851 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.172114122 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.156936618 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.162520952 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.148537228 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.151099654 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.156221168 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.163316018 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.159004575 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.15098096 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.150331633 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.150092244 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.150339986 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.150846391 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.159003373 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.167502856 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.15214854 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.151176292 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.158715563 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.170254315 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.148827827 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.152176496 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.153631173 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.15241029 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.151411832 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.16166989 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.166857859 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.150996282 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.150871474 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.14954239 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.154036863 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.153081365 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.15113632 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.152094557 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.149587798 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.152551365 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.152331912 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.154840704 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.160373484 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.152754116 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.151933608 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.159490099 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.151605061 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.151404438 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.160166376 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.152607526 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.152664122 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.154161231 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.155916809 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.150999503 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.154996707 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.160789375 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.154276803 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.154469019 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.153691869 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.153637869 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.161881924 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.176487781 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.154353062 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.154338881 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.156744585 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.165460566 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.154161417 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.1556255 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.153603616 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.151361671 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.151744277 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.15431514 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.154066985 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.154535512 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.153511684 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.154968508 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.152053712 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.154608537 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.155242263 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.153566848 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.155869343 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.15362005 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.154180785 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.155921149 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.154728081 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.156130799 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.160498005 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.154659312 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.155682043 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.154551389 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.152875586 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.153662185 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.154342853 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.15531347 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.153508976 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.154128216 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.154271889 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.155102157 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.155447997 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.155326049 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.156882645 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.155236729 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.157951348 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.155578506 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.157726982 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.153301829 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.152903691 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.154475415 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.157055694 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.153956956 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.155920719 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.153856451 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.156786778 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.163469209 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.156300104 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.155543959 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.156670344 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.156235227 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.156174773 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.155665955 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.157957064 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.162749851 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.157590907 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.162727453 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.15671324 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.156720121 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.155734033 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.155053306 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.155677675 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.156524211 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.157955647 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.164734729 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.168136611 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.16565955 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.157831749 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.159770099 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.156521918 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.159705403 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.16128252 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.156971475 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.156576233 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.158213023 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.156120461 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.158436881 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.157771494 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.156369381 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.155382666 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.15790031 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.15806118 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.156726655 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.158254552 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.159212517 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.15813051 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.156625875 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.15854511 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.157905537 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.15581694 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.156380038 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.155681725 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.156544025 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.15888648 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.157446752 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.165375292 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.156593912 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.157260655 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.158197064 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.156217371 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.15748533 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.159007577 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.160957822 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.1573527 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.164290906 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.172135877 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.158080431 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.165102621 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.171543431 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.158557896 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.162010798 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.158823452 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.157137291 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.160474989 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.16697656 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.159858921 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.159955588 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.159453619 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.158974618 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.159255083 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.164233973 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.157292434 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.158628094 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.158635639 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.159683297 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.157951898 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.159621073 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.157776949 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.16056828 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.162106603 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.160121781 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.159601717 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.160427803 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.159983798 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.159818593 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.160516816 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.161525445 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.166972843 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.163868109 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.159480883 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.162129736 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.162031763 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.163543477 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.159809301 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.160135807 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.15847949 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.171652471 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.169645094 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.167383024 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.161107457 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.161781224 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.166148286 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.162108842 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.163689864 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160362363 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.161141712 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.159888895 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.161694374 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.15777353 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.161652491 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.163599506 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.161672017 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.162181074 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.165543054 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.161375709 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.162082155 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.161126836 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.162927788 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.162391044 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.160860594 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.162062583 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.163559614 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.162637549 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.159632834 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.160102193 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.168088169 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.17645055 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.162358744 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.161416345 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.162325026 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.160358597 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.162714855 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.163036632 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.163736388 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.170831641 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.163051173 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.170704687 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.161660565 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.17171946 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.16258972 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.165052351 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.170358431 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.159838686 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.160741826 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.162779769 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.161910081 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.170031786 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.178452074 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.163275789 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.165842931 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.162564309 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.162575286 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.16326975 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.163761869 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.162522699 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.163970766 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.17193115 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.17815636 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.166049147 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.165541943 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.161853462 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.163615136 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.163844804 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.162317983 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.165445071 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.164075663 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.164687241 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.162798223 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.163122768 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.163793512 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.16543935 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.164281291 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.163067827 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.165425964 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.169853076 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.180509527 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.169347311 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.165196648 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.172178086 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.166936611 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.174273505 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.180366372 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.16496168 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.165124146 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.164810012 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.165388511 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.16419967 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.166026012 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.16465965 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.165315067 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.167160666 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.16554287 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.168815431 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.165501099 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.167457349 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.16378728 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.173101217 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.186591679 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.165625526 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.169956135 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.162509239 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.165909559 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.170297393 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.166504925 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.162841168 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.165380916 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.17483408 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.173260466 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.164033273 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.166521707 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.165608994 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.166762218 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.165092978 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.166366867 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.166381128 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.166560597 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.167533052 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.16633172 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.169237995 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.166567716 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.167493406 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.167635656 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.167505487 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.176386325 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.167412986 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.167816374 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.16645768 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.165657918 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.166198593 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.166043552 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.167648084 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.167236488 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.166305408 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.166669149 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.172532055 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.172389223 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.169635417 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.165127553 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.167586761 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.167294303 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.167010794 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.16839339 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.166890543 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.167365082 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.16752732 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.167550949 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.16764061 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.166994736 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.167602264 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.168227683 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.168649968 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.169365311 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.174423123 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.167657192 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.167436426 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.167992614 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.169498068 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.167427387 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.167903846 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.175290379 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.169844484 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.178376275 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.177312618 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.172606551 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.168439465 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.169449708 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.175022482 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.166700025 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.167910313 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.171360614 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.169829353 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.168854487 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.173012575 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.169681495 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.175663315 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.168396891 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.169496618 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.177323086 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.184783991 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.171106296 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.169343022 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.173525434 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.169355296 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.168159648 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.17046576 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.169358322 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.176616423 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.184946253 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.170552539 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.171066984 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.166636141 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.169758985 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.174353634 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.171574428 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.171653049 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.169419121 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.170028849 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.17198453 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.171744612 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.169509335 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.169630424 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.17026656 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.171684909 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.176641853 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.16768582 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.172534174 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.172070015 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.171450968 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.171658198 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.170515698 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.169009014 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.168624626 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.170983328 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.172694703 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.171883889 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.17453206 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.17081332 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.172078605 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.17211013 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.171410734 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.172600833 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.179365247 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.179074494 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.170193584 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.171557616 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.171694626 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.172810145 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.173588464 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.171718293 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.1720222 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.171426307 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.173512801 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.171331374 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.17329113 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.173563644 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.18657993 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.187008621 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.171146924 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.172205263 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.17535558 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.172638997 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.171285629 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.173795651 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.175244528 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.173862621 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.181105873 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.173348772 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.179680732 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.187939776 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.172583933 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.178392112 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.175736845 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.17931576 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.175324513 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.172254917 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.173279388 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.176429758 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.188137785 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.174783417 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.182194446 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.19993489 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.187773709 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.173884027 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.17501822 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.173758085 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.174230246 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.176032147 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.175851796 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.17428203 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.175041001 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.173524426 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.17409177 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.17794098 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.175138047 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.174879202 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.175476861 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.174468609 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.175981704 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.173272374 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.17508556 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.173763946 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.173728897 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.175949509 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.174503263 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.173218729 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.185971673 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.184000722 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.175210975 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.175855447 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.174528984 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.178000485 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.178794793 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.18369351 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.183110991 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.175117666 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.17544542 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.176680066 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.177245868 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.173798489 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.175146882 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.174883104 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.173234187 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.172529312 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.187343856 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.184947242 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.17963639 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.176127076 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.176868465 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.175375069 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.177018198 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.176047468 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.174653936 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.176201688 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.177582975 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.179856567 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.175504171 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.17691592 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.178616054 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.1839868 seconds)
  done (took 694.698422152 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.174604369 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173535852 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.173598697 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.175502571 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173322836 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.174325743 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.174655412 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.174396475 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.17559188 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.176880367 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.175927341 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.176242955 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.174957361 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.176424956 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.174666937 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.177255645 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.175854152 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.175970243 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.176029387 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.175104479 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.175291289 seconds)
  done (took 25.791094981 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.176613424 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.176412093 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.176688383 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.178825436 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.174743805 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.180591445 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.175616987 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.178039536 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.179073624 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.176169463 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.177224225 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178303166 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.176254877 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.175800308 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175522028 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.179276193 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.178548066 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.177184129 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.17866844 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.176865895 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.178327464 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.176705365 seconds)
  done (took 27.012174314 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.17882896 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.176544332 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.178088077 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.17835065 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.180142789 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.175643755 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.178163271 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.179721542 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.179159846 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.178594653 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.177356465 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.179030271 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.184908409 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.18550994 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.182509814 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.180020514 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.323370723 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.179317321 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.179974419 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.179406587 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.176933338 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.185344091 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.177391226 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.178498502 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.178536437 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.181601116 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.179606827 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.180870321 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.181650753 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.180385565 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.183252503 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.181510198 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.180753039 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.180687676 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.179266807 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.179681 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.184571109 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.181232325 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.17763327 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.181329901 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.189383662 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.201028743 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.181493125 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.186515037 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.181843471 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.180684539 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.18249568 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.188917284 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.178613684 seconds)
  done (took 59.127540754 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.18131027 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.181719007 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.178213772 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.180149582 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.182765731 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.182138441 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.181040314 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.180097826 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.177384087 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.1797207 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.181821841 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.178924334 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.177722868 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.180739905 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.181328911 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.179038687 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.178351879 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.179484322 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.179884892 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.177564373 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.178764305 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.181824648 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.181694428 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.180266575 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.18191857 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.1778057 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.178452515 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.181273988 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.180088679 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.17709346 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.18264671 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.183415515 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.182312009 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.179732318 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.179559876 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.183549047 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.182774554 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.178173151 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.182052626 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.180482172 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.181384463 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.181702194 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.180491822 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.183256402 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.180422189 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.178638169 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.178267044 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.179839987 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.178629307 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.181905675 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.183153666 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.181708312 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.182412966 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.179436077 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.182254624 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.184303449 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.180996011 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.179990547 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.180544186 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.181241057 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.181493349 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.184198254 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.181432018 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.183864296 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.184610289 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.182197932 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.181971739 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.184060592 seconds)
  done (took 81.414782528 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.183090254 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.183172816 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183117535 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183704374 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.183982466 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.185018521 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.182899318 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.184452602 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.182980849 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.1834991 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.184173521 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.182108219 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.183254946 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.184036711 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.182823657 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.183922364 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.184203966 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.185415431 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.185095731 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183475466 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.185792689 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.18546785 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.185064069 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.183725306 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.185468044 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.185089504 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.186296334 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.185575555 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.185118581 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.185062713 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.186311464 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.185059208 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.185702081 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.184944027 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.187320939 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.183922143 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.183833598 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185656956 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.185948307 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.186614477 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.185246618 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.186978209 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.186247612 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.184943698 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.185831043 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.18648141 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.184534938 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.186089367 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.185764803 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.18674575 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.187084889 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.185692683 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.186700519 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.185368147 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.186459079 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.185877805 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.18651014 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.186860066 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.185469943 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.186135368 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.186692048 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.187515947 seconds)
  done (took 74.597738624 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.185287299 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.185235475 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.185011743 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.184031107 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.186463734 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.184534563 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.186666037 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.187263154 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.188271517 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.187045792 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187138806 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.184410126 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185227883 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.189578586 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.184629234 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185444273 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.183686686 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.185065252 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.189710506 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.186140206 seconds)
  done (took 24.838754804 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.186542234 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.189771907 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.185418683 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.186298866 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.187321156 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.186466195 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.187535875 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.188721088 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.186010348 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.188520043 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.189359562 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.188062343 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185637977 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.186698355 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.1906632 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.185775529 seconds)
  done (took 20.119428542 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.186751182 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.189426787 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.189486614 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.187806989 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.186717153 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.186776078 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.188909119 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.186081282 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.186133126 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.188825321 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.191049071 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.190626763 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.18913795 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.190314618 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.188428829 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.190306572 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.187968709 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.187733461 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.189147955 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.190079506 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.189241488 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.187093034 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.190586732 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.189443903 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.185417254 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.188643132 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.187038274 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.187015671 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.187924046 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.190506726 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.187437617 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.189322959 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.188075706 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.186589382 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.189530318 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.188679281 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.190641648 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.191388508 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.190273903 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.190931509 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.189978583 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.188665373 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.190481357 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.190634039 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.188003326 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.191234967 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.188020712 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.189029117 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.187997279 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.188414466 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.192534849 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.191299142 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.192604055 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.191901033 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.191131349 seconds)
  done (took 66.522762549 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.191806747 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.191132684 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.188008509 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.191839225 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.191785412 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.18894384 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.191691893 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.189931978 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.190461186 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.192581026 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.190729462 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.192592538 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.18915024 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.192929115 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.189971293 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.191226766 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.189613885 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.190025654 seconds)
  done (took 22.557953211 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.189894564 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.192641907 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.192270229 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.190631388 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.190527221 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.192714451 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190179949 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.192713594 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193645861 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.190833945 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190522393 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.193042147 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192460045 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.193365881 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.191326315 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191118819 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.193974815 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193817812 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.190073103 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19062073 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.192222972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.194551572 seconds)
  done (took 27.347134574 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.191525994 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.191543391 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.20787309 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.231672568 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.220066805 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.192817592 seconds)
  done (took 8.358477386 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191315532 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195176968 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.191095563 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195774256 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196224894 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192105465 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191838922 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191397195 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193778334 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192584124 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191145743 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192900483 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193339963 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191779732 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192646408 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193412878 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192182577 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190952658 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193613329 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194044381 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190270814 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192023969 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19013704 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191605096 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191362998 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19184711 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195574044 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192835256 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191265679 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194732327 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194384576 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192777779 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193998203 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192435846 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194252948 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195077613 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192814004 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195110635 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194763074 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191523336 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.195308333 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194877201 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196596869 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192589598 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194634415 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193255162 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192754047 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192792889 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193131153 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195950838 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195585442 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193794517 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195824269 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194299111 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194771975 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196292679 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.192978251 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193956816 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195671498 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193436155 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194648848 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196429946 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193930036 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194403591 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196191118 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19308131 seconds)
  done (took 79.900332692 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193670774 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.192500323 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194154653 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19494896 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195743726 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194693025 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194155974 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192828796 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193155459 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193474944 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198265184 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194015073 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193534158 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194417991 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194695361 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197427353 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195556704 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193784878 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193611287 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196091677 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194092594 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19487924 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195570568 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193018152 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195264785 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198340763 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195049535 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195918688 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196448054 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194937791 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195255677 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195083407 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195303589 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.195119621 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194718849 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19450445 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194135714 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196846145 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19585103 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198139175 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195434959 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19783349 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195667688 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194941292 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196475703 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195943383 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19487722 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196099428 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196271033 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195335282 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197089884 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196395572 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197440508 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197132431 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197255721 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197495831 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196691695 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19686072 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197141295 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199414379 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196258592 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195799437 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199940569 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198809214 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195617856 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198332414 seconds)
  done (took 80.045002566 seconds)
done (took 1619.952527266 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.280895228 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.211047375 seconds)
  done (took 13.621350583 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.360671302 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.31234145 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.196848979 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.226578801 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.196219815 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.2190421 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.191274813 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.193690101 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.196060419 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.198482278 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.197183286 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.387111532 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.195622917 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.196120142 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.198038477 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.292694352 seconds)
  done (took 40.901606926 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.224506857 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.203812123 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.299397496 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.216056242 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.223333591 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.360451726 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.248412429 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.203234628 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.347439984 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.238505118 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.550815301 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.222194113 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.205414648 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.16092341 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.215289855 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.363363726 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.416648678 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.576612279 seconds)
  done (took 27.407996837 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.578227885 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.196903042 seconds)
  done (took 8.907863343 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.236849631 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.224021446 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.214008377 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.223378403 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.231957179 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.22194434 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.254917688 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.254986955 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.204288431 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.222071898 seconds)
  done (took 63.434645778 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.219158792 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.201575343 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.203490573 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.20206399 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.195126803 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.204258325 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.202136118 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.19633656 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.264267357 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.307552355 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.215073673 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.209682307 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.203732573 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.203310084 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.200826329 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.23568933 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.340859674 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.200417364 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.200261181 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.208594676 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.200898473 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.282147722 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.238625282 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.202187668 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.309788028 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.278068974 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.208428305 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.208122981 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.327174006 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.201441918 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.202058251 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.205263157 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.20652322 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.739351956 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.706378142 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.208421998 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.235330879 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.215471376 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.203559678 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.326639718 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.203433351 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.212091898 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.197320427 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.687077206 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.355050642 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.304548538 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.313021649 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.204806733 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.206357596 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.261731504 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.206244056 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.206124366 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.231899153 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.916037434 seconds)
  done (took 102.762598788 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.24354809 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.684599387 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.365418779 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.213189264 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.017081043 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.807141602 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.198567659 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.442944377 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.200414033 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.197502219 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.472886761 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.660059361 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.197506696 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.268027622 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.740607147 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.233749378 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.198549707 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.067108792 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.197336935 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.200282083 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604128832 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.211484321 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.205168233 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.299581373 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.235031491 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.622893171 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.427617224 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.635060334 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.200268431 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.197015326 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.62801568 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.207436074 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.234896145 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.199091031 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.454492946 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.510780403 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.489309995 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.196925373 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.200169091 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.203600154 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.224621075 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.618381572 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.503019873 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.206118159 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.199815895 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.623150047 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.198305479 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.203868868 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.198757342 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.402932938 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.097670946 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.202114594 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.4313968 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.200634539 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.453550875 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.302499275 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.202832085 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.653846197 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.200154416 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.236005562 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.207331843 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.201710449 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.203304652 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.2050852 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.199988789 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.50253242 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.576939127 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.198882031 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.507206725 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.617809229 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.198148647 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.683720936 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.055378892 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.222462531 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.237652261 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.199056022 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.886796711 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.644282335 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.198855026 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.200010713 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.493394173 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.200406499 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.460611769 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.210992124 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.198718803 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.612437735 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.220187128 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.236648187 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.201650815 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.210890936 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.974238585 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.205213946 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.446912956 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.255848436 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.201804171 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.203057469 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.213432454 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.200707589 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.210978498 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.202588859 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.686833745 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.201980803 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.30777849 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.217425541 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.199650889 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.20037227 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.203221745 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.202775182 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.419687962 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.741205262 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.203764181 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.202695584 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.199416093 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.202022123 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.309808071 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.199896634 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.465918707 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.203277243 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.201401085 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.200182325 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.834774722 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.226539686 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.201096783 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.203962107 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.018063177 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.408131406 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.216927262 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.212724705 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.201579904 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.213968958 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.38829076 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.202139546 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.208289233 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.20459766 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.863191057 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.238240422 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.242197745 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.76966126 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.203695265 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.053645644 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.225363018 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.203135842 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.498046948 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.460254024 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.526208353 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.203261259 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.201428578 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.856503934 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.213792734 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.340479406 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.219270707 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.236855431 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.400584903 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.318248543 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.206931654 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.750399565 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.204334762 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.417595969 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.206482417 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.52272095 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.654403675 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.205048459 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.209462834 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.872291626 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.844332633 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.859339156 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.206070084 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.462614749 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.201293761 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.658131517 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.205720189 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.206281146 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.790117243 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.20931935 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.204279438 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.205821437 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.20812846 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.272874435 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.378044659 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.082471443 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.205178619 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.62914283 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.274948604 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.203855425 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.21063421 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.206153247 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.557033549 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.28816748 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.205615113 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.248623443 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.204345035 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.212029465 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.63648071 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.077751298 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.207501309 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.357482204 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.795783199 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.208007555 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.207001119 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.893234864 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.435091139 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.713085304 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.225289441 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.473890425 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.212976631 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.243470897 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.95963935 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.267192188 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.679099445 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.208813703 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.203458529 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.765192598 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.206803465 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.261354774 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.205335446 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.207202543 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.697964175 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.208242723 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.212175387 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.40178817 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.206600149 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466297937 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.208476454 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.229705886 seconds)
  done (took 1079.939162093 seconds)
done (took 1338.103731597 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.207743659 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.207927764 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.194753675 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.208293312 seconds)
  done (took 25.966005838 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.220352369 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.214791758 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.215703827 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.214082299 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.217820988 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.215650392 seconds)
  done (took 8.442892901 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.286370315 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.207165873 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.209148752 seconds)
  done (took 18.847815741 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.40568037 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.358198505 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.535625994 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.14427125 seconds)
  done (took 9.591328255 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.216618192 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.215415409 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.215657694 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.22047982 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.222404175 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.2225544 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.219580972 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.21953455 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.222845985 seconds)
  done (took 12.122117763 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.695361553 seconds)
done (took 80.808009126 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.391207828 seconds)
    (2/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.206639363 seconds)
    (3/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.197228353 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.465365858 seconds)
    (5/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.237923301 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.287425842 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.210058435 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.438798834 seconds)
    (9/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.256729026 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.269542674 seconds)
    (11/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.296007915 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.209452221 seconds)
    (13/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.305854043 seconds)
    (14/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.848216312 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.23714356 seconds)
    (16/309) benchmarking ("sort", Float64, false)...
    done (took 5.456747775 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.595873427 seconds)
    (18/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.372044941 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.194948866 seconds)
    (20/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.218604519 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.044591655 seconds)
    (22/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.197231474 seconds)
    (23/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.228570702 seconds)
    (24/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.196691799 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.496287983 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.359006211 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.694462169 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.723871952 seconds)
    (29/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.333953018 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.447700685 seconds)
    (31/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.50021043 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.317360046 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.634671684 seconds)
    (34/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.699858471 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.959359026 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.613993141 seconds)
    (37/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.508963394 seconds)
    (38/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.235901576 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.19896941 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.616947525 seconds)
    (41/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.593373496 seconds)
    (42/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.590128127 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.88791493 seconds)
    (44/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.87884875 seconds)
    (45/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.568547513 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.196622178 seconds)
    (47/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.281102658 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.913004211 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.324329364 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.604982005 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.498484857 seconds)
    (52/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.297167727 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.548234837 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.603583704 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.719191088 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.253920944 seconds)
    (57/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.626297304 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.672586684 seconds)
    (59/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.261839016 seconds)
    (60/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.240293994 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.270417654 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.633239931 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.521747846 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.750549913 seconds)
    (65/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.335912604 seconds)
    (66/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.27281854 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.21206099 seconds)
    (68/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.687596923 seconds)
    (69/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.38065663 seconds)
    (70/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.412302731 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.229239402 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.263349996 seconds)
    (73/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.971667226 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.965373367 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.96051403 seconds)
    (76/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.223026588 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.364851615 seconds)
    (78/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.357889695 seconds)
    (79/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.448881137 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.275638243 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.320678828 seconds)
    (82/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.321090138 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.546481022 seconds)
    (84/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.308767652 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.296293613 seconds)
    (86/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.454783771 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.262226612 seconds)
    (88/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.361339758 seconds)
    (89/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.708109518 seconds)
    (90/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.200151784 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.307042562 seconds)
    (92/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.326025496 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.275270456 seconds)
    (94/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.896716704 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.212728667 seconds)
    (96/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.639992545 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.996771702 seconds)
    (98/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.902567945 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.40923589 seconds)
    (100/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.427157403 seconds)
    (101/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.394927361 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.973145591 seconds)
    (103/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.296007963 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.634965363 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.314355118 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.562222286 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.22953452 seconds)
    (108/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.251783055 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.241826306 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.039518829 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.173424696 seconds)
    (112/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.768100392 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.222896205 seconds)
    (114/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.226257174 seconds)
    (115/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.899604303 seconds)
    (116/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.215586418 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.24179491 seconds)
    (118/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.23333089 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.713857273 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.571514608 seconds)
    (121/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.50038657 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 1.722226547 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.240045159 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.328349305 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.473013865 seconds)
    (126/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.37521247 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.321976163 seconds)
    (128/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.21622317 seconds)
    (129/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.202734231 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.887027688 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.215636 seconds)
    (132/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.800608988 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.46755239 seconds)
    (134/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.930362833 seconds)
    (135/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.273453885 seconds)
    (136/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.710392741 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.641074331 seconds)
    (138/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.908476142 seconds)
    (139/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.752324325 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.069778295 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.580412169 seconds)
    (142/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.965667563 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.452786172 seconds)
    (144/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.342520559 seconds)
    (145/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.461112295 seconds)
    (146/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.733100582 seconds)
    (147/309) benchmarking ("sort", BigInt, false)...
    done (took 6.214398592 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.317712653 seconds)
    (149/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.245728745 seconds)
    (150/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.301870479 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.812347663 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.253091042 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.321930866 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.474157478 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.929817495 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.245381993 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.338064208 seconds)
    (158/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.244874003 seconds)
    (159/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.192791442 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.227456944 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.235711915 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.212993488 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.21726887 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.238791966 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.323550716 seconds)
    (166/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.410549889 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.337840489 seconds)
    (168/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.384245032 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.282554664 seconds)
    (170/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.243012296 seconds)
    (171/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.24370846 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.43442122 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.425915827 seconds)
    (174/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.356985527 seconds)
    (175/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.226347965 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.440940898 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.896070315 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.204684406 seconds)
    (179/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.219650067 seconds)
    (180/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.328060738 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.440311006 seconds)
    (182/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.338055371 seconds)
    (183/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.206939988 seconds)
    (184/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.204707895 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.320972597 seconds)
    (186/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.204161355 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.226851994 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.719578948 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.20482116 seconds)
    (190/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.200634109 seconds)
    (191/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.217482635 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.748561626 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.227707505 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.564456741 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.247285258 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.236705762 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.260726558 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.89762584 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.555899954 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.361314882 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.7232559 seconds)
    (202/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.804007637 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.009660578 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.623451854 seconds)
    (205/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.556565449 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.998316889 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.243386985 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.207782738 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.220055686 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.223329168 seconds)
    (211/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.22336594 seconds)
    (212/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.380631307 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.203358704 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.244556954 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.507204627 seconds)
    (216/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.00732313 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.274381087 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.041954289 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.835375768 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.220719282 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.603409112 seconds)
    (222/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.344660997 seconds)
    (223/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.025092423 seconds)
    (224/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.400606002 seconds)
    (225/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.401186447 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.517762832 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.207292658 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.447438061 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.221144677 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.449169393 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.892377634 seconds)
    (232/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.244917051 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.220958819 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.246731084 seconds)
    (235/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.427590274 seconds)
    (236/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.246029192 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.978026094 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.220839499 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.479864109 seconds)
    (240/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.896687669 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.234061343 seconds)
    (242/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.243524702 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.220253066 seconds)
    (244/309) benchmarking ("sort", Float32, false)...
    done (took 5.180581172 seconds)
    (245/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.260086245 seconds)
    (246/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.900102409 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.256126442 seconds)
    (248/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.209500544 seconds)
    (249/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.248359444 seconds)
    (250/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.6521549 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.243811003 seconds)
    (252/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.378144613 seconds)
    (253/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.23520865 seconds)
    (254/309) benchmarking ("sort", Int8, false)...
    done (took 4.272196745 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.806770385 seconds)
    (256/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.679765566 seconds)
    (257/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.249766551 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.221164749 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.408893691 seconds)
    (260/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.208045355 seconds)
    (261/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.323446413 seconds)
    (262/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.23413764 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.484959326 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.416268376 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.243101105 seconds)
    (266/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.322765564 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.526338386 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.344584145 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.270437844 seconds)
    (270/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.238638142 seconds)
    (271/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.331770944 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.248771377 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.612237277 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.344765014 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.061378408 seconds)
    (276/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.21092718 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.089643087 seconds)
    (278/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.762253131 seconds)
    (279/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.550415193 seconds)
    (280/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.751684354 seconds)
    (281/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.306898145 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.247482832 seconds)
    (283/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.402706986 seconds)
    (284/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.210899654 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.324115144 seconds)
    (286/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.349063275 seconds)
    (287/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.306371072 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.306407492 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.341516177 seconds)
    (290/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.56086478 seconds)
    (291/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.468725118 seconds)
    (292/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.22194682 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.105670214 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.221550503 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.26567065 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.507820487 seconds)
    (297/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.766064731 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.042693562 seconds)
    (299/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.367914326 seconds)
    (300/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.238579092 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.22667922 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.88478686 seconds)
    (303/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.570830761 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.63563882 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.258773026 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.421734385 seconds)
    (307/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.304143857 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.809653048 seconds)
    (309/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.786647091 seconds)
  done (took 871.054626676 seconds)
done (took 872.202580838 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.257279409 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.251343049 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.236949658 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.258259084 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.349202571 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.266052766 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.246414859 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.238133862 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.283722103 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.287831835 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.23525813 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.263027484 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.235740404 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.236236686 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.236380882 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.251974612 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.170773609 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.234716318 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.251643765 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.246974939 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.253484875 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.236700295 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.287640012 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.264404301 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.243261678 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.239679978 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.23923019 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.256061659 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.347110894 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.239456546 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.239957886 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.248415178 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.183594469 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.237442127 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.233840991 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.255293612 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.248428797 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.248866027 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.241141053 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.268951648 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.522720191 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.233822724 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.239654232 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.240021378 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.239841288 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.240912628 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.240262262 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.246568278 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.250745321 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.252889508 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.540325908 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.253523413 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.24038328 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.240296583 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.249897044 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.23901947 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.242280312 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.25528611 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.259076508 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.252672804 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.167213438 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.242316805 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.241864012 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.255699052 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.247528206 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.552321219 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.233675487 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.243324204 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.528551842 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.24151475 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.553183948 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.244899198 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.241363796 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.252040741 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.269914793 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.178040237 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.231961913 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.240942046 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.247393607 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.236778861 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.249497218 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.252054334 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.244978503 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.242006995 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.253313465 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.268505783 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.250786379 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.240946477 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.250902403 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.259026006 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.247007508 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.251287351 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.243513474 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.235852566 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.252196946 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.244921316 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.244622795 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.244036254 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.245514682 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.252159718 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.528053043 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.25609442 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.239373766 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.237673434 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.238967511 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.255434755 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.530828734 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.240009237 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.26517041 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.292088527 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.243519882 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.171414327 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.241656608 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.257590064 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.25096136 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.245313406 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.238366113 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.172669188 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.518864967 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.252797723 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.24247299 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.239466636 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.256769996 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.243953667 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.23826751 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.181246363 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.242500725 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.255744589 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.363334887 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.253674602 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.273134108 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.24052878 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.246238634 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.273352186 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.257492816 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.273367291 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.244455613 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.25894903 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.257739028 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.240044622 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.252486836 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.253870054 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.243707417 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.249160925 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.238043292 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.271861188 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.255833134 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.253801749 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.263865795 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.364125342 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.239979 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.173360103 seconds)
done (took 209.141775725 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.302212785 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.22983485 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.331692544 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.239590342 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.337266034 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.335325984 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.237101017 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.23692453 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.237568828 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.616143326 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.236294992 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.23694267 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.231743161 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.23743762 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.321408943 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.240267109 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.237821705 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.580324276 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.240944127 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.309082871 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.239397313 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.236451377 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.240009907 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.628112717 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.232019599 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.236140426 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.311445402 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.240469083 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.592047701 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.233732258 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.239212023 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.591954356 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.328824425 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.25780926 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.250406666 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.246864903 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.338021944 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.255133703 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.321902463 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.322378065 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.334517396 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.279063785 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.236385373 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.230674604 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.243033228 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.243013247 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.238077438 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.267382395 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.238420578 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.237558125 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.60562346 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.250336267 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.24846943 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.238526985 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.239832783 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.259516954 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.239310255 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.24188152 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.328292037 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.241864047 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.302387464 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.630111469 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.617150352 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.241168006 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.241586571 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.241495798 seconds)
  done (took 142.203221987 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.307216577 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.314361499 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.346505674 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.24266635 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.29332672 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.350556003 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.243548243 seconds)
  done (took 10.270437284 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.2468454 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.243058514 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.291517718 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.289627266 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.241811169 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.388417922 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.244258928 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.251133805 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.240387296 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.29411309 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.244860945 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.242237611 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.25148169 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.243028373 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.289498984 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.255337575 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.357525402 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.243503741 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.243993093 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.394232753 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.239592623 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.250917706 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.294738527 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.253784769 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.245407102 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.24958344 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.812102981 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.244433541 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.241539759 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.243418903 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.241863685 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.281566182 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.245236234 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.242605094 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.24080244 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359525663 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.243283415 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.241187035 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.243567005 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.240786831 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.246742398 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.245253959 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.244800378 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.242086694 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.246063603 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.267122233 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.245151896 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.245040144 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.245079072 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.246092753 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.295062482 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.246930519 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.24472535 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.242472212 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.299526799 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.252397453 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.245339828 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.241787312 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.246457076 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.24254664 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.395231042 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.292013039 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.244073721 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.292399821 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.245900029 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.246569596 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.245848978 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.246248575 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.300232874 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.245163564 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.295236798 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.243709782 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.400099941 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.269070053 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.24707617 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.249294146 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.248406306 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.246261054 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.241045313 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.250385305 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.244569082 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.246861918 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.249902566 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.243096045 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.243121766 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.346405215 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353993502 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.243911534 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.258228793 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.253505555 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.244063467 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.299644812 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.24705692 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.245210509 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.299653999 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.359240928 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.299915352 seconds)
  done (took 144.481331641 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.25219159 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.25468331 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.248611582 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.262920188 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.246521353 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.244303176 seconds)
  done (took 8.68421651 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.249459216 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.248492641 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.248614747 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.248745136 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.24883599 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.250286052 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.248293354 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.248952649 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.251435257 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.246511356 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.249834208 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.250712778 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.250713312 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.246898391 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.248642558 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.248588007 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.249340658 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.246244087 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.248467334 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.248521711 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.352095978 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.248572095 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.248775554 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.247250636 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.253774637 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.247693647 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.25520257 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.250003739 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.248576945 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.256370329 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.252922248 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.250673273 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.248692293 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.254199779 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.251448137 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.250562155 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.253334389 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.252215371 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.24651118 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.251434795 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.254518533 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.250105229 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.249853462 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.252822961 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.251550163 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.253764074 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.256769955 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.256984645 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.249939364 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.252770042 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.253790047 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.250259312 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.252194537 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.252984091 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.254111577 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.253704324 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.258560372 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.252468117 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.250503076 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.251416915 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.251630976 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.251661311 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.252883549 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.254474975 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.247466285 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.250784138 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.252190437 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.252459461 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.250204374 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.250176647 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.252730121 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.249063399 seconds)
  done (took 92.352299087 seconds)
done (took 399.159732553 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.449794333 seconds)
  done (took 7.629055961 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.473735426 seconds)
  done (took 7.65533351 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.928080294 seconds)
  done (took 20.119331302 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.312679755 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.282533431 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.245418409 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.245846687 seconds)
  done (took 26.267970625 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.330522648 seconds)
  done (took 7.510373359 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.242971378 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.263643076 seconds)
  done (took 13.688154551 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.554235551 seconds)
  done (took 7.736536456 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.87542818 seconds)
  done (took 8.063684916 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.248277842 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.263064178 seconds)
  done (took 13.944340857 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.228339672 seconds)
  done (took 7.409834575 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.9651856 seconds)
  done (took 8.146781903 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.252934347 seconds)
  done (took 7.435877529 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.327449375 seconds)
  done (took 7.508338564 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.596804272 seconds)
  done (took 8.778291721 seconds)
done (took 153.073468472 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.243176649 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.245741354 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.244750747 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.244402652 seconds)
  done (took 26.159413102 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.286315853 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.286431545 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.287083258 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.296744683 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.288781887 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.286101331 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.278260138 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.277943221 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.298272386 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.289210523 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.287590752 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.287743566 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.284209221 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.280176363 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.289560703 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.288885825 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.297675842 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.286821482 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.278769938 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.289963243 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.253572565 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.297371558 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.289422352 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.253731234 seconds)
  done (took 32.022424611 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.452067277 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.324535333 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.40588313 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.304955618 seconds)
  done (took 6.670617095 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.302979303 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.30773051 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.319360244 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.356913763 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.383653305 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.316442897 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.281073634 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.275100922 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.261085583 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.307009153 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.383824687 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.323128717 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.391030541 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.255628273 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.441575133 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.25382488 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.253165973 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.306715591 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.358604029 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.377267622 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.254391044 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.307926078 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.309390049 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.32327137 seconds)
  done (took 32.835598976 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.253857382 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.262011194 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.260693685 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.255897788 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.25541112 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.254225027 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.261872694 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.254573225 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.275322035 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.256999028 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.251494758 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.256478425 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.253076999 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.254544965 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.25444789 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.268707157 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.26946014 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.2552117 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.258950079 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.262116866 seconds)
  done (took 26.360179486 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.249030784 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.101221389 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.599135423 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.504171527 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.249523793 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.248473238 seconds)
  done (took 27.137353087 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.31633981 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.441959848 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.255358709 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.572780394 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.64816697 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.256391133 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.25471829 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.473258027 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.74437527 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.741103171 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.301553203 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.312443079 seconds)
  done (took 18.504184365 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.257001459 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.250862105 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.249175355 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.266166605 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.303406777 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.25935695 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.262129554 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.248953471 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.304923185 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.306804483 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.261405942 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.306495769 seconds)
  done (took 36.463452408 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334842888 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.298768751 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.141934928 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.951203348 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.967662942 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.884365414 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.978660611 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.659574038 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.256713064 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526298432 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.93674289 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350401019 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.506139454 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26204518 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.250891799 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.169388712 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474473219 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699106342 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.250953177 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921028946 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274792869 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.25801755 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.088648443 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.276047399 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.460998941 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.22934514 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.510676511 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.027851638 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508135466 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.257439632 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.260225501 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.251646067 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523102641 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883004226 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345290312 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.260801302 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.915769463 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.798296807 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.241022864 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.00020729 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.730326986 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.253300225 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.260602136 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.249332423 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.18278499 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.260489395 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665723898 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.258332146 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.960866948 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.248957227 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.262049932 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344984775 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.252196417 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.819568654 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245867396 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.253077293 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.247774723 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.255479261 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825526395 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.388083322 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.259487964 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.185459982 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.59762136 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.923956825 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82030155 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.351073959 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.255450106 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.254899088 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.184984561 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.989639617 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.267783292 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39853224 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.275226313 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.900122508 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901312874 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.9570595 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.191489187 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.766785794 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.253612117 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.186621559 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.477938448 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028757902 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.188764049 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.198137039 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.188060792 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906935972 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261444081 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.580804911 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.260922978 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.661234749 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.265721712 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268474832 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275808739 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.47706949 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.135734823 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253645763 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.724026507 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393015265 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272700652 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.665016414 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19025495 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.253603002 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507805859 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.464049595 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.252470201 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.177205403 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436471258 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253469012 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.267119651 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.261036346 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.265104899 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.781284665 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.264252308 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.396941732 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26973976 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.028390347 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951133194 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262308909 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.354599671 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.961049919 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.491577819 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.971936116 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153757117 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.322386072 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.257256801 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.253984705 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.041116883 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.105873432 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.159237892 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.256004375 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.254007807 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.265749578 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.255083084 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200687287 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.247952589 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.984622586 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.032830271 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.477425626 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.262212748 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529942284 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187110635 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404008247 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.263120409 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.475680746 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.380707523 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.253498593 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513259932 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257312248 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.254380522 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.267028987 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274980343 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352390997 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277175564 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.258621151 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.513346533 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.259149496 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.260184034 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.038098972 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.03489249 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259726049 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.262582926 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.073823601 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786898095 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231286569 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.26372663 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144566782 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.269644311 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325030973 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.262750972 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.267302779 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.91039195 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.045091373 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.261311837 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.263647574 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.478212305 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.267383895 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.028849397 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335046098 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.434985038 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.789914881 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.269678693 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.191662426 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.96878195 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.950385398 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256389198 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.444165059 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.256439378 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.265725285 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267682055 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.735992217 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.78724864 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258837122 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.950759733 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.263668915 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266730672 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.264602148 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256076992 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.883265646 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.419669867 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271146417 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.268666001 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401002321 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.270514999 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.191914151 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.774807326 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.26321322 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.257610228 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.032354138 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293497412 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.963056048 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.724066457 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515704266 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.919874048 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270182114 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.049441239 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.287657201 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.257021808 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.75149247 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279088233 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.26762996 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.267049566 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.269888393 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.96108858 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.696732638 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825226246 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933554461 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740368402 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131345157 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.259952813 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.160008361 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679399565 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.195286445 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915937621 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.432838684 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.673816397 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20575759 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43834555 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.378526711 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.961074585 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.267215555 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487692797 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1312283 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.763334351 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.283883251 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.471145921 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294061299 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.265179541 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.188720182 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.561186623 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476122538 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.767239452 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341042529 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673564532 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.751157817 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.049577725 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.258788427 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.55222066 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417858476 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.892127564 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.648017348 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.25750395 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.019072101 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736190779 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.271106738 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.787422628 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835838647 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.269886819 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.440323288 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198628326 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.270635392 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.272820718 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.263111179 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.402789775 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.257795679 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.514675599 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.270857372 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197394367 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.275539044 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74734263 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.116344793 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.268542968 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261653523 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957783086 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.270507177 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52385445 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.271266474 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.884189053 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264394122 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.196405126 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196516188 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.955521858 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.265821278 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238824109 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715383757 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.592908694 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.243154659 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291372333 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107094748 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.519704429 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.27643164 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.801802748 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486433139 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.020114228 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285263207 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.362973802 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.806517812 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.259461532 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.160418197 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.499320419 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.078011059 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.485984442 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.166927716 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.17071369 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.26104309 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.477082953 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.159204161 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.009682034 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500339308 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.975721136 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.26703665 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921306901 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284950926 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.035031905 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284883252 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.606293789 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.270978351 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.335465086 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.274920678 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.275461071 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.273806753 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420087827 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.037116713 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276052552 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.278726636 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356879347 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.455808662 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.89672628 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.034721283 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811650635 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950440898 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.802596807 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.274148172 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.263908644 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26346133 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199532675 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413709213 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.791021677 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537277555 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397455464 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.672303399 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287542587 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.826385634 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.281374275 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.477145109 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541792729 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.135409696 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270679265 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.924833826 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.162336193 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.27595377 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.476655764 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723869044 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788951315 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406475579 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.266563188 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.678985709 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539726284 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.357224805 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.2662388 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.854932354 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.279152799 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.568190705 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.269478651 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.076628141 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413959678 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27583287 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903923701 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.276367255 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.424751847 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.038978694 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.081647006 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.522727291 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.684280432 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.27497586 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.810479531 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.911398524 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.528915446 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338656431 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.278515546 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.371627893 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413175103 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.268316913 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.163216008 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.266112474 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11211834 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.977154458 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.276405688 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811984938 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527986715 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.266137166 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.26975216 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290177802 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.278054998 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.490220774 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9386786 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.493268526 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.276792396 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269700154 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.260137653 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808360585 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281844547 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202574425 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.269607748 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492564396 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.505195562 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293957988 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.723052776 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.980878675 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794450454 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.24092108 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291035679 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28217759 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.913353057 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81131203 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.889240401 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730537331 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.92900011 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.272797614 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542200799 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.27339229 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.269098702 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546527453 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.27303435 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.268074705 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280269651 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.809894069 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973976925 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.28296877 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.00866535 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.206795407 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.494062284 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.878397383 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207912752 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268244704 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.436654386 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.273274513 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400525523 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.27776695 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.279981057 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27731962 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.003386654 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544876542 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.273462086 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.273436018 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.858541989 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.279635162 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276190492 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488920554 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274389315 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.944745197 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.622039697 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.526018704 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.284808512 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.254823647 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.274352832 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271399603 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.985515407 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.239160711 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.762213092 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796201183 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.285729563 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.283058454 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27531802 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.488317396 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.483780443 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.07489167 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.295726899 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27946113 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.286243657 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.173940601 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.039859898 seconds)
  done (took 1532.918719222 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.289648148 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.282911723 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.282451597 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.293440265 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.314114281 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.294254661 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.338827505 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.283674576 seconds)
  done (took 51.585586209 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.277593326 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.426576312 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.300396246 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.270456641 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.280367951 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.270374067 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.701789259 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.274420149 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.278424128 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.280303559 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.283174853 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.278887237 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.893434902 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.280593678 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.273994057 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.264562443 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.276725127 seconds)
  done (took 64.124222103 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.270986786 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.464369502 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.345331467 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.290218075 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.885174493 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.270725398 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.47176222 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.28969545 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.271289214 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.586544161 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.925360402 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.274619904 seconds)
  done (took 82.552507634 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.280920824 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.28087483 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.282588792 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.280435351 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.281654111 seconds)
  done (took 7.613851131 seconds)
done (took 1946.131234277 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.520748373 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.902451149 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.887233133 seconds)
  done (took 4.99562565 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.420459977 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.469444113 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.593221781 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.595260234 seconds)
  done (took 7.283904659 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.562324259 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.642163411 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.464890821 seconds)
  done (took 5.877279827 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.58448881 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.288018955 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.393798459 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.27151837 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.271880409 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.271761472 seconds)
  done (took 20.022857246 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.278031468 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.28239034 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.276280877 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.281412875 seconds)
  done (took 6.324257722 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.257826975 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.980692477 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.261273378 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.276159134 seconds)
  done (took 17.984556026 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.02603737 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.037649574 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.021239095 seconds)
  done (took 7.292471034 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.277559218 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.119059701 seconds)
  done (took 9.60411765 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.570421806 seconds)
  done (took 2.776996796 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.409230171 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.604953901 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.258545687 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.171143923 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.256697323 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.737727521 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.764920687 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.379125225 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.155665725 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.218301824 seconds)
  done (took 26.165336583 seconds)
done (took 121.322697039 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.813682137 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.515277805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.478591135 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.778158823 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.515944295 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.477239947 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.496743455 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.746072312 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.290281637 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.278406302 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.780012136 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.505409162 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.443422275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.518443369 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.445641436 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.521355793 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.506259367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.860301728 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.461281801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.671429627 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.493373191 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.420768204 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.613057985 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.436802419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.505226215 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.433863486 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.003180109 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.273979419 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.637410329 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.018252119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.426996624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.84128365 seconds)
  done (took 186.416540328 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.275629823 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.28493341 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.288994629 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.298146318 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.27414471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.273564659 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.286267693 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.290522406 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.287254577 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.285364103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.273566096 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.276365658 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.2752174 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.296060438 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.274882826 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.274419888 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.294071838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.283920894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.272811397 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.284052933 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.272750323 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.287816044 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.284650035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.274751022 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.296597734 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.275805464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.275314147 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.281849857 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.275498313 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.279103362 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.273501241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.275465973 seconds)
  done (took 202.215580356 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.277705759 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.287323998 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.285258889 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.283782933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.275735775 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.279494698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.27970417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.276310357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.287076431 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.279075372 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.288167741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.28257529 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.277045511 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.278163588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.286478588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.286835044 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.277425039 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.27611784 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.296746771 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.275898107 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.278461501 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.274418397 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.296458861 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.286640115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.278482785 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.289142262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.275015955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.274225048 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.290118094 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.287822002 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.278213596 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.279448567 seconds)
  done (took 202.239814256 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.480024014 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.287727433 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.289680665 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.241923136 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.287842294 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.287009259 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.282609424 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.479608337 seconds)
  done (took 13.850362294 seconds)
done (took 605.931957113 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.478737915 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.202991533 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.476550947 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.307391957 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.007465664 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.309709317 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.307954523 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.467029841 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.186188088 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.465185228 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.458171883 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.300476003 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.60126773 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.304569144 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.542336333 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.396960756 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.141414672 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.247680064 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.602242543 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.776635698 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.557274723 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.682531901 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.461453876 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.191672692 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.596093286 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.685772833 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.937536491 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.13718503 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.305989556 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.6055653 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.837269848 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.208283557 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.357133498 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.336952498 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.395015784 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.377374783 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.183556177 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.341643142 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.47870102 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.449780029 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.782858685 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.011115045 seconds)
  done (took 87.716333766 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.276797359 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.276775625 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.275558305 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.275441414 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.277948697 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.276243036 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.275788693 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.275337463 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.275993034 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.275915611 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.275925471 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.278235165 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.276286334 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.278542737 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.276010216 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.274933388 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.276944634 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.2796688 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.277452989 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.277529299 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.278753892 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.278827235 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.277120375 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.276469827 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.277608217 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.27820289 seconds)
  done (took 34.418155679 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.290303861 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.534215967 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.683892106 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.296721694 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.290745407 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.293874498 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.359526858 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.29286549 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.292698241 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.293852712 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.438811329 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.29425413 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.325770394 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.703775318 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.291726046 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.291363816 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.293277302 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.292002811 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.539991123 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.301873936 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.378215145 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.291388038 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.361526351 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.300715179 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.306422847 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.29248742 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.294739803 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.800541173 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.292615789 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.439073746 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.994703808 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.358558929 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.75544706 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.694253781 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.996286686 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.294322687 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.291875346 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.443838109 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.294449395 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.292199106 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.361698581 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.291446576 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.69172645 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.895560121 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.304951098 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.292336349 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.820287347 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.443047074 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.511456441 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.299625307 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.712378733 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.294498341 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.295524694 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.295127062 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.512744938 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.297839254 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.293617 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.805249254 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.309363226 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.363105095 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.291099749 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.293551957 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.549652366 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.293133574 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.53940264 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.293468592 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.304231672 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.293253826 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.695709863 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.295618409 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.919838064 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.304261791 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.296875508 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.439394524 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.534973929 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.849453861 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.294478108 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.554295933 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.769436214 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.361466555 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.294561625 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.792531702 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.365197796 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.298133924 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.297980518 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.298110749 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.295867452 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.355539688 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.363451611 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.849694937 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.905587677 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.812095126 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.376772572 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.310397689 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.29780068 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.804133835 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.307826109 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.295771194 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.691589489 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.918939877 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.308068623 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.303195603 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.904145621 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.310035805 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.366667072 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.2997759 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.703138354 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.293611216 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.348372771 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.296145502 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.303223449 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.300327859 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.366928298 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.29779023 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.295958754 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.891105038 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.458260015 seconds)
  done (took 170.039344059 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.291017312 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.285172301 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.290083611 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.287284597 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.289341429 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.295763232 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.288120795 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.290220476 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.294804336 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.290498883 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.288807122 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.289348187 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.291847263 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.307841999 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.297225076 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.296105034 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.901899277 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.288172207 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.29262126 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.288017909 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.068659856 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.292092266 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.290945925 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.287928139 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.290833693 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.289296292 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.293624024 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.293209869 seconds)
  done (took 150.772862067 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.297824783 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.805194975 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.294921124 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.416058294 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.31430923 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.295798178 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.412479796 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.349744908 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.29863691 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.294726333 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.297358276 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.57099837 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.296089235 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.766465945 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.464850853 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.413191081 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.764982109 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.296060555 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.297301174 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.295374123 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.41831773 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.304594853 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.576112648 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.816075785 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.298644694 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.817103292 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.288918631 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.299737834 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.298128389 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.818957449 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.296401653 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.576662737 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.37012101 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.352741868 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.816214986 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.768520585 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.76440345 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.427467909 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.294894845 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.296009004 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.298058114 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.288027689 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.813132174 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.297085515 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.298997226 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.808149607 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.30965007 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.300230368 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.309321955 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.296815652 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.350475471 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.352915868 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.57462636 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.816069675 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.364880706 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.319473916 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.416282528 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.651884992 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.301332921 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.770494519 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.287655827 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.818486562 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.301110249 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.287969161 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.300313786 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.304799701 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.436046753 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.415494634 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.77431079 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.302918652 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.773153435 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.435074434 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.299635597 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.29806417 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.302854811 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.81662838 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.767496112 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.430108431 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.420707042 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.470139972 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.29072959 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.29964127 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.290937383 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.371401156 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.299960071 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.822157987 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.766573658 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.298583484 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.302748598 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.302614277 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.302300077 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.458193252 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.822072758 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.366926203 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.763868122 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.589763005 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.579629727 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.30054311 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.354723798 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.29822219 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.58326725 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.300138048 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.352765413 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.713616436 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.583515015 seconds)
  done (took 153.965930987 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.532768025 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.427013171 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.386335762 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.404377305 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.856455244 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.850147398 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.546896666 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.419699464 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.401972111 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.528418837 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.393298518 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.390697129 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.455517701 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.369891114 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.014849418 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.364494154 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.38707202 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.421634067 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.388304885 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.268687132 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.905963965 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.569718787 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.459722903 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.188548278 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.389818342 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.042996295 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.825132217 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.824885173 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.46077039 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.515342123 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.821815882 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.363231709 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.210271286 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.929829564 seconds)
  done (took 62.545854444 seconds)
done (took 660.673789316 seconds)
SAVING RESULT...
DONE!
