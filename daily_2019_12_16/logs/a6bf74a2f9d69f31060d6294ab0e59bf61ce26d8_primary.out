cset: moving following pidspec: 31348
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.397802011 seconds)
loading group "string"... done (took 0.575865039 seconds)
loading group "linalg"... done (took 7.295290037 seconds)
loading group "parallel"... done (took 0.1614679 seconds)
loading group "find"... done (took 1.170644184 seconds)
loading group "tuple"... done (took 1.801972103 seconds)
loading group "dates"... done (took 1.258903735 seconds)
loading group "micro"... done (took 0.222459047 seconds)
loading group "io"... done (took 1.016826039 seconds)
loading group "scalar"... done (took 38.369915687 seconds)
loading group "sparse"... done (took 11.915441502 seconds)
loading group "broadcast"... done (took 0.940431236 seconds)
loading group "union"... done (took 12.303391229 seconds)
loading group "simd"... done (took 4.448043782 seconds)
loading group "random"... done (took 9.081651701 seconds)
loading group "problem"... done (took 1.842870293 seconds)
loading group "array"... done (took 20.878060464 seconds)
loading group "misc"... done (took 1.687539119 seconds)
loading group "sort"... done (took 3.337206997 seconds)
loading group "collection"... done (took 17.314999762 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.522128586 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124935013 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117762392 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119442541 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147299774 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.111872301 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123231075 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085830261 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.788429726 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148107815 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118367749 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.430795361 seconds)
done (took 5.128118172 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172428115 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083066578 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082882208 seconds)
  done (took 1.279970465 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064608705 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121276209 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066968441 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06677968 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066599313 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065736799 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065589553 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065817554 seconds)
  done (took 1.63312608 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072369136 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069227302 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066476116 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068222848 seconds)
  done (took 1.392020096 seconds)
done (took 5.668069423 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.786140065 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20158882 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189682477 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.4122967 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130459037 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15827445 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639086043 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.305078223 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.190685421 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080538172 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107794319 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.328701866 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110642136 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640197898 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073955739 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090318713 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13624987 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437052256 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066746988 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08132506 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088198087 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127675774 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086001928 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074057708 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14481858 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066855547 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136180326 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079329499 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065804454 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.211437687 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172089269 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651410118 seconds)
  done (took 10.225700939 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09512845 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097470592 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068512783 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12237092 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095677848 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06883394 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070355894 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067308453 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086694221 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127107648 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088410137 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101121312 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064581135 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068361134 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084682281 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203818723 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079589699 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081998498 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06989004 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074802072 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104169983 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077854437 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076652458 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076458663 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12810632 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178851824 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096368083 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097082141 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066631307 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079103662 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114733678 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124768552 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065014993 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066375575 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123680171 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093952472 seconds)
  done (took 4.533066625 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.003222011 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143982706 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090415073 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135290626 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064310725 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109090635 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065255875 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080753961 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209763891 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.373006075 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.591433921 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112015844 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103433855 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06700383 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067857359 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066342128 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.488615895 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095449786 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107406363 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080746898 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069726811 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069013358 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354436415 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067967312 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063377881 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067960672 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057338874 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125769536 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067689086 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.951068433 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126904087 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065962897 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10041484 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162566459 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087416106 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141384122 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066452521 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.192995816 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153909973 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070695429 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065790543 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084482449 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103641581 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112836223 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06594668 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066119053 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161696526 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067087752 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.11134138 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079553955 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.642457682 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153453291 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075675715 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064085413 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.253743736 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087902191 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068279387 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064156326 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.185920001 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13596775 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069006811 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066941811 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067528768 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063824 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068731653 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365665669 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069133441 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.990990116 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070419042 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075395237 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069169083 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06930006 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07227819 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071712311 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087680473 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065745913 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074554666 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06549896 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06572442 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066119952 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083019705 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.376053319 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06721302 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067662782 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064609728 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064737009 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063879418 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089497056 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096241462 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066387084 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064823415 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10024237 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067925254 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06625417 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106648865 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066261259 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083021444 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069137906 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112898864 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065962024 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.185086335 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068113957 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097584678 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069430998 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098654292 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080515315 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067220169 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.418371283 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064167631 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065153903 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068568779 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065288139 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066509633 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066523583 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079493042 seconds)
  done (took 21.069233168 seconds)
done (took 37.946289339 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.239222312 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076860932 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074661216 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07980763 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073900853 seconds)
  done (took 1.7495786 seconds)
done (took 2.933652449 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122506342 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100400026 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063553181 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097570694 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063842584 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10146665 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101231929 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081301389 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100869424 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063473103 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097159697 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064176141 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063800302 seconds)
  done (took 2.326633779 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084289038 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083881927 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070022146 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083898496 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0631476 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082773047 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081317789 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088830587 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08145189 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072987181 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063781064 seconds)
  done (took 2.034717635 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083164539 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084903398 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069350239 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082437103 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063368429 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081962385 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081587139 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085647403 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081443106 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073897237 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063006273 seconds)
  done (took 2.025938295 seconds)
done (took 7.561258339 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076244365 seconds)
  done (took 1.243759691 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591682581 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.083895191 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081440399 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111191818 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192160808 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118953664 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273294708 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086739367 seconds)
  done (took 8.889964275 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088627247 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069359925 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06901126 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082758573 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067887039 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068169577 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070686131 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071780699 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07077803 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072188998 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069365054 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07223988 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07085758 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068864507 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068539423 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.0714337 seconds)
  done (took 2.390839158 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092391564 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092026792 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07299334 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075342923 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071537695 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071674899 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074281815 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07373335 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07026304 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072229318 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074552461 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073572463 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.0730961 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064228818 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073409931 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075304423 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070844258 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073726366 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073886826 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074506011 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074673629 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06387667 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071364175 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074170255 seconds)
  done (took 3.053274274 seconds)
done (took 16.753332898 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115448063 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072147997 seconds)
  done (took 1.362933992 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08099065 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083149738 seconds)
  done (took 1.345113459 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083348519 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064962114 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091579825 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078444427 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065912254 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065116252 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088351482 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065784526 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065784994 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066168906 seconds)
  done (took 1.916762967 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067186491 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077889414 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070472115 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081366924 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073849736 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063832358 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071859583 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067584613 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076936568 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06241767 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071304967 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082565327 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07069069 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084271521 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071700606 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068056394 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070508013 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067636659 seconds)
  done (took 2.482796678 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066038958 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066689395 seconds)
  done (took 1.320289495 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067184806 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063252262 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067157466 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066049586 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063252481 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061963305 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063148559 seconds)
  done (took 1.634294176 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385303943 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112415362 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310599774 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070688149 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081608801 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257833923 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065430812 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070099842 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070226442 seconds)
  done (took 2.651643212 seconds)
done (took 13.90347837 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079558899 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086360262 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095915855 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.376819241 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091215466 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065561669 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113518791 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18873784 seconds)
done (took 2.295234773 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212417175 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.639813833 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404302007 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204069648 seconds)
  done (took 2.438479074 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342163567 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087812251 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058143431 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06677649 seconds)
  done (took 1.75386948 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065984032 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068665037 seconds)
  done (took 1.33140024 seconds)
done (took 6.932937831 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086060812 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066153949 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065833798 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066145729 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063671178 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.063054492 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065731708 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.062872556 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063579736 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066151227 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067901817 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066075482 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065858248 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065746957 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063665392 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063585696 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065701881 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063547336 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063344255 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063220782 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063104162 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065843219 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063667599 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063564784 seconds)
  done (took 2.806424826 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084548482 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06567186 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07184315 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071680519 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069303173 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070770803 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070910321 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065842074 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070882278 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068133816 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069506012 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069219961 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06841688 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069229286 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067798616 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069880879 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0704203 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065708544 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068229423 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069028185 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070310221 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06532762 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069715896 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071174978 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068955698 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070237236 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068108813 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065701668 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070985867 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068644736 seconds)
  done (took 3.291266618 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069293947 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063047547 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064375486 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070543408 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063421404 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06416368 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063088819 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063157568 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064113549 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063379401 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064210218 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063383835 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063054353 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064231312 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064067144 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06709388 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079218225 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06365065 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063098936 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063862107 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066446437 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063541394 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063325207 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063140567 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063121729 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062616804 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063707578 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062908856 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064000094 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063033264 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066154704 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067066356 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063214495 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070460444 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067367514 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063083444 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067303941 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06303373 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063615588 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06283618 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062495145 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063127085 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063251367 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070210158 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063313242 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064671084 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063961228 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064123947 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063822704 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065491893 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062533855 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063098425 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.172755494 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06413832 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067593339 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06253421 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063723556 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062396206 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063826888 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062426513 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062510754 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063022792 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065775483 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063498408 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078097618 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070000154 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06299233 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064770356 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06405631 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064936714 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064649454 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076552929 seconds)
  done (took 5.993023558 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089675202 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087178643 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06541396 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064926554 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06144971 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063143896 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069354501 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063659344 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064937249 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08169288 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064114357 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064823442 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065333543 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067112876 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063756806 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065269802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071619672 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061015362 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063357834 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067189481 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063830968 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068918569 seconds)
  done (took 2.713658034 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156419535 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070373233 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106166906 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07543012 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069538214 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075125185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069452736 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069054911 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069446461 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067169291 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067614546 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070435528 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069485564 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06736155 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067324635 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067518696 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069139217 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067213247 seconds)
  done (took 2.585342279 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076586541 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06586379 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087578962 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065459169 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065363826 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068406153 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070206827 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073885507 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068239509 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065673904 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07429861 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067988678 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068373999 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065329979 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068007035 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065967411 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068127966 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065565518 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073680605 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069435003 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069485522 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073541026 seconds)
  done (took 2.748933897 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079472298 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067643712 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081789743 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067746721 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061408943 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063847809 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069713246 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06521816 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069769057 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067090529 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06538511 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063814422 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067862502 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065374179 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067830147 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064808578 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067324916 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064629107 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067077234 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060821717 seconds)
  done (took 2.562313374 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086632568 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067034315 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067185536 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0751338 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066651202 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06763391 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074288428 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067162676 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066681436 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088333436 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067180931 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067499413 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075991273 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071092161 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0664164 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074444273 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074673252 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074659789 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067395264 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066555862 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088614389 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066629014 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074199521 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066825472 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066837 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067207955 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06690096 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071573177 seconds)
  done (took 3.215050994 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066269066 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066179676 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063704181 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063258109 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062830958 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062909051 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062641127 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062984252 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065636495 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06350897 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066514068 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065467293 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066138624 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065570525 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065519296 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065603118 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065595879 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06341477 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063902994 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063288946 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065726875 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066333304 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065964248 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063403915 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063205549 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066378858 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063236329 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063253392 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066076904 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063457579 seconds)
  done (took 3.155119181 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075773696 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07296823 seconds)
  done (took 1.366860141 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062940685 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0802531 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062728735 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069823022 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069671009 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06633527 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073424518 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069309152 seconds)
  done (took 1.768843243 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081251966 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077086212 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067726779 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080110106 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076394804 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083374547 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134832607 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066907816 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073142584 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063833368 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079897343 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065448679 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072873091 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066259321 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071737944 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07254634 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064057712 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071597144 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06824339 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064342908 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066890151 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075541281 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068546783 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061158272 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067419268 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088374469 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077237582 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06558346 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068773137 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073288101 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071748076 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05950338 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065619102 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065809047 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06344384 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075428424 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081154623 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0686284 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074375506 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066343798 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075860173 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060568907 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070362848 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072347484 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076100265 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06595268 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066305901 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060539907 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063565071 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068089651 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060924584 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068509601 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060189637 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07220274 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069223784 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076174159 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064526771 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067305513 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068707551 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068910046 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072684918 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067429214 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068609304 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065171556 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076200257 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070605385 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074491686 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061179894 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059762069 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064068866 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075492608 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088792605 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071857868 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06653813 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066351736 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06310688 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069568595 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067318417 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071886911 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072394103 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065700482 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071058313 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073311163 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066153466 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068013458 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073477587 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06411119 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068153427 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063487537 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082249201 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064343382 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063619379 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063633723 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076647202 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069108975 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065756016 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063624482 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073387224 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059695776 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065884869 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066459407 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066746443 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076295298 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070049522 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069454421 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073403333 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071849157 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065137079 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067639636 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061736088 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065699516 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064256213 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07208202 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058975357 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067695839 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065439265 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064918838 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073245054 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062829073 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064734376 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072340424 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070577951 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.187863964 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063086352 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069661931 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066870852 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069426803 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074813273 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065645561 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061613326 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061484007 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069781637 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066599215 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070318381 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070623115 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069121361 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061266812 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064607587 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071538579 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075665215 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066624652 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067586141 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072487349 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068316578 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065822453 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072919905 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06981055 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065615648 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072364862 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067541611 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061054865 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069653278 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069572443 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06477506 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069856001 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070329026 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06858043 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066569383 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064535198 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073753581 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067943988 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065401436 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067051839 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065108246 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076897652 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067943013 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060806675 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063718456 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075598113 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063886296 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065453934 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065488053 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068618663 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067042293 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065010146 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066284625 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068293154 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077026299 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069613863 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066620721 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071834097 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07888101 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065779028 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068035324 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065976806 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066670688 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066745928 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075246613 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07154029 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071153328 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068968717 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062680918 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07169017 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073452734 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.0650663 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06371646 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064322865 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069690042 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071177511 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069432725 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06673331 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063879595 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066195742 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069001959 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068173077 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065486462 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064729147 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07164852 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063973302 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072146998 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06628451 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075942378 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068974166 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060659063 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069236489 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063972425 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072228481 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061268409 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063754305 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06525485 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067194912 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065401714 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068357912 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060216848 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073079226 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073696918 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066870675 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065083306 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065587985 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07304281 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067282466 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069447269 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068844879 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070637587 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074968669 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063820361 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068028352 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075071069 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064622581 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059125246 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069725958 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063153862 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063746395 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063781493 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062493811 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067443064 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072680918 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071657674 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.186805894 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069605086 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065262124 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066026595 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061678416 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071428488 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06915409 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067044735 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073079509 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067701363 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067439414 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07044348 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065916034 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066864008 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067449983 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069453966 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067655553 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068282814 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066109511 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06953634 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065404474 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063617501 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068661169 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066969778 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067175014 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072106661 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065665628 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066839927 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069220658 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067175534 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067677805 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067246976 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065892691 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07004105 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067238509 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066912563 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068738883 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061289888 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073566021 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066182279 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073789494 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067066972 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062367555 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073920702 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068930673 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07193982 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066927631 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067132686 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067455675 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065308757 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06922049 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073261887 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06431863 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076857825 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073710232 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067715462 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068503728 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066904206 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068723128 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067123584 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067655012 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066852439 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066531435 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065616824 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071284754 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069191952 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066978051 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068087837 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067002555 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0667864 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066772686 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060045154 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065357039 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065633984 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065462746 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075737187 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066527062 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066811091 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064733715 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066956714 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064735962 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062842772 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073607876 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074500717 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065985987 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073291442 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064929297 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06720901 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076195427 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059900439 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063932951 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063294847 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063649391 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072665516 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066604528 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075117544 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066468661 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065542321 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063001434 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066687795 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064869399 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060233954 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063271258 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070090692 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065314511 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064619718 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065863534 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068142368 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06652342 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075344495 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06524551 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066678954 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065710114 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062865752 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064755249 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06428744 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067666247 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065538104 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063185406 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062003591 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064335073 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065883892 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06593328 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066192614 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066279959 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071503405 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064136448 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067513927 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067301795 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059722619 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.198058262 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0663466 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065500318 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065370239 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069781499 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069633187 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067527036 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074979515 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066069494 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066637792 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066768779 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063805185 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06586015 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065816393 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066589608 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065395555 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067965163 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074090026 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064487887 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070304077 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066901418 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067059484 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072768951 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067440897 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069775271 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072917142 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066260587 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06774566 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074555072 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070575154 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069566795 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067102356 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068034408 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072078195 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065293473 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072817976 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066957038 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067310747 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068818234 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064523403 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066264867 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065568426 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065072264 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072485028 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067507161 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065261787 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065795143 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064126854 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067237015 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069505279 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073532778 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068665816 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068962283 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061567812 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063460496 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067253436 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065068912 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06789499 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068668203 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071760223 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06842119 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06629097 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064961881 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07590911 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071957387 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069738212 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064698695 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069155135 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067247373 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068381462 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067387412 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066830059 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067247798 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070179332 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067725036 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064751772 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074532132 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069343288 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066265068 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067224079 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067036383 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065869878 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060745959 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06613811 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068155589 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070765124 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068071628 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065604469 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076297459 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063623267 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065942833 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06884196 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065001675 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070215495 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060956159 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067218798 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066323124 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066430827 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061129772 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065397766 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063884464 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068397126 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064860299 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060973704 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076425138 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075363777 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068999628 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065232526 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064464236 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060911789 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061040141 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065118158 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066591365 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06705645 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075353373 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064489243 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064828439 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060701055 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064919816 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068077486 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067997394 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062243972 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059593455 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064417553 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06739718 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070223402 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06332118 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06444122 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067807528 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067101296 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.193027326 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069610019 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06335137 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070423799 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079628986 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067298429 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067351704 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072522762 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074213572 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067223647 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061872235 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06679656 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070469469 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067027648 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06718319 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.0675742 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08224802 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069812168 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06570243 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065102655 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068902485 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066531716 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075352107 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067280635 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.0664878 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070567645 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06883137 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075104461 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069601524 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073961346 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069950144 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069813561 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065816889 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066829109 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064197438 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066283419 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067537142 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066873366 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071239777 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074740238 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065191129 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077101198 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075693425 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068214892 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062705413 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066104551 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065715429 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061800275 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066814848 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065002277 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064356593 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064274111 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065209807 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067982194 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072102247 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067175496 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066482276 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066419596 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060332901 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068774906 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068899524 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067473483 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062555377 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066223603 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067585362 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070214303 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07015031 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064251668 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068344393 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068184291 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066658717 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061525781 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072902853 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064530623 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067809985 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064649803 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065932691 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066725736 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069380278 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070172053 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066428064 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068172203 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069681487 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068051237 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063160624 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063039155 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071437835 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064126228 seconds)
  done (took 42.289694307 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100255189 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063382836 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061921806 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061917986 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073349643 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062732962 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061940995 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062764008 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063053594 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064671873 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061722541 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061961747 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070841101 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077582302 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073262758 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066129112 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06137087 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063189102 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06153866 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06282099 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070601354 seconds)
  done (took 2.725873567 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073563609 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077213873 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075405822 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081766781 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070314593 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070656363 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076319887 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070488528 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078722118 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072339316 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078633537 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07094638 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072314277 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072518395 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072349522 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070273063 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078271509 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070925269 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070533206 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075529244 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070763259 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075017159 seconds)
  done (took 2.915265004 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067256694 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066476492 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06827949 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061218714 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066381446 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061415777 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06908875 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063800963 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069348121 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06513968 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.0649205 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064622731 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067726955 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06125008 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065759213 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063827286 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107436384 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068989058 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065456266 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066544428 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060964158 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067651312 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061432511 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061804758 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064479727 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06840188 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066087718 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063463344 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065344531 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06426598 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065320282 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063238624 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067598133 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065702401 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064134086 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064302918 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064842859 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064931286 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061087387 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063162259 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065817008 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061065882 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065580987 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066604774 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063750399 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062895608 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067526239 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06507587 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060246772 seconds)
  done (took 4.514676236 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078904248 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109918345 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06722637 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090945262 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079405251 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072160158 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069763145 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090360817 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062750562 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064067256 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081251718 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078790956 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065255892 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069623956 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072156036 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065084999 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066368907 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064318498 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069643556 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064838513 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069010318 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071978123 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079456874 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077909063 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068712431 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063832868 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064399794 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069719719 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077375212 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069168735 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069477135 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070431772 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079999194 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067331581 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064594324 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06783249 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081142567 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06559301 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068250091 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063193947 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067186254 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069533643 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072019003 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081129183 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065508039 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070224764 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065394974 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06290817 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077383917 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067306872 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073340381 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079638707 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069591861 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065570304 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070227208 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079960378 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065508432 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06324552 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067825816 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076969324 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062929534 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068533976 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077903809 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06702117 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07172807 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07849718 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070014579 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068505802 seconds)
  done (took 6.303509267 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075993696 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094659194 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083823328 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083271469 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074887154 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074991031 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074945162 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075257729 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075176758 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079623898 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075418669 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115604483 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070543601 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07774479 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075034033 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075135109 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075343247 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076164794 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075153813 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075135558 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075716964 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08226917 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075674412 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082663552 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07919394 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070365643 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07531135 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075619587 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083082644 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07490704 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079583626 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074787264 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085443699 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082673942 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079774068 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074391483 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06509108 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074502165 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075079164 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074566363 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070277651 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082141176 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074970297 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07017808 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074414197 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074503387 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082061591 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078784737 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076919151 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079427812 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074828244 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082512708 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07474636 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07468624 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082702345 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086017069 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082153013 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082785983 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075174834 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082966064 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082533395 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086043472 seconds)
  done (took 6.171604382 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083280268 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074682421 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082526455 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061246914 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063972915 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071866604 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063928138 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06396497 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073691042 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073342953 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07630177 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071288279 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074820908 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076127136 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071439168 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074913259 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072075663 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071492202 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073926352 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071506543 seconds)
  done (took 2.759891827 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073766822 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08349649 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066466249 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071610781 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068497613 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070790224 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068330762 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069221948 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066879345 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068855024 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07618984 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075698411 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067116928 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071163002 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075438184 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071406366 seconds)
  done (took 2.451227167 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084272072 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073478944 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08064462 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06632976 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066575445 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062354205 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065707476 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060935427 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061922244 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078015473 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065810798 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076662348 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06529698 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064071159 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062365419 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071011537 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062358149 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064451497 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0654417 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078472926 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.06958642 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063680688 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069367376 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065042337 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067871654 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069772694 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064899042 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065822142 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063020968 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06582774 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06819365 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069430549 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06272875 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063695997 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064541564 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063452529 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065164587 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065849138 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071251253 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065432699 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063692957 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067503405 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065482283 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06663091 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061842248 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066504397 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061664257 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067934501 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063783907 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067946325 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065590269 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068987463 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065874073 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072343752 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068643752 seconds)
  done (took 5.003258694 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079319942 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06963216 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061588144 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063582729 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069567507 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067448203 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069361958 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067087416 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067382041 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064052238 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067431935 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068949962 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067862628 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069429874 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067416221 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069000771 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061467607 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066990446 seconds)
  done (took 2.53594956 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071478887 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065940009 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073134224 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066151993 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066603719 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068986827 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061630082 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064763391 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064952396 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065879735 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066106085 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068001781 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0642035 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068566256 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065486215 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065505513 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06797618 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064362871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06588914 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061951871 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068572194 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064742198 seconds)
  done (took 2.774174081 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094258523 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083895806 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140646323 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079431538 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085138137 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071498069 seconds)
  done (took 1.868908924 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09120783 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100499297 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066765405 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069076872 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075479966 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069865457 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069886757 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069980322 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077836916 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075963143 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070157209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078265127 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077914729 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077361912 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075311335 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075768794 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070065488 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069551403 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066224965 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083647446 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070020234 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078815717 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06998367 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069483304 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069827729 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078038866 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078532742 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075489067 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070063712 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0783836 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075883659 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070147149 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078478502 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075896203 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069291566 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07855115 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070204168 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084113544 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075870752 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077544963 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069379463 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076035191 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078079269 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074834066 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078344886 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069899409 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074717764 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070016593 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070802663 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086033874 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076577168 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077348777 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077744103 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078622711 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078370185 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085942956 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075929597 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077899842 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076871817 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076061193 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078071499 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076002571 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07744771 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076127592 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075992243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07733651 seconds)
  done (took 6.312435695 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104246361 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067422871 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071228622 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076723311 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077626559 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069982789 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070764373 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070076575 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069900541 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067136075 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109148702 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070158726 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077941569 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078125593 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070422897 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070300564 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070511806 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078100761 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06681754 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086527367 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07018416 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077755094 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077930524 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077378436 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076093077 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076093598 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070144179 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070189436 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07055246 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070500958 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075252577 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070433077 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077663226 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066618478 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078087935 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070937993 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069824902 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074825227 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069634337 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076211304 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077488324 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083440227 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069553121 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069473995 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075880799 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069772829 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069586245 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066428189 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069782275 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066199089 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075510556 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075460156 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076046883 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077212367 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069779628 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070035562 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069772657 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069817072 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070229154 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076181427 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077876246 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069330284 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08592441 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070335175 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070156333 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077711552 seconds)
  done (took 6.218404616 seconds)
done (took 128.247079113 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184351364 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164080349 seconds)
  done (took 1.658113993 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069281286 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098980477 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077786069 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128446617 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066544059 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100121551 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099717287 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078013913 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066185255 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066726214 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065956262 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06838226 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131120379 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066050988 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065881575 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068323462 seconds)
  done (took 2.639722028 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099551288 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.164440105 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103460971 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065501611 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098992613 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072813923 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064629657 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075498067 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070763323 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065555833 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072784081 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070587837 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065043025 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070537819 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070875148 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072851729 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065052233 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072780168 seconds)
  done (took 2.766434649 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09967522 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091507406 seconds)
  done (took 1.518534618 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162532488 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107159028 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146831453 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.355213403 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165834762 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151137814 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147549223 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14595446 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122047833 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140292702 seconds)
  done (took 2.967372003 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099727204 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156625056 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268990325 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118025121 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07269356 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094642836 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118787823 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077902093 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08082415 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080180629 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080787303 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075830203 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099949986 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073487686 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074041866 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075845072 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10356228 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073265625 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074725944 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076275953 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100747509 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065312686 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07379321 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073479966 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077179219 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077224071 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065417759 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065805842 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076558582 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074544709 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07700501 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092803228 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077125724 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106316749 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070550249 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107294855 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076186191 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073133682 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074972628 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073371174 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078231733 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078289628 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072647938 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076180426 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065225303 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076169189 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065431548 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065465592 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07811481 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066608692 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077932415 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076756237 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106406657 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067086679 seconds)
  done (took 5.955930824 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103143765 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106386055 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071830553 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113165727 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103087875 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072499777 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10304138 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095208675 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104685347 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070108489 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068736715 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06995001 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081945905 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082644229 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115054456 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107107852 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073379196 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07142968 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107673833 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105247842 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068249717 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097059313 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091409495 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10361474 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067780758 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07080536 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067765757 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070332243 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076710719 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078090039 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069885499 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080131557 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084777607 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078627049 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067637951 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068643378 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068603925 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07927967 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0793607 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078935947 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07741633 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067861216 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07336958 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069579159 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070128239 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067878731 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078411449 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07989239 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078698166 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069376402 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069924183 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067899588 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069676291 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079269488 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077572606 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080102634 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079868076 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06818732 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068401891 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07201771 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080244407 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079067247 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078920824 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069707335 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078894741 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068059185 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079820498 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083622714 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068037261 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069896912 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068260117 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069216928 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069510369 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077256241 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077276041 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06933795 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069450908 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068279451 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080314762 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077941867 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067726959 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076753791 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06714612 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068620561 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069834317 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069573566 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077612306 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080080847 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069444111 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06785031 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06862339 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068478965 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066820071 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076700256 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079705859 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078581015 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077476095 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068229084 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077383676 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077294989 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069057071 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077597453 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067342661 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068842618 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068166373 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076385722 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07528536 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.205940246 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069978937 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068260185 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078246344 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080670479 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068902829 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078693859 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080870774 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079797152 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068264444 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081119918 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068734681 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079605129 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070629375 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080212648 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068947051 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079822263 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068391821 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068813162 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069227675 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080340846 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073100854 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068520289 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070592884 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070854508 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079416203 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082568475 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070440864 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079169634 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078587842 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070707073 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079379694 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06929541 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078867235 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069632863 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07055767 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067237274 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081775463 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069044197 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068035688 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070024971 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080101889 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068826759 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080882372 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077914192 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068080297 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081259193 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080024169 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07739444 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080711399 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070653805 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069071664 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068316284 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069844216 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078638453 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080552928 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070517478 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069442241 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078132754 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.08005407 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06763842 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078653617 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078136455 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078365909 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068759903 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069730052 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080846552 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080522057 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078930606 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078263859 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078132585 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068618648 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077521393 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07842463 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0677488 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083497834 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068305107 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082668772 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079235467 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076475627 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07895837 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080638275 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080337273 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079815922 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082717376 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067950399 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067804563 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079224931 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067733821 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069472472 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077634606 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069474037 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069139623 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082847143 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068713979 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079734195 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067731916 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078723415 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067220741 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069464338 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081720817 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06736743 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068013012 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077432943 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068433154 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075953364 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079275157 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076333335 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066805059 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068802908 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208862292 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079657584 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069471969 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068636709 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070041993 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078228758 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077644887 seconds)
  done (took 18.615179122 seconds)
done (took 37.453211096 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21020471 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152269643 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183100367 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119195878 seconds)
  done (took 2.095769407 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117894698 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10125567 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092874503 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064618674 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099055745 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064970503 seconds)
  done (took 1.906943969 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313619431 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212449336 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188900009 seconds)
  done (took 2.078422822 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201535782 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189577757 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.421161727 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264589186 seconds)
  done (took 2.549380309 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144217741 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088583979 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066940758 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083593423 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134007761 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160977518 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10112838 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125654944 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078985293 seconds)
  done (took 2.400274028 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149760363 seconds)
done (took 12.544318488 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.122889778 seconds)
    (2/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.253630792 seconds)
    (3/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.192135722 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093388406 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.164649237 seconds)
    (6/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.102114255 seconds)
    (7/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071799385 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071646642 seconds)
    (9/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.216348414 seconds)
    (10/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.215302603 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091903874 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078097121 seconds)
    (13/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069137929 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080879443 seconds)
    (15/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077738606 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073694095 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111142854 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104539684 seconds)
    (19/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076234363 seconds)
    (20/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073542067 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.15372791 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.100194351 seconds)
    (23/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101663937 seconds)
    (24/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.210260698 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.153533806 seconds)
    (26/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087609614 seconds)
    (27/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072479874 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.094597793 seconds)
    (29/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077516797 seconds)
    (30/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.153870213 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122927644 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070738851 seconds)
    (33/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065276844 seconds)
    (34/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.200409551 seconds)
    (35/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187874662 seconds)
    (36/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076568971 seconds)
    (37/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.151850077 seconds)
    (38/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.212564359 seconds)
    (39/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.154793942 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072990881 seconds)
    (41/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.17561984 seconds)
    (42/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.155483501 seconds)
    (43/309) benchmarking ("sort", Float32, false)...
    done (took 0.132041567 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085522421 seconds)
    (45/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.144123113 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068818818 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090024064 seconds)
    (48/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.083921739 seconds)
    (49/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072273176 seconds)
    (50/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.160641421 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050280105 seconds)
    (52/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074634444 seconds)
    (53/309) benchmarking ("sort", Float64, false)...
    done (took 0.130391069 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140750618 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112811784 seconds)
    (56/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.214913307 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066865487 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.190938792 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.228924367 seconds)
    (60/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.174630509 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.204738461 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.179026869 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173067903 seconds)
    (64/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073069511 seconds)
    (65/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.161847221 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091094139 seconds)
    (67/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075270572 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.208125352 seconds)
    (69/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076522227 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09448849 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096709102 seconds)
    (72/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.161322071 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050118321 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123336742 seconds)
    (75/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.137619605 seconds)
    (76/309) benchmarking ("sort", Int8, false)...
    done (took 0.14259765 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.154728103 seconds)
    (78/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098057704 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089959074 seconds)
    (80/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095103868 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.237789933 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051953312 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072984486 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.066687214 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.198527426 seconds)
    (86/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054513895 seconds)
    (87/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07527277 seconds)
    (88/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108427973 seconds)
    (89/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067963966 seconds)
    (90/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083240714 seconds)
    (91/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050732604 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068667252 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093739519 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093765429 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050413355 seconds)
    (96/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07588329 seconds)
    (97/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067043685 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065354107 seconds)
    (99/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075975416 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.105076048 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.150488604 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050483756 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083722124 seconds)
    (104/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072469663 seconds)
    (105/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.174738742 seconds)
    (106/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111559699 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089440451 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089438355 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065676506 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123495635 seconds)
    (111/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073277448 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090267798 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177811458 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073099409 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173175868 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088799287 seconds)
    (117/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156309125 seconds)
    (118/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089031265 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050549358 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096599222 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073068512 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065703275 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139724596 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05223665 seconds)
    (125/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05284846 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128615711 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091174005 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051676636 seconds)
    (129/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111491564 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155766807 seconds)
    (131/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051541155 seconds)
    (132/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072085041 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.137939012 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07385829 seconds)
    (135/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.152993655 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072340568 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.075696131 seconds)
    (138/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07239224 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09641085 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071042213 seconds)
    (141/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.049900786 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072027102 seconds)
    (143/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065161125 seconds)
    (144/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.185243364 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094901544 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142995885 seconds)
    (147/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.106426266 seconds)
    (148/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050797611 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07187143 seconds)
    (150/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074205328 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050691847 seconds)
    (152/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061834626 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071853456 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078158944 seconds)
    (155/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065863497 seconds)
    (156/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051424487 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.062533538 seconds)
    (158/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051017112 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182386482 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064542661 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072470657 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066432609 seconds)
    (163/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051725201 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064728631 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064817874 seconds)
    (166/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.304179587 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.16333828 seconds)
    (168/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08878047 seconds)
    (169/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113861963 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051442554 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150116236 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150946494 seconds)
    (173/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.049956599 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07321494 seconds)
    (175/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.155195579 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065563581 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050409677 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052464322 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059853485 seconds)
    (180/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.192232543 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071355307 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06092416 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086033604 seconds)
    (184/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05004292 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051362042 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051202864 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.154984868 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070665146 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050312616 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123221504 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075718075 seconds)
    (192/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072937167 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064588286 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052650309 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065479663 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070092021 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132481912 seconds)
    (198/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.204382195 seconds)
    (199/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072074183 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066707076 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051125025 seconds)
    (202/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053289828 seconds)
    (203/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073520645 seconds)
    (204/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078038169 seconds)
    (205/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07052841 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066217505 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075025697 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066133016 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.0674695 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065351153 seconds)
    (211/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.0731075 seconds)
    (212/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073429263 seconds)
    (213/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050640511 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064224139 seconds)
    (215/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.050947937 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11417388 seconds)
    (217/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05237814 seconds)
    (218/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064391542 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09043895 seconds)
    (220/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066694034 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074852718 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073642112 seconds)
    (223/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063085089 seconds)
    (224/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051732369 seconds)
    (225/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060849612 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064884593 seconds)
    (227/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078965659 seconds)
    (228/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066065989 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05124759 seconds)
    (230/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06634218 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071398557 seconds)
    (232/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080010538 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071905806 seconds)
    (234/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052315372 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066538568 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065577507 seconds)
    (237/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065569062 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064403215 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051114212 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079018757 seconds)
    (241/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111595526 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066855613 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090571069 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137145861 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050829363 seconds)
    (246/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064662861 seconds)
    (247/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068194501 seconds)
    (248/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051102405 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.0501344 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066118538 seconds)
    (251/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050842427 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071765258 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139476902 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051676622 seconds)
    (255/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06830912 seconds)
    (256/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064612146 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088617123 seconds)
    (258/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076508301 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090065503 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142627599 seconds)
    (261/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.195380593 seconds)
    (262/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.161393723 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065187875 seconds)
    (264/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070497526 seconds)
    (265/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182187106 seconds)
    (266/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051679765 seconds)
    (267/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073501295 seconds)
    (268/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050735803 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139775591 seconds)
    (270/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088500056 seconds)
    (271/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100419073 seconds)
    (272/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064795888 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071840359 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050329606 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073026894 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064857699 seconds)
    (277/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073121102 seconds)
    (278/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050321223 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051608479 seconds)
    (280/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052371671 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080128226 seconds)
    (282/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072343987 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051505903 seconds)
    (284/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051054399 seconds)
    (285/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065866672 seconds)
    (286/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074641037 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072669388 seconds)
    (288/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051841486 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064079741 seconds)
    (290/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086675811 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066037566 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06448395 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063344068 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072215658 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173855545 seconds)
    (296/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072000728 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060391572 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070894321 seconds)
    (299/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067158678 seconds)
    (300/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061884836 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050227039 seconds)
    (302/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066780042 seconds)
    (303/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.049989179 seconds)
    (304/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07213657 seconds)
    (305/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050105845 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064736625 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091936444 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070552511 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073097694 seconds)
  done (took 30.801484214 seconds)
done (took 32.176842647 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084234555 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092048255 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074749921 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093041555 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079873719 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075169472 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072096778 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078143711 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079686115 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081687536 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.0775714 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053710101 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073723764 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073429316 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074092606 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091047743 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078435758 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07314988 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072553564 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064273143 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072924884 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065204662 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066954384 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053792698 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077842475 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071354377 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071924591 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073520674 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064838853 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064751034 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068293393 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073520807 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065151104 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077558078 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071719102 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072480157 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074371739 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076037903 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066858475 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06529535 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073899241 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06478938 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07320133 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073159599 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071524529 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070946487 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072944415 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077307296 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09103071 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067572832 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074366528 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075880328 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075718651 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072218057 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069299392 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072408285 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072081976 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090730139 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073052163 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066625122 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073776395 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073676373 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070542355 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071952941 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072466286 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075074329 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075283089 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07053555 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074112418 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071100424 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064487318 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072376469 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068081936 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064838692 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075676998 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076859008 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063493736 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070612029 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071583737 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070128008 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063815398 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066838862 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066244066 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071079318 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066191875 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053296056 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06863421 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070820408 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063677739 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072814079 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071224265 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071689737 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066228315 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075637609 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064054756 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070139709 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065050248 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065307541 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066095886 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068911388 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064614183 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066775164 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074066471 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066318567 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071377069 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078569371 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065095923 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071781928 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063846979 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064228727 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079031934 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074650513 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064817414 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066940357 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063528313 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072020594 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064243309 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06462006 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064437205 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065001075 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07101082 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064396351 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066231968 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071951236 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07822847 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064154101 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06754972 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066053226 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063673161 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069928666 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063820848 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064024958 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065807498 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.0608687 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065491525 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063732832 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071181608 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066049936 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.20477386 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066458089 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073831708 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070436197 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071487091 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071036032 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063579399 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058114796 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066909565 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067215023 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066636941 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064595792 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066543937 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065141104 seconds)
done (took 12.329119838 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06569797 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139736372 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097520852 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097118287 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085904702 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065740376 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075901487 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101061366 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067351362 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101266365 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087005481 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085534018 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113571524 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064224977 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065282033 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069297474 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067065191 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081447177 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101718907 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085874629 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115830242 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064513706 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09256448 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088876254 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088122554 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103880526 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067940468 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06916251 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068825124 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093091544 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087174205 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069020107 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065782954 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098462657 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093507664 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083613324 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065779247 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083027182 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066205834 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065052684 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066546223 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098900096 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080418817 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080354708 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069558331 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069183941 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066828937 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083441315 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089820447 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07909015 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085893002 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10220621 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068165428 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064942094 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064599757 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085653327 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064560534 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068204961 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065443744 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067639377 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065492536 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068825005 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080554148 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080824624 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069406289 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07934358 seconds)
  done (took 6.748702237 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082700126 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091929755 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083149861 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082433418 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065023988 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066002478 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065707441 seconds)
  done (took 1.999862641 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065661295 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088696985 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088540456 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088861658 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080941479 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086995837 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074856816 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066198637 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087530692 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066837696 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087043042 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100140743 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069575476 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073324239 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090220302 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066032828 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089625509 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065768245 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068796466 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09022146 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070120148 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095490598 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069836599 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06607811 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080605368 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065610258 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113176779 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070458517 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067744798 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068637174 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063381972 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10625126 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079679473 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073590675 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065375506 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08035133 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080858283 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064245731 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082301207 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074757043 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079569383 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06604004 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066604263 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064251325 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069892484 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077847779 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066533148 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066804139 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068538618 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085944544 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066750479 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079576713 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069084562 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071806607 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067111541 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07233577 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075649657 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067009632 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085788107 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067082276 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083340455 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08262325 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079621942 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082830092 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068104855 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079639059 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07934109 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068974476 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067462472 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06939301 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082725081 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064161766 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067091724 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076496131 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067680897 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088865353 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088902433 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06726908 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079632914 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066636245 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065926578 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066010101 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089043652 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071099604 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066078738 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069916195 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069335031 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064140918 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064566393 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069512229 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063738176 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06757245 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.0691314 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068644524 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0685618 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083054964 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06804273 seconds)
  done (took 8.715830164 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068141646 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067576107 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068537933 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067367695 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067075075 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067358706 seconds)
  done (took 1.886540871 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092999657 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068571352 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080084562 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071799058 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103990377 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08617167 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086595999 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07768291 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082942449 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077503117 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086589252 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087702489 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094388149 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072079085 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086432669 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071631254 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086792898 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.0742482 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077587608 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071979766 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086283914 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071610532 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072100911 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080764445 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074937514 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071449725 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066341469 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07789275 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077589279 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077960272 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071406681 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074923562 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069937718 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077821219 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086587995 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070245281 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071697659 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076957546 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071570809 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074993652 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087938573 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072043335 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073666613 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076572362 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07714107 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069535569 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076407315 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074579685 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085947546 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076492653 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076256276 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070407666 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074756184 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076101008 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069573841 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077598167 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076286508 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086348046 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071723225 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069771869 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067889216 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07480158 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07685487 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075433433 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077901206 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076284925 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069931906 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07162572 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071712063 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070738229 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07644542 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067581642 seconds)
  done (took 6.996550212 seconds)
done (took 27.801076393 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.537543729 seconds)
  done (took 1.987582942 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.609381629 seconds)
  done (took 2.081583705 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.552358554 seconds)
  done (took 8.02300579 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400587665 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.498364001 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.720037205 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131863967 seconds)
  done (took 3.25872699 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.704564935 seconds)
  done (took 2.183343195 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213707588 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201796851 seconds)
  done (took 1.906883298 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374837838 seconds)
  done (took 1.845491164 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.13172632 seconds)
  done (took 2.603076512 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257994576 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174687351 seconds)
  done (took 1.909180906 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.477484907 seconds)
  done (took 1.951356269 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.841465178 seconds)
  done (took 6.316398008 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209968072 seconds)
  done (took 1.733694413 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240330887 seconds)
  done (took 1.717635524 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.707013993 seconds)
  done (took 3.183995164 seconds)
done (took 42.179494558 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.0796132 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080891266 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081363798 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.0792641 seconds)
  done (took 1.787994587 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077171337 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072185967 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076414685 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073357842 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076371422 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.0729154 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074650083 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077266573 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072934939 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072954067 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072859345 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072582431 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075075209 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074298149 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07108737 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074959031 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076627299 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072322431 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075692566 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072599802 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070504657 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075501773 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074836892 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071186508 seconds)
  done (took 3.257213083 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077399618 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072171689 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074700437 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072472256 seconds)
  done (took 1.784679873 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078608236 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094800972 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088877657 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077931205 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093212613 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087077344 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068998237 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068748646 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07036604 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077388693 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067739264 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09636692 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089037286 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077350831 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079541055 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065626474 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068369758 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087484166 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07806908 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078958475 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070545638 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077396811 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067624995 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088944033 seconds)
  done (took 3.38357516 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087572647 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105326937 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08226604 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088683714 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091181325 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06501179 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087616082 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09234509 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126854911 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065064627 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07046999 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065140481 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073061716 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065929446 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081012112 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107396421 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111495072 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068402576 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097300524 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065145153 seconds)
  done (took 3.189873026 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072458826 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069801764 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065939202 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06913377 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076940231 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072543354 seconds)
  done (took 1.921234336 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068379409 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067276519 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068170919 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067039713 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072010953 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066934518 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066268356 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067599347 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067171246 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066948602 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066616199 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066414921 seconds)
  done (took 2.300748851 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202810836 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067986309 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069533185 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06580237 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070251581 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066118045 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080417214 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067343024 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091149069 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066190965 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066019491 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068636449 seconds)
  done (took 2.474121159 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210593007 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075882779 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239988455 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150372841 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11145376 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116326726 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11295759 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114644705 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142757904 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101078779 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168907233 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168428252 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107973965 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137955811 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088800979 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100343185 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1544509 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163546537 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105353424 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167972382 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146005941 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12636849 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148435974 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104219571 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106509445 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1217272 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071038829 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079548457 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170854107 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133462901 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144777049 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111152796 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092605011 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178159658 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173689453 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141367797 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146796635 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084207068 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105338818 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13471741 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200823378 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088347023 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162011612 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109115317 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217589198 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135239632 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120246435 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120994169 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106879256 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089380939 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146779637 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185060825 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139087753 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087431797 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124870345 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114030278 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115549347 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113301149 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183597968 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163647948 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128430628 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071421119 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109151319 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155752612 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134499766 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108790743 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125767211 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093306311 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13594269 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15673524 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120759092 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146186741 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116695583 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08875184 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119699067 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140731493 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127743134 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163583386 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125004989 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072948192 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124853683 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102002556 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080828102 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145768104 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074891346 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177389536 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099106502 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108831271 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125102286 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110051027 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109357944 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160142666 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145919415 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102613727 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064837481 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244584248 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121447001 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146954256 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087909825 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109964963 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118933626 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078421987 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138784509 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075190223 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124863031 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077692694 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129334574 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1318404 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077312964 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123816323 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104323878 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10182686 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133950547 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161325117 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087957287 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081763995 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170542915 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122856898 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103929539 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146385615 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158576387 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10261464 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101096489 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150561102 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180452844 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089659616 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163831355 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107032496 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083070452 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08805234 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123912868 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11209116 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124104179 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081868842 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118115416 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169523709 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074627999 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095899687 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135144662 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078665667 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080694147 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106073455 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104815075 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095440442 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100400024 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103261027 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136704917 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124012492 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105723759 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123926897 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098227451 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315621193 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088349527 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102193074 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104900761 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070182201 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136251164 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160061542 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079169143 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164049702 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125507711 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118222656 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121307647 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083547488 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142167579 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079614643 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070024912 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145471445 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109945592 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111289856 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152270596 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116253174 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126484671 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119669299 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134660161 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13256885 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131514194 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105421406 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088174994 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112385244 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127041601 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073030118 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091412269 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08031903 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10448164 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095942066 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082891804 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141846459 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12464396 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109184338 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112269792 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096639192 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148498866 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076284213 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128656791 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119912131 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095762389 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153622019 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153739382 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131850261 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099208632 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137254588 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070029756 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073443844 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087918143 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122748821 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08205352 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082503633 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259249705 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150139808 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130868159 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13665375 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124200802 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12099292 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157470734 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070550967 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117704209 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148905468 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123285948 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105113643 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090285836 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098746137 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143887245 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109130017 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184514157 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117198248 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125812716 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153674811 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100900959 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079517923 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103634134 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136717553 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103508852 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145269948 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099747491 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088529932 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110612146 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074514866 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099002372 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127225294 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118413442 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134967915 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115226682 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133134476 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077088844 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116104564 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121708918 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122311427 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06510266 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120800605 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162713778 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094689589 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119329262 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153585716 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078748302 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134680111 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17570756 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14623605 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085441757 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107724299 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.263107562 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129545583 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120701586 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142418057 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108887183 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13796185 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110978689 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086476803 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088502281 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098266956 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106200356 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094972612 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10799925 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114073189 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096186967 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132364871 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104211478 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109713679 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118348548 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099287677 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091200222 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096801956 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17809486 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119733876 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172501885 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099674978 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145764518 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164524891 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075012936 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079152224 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078211649 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140408353 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083946489 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130277455 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107201682 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117318504 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123666454 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143322548 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095518694 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068149283 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109290922 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133478604 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124292278 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098368972 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103801754 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165058305 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101340078 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079240193 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113791091 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115954152 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102403074 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171975067 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06112628 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105622817 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075813386 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080154776 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127489378 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29285765 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081253383 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103591005 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120299899 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11190674 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128928988 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100842056 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108770707 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126480013 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150695245 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128667722 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090011282 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113295278 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12937975 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158740029 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106061092 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097154388 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174380964 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153292742 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160401455 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08794875 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114339785 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115168029 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108856686 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1387876 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08308698 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164099488 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082044182 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136819228 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103241265 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089442082 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12988222 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108778727 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087597624 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148138904 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117966593 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082839017 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078009176 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117808779 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120624016 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106360235 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074942125 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139890219 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073274124 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135342937 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161031262 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08061979 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107143709 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096047555 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079200683 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105749876 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101502805 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08666733 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098713798 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318544412 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088635539 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151954096 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134504842 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114079526 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13817473 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102917304 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639898951 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077754002 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153294511 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118097203 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176121273 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10086232 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118908846 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110644657 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124061573 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145272382 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104924991 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180244944 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132972914 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115938227 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080273103 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102452893 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105502859 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087437745 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108058058 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11447888 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115500271 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092968954 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116225007 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125511275 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081402097 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095834887 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156783344 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117186224 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144017507 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141429605 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085253166 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118467324 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138553909 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079961431 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121130498 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155208478 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105918031 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09879657 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080489068 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100450556 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158902172 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072530959 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160061863 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118882114 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250047136 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115380106 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113704348 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132164686 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107405619 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122685749 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093288662 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111285122 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114681841 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082399721 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07768585 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105972966 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112229249 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098354575 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097610557 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099028468 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153257211 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071484561 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099518541 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115114232 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144388653 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174872634 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088386903 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082162995 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118725516 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113467197 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113681315 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122085143 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078740562 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081922824 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080749825 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077406299 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108978513 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113318587 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11487322 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111054365 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16400849 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082724943 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230170311 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095789489 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105374946 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069875771 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077978599 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095982767 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098174001 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107298806 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110358323 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16051381 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095927679 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090037035 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091523184 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073816736 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08296561 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129266246 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110659351 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118621203 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098519444 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061796862 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106768427 seconds)
  done (took 59.099406294 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108915734 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08259263 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.0963695 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144691131 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123320266 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202282993 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15347626 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192389387 seconds)
  done (took 2.724489363 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068200627 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095721289 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103179448 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083235073 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066371613 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068216769 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232545714 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081108117 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065809644 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098247204 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078190677 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068562715 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.429602351 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065816187 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067444226 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06143815 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066795398 seconds)
  done (took 3.395807712 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.385478654 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612522505 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.381992145 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072593852 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.423765922 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090303193 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.108625591 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129786569 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072433803 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533794688 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703663121 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123783397 seconds)
  done (took 18.241588839 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075781487 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069513969 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083216841 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083734927 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072266045 seconds)
  done (took 1.98142849 seconds)
done (took 107.076337329 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080586876 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.610582464 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05263247 seconds)
  done (took 2.287600697 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083040233 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085204782 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084526676 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082831226 seconds)
  done (took 1.939459335 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074106705 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076137666 seconds)
  done (took 1.748033468 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233219255 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167140629 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095289248 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08238144 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079294553 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079350847 seconds)
  done (took 1.843335917 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071856446 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074996985 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072728952 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076284354 seconds)
  done (took 1.89310016 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07633623 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051938438 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054049023 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057401178 seconds)
  done (took 1.838494225 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087213707 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07933578 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078216953 seconds)
  done (took 1.843820898 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101425643 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086552406 seconds)
  done (took 1.786867225 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081285197 seconds)
  done (took 1.680335211 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099597219 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101233305 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131762761 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111259518 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140416908 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.1092679 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084917609 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085694458 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076580499 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086542323 seconds)
  done (took 2.625904305 seconds)
done (took 21.65869498 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079258952 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.457458248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360078213 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089075247 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668154415 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355849056 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.967179183 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092605048 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115155569 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06713153 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084064947 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646854487 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.955704442 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.413882899 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.946022941 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.407890141 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649061877 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06793797 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06698942 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067249664 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952771425 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067372456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067111062 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067943558 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647813272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372080065 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067561897 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.408447334 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067187465 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069857932 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354663967 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067404793 seconds)
  done (took 16.356273215 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069452769 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121429873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073451357 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084223302 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071228825 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069221514 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070626812 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068453022 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121650352 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06713982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08472561 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067101288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07130996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068653946 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087092026 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.082696698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068092271 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068643761 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068056653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0681906 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086686853 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067721766 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067839637 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068534396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068068595 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07967381 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067812824 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06776415 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068316347 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070093864 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07024713 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068500448 seconds)
  done (took 4.014473066 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117582001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127508242 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073861561 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105249944 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114858539 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069489067 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147356812 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092959349 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129416192 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06889546 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084726305 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067432216 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102169221 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068550721 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088401065 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067976204 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068576249 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067889507 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067518485 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067997011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087001865 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06793738 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068115621 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068359041 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067666803 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081149642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068119224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067488155 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067645757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069480095 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070568834 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068197799 seconds)
  done (took 4.263788792 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072900554 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074793949 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082876156 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.0835993 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069633835 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072049548 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072464534 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069093644 seconds)
  done (took 2.213522023 seconds)
done (took 28.45468703 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078668195 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068813863 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072102751 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082106765 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072283683 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078373382 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066795664 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075722141 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071867393 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072937107 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074451541 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066847317 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07062465 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067078793 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073545375 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06726337 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078590947 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071864735 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078476563 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078748643 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06940692 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072804452 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074240891 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078189118 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07853129 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078554307 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077252409 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072505938 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068693786 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070136724 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07641773 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083376687 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067797323 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078667674 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067066062 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067206936 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071118159 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067192911 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078390234 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07654877 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06898711 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076648888 seconds)
  done (took 4.683556125 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08741211 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09317823 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084732495 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06144894 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066144216 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065511327 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08895044 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059471061 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058607063 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088037692 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05466933 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059340556 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064881678 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052736104 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059350065 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05614634 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061531551 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055360004 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05991001 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059113617 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088736273 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.052888342 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076739009 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063480921 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055579039 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061345984 seconds)
  done (took 3.35623108 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074233506 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086995631 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089348593 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130871207 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105751708 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078530649 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080060517 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094967444 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.087567932 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065887137 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070280265 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091868477 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090737645 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073649464 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066491424 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085512625 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082704021 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068525936 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072837682 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095634994 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086847342 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085264886 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098834682 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083901436 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067155842 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069863417 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071189529 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081740587 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071966953 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076821363 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071031152 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071041439 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069364992 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079001821 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071110757 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069185513 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092382255 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077750474 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078764201 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067648597 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071398106 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068224387 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092743407 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133325722 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06769909 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07403342 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075721986 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077499231 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067603675 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088305561 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078846465 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066985835 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070600035 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067053748 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067581487 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081429122 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069716673 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06968821 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077185606 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070912726 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092850618 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072231983 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083583575 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067289939 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075219401 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066588891 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068286333 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066641294 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09592597 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068953985 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112668179 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068632401 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068405477 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076967518 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076124025 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07364686 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068024641 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083277444 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078091429 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071261541 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076848838 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070937861 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070176356 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091824778 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070066862 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069038158 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068392236 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073430978 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07058192 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06903534 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080736627 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07888024 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070303779 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085229572 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066847176 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069069711 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07525244 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07187987 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06681768 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078531854 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072143601 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068055208 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076980679 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067097108 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070441054 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080375547 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073703774 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066039279 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072061716 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073461327 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068158206 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069357654 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070217136 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069704129 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07615914 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073979455 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071908835 seconds)
  done (took 10.621409508 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16423266 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157402395 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070376058 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148869876 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07619086 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07934101 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152087197 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094793502 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067525847 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068487241 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068160287 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110556655 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105965247 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115528062 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078520677 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067610677 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084763863 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114660617 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152663422 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146397348 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084919024 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076542856 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069492758 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068817641 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070099715 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077985133 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084887667 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076434244 seconds)
  done (took 4.38902208 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080287329 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105332017 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073830277 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091448895 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091490587 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067730067 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069677358 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06954532 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081286578 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078740827 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067307924 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073271774 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07503803 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070882978 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068678609 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074937143 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075074973 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069315122 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071239534 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072944686 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.0773243 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091536423 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070904113 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066655648 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072663668 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066788661 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063642679 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084956032 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06803764 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094742304 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065137024 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075971643 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081702057 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068165552 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067493905 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067257925 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067498383 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066961423 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069270827 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066164924 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066344452 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057064286 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066589791 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079374341 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074574606 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055913816 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072415455 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072611435 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07297602 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065072089 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070578132 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070205621 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070410983 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075078592 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072807468 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073304364 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068418069 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07411802 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076183646 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06739783 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.0644032 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06581809 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07248976 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065253621 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076023456 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07245672 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066506393 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067207421 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069600273 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074148612 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067416453 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070713103 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065581397 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069441546 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072224763 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069481917 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069062898 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066062084 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067448096 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068404328 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055140785 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067587735 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052946914 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070788235 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065417501 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06599014 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067569616 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072810709 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07978973 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06899347 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07394088 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068568557 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066118977 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070924476 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059704983 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070026566 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08388352 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082807156 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067278503 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065125216 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08287309 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072207807 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066668101 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055452755 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074909715 seconds)
  done (took 9.134655339 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08930932 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070211762 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08565005 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093357324 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086606317 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075378657 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077442841 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069555935 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08422614 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073676836 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07704782 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068142954 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077464429 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077025759 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069958104 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077696602 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071748154 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084892574 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083286472 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068037684 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076194542 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080136377 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090353548 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082413515 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081224119 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081698324 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090829136 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072063189 seconds)
  done (took 3.875298356 seconds)
done (took 37.670807663 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.700898472 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.871209404 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.6923404 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.054767431 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.857582478 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.759406169 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.819458104 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.687643399 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.821058795 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.728690255 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.922230202 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.793637375 seconds)
done (took 64.337908954 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.785921156 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.833780036 seconds)
    (2/2) benchmarking "String"...
    done (took 1.930125961 seconds)
  done (took 5.39186802 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.917587394 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.258178529 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.944189974 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.687188846 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.695673284 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.031254137 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.488244968 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.199059714 seconds)
  done (took 29.933732293 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.768413453 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.919737764 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.352208665 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.376941737 seconds)
  done (took 15.096289696 seconds)
done (took 61.843732536 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.697479661 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.732393148 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.707104762 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.672216364 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.747722558 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.699068258 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.134247724 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.737399154 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.687750947 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.677150211 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.690473258 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.115093048 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.697459067 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.234600919 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.690854648 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.697249155 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.732638317 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.379182958 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.848518259 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.695030108 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.709456277 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.730497124 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.690434882 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.699618925 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.693457553 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.691923129 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.110466703 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.701218796 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.306949237 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.69259265 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.716971328 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.229188258 seconds)
  done (took 201.875613325 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.688548231 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.54457205 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.634382701 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.697484267 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.011465236 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.875248715 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.810116188 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.149426749 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.695343313 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.71377193 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.904504536 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.690478532 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.912175254 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.636012571 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.719572899 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.798934506 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.855210611 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.9484306 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.722688272 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.861505086 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.688725551 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.699789155 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.654061264 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.89931528 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.70050895 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.71634262 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.876707472 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.716892455 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.882740854 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.837080687 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.703485079 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.703866315 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.908549565 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.566273068 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.704609364 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.695655439 seconds)
  done (took 166.455943744 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.082952559 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.691992715 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.691027796 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.691204973 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.70389956 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.692336453 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.811590001 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816492002 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.292212817 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.191393153 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.745428741 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.530783151 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.692069206 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761236805 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.706953649 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.695884106 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.70804869 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.71869573 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.692627032 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.693515233 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817145458 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.706698375 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.732586788 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.700994026 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.692940456 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.699075518 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.066634928 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.693977457 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.699299704 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.950262826 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.694687788 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.695254562 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.574707453 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.362955548 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.787240166 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.697791638 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.698647804 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.694856678 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.913242669 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.694030906 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.695055525 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.697746025 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.856410003 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.694051066 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.814689889 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.694689942 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.189553327 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.694958194 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.693588102 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.693444407 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.360920367 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.372290372 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.696056887 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.693033666 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.696590794 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.694342328 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.695776068 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.700330281 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.297180216 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.768840385 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.69627105 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.699336585 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.699668559 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.694293824 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.694397975 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.854380727 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.695009567 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.437784142 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.754447451 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.817504957 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815281008 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.696827401 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.763063422 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.789236704 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.695839879 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.695725205 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.695435445 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.69394653 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.77659775 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.694946558 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.825368285 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.704542229 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.69999517 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.747131184 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.697156937 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.765285462 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.696384771 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.695493907 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.587765401 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.698685663 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.696307982 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.99412335 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.764288938 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.696299777 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.695896401 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.695909766 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.827120922 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.819070036 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.459437173 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.698365725 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.363240097 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.699696854 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.844729472 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.698074121 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.887489294 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.699040282 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.779022475 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.701082792 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.698801462 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.696972785 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.73003309 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.698133543 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.757223858 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.700700208 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.072654137 seconds)
  done (took 393.299396997 seconds)
done (took 765.401813196 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.369013023 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.328379873 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.445775436 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.35216007 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.318546532 seconds)
  done (took 13.451558403 seconds)
done (took 15.088808661 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.785579574 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.790863963 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.723356061 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.789215902 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.718972474 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.787702435 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.769582578 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.723412159 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.75437323 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.725144299 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.75630176 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.723620298 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.710598112 seconds)
  done (took 24.397076971 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.929454665 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.943914419 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.772191428 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.932683295 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.746175017 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.931068624 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.866182207 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.858047008 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.858365491 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.718397193 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.714856924 seconds)
  done (took 21.911100251 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.942091389 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.952739592 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.780376274 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.940228593 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.750949175 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.940618271 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.864917263 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.853701486 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.85339242 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.716371133 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.713404009 seconds)
  done (took 21.950215228 seconds)
done (took 69.895962749 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.708031569 seconds)
  done (took 3.34767539 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.733990373 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.887718001 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.71610876 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.712369987 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.708253007 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.709361052 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.711349578 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.709811172 seconds)
  done (took 15.529627948 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.705907614 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.706113625 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.70534849 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.708901468 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.706394447 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.705634815 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.708930951 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.708397662 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.707669655 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.708308008 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.707496055 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.708206191 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.707611338 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.705713849 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.70655392 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.708491001 seconds)
  done (took 28.957285081 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.707922433 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.705367352 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.705133299 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.706940044 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.705390931 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.706722103 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.7073645 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.705614291 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.705824242 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.705700944 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.7072201 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.707101558 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.7060475 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.707119461 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.706672865 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.706613752 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.705845977 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.706270725 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.709726525 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.706370091 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.709207328 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.706163923 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.708376738 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.707549817 seconds)
  done (took 42.606801745 seconds)
done (took 92.081829137 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.621071291 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.11441108 seconds)
  done (took 8.377758291 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.710982699 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.709344329 seconds)
  done (took 5.103217817 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.710940843 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.70895483 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.709443482 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.709971913 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.709678356 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.711054609 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.711474774 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.71113332 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.710049038 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.709708029 seconds)
  done (took 18.745030774 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.710076028 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.711379867 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.706098206 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.710014177 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.710916643 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.70898232 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.710290139 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.711549148 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.711110185 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.707209987 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.711197852 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.708501339 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.710775466 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.707944687 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.711166145 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.707298581 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.706849221 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.707260059 seconds)
  done (took 32.412089532 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.710325713 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.710872783 seconds)
  done (took 5.064314108 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.708790089 seconds)
    (2/7) benchmarking "second"...
    done (took 1.708841762 seconds)
    (3/7) benchmarking "month"...
    done (took 1.709448886 seconds)
    (4/7) benchmarking "year"...
    done (took 1.707892176 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.708242602 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.709405271 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.709624581 seconds)
  done (took 13.606378068 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.712013828 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.874282294 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.945460512 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.346910106 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.712526723 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.715467729 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.681733514 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.714855057 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.717222785 seconds)
  done (took 19.064948761 seconds)
done (took 104.016008329 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.532533898 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.706970595 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.076934608 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.784829574 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.722923257 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.051476356 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.727819033 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.010889359 seconds)
done (took 42.259082739 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.779495233 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.269061674 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.305817261 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.183949229 seconds)
  done (took 12.403403194 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.691047016 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.237756081 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.747224174 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.300346313 seconds)
  done (took 19.644338789 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.08443599 seconds)
    (2/2) benchmarking "read"...
    done (took 2.059805621 seconds)
  done (took 5.796933973 seconds)
done (took 46.27183298 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.71263122 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.713551834 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.713021609 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.713645591 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.710810952 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.711638265 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.713240937 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.711767768 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.710939356 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.714044966 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.714504559 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.712815872 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.714008176 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716903591 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.710366727 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710627769 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.714551116 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.711322575 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.713433292 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.711466993 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.710909815 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.71279236 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.710783457 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.712020765 seconds)
  done (took 42.748018815 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.7150666 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.712636307 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.714233291 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.714052904 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.711703596 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.714500746 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.714255895 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.712254765 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.715190396 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.714491071 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.712218387 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.71462392 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.714757089 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.712464572 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.714788595 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.712360933 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.715632652 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712867386 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.714944825 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.712682715 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.71466945 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712846029 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.713120112 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.715799711 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.713134097 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.713853663 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.716013892 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.713596498 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.717535845 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.713587659 seconds)
  done (took 53.068033693 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.721186567 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.722988098 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.716548256 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.717097512 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.71606285 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.716433356 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.716313368 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.716794091 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.716293286 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.718037462 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.716833024 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.716100034 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.717638066 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.716308992 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.71621038 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.717142078 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.716923439 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.716702274 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.7179467 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.716993253 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.717491775 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.71634723 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.718126966 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.71741545 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.717341926 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.717829365 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.716844965 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.72167307 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.717296812 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.718184296 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.718114806 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.717704363 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.719650654 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.717624242 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.718347198 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.719026967 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.722345367 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.724502427 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.719109806 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.718856964 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.717908496 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.717298895 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.717344654 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.718134105 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.717728864 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.717444454 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.718204741 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.71918556 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.717877907 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.71735249 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.718353065 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.718148765 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.718256073 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.718400211 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.719127205 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.718195792 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.718906958 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.719392384 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.718732102 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.718828406 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.718353493 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.719205443 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.719063826 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.719118209 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.720569372 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.719837444 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.719972887 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.719258284 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.719589391 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.71898307 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.718835345 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.719259734 seconds)
  done (took 125.368680087 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.719870911 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.716328374 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.717429798 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.71652646 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.717590543 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.719518833 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.716979649 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.720593037 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718322626 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.720528599 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720001124 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.718757703 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721735683 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.722329409 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.719759642 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.717836373 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.720674503 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.717781005 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.721464238 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.720422478 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.721010952 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.718848795 seconds)
  done (took 39.476005042 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.720435984 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.721324171 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.718073104 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.720589012 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.717904931 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.720987287 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.72335215 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.721437491 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721374885 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.71840596 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.717946271 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720807183 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.718681673 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717853792 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.718998117 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.720215237 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.72165688 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.718615565 seconds)
  done (took 32.611863222 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.719367188 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.718236431 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.721813989 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.719779446 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.719915681 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.723587952 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.719982434 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.722711639 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.72253733 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.71909527 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.722412884 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724290454 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.72314537 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720722262 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722696263 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.719690582 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.724292789 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.719750431 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.722557311 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.720042419 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.719981592 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.723442795 seconds)
  done (took 39.528591424 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.722752427 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.723187222 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.720869975 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.720666169 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.719991364 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.726440227 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.723932248 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.720724493 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.724218052 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.723467568 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.72088641 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.725533429 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.722116134 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.722602938 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.721253893 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.721237172 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.724122252 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.724177161 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.723963587 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.721910684 seconds)
  done (took 36.111620606 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.725788578 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.725181973 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.725872036 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.726167295 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726081655 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.725902014 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.726701493 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.731147028 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.72598759 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.727160467 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.726342225 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.725206603 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725794389 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.729110948 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.72614312 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724849468 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.727544927 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.725382862 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.726180898 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728925114 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.725700089 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.727201426 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.726274902 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.728656141 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.725989228 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.729626136 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.72627527 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.726498742 seconds)
  done (took 50.004795528 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725911195 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.725206859 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.725207164 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.722732322 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.723169247 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.723257887 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.722506538 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.725461144 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.725942897 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.723523343 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.727164751 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.726659971 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.727036089 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.73239663 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.72676127 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.726552097 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727043749 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.723480162 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.723609974 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725842421 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.727272592 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727040618 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.727277125 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.724537656 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.724848578 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.728960096 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.724213189 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.724597023 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.726751839 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.725072793 seconds)
  done (took 53.428701574 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.747970314 seconds)
    (2/2) benchmarking "in"...
    done (took 1.745473243 seconds)
  done (took 5.15337518 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.72465088 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.727345352 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.730987286 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.724392601 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.724575504 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.727206336 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.727694516 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.723463626 seconds)
  done (took 15.470661345 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.726175412 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.727990478 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.727274697 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.726947794 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.728440089 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.728751531 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.733090305 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.728253581 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.728788893 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.728111011 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.734003058 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.737017446 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.73029952 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.7285759 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.726800955 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.729308993 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.728434071 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.729961913 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.729268738 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.728463571 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.729477309 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.730185881 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.731088247 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.725475685 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.729884525 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.739723106 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.731976606 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.728198628 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.732053443 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.732153969 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.729071457 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.727234346 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.730286668 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.730443816 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.730234278 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.72969412 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.736113601 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.729285249 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.73443542 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.730401806 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.729006899 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.72647846 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.730206034 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.730517065 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.730918841 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.733356244 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.730983325 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.726991495 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.727990062 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.732046843 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.733680944 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.728867023 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.726964018 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.733633663 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.731065041 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.736101216 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.731813079 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.733852292 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.738644649 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.739304334 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.744024277 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.737515964 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.732143706 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.73213497 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.739082206 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.751911163 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.736027908 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.726973989 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.728283101 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.731338104 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.736500223 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.744832941 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.739770879 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.73209989 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.734606656 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.729960722 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.731534776 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.731664329 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.738249098 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.734232372 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.733277313 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.732261806 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.739983512 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.75233448 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.732083701 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.73459511 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.731342587 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.73292589 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.733761629 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.741537584 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.73269843 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.733354337 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.732553168 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.731575906 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.733877204 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.734165563 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.730532417 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.733830881 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.729525828 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.732043126 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.732811073 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.735534705 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.740753176 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.735445647 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.734050602 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.73851005 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.733845838 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.73203354 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.738931463 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.733432377 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.733257282 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.732907035 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.739148998 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.729928012 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.737236323 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.741366666 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.733539692 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.734712166 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.734375333 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.733867916 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.742954589 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.757455096 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.735005278 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.734411207 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.737763273 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.745577665 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.734670174 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.736437508 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.733555166 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.73131445 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.73090461 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.736517346 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.73489709 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.735276327 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.735650075 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.735031561 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.73111059 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.735805821 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.735804128 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.73687719 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.736327722 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.735322202 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.735137039 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.737373734 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.736554392 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.736298625 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.740495958 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.734781125 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.737286991 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.737127982 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.733090289 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.734889752 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.735990271 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.73611713 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.734905268 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.736179156 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.734441276 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.735404531 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.735151695 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.735928918 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.735889541 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.737135225 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.73886007 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.736163772 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.738972323 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.735520488 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.73349195 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.735567696 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.736026906 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.735763832 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.736130077 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.73434768 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.739719361 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.743934004 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.736457957 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.73679195 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.739073162 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.736854 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.738625446 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.736814932 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.739981904 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.743755003 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.736917562 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.742326137 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.73729997 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.738146049 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.736989557 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.737531581 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.736789182 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.737882378 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.740505075 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.744070297 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.750383951 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.744839498 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.7367698 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.742168795 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.738304938 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.742186165 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.741855567 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.738774004 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.737229617 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.739336104 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.73764983 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.73887828 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.738926559 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.738393638 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.737508424 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.738565829 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.737709981 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.739889738 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.739557307 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.739549018 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.740155317 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.736392628 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.738743137 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.739526177 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.737143019 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.735126327 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.738422813 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.738187717 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.737804011 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.739412968 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.74543869 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.735563928 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.740300438 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.739925533 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.738644212 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.738570029 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.738043255 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.741892612 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.740285516 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.743928586 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.739341494 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.740164831 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.745088391 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.73899322 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.738687368 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.741699909 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.739874077 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.736544096 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.741761965 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.746189411 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.739276408 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.740460829 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.740778363 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.738983235 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.740741788 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.745351432 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.73645154 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.739200069 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.740334753 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.740833167 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.737188978 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.742575871 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.740640127 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.741037841 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.741745926 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.741335947 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.741693775 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.741523995 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.742149044 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.741737399 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.741165219 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.744296816 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.750255537 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.745274152 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.741158993 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.74280129 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.74221016 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.744816632 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.74186669 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.742191788 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.740417889 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.75399092 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.748560856 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.746921178 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.743470739 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.741112067 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.746477085 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.743630696 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.744377156 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.741996142 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743396299 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.741523826 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.740774346 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.738537226 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.742424516 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.743792714 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.742468292 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.743711831 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.745635378 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.741935447 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.741854365 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.744310858 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.743456361 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.741952576 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.742024624 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.743058511 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.744494728 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.744660653 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.742332377 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.741756741 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.749029517 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.742606995 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.744277058 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.741909072 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.742890325 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.743616187 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.744650909 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.743863954 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.747453512 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.75144573 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.74771216 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.752214498 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.744696201 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752819509 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.746056898 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.744992619 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.75099033 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.740281631 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.741728468 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.744171954 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.745193774 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.7490358 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.744554258 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.743576488 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.748015499 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.746174239 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.744086603 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.744415382 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.745352645 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.74475099 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.745613102 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752172566 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.744705973 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.747526372 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.746135329 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.741876559 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.744916965 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.745287099 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.743119389 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747552592 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.745114074 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.745127606 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.745560825 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.744414417 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.744507077 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.745711942 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.745578444 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.740817076 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.745730623 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.750973223 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.746110654 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.750308058 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.745675642 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.752206344 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.746836487 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.751444718 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.746787888 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.746025919 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.746423995 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.746102424 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.748608986 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.745005553 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.747255555 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.747481642 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.74700703 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.750147023 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.746640413 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.7481613 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.745566798 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.747518347 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.745811756 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.757221983 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.769231287 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.747370328 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.750582144 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.743645899 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.748738675 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.752540446 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.748251573 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.747452595 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.749867636 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757125209 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.75394234 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.748326052 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.748634256 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.747598237 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.747927542 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.746392745 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.748445831 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.747091266 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.747039052 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.749142481 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.747482931 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.751389286 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.747947976 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.748220938 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.748876868 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.748734097 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.757992022 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.747847048 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.750282691 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.748077643 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.746855516 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.74849638 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.747855653 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.749210587 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.75024016 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.747820616 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.749372978 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754793781 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.753820167 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.751073361 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.748245285 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.748872088 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.74869356 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.748734286 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.748995606 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.750168956 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.749465066 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.750283224 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.74969884 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.749262902 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.748119568 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.750167201 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.750368501 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.74971941 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.753241257 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.756578789 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.750507748 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.747650196 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.748217607 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.749544874 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.749635283 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.749630166 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.757778936 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.753345793 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.759583405 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.758764858 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.75505268 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.750222554 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.753043788 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.757867726 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.74834929 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.75033181 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.750833994 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.7520791 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.749680787 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.752916297 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.750876059 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.75613874 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.750311709 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.751252572 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757086106 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.751971786 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.751030322 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.75258223 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.753907027 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.750455698 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.747839828 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.75072993 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.750264441 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.756700545 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.752758408 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752120259 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.752397726 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.749878642 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.752398341 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.755305936 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.752110774 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.751712186 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.748651196 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.751954775 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.752321552 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.751904093 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.74922286 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.750778553 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.752189319 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.755380652 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.758979174 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.74827491 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.754490926 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.751622216 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.752550824 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.752954948 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.752066193 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.749669682 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.749353349 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.75191054 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.753963381 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.752976787 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.7545162 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.752391472 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.752725528 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.753052339 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.753710248 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.756155029 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.761556172 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.76042614 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.750020312 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.752799019 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.75303068 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.755862804 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.754916701 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.753469425 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.753222672 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.754225576 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.753047053 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.752993527 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.755023212 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.756946369 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.767641179 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.75390779 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.753469846 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.754362139 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.75645585 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.754232995 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.750604381 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.754382939 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.755825746 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.755998214 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.761544688 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.755275781 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.759537914 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.753521728 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.75453689 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.758823186 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.756370065 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.76202688 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.757327921 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.754567912 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.755619895 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.758744507 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.770047246 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.754299155 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.763101954 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.782880201 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.756061664 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.757074944 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.756391582 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.754461338 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.756327105 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.757667933 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.755678483 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.755779336 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.756002751 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.756310359 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.756309864 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.762491727 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.758262073 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.755056998 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.755601185 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.755170438 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.757722886 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.754099564 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.756899889 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.755616459 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.7565636 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.756670725 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.755733197 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.757201636 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.76891931 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.764818416 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.755704124 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.757132014 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.753493595 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.758659043 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.758489428 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.766026692 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.763337667 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.757788917 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.756893497 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.758627397 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.757175135 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.753465419 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.756346011 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.755643393 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.757892354 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.754062306 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.769592384 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.764306258 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.762446989 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.757095354 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.758404056 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.757683039 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.759039125 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.757889172 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.758627117 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.759284045 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.758765954 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.761981574 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.757893845 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.757314364 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.761316728 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.765968748 seconds)
  done (took 1041.396021951 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.756910406 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.756484742 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.754925509 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.754947508 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.756667075 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75599827 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754558298 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.755136521 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.755606203 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.755653723 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.757231483 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.754512524 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.755128992 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.757078045 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.755847095 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.756027913 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756942062 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.755325049 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755601942 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755927316 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.755356018 seconds)
  done (took 38.561411944 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.75754251 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.755736338 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.755888071 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.759684283 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757091974 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.758331062 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.755774374 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758821728 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.759196838 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755929644 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.759179045 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759646097 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.757031904 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.755723857 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756979742 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.758702975 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.759197069 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.756999206 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.761210145 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.757497479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759003038 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.757854424 seconds)
  done (took 40.36371028 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.760896704 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.760982115 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.760374696 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.758212567 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.760083569 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.757883523 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.760938235 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.759798213 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.759638078 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.760405621 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.758932464 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.76161446 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.767156117 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.764788934 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.76221824 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.76219687 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.916216024 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.76211042 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.762728526 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.762073721 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.757486257 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.765186543 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.760165564 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.75843237 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.760784723 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.761871514 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.76019985 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.761837299 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.762801856 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.762032707 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.765830584 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.76154148 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.760797747 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.763342281 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.760920109 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.762986922 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.765253778 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.762487079 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.759027434 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.763280907 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.771045018 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.781099894 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.763424627 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.768616773 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.763210084 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.762871546 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.765428794 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.770191125 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.759396646 seconds)
  done (took 88.21283879 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.762098154 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.762154043 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.759893895 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.762883419 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.762229224 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.762237123 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.762726335 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.762792758 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.759483509 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.759149933 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.762317889 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.75982552 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.759600125 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.762725376 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.763635807 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.760066507 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.760455685 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.762036162 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.760830645 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.760432432 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.761025146 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.763712806 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.763090858 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.762708437 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.763592433 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.761057766 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.761800323 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.764144754 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.76337175 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.760681294 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.764513264 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.764832784 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.764254939 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.762845798 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.763519093 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.765637247 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.763698272 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.761978149 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.76494325 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.76192714 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.763966281 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.763879267 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.764718494 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.764011269 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.760797439 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.761821872 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.762276211 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.762337486 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.762065667 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.763977429 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.765629102 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.764313436 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.763557269 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.761896905 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.765358814 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.765573677 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.76301977 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.762643823 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.765003911 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.762620306 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.763114859 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.765383628 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.762973021 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.765541469 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.765843027 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.763737894 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.762716802 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.765576268 seconds)
  done (took 121.571685824 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.766348514 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.766807659 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.766981001 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767370692 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.767314439 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.768450446 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.766949461 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.76629933 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.76753128 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.767271297 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.766996282 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.766734556 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.768088542 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.767517121 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.768167563 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.766939261 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.768469828 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.768141724 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.768752978 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767457799 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.768303124 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.768503193 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.768940175 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.767008369 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.769189149 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.768314631 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.7675905 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.768686447 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.767638667 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.768835078 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.768826168 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.76889783 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.767376538 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.769413691 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.769078603 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.769121962 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.769241666 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768802963 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.768275817 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.768860783 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.76833465 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.768950451 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.769034383 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.767617178 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769556254 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.768589911 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.76938569 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.770079364 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.768114853 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.768598493 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.770374232 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769024943 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769758337 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.768832891 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.769823256 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.768534599 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771261901 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.768915697 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769404772 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.769972002 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.770264117 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.769457593 seconds)
  done (took 111.342835848 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768015283 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.769253827 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.765817438 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.766577763 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770668405 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.766740357 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.769031196 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.769803227 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.769363113 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.769677971 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769751518 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767076246 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768334962 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769724138 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.767673505 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769306715 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767410943 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.767143783 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769727289 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.767161177 seconds)
  done (took 37.068274706 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.769066321 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.770092496 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.767498815 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.767703018 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.770154397 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.767986401 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.770886576 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769896616 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768534916 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770839639 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.770695208 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.771101946 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76691966 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.768067221 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.771568392 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.768273872 seconds)
  done (took 30.010600273 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.769858779 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.769932329 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.771417778 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.772586676 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.768640458 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.768379501 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.772247158 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.768534182 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.768510991 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.771576265 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.771283059 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.772362395 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.77150325 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.772417146 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.769173147 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.771874702 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.76957293 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.769806855 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.771565567 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.773118442 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.770268524 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.769401626 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.771990838 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.773314086 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.769202343 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.769836601 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.769801558 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.769388218 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.770734786 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.772710319 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.769711627 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.769729794 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.770539723 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.769703122 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.775189737 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.769645822 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.772838796 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.772048134 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.772224438 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.772916134 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.773770525 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.769769695 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.772979347 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.771851952 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.770164715 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.774484841 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.77073392 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.770458644 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.770921101 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.770520369 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.773742354 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.775707299 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.773097259 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.774121878 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.773496641 seconds)
  done (took 99.124967122 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773048717 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.773881721 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.770868463 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.774512966 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.77432046 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.770905417 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.774915411 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.770901016 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771585347 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.774329933 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.772416553 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.774111781 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772877647 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.774754871 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.772671453 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774248416 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.771725718 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.771806708 seconds)
  done (took 33.618054334 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.77210209 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.772375393 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.774649042 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.771857416 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.772882831 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.77525628 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771684275 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.774947717 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775124898 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.772475188 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773899086 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.775126335 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775102004 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.775799425 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.772714242 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77268848 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.775636372 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776065113 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.772954821 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773303345 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.775982352 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774932902 seconds)
  done (took 40.73386922 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.77492881 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.774484991 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.790587584 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.795117526 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.798152046 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.807349222 seconds)
  done (took 12.447355535 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77434812 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776032285 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.77494941 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776602333 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776184637 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774401099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774381071 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774073591 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777365125 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774819934 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77460718 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776173094 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77626391 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774460407 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776800402 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777577283 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774303774 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773975828 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774033438 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777083764 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773936422 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776683062 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775531252 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773426222 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774494817 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775937661 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777406167 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775206162 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775080665 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778057792 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777658485 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776452528 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777685668 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775906449 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777192772 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777472377 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777464617 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77983828 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778914519 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776014652 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.777786297 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778505198 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777265847 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775802227 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779101502 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776661519 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776125345 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776037769 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775188648 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779082415 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778697181 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775490687 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780111801 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779630291 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778572742 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78000146 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776042536 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775778975 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778697951 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777130819 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776595017 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778573412 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77689501 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776591422 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778922456 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775667035 seconds)
  done (took 118.961890826 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775769161 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.776495056 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776796674 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777117926 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776735165 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776867208 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776821603 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776703809 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776150425 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777348215 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780532317 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777045274 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776756374 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777454173 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77784785 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777346897 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778202987 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777641896 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777376746 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78187598 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777675783 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778240256 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777756435 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77821345 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777678415 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781185211 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778440614 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77770006 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778342906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779367933 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77810043 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777956193 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778469712 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.778800693 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778492873 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779454734 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780004922 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779794431 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778250209 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781495511 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777803887 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781776585 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778671602 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778491273 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779456425 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778874575 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777795268 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779033886 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779304976 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779531319 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778938975 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779444407 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779456044 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779665696 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780934072 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780164543 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77894501 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779828468 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780245826 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783012244 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779596728 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779683964 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783465451 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779719083 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778167956 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780812504 seconds)
  done (took 119.109557839 seconds)
done (took 2427.139590966 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.82181053 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.021782528 seconds)
  done (took 15.556378629 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.946819706 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.896843527 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.781089488 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.79046854 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.781260384 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.802902457 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.786815374 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.783090284 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.782967892 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.781523789 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.781244852 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.968981285 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.776246067 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.781981326 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.784785497 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.875984701 seconds)
  done (took 50.821624108 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.785724664 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.786471828 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.797589588 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.78850238 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.785535942 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.80511625 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.820265187 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.788384488 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.846325642 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.799228569 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.904478583 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.797533272 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.785040581 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.856700445 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.800646323 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.799480695 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.881262674 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.865520471 seconds)
  done (took 34.408951364 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.865565409 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.787132372 seconds)
  done (took 10.375841065 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.813796074 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.78401042 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.809597875 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.803648772 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.800957161 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.797581256 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.807869499 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.808860136 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.811444308 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.783069457 seconds)
  done (took 69.73923796 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.791577641 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.786561642 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.786736166 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.785519055 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.778215503 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.784090569 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.785569979 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.78418626 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.48449602 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.823362675 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.793962835 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.792145479 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.787313069 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.789277411 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.784487089 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.809736387 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.980008982 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.784447038 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.78475705 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.792208787 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.787518724 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.849597262 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.80123974 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.789238055 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.81800845 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.484306185 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.796956006 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.793407571 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.911902244 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.785174288 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.787212258 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.788417956 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.789410627 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.173003333 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.080657512 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.787535565 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.794954739 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.793994247 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.785166268 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.897481997 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.789199759 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.793402993 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.671287516 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.060304186 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.905595266 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.832087021 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.165653384 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.791948477 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.789153152 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.817771912 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.791364547 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.78939836 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.801859426 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.294951793 seconds)
  done (took 128.199235223 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.784246051 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.046732828 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.941079268 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.783341339 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074933081 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993212314 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.785859068 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.834914061 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.786478261 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.014732308 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.006873069 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.894692472 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.78550511 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.783687778 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.78582154 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.781849003 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.946425485 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.859672401 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.785584074 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.782093585 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816665194 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028921938 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.918676383 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.785315738 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.806673378 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.99880028 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.922240404 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.89491966 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.237645067 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.782423277 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.850154377 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.784824449 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.784662415 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.782441972 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.943249992 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.882607611 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.874864445 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.786240052 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.783182899 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.787526198 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.462623851 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.986817738 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.888269682 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.930235677 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.032513272 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.991713155 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.57193595 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.782594749 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.523566391 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.946647173 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.020592008 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.018346607 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.912962563 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.787995485 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.295611457 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.783954038 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.784004925 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.021228889 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0180367 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.890369787 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.787027958 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.785574373 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.783592609 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.033086759 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.788802535 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.882040205 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.787758881 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.785308038 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.882898409 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.89301998 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.020391925 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001782212 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.821180999 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.107985485 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.272534752 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.03569545 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.857517851 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.02357237 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.788194468 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.785591074 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.873254815 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.736982221 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.988360645 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.038311035 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.043480829 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826372211 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.508880809 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.784731911 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.015959373 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.013370471 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.090197603 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.027940976 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.941024553 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.129181423 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.786551494 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.785086545 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.035706093 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.927078886 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.788787824 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.148643432 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023320421 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.35749706 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.8179074 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.132615493 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.924135351 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.789692122 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.429828808 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.786226164 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015511274 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.830349271 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.788364956 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.786888573 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.009941832 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.862893685 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.78804268 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.42063523 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.853010338 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.791344175 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.025467109 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.791473509 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057449491 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.790405621 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.029531989 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.160773233 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.822770516 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.019366209 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.031283507 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.791535242 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.037470538 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.037804228 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.909073898 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.012440879 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.40944565 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.787921686 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082818486 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.792089864 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.788211409 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.962811506 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.791456447 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.966483586 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.791700189 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124371527 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815803477 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945791304 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.791357226 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.047264137 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.828107367 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.84303608 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.791625108 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924031729 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.789543314 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.675283332 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.943881707 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.791271129 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.790329722 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.518340029 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.789701281 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.948170417 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.025134593 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817435843 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.866997152 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.459756416 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.789895662 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878546335 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.819182356 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.138133891 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.79017243 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.005827713 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.792869004 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.310385812 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.783467441 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.026422388 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.97126886 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.785768472 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.781553674 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.689704202 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.778924303 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.775798069 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.938993977 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.138555546 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.774063858 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978624242 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.776771883 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.914549405 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.776602744 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.848954122 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.124569734 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.770921728 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.767532867 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.765797161 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.768483442 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.766525933 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.031102985 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.798034073 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.290858663 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.90429528 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039283739 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.087545691 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.016754212 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.813236995 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.766359772 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.014404211 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.766896185 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.832113293 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.766083634 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.788766699 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.001303803 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.767577071 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.977354117 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.048514668 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.690561366 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.816093596 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.767411793 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.763159875 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.723314467 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.922913025 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.858478574 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.767127118 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.764903579 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.891596064 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.899480202 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.982391151 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.765342906 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.097431698 seconds)
  done (took 885.380222967 seconds)
done (took 1196.194213901 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.764999294 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.764397378 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.754066354 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.766797686 seconds)
  done (took 28.752891008 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.775749969 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.773204142 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.77498313 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.772636427 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.774792487 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.77233099 seconds)
  done (took 12.347950573 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.814850083 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.76905566 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.767637179 seconds)
  done (took 21.056832201 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.842467824 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.189703259 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.887599202 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.221022012 seconds)
  done (took 9.845602735 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.775507834 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.773680969 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.774290789 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.776594445 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.775552774 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.777126666 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.775070277 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.775929694 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.777370899 seconds)
  done (took 17.686779928 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.090636475 seconds)
done (took 95.482356199 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.780108651 seconds)
    (2/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.016520436 seconds)
    (3/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.04409425 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.489030432 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.934563168 seconds)
    (6/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.961773113 seconds)
    (7/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.884740177 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.958959483 seconds)
    (9/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.176503281 seconds)
    (10/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.967740326 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.594247279 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.850206428 seconds)
    (13/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.860223315 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.796711884 seconds)
    (15/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.002867665 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.822594287 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.845175672 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.956904033 seconds)
    (19/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.904643774 seconds)
    (20/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.71166727 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.17750835 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.684496211 seconds)
    (23/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.622468323 seconds)
    (24/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.182175428 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.103757918 seconds)
    (26/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.875780041 seconds)
    (27/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.916520919 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.18337161 seconds)
    (29/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.810970242 seconds)
    (30/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.937300426 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.393259292 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.009573109 seconds)
    (33/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.311729765 seconds)
    (34/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.895566247 seconds)
    (35/309) benchmarking ("sort", BigInt, false)...
    done (took 6.798164382 seconds)
    (36/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.819568928 seconds)
    (37/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.938457861 seconds)
    (38/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.177920549 seconds)
    (39/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.999944479 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.908660661 seconds)
    (41/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.89639823 seconds)
    (42/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.934875383 seconds)
    (43/309) benchmarking ("sort", Float32, false)...
    done (took 5.564981064 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.066970518 seconds)
    (45/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.798970897 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.863037966 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.117610322 seconds)
    (48/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.003880209 seconds)
    (49/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.832522014 seconds)
    (50/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.354731626 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.189924143 seconds)
    (52/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.822545723 seconds)
    (53/309) benchmarking ("sort", Float64, false)...
    done (took 5.587855467 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.80265429 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.872960268 seconds)
    (56/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.143386625 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.860219858 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.973717712 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.786955956 seconds)
    (60/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.347986257 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.577311611 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.871777513 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.901967273 seconds)
    (64/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.82927411 seconds)
    (65/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.28219919 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.723829756 seconds)
    (67/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.918546995 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.089778948 seconds)
    (69/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.852537484 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.80242865 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.916743224 seconds)
    (72/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.071598313 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.904175897 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.87787273 seconds)
    (75/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.9537579 seconds)
    (76/309) benchmarking ("sort", Int8, false)...
    done (took 4.816367652 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.893713585 seconds)
    (78/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.934533941 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.134786739 seconds)
    (80/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.787148672 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.441411321 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.023892455 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.138108991 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.483384849 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.418867914 seconds)
    (86/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.78602779 seconds)
    (87/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 8.059258277 seconds)
    (88/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.02730106 seconds)
    (89/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.946820827 seconds)
    (90/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.726511736 seconds)
    (91/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.732939894 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.866805101 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.799041333 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.945802519 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.074865716 seconds)
    (96/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.801991981 seconds)
    (97/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.968614724 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.141387218 seconds)
    (99/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.81090346 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.521550363 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.151852825 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.901562778 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.623910423 seconds)
    (104/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.212804171 seconds)
    (105/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.275784999 seconds)
    (106/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.128098473 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.09287571 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.783327594 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.941610244 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.784320737 seconds)
    (111/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.933737897 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.025636848 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.795677715 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.99651761 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.787255998 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.7078653 seconds)
    (117/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.870196471 seconds)
    (118/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.876752941 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.090830891 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.817144969 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.822346877 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.47518988 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.78409646 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.265775322 seconds)
    (125/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.689115161 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.987919373 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.199414561 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.163561275 seconds)
    (129/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.278010506 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.886262371 seconds)
    (131/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.120214215 seconds)
    (132/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.79807426 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.218443027 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.798339495 seconds)
    (135/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.855336514 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.028773832 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.012130709 seconds)
    (138/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.859765182 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.831766769 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.99231238 seconds)
    (141/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.13038601 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.025305021 seconds)
    (143/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.768538881 seconds)
    (144/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.042475219 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.75449377 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.823974905 seconds)
    (147/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.752965018 seconds)
    (148/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.085415953 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.928166025 seconds)
    (150/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.819887889 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.947378551 seconds)
    (152/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.048305483 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.880546399 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.457513035 seconds)
    (155/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.770632261 seconds)
    (156/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.140721327 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.893017571 seconds)
    (158/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.908662511 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.761441638 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.985204994 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.788504466 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.862213144 seconds)
    (163/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.094111003 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.056971277 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.396000861 seconds)
    (166/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.756060927 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.376277025 seconds)
    (168/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.775649682 seconds)
    (169/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.049618275 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.841486489 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.782403196 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.773313336 seconds)
    (173/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.938446204 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.776161971 seconds)
    (175/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.851452122 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.131141183 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.123520324 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.736930987 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.28857241 seconds)
    (180/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.181465914 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.108801422 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.036417895 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.656603176 seconds)
    (184/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.057874248 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.733488041 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.715739805 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.729843042 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.982100515 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.898801803 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.774889403 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.748050498 seconds)
    (192/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.385741437 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.147485577 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.723496235 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.735826926 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.519184858 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.838745035 seconds)
    (198/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.217823814 seconds)
    (199/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.761723431 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.102116417 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.362346274 seconds)
    (202/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.818213867 seconds)
    (203/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.757836547 seconds)
    (204/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.813098632 seconds)
    (205/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.809103301 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.000663391 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.764396308 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.113291782 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.729374373 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.486823489 seconds)
    (211/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.757496475 seconds)
    (212/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.753429477 seconds)
    (213/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.911393674 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.79060502 seconds)
    (215/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.856350036 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.849655509 seconds)
    (217/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.712183715 seconds)
    (218/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 3.516657066 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.776777434 seconds)
    (220/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.811420818 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.534275761 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.946499479 seconds)
    (223/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.711518603 seconds)
    (224/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.359752917 seconds)
    (225/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.931762076 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.882733266 seconds)
    (227/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.426270637 seconds)
    (228/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.608794553 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.145141129 seconds)
    (230/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.737334405 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.821107303 seconds)
    (232/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.255231362 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.835780201 seconds)
    (234/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.310708547 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.739532738 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.124867791 seconds)
    (237/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.96427727 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.783627342 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.838241082 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.25568894 seconds)
    (241/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.964005118 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.74678321 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.626844224 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.714549511 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.055469222 seconds)
    (246/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.865818014 seconds)
    (247/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.861127451 seconds)
    (248/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.026643686 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.988848791 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.740217939 seconds)
    (251/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.001223457 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.841777705 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.742306007 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.111330981 seconds)
    (255/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.81314872 seconds)
    (256/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.700621598 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.973506139 seconds)
    (258/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.831126595 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.86300207 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.749284398 seconds)
    (261/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.732607995 seconds)
    (262/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.227958824 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.84388909 seconds)
    (264/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.834355759 seconds)
    (265/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.743050206 seconds)
    (266/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.073577483 seconds)
    (267/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.758679358 seconds)
    (268/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.728496292 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.773163991 seconds)
    (270/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.776993613 seconds)
    (271/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.913605114 seconds)
    (272/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.153744974 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.771232211 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.669625354 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.105151583 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.028252435 seconds)
    (277/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.760864343 seconds)
    (278/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.937669209 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.730457416 seconds)
    (280/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.814706138 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.829636806 seconds)
    (282/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.790322338 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.730489885 seconds)
    (284/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.881409294 seconds)
    (285/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.854676318 seconds)
    (286/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.648269439 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.041286657 seconds)
    (288/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.278148534 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.89997526 seconds)
    (290/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.825586539 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.942583057 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.241550092 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.957102685 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.581912556 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.809209429 seconds)
    (296/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.837963923 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.325594819 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.843612722 seconds)
    (299/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.329474796 seconds)
    (300/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.279417115 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.000918315 seconds)
    (302/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.918286106 seconds)
    (303/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.417383855 seconds)
    (304/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.83732923 seconds)
    (305/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.039400556 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.068200371 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.876942077 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.82886285 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.827234897 seconds)
  done (took 987.932231261 seconds)
done (took 989.731040039 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.841302022 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.835781625 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.820221926 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.840983761 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.932590745 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.851468865 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.829788481 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.822561921 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.866739396 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.86973723 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.819226876 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.850780285 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.822489898 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.820870271 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.818703363 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.834701545 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.133632515 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.852739561 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.837235071 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.829598171 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.837135415 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.819045711 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.869492248 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.851128954 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.824630554 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.824182196 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.825214748 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.840744471 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.933576534 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.825558803 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.824091062 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.832961175 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.133668306 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.854891947 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.816794577 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.842680331 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.833789086 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.830333667 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.826190902 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.854454165 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.285533147 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.829274888 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.824063911 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.822427729 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.821951676 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.826829895 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.823148429 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.829250804 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834671612 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.836113188 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.281985148 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.845973774 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.826013898 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.823404924 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.834085172 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.822916678 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.830333951 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.838659012 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.8432049 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.838787197 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.128784311 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.858738016 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.825034487 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.840459335 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.830937185 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.317918222 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.825474939 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.828086834 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.288268676 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.836435512 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.317707159 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.839060456 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.824846939 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.83804393 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.855370696 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.134513397 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.851191337 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.822947479 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.828633002 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.82073051 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.832114449 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.834172022 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.827317906 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.819922774 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832654948 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.850905079 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.829669852 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.821208316 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.831312267 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.838143701 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.824555866 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.828736187 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.820920325 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.816289155 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.825999481 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.822908173 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.819773306 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.820072983 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.821828118 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.827933774 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.275635583 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.838074713 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.810348631 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.811256213 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.815477669 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.826016041 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.273856919 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.820219616 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.833508216 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.86263412 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.812642106 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.114252925 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.845710486 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.825753746 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.818197533 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.812508833 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.803436483 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.111582075 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.298525948 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.83042711 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.809396294 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.804564039 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.821792874 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.80991515 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.803034791 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.120792878 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.836786403 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.817357193 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.924073006 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.814290895 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.837734952 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.800465358 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.805537059 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.834513641 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.818301026 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.834166815 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.806947911 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.815016827 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.816738841 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.797276931 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.811199545 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.812038497 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.799265529 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.804400322 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.793084149 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.829437349 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.810384526 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.812023381 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.817663098 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.917363403 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.793548557 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.098576898 seconds)
done (took 286.030472322 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.864761475 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.787725036 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.889053229 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.788511111 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.871384328 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.876262725 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.78537688 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.783990069 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.784702793 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.15949071 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.784758019 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.786153824 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.779292537 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.781572795 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.866699275 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.785913928 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.780384232 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.118626428 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.783863247 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.85489675 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.775767094 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.779599119 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.781739034 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.155542853 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.772268746 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.77867047 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.850195317 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.778125639 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.117247315 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.771628274 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.773792258 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.117670725 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.870207068 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.79898382 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.785772033 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.784032496 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.859936818 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.782333779 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.857959171 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.859068777 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.875651488 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.814570137 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.768962124 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.766057015 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.778280865 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.772799344 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.76877687 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.799679254 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.763994345 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.768613313 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.106552292 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.7817772 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.779149846 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.768599988 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.768925536 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.793811691 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.768923387 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.773193437 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.863345536 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.773369788 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.834596824 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.146300754 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.144882782 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.773560138 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.768372549 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.770256206 seconds)
  done (took 178.178989142 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.839432481 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.845759369 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.840392281 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.777594052 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.822991305 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.842237114 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.77758757 seconds)
  done (took 14.449389069 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.778869927 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.773991237 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.831528566 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.823179528 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.774410835 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.924421403 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.774560833 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.784295867 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.771633702 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.827020421 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.774255977 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.775087946 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.780857551 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.773522015 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.822598194 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.785582326 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.889082537 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.775563935 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.774739534 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.924007407 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.771116545 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.779361841 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.828961618 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.784429835 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.773933619 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.778649606 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.358282834 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.773713904 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.770125267 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.773221998 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.770882074 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.816281792 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.774305911 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.7744621 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.771146227 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.889072365 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.773967911 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.77227657 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.774251388 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.766439776 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.773242481 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.774186685 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.774310527 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.771158084 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.773910725 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.798104964 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.774292326 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.774040775 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.775096349 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.774774511 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.824963683 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.774456352 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.771917102 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.772523034 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.830079976 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.781521419 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.776456764 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.772443481 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.774902208 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.771727621 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.925172623 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.823091053 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.77516828 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.822020867 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.775099177 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.775529408 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.775106833 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.773336412 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.867392088 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.772671884 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.820900036 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.769644865 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.929126275 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.792781756 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.769723384 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.771570945 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.771521736 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.776080476 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.76441834 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.775572563 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.768215645 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.766398829 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.76937984 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.761182269 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.762297882 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.876440054 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.876037054 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.761430794 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.777164039 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.771495834 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.762037271 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.817641953 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.76550911 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.76279396 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819790004 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.879693405 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.822594314 seconds)
  done (took 196.280680577 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.769842217 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.772512634 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.766771322 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.781487462 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.765111759 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.765253811 seconds)
  done (took 12.316356669 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.766871959 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.767079014 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.765202808 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.76606209 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.766434006 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.767360152 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.767021668 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.76701993 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.770245465 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.766052659 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.766695531 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.766721434 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.767088037 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.766931712 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.766960787 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.7669148 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.766920582 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.763711503 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.766083608 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.767732474 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.91431042 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.76765443 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.767358608 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.768056368 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.771684444 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.766095886 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.774643199 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.766150763 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.767057767 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.77413874 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.772187351 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.767418313 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.767748534 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.773331642 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.773088935 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.76800229 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.770233089 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.768162541 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.765402162 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.76821101 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.768266187 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.768563074 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.767304504 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.769139647 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.769448034 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.772982608 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.773102672 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.77527823 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.768877439 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.769814779 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.768604874 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.767316242 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.768477662 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.769263857 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.770504631 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.774319821 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.772843766 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.768710887 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.769143279 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.768720078 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.769231451 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.76937368 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.77051178 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.773739788 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.774710162 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.769634988 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.769838303 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.772778228 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.769512454 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.768568539 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.770041777 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.76605807 seconds)
  done (took 130.208892564 seconds)
done (took 533.177039268 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.925162792 seconds)
  done (took 8.62349279 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.901182983 seconds)
  done (took 8.700438732 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.491378231 seconds)
  done (took 10.189965608 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.78134727 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.787817995 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.774499903 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.762901113 seconds)
  done (took 28.816782853 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.870651302 seconds)
  done (took 8.568849672 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.776703549 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.761465783 seconds)
  done (took 15.273580284 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.82730983 seconds)
  done (took 8.526967284 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.843900432 seconds)
  done (took 8.547224354 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.786707087 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.801741621 seconds)
  done (took 15.302221843 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.74813093 seconds)
  done (took 8.447171295 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.39799856 seconds)
  done (took 11.104063484 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.76451581 seconds)
  done (took 8.478850055 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.81013957 seconds)
  done (took 8.509885867 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.802538715 seconds)
  done (took 8.503148483 seconds)
done (took 159.29104014 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.770106198 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.764463669 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.765904494 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.764373976 seconds)
  done (took 28.764781637 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.80326234 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.802882327 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.805294637 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.814466367 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.807093236 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.802771063 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.808070711 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.795815508 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.8143476 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.807227923 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.805685005 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.807156448 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.802934379 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.796287757 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.806438996 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.806069692 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.814298644 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.805351593 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.797045715 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.806999184 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.771279904 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.815910863 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.80755517 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.771281699 seconds)
  done (took 44.976519346 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.970340315 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.843423508 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.924205432 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.822904733 seconds)
  done (took 9.261528436 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.823568132 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.824606789 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.836553833 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.875250366 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.90058068 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.833914636 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.797849027 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.792647026 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.779326894 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.825137548 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.900482994 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.820715854 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.919135857 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.771036519 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.957973731 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.771551078 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.771553842 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.82362297 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.874927774 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.894524203 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.772098011 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.823848354 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.830801753 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.821320724 seconds)
  done (took 45.74499143 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.769889762 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.77822248 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.777644833 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.771294307 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.771567364 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.771348335 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.777955374 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.771747168 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.793112636 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.77241698 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.771136893 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.772302636 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.77185256 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.77441491 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.773877056 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.785998984 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.785546835 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.773151903 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.777170733 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.780874176 seconds)
  done (took 37.224508789 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.765887933 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.620395925 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.121232577 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.022444754 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.767172021 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.770229151 seconds)
  done (took 30.769873179 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.787678165 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.779263669 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.772521447 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.831711435 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.916784039 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.781267939 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.773005528 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.783893526 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.82145316 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.842241631 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.794813759 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.80156321 seconds)
  done (took 23.391004526 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.768430179 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.769622441 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.769852578 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.785859311 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.784418469 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.781980725 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.780671717 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.767125594 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.787811456 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.793991806 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.781843554 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.785583293 seconds)
  done (took 43.064954687 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858586858 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.658412258 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.818582137 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.496683858 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.242916637 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.980794255 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.296772661 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104589943 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.773425821 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042718762 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.935731225 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876039729 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.024324338 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769452412 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.781090838 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.261799054 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070483339 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00354338 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798754867 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.601149158 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82285936 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413235531 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.673417813 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.831433332 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981529704 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.899326024 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.035925066 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.727599923 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907385966 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80944404 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78062882 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.770125562 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044050635 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151122458 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876925144 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780715706 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.427468064 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.493889338 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.757179034 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.587288448 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.62928458 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.908347814 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782149336 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.772822827 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.705511284 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365639741 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15204 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.776113214 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.481210247 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.771948622 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.782739272 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860623956 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.775684734 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.586246876 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.727238967 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.051293105 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.76913423 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777711444 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341025632 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.930464572 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410697944 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.753917466 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.966479432 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.595905966 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174363476 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.92612572 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.776379887 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775883446 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707605636 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.593072519 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827529078 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918475071 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.792487179 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.42281018 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087976338 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.004488983 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.716992681 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.519187274 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.670167311 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.753732912 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00095077 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.728919939 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707261019 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.633923692 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.707828719 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04362395 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814627481 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.415410151 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81713939 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.105133976 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.784325536 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790404486 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781783877 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.997845569 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.338865003 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773758129 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.727150432 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918861431 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796489346 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.109356155 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708024977 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.777335053 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028145035 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.985458497 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.118970373 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.312091239 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936900076 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774344148 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.854655872 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.774524199 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.823516217 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.050883021 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83770137 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.93657504 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837281681 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.736262185 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081617748 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.805167636 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.941865302 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.952164739 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904467872 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.114339591 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.073051131 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840599958 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.786266241 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.7759128 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.673268476 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.330075112 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.042068107 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.776390202 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391800322 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.829136858 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.777089307 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710347262 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.383317374 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.953151259 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.752528553 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99972187 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.775753474 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.082658752 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710549536 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921675382 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.889906187 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.998971665 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.423875515 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.86742165 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034465974 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376428996 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.153775016 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833222046 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797186859 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896099195 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800125877 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.323418478 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078984047 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.781361589 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.781363804 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.672210546 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.78105185 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777614666 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.782505744 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.578190564 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069356613 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.81084689 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.781346562 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.667293003 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.792496377 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84480643 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783857883 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.788544067 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.325122386 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.529755312 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.790104122 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.413640976 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0068425 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789039567 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.596672166 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894301466 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.860793438 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059697212 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.845808219 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.713075075 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.489676642 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.472871343 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779791101 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.715175569 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.779740419 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788226759 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790551852 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.159493283 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.062936399 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829500434 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.698619477 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.823784659 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790893175 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.784609129 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780060874 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.325545111 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.93548253 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423501066 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.832845416 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916993227 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.79396966 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.714027339 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.783941815 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.784717225 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.780129034 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.732844536 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834102992 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.598804118 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158392616 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037502081 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.474240109 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798730965 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.633390233 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.844140173 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.801638805 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.743877086 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797158152 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.887273151 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794579567 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.792701705 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.603102021 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479347313 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350413942 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10097771 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109135465 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231556038 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.38565428 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.091081229 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.117776504 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017839047 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.311502504 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.843699015 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124621286 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726646765 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867345217 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.431922039 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142984971 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796791327 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010625084 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172301889 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.653818368 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963418128 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994547167 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816788214 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.782811705 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.74529163 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.989111384 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924605428 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.605871112 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996886932 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112523451 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.598467068 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.884867192 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.782155311 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.481287836 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873358509 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.492923324 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.144627107 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.431642325 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.857566923 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262524402 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.786636344 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.230456294 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14210861 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.22397789 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.912871099 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718688226 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.795553061 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.795313236 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.784871495 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.780522694 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.659064197 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.037187575 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794729615 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02015989 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.174834497 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091667247 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.696399626 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.790793899 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784255406 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089674561 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.701943037 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962166014 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.334544591 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.318762189 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788543564 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.71942684 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719102395 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.477372691 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.795183067 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.760768228 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011579405 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.979611338 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.741200471 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408429706 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035494929 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.039471532 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.799926666 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068625523 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065038891 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.522117836 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815984298 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.886665905 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.592313885 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.9036913 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.055187957 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.021373929 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.587025317 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.017101304 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.855945762 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.573500893 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.785098391 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000626386 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.054777442 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.814683214 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030346015 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.511009269 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.892788882 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102967671 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848560589 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.81003107 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.948657987 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.980642961 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797166142 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871528385 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795855052 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.798497435 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.797284579 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833514542 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.824346691 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.919318591 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.801726537 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876938933 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.951985328 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.32192297 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.794823555 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07351165 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152257233 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121578108 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852888393 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.787837148 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786235216 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719636846 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92379627 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.233722029 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.061761108 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.918165281 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.089737021 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814325669 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.589637911 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282009982 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035697506 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062546035 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.682832571 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809995934 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.804524885 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.05486513 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800475429 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.000762288 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031424782 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123673734 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263069597 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.1501508 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.158876485 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0628587 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.159874376 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78885875 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377528314 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.91448561 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.484246881 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.834685387 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.812855888 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066742971 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800634193 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169068452 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.813022887 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.990522365 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.30595922 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61133437 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.081483532 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.780257601 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.855668025 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07565567 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.191083505 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106550158 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861705401 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800834695 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.495924939 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928457455 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.653420392 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.062317653 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.790850709 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002616014 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.500459532 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.801400166 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072260584 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10564237 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.787974679 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.653961037 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801430616 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.799165785 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01495513 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066674032 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04629089 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80093405 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.797640722 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.605425579 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073647354 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856114297 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724970047 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.794145179 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895633733 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.038513979 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813839832 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.308186137 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.501877174 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091826755 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.714002194 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814231342 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43033404 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.175783557 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125566916 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.340464648 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024319177 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.353451258 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.7923213 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085986175 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.798282919 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39725179 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104709521 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.792836898 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.511166564 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837766619 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.073008318 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117243884 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.92350952 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.611309478 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.765064936 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016457729 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392239932 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.735627825 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.792930145 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.853345738 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.79434406 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.921818688 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.802723139 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.655288966 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7948845 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.53860678 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28566201 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.797963707 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.784505022 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.638261267 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.53371471 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831879764 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936497949 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80028591 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.50364577 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.085095286 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.045751098 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.525541606 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.803160155 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.796329645 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79053019 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.718806768 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.992678473 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.173168278 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104505907 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.366188854 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.835036568 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795708058 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.007047417 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002727539 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.833146577 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944937647 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386098887 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834608228 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.562305618 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.473115672 seconds)
  done (took 1650.901476797 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.80415312 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.881151109 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.842267488 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.831194644 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.864769721 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.899603212 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.876744817 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.856572096 seconds)
  done (took 56.586747539 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.793661024 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.991078094 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.80246162 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.794388731 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.808201299 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.794172217 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.997433269 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.807427908 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.846246266 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.804397557 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.794700142 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.80449511 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.104984212 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.820353948 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.793838374 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.812237656 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.812432715 seconds)
  done (took 73.158167222 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.796975611 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.02158793 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.816364198 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.815855137 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.732713715 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.807895093 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.768736506 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.825984792 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.799560983 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.017596084 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.432525529 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.832733244 seconds)
  done (took 89.402087288 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.804347449 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.80088865 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.801641348 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.799548905 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.801403602 seconds)
  done (took 10.742924031 seconds)
done (took 2145.752229947 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.040573103 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.021233629 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.03796957 seconds)
  done (took 5.790031335 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.944839231 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.992925556 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.111574837 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.133819007 seconds)
  done (took 9.919652321 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.090873496 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.16892811 seconds)
  done (took 5.991527633 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.21999076 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.814240602 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.196418267 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.796607395 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.798896795 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.799290885 seconds)
  done (took 22.132320607 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.800543042 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.804805902 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.802330461 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.80440065 seconds)
  done (took 8.946525321 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.78048476 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.523928571 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.781593829 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.797196022 seconds)
  done (took 20.616309498 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.550960469 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.199862682 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.545476559 seconds)
  done (took 9.028189605 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.32352817 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.721371571 seconds)
  done (took 8.778236376 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.069816475 seconds)
  done (took 3.803124045 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.829082007 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.072847374 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.317206785 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.323417802 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.409605453 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.685593572 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.140681772 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.063769636 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.213968738 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.256033045 seconds)
  done (took 24.047212344 seconds)
done (took 134.05470108 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.186475002 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.174387834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.999480486 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.192672144 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.02501603 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.001254395 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.001497007 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.173806921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.647755516 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.643288064 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.190983887 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.022971448 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.964337839 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.163794849 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.967394005 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.165316889 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.024369347 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.198713642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.848612539 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.043016867 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.010654446 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.777083387 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.03319988 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.788859323 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.024327467 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.954705697 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.350463513 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.170436712 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.994989638 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.361650794 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.954984635 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.192588768 seconds)
  done (took 166.984745584 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.684030438 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.799307431 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.79920621 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.801315348 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.285698886 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.801442829 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.801589032 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.801388479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.939747169 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.925402794 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.801271231 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.27418899 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.80274721 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.80012079 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.80130583 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.801914098 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.070630044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.753752722 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.813632098 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.817630743 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.820726656 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.226166347 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.822104986 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.265758604 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.100093174 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.828851385 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.802149685 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.829287708 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.80734854 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.810816634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.811866499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.801117692 seconds)
  done (took 206.041327739 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.801774853 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.802396598 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.801237356 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.803182716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.802108554 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.821438674 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.806301613 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.803327627 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.465177801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.459917156 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.804306555 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.80215482 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.805482072 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.802230962 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.809710615 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.802562488 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.809470712 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.809656823 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.810728144 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.813520275 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.817070832 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.671517982 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.8170185 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.668354556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.80923025 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.810358984 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.80343106 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.812692864 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.813797436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.816336455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.818176536 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.805495967 seconds)
  done (took 218.649721893 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.00683539 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.810104609 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.812200558 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.751330887 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.812986445 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.811786667 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.759831292 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.009998779 seconds)
  done (took 18.52812192 seconds)
done (took 611.952289278 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.300010842 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.14462862 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.988071568 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.836146234 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.070900533 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.870786595 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.831335169 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.895238261 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.563237998 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.903524839 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.475449502 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.853706919 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.566782324 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.862074325 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.955823371 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.888179603 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.376745241 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.470664543 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.015739666 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.90040027 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.00444178 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.771235381 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.915669381 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.594183793 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.587768025 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.816262346 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.996072381 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.386514593 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.843739156 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.000788379 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.583837687 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.228923603 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.845524053 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.831203966 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.890001438 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.866104783 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.164415156 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.843998803 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.950907506 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.571555581 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.895881741 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.447005176 seconds)
  done (took 100.545649807 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.801483257 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.799373804 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.79978562 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.800138911 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.802665185 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.800395324 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.799669851 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.799847918 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.802501385 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.798467476 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.800037702 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.801533299 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.79990339 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.80130562 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.800636463 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.800580805 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.80081074 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.803126839 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.79972986 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.799202692 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.800262268 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.799918941 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.816340663 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.799977077 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.801512068 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.799894609 seconds)
  done (took 48.582157739 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.8154617 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.97679194 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.060169429 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.833188236 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.813221202 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.816930631 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.833206603 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.820114635 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.816306681 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.816060928 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.921566354 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.821919619 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.834048959 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.060845648 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.832747849 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.814234656 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.81430903 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.814930106 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.982506594 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.832275567 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.834355541 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.820617994 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.833615717 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.828379668 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.81445634 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.816024316 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.819958126 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.27162533 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.825808636 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.921951161 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.859047107 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.84028704 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.238767457 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.072361538 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.870706516 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.824834245 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.815957566 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.9267764 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.822117495 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.816942448 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.835360844 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.822118163 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.060980431 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.302159894 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.831107813 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.817617915 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.281072131 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.933923673 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.857918098 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.82699315 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.063899542 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.834186893 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.819716658 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.817141008 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.853126232 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.828773977 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.817601257 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.162424915 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.830127368 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.835200059 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.821683739 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.816754381 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.989416281 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.826444221 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.978560672 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.827188091 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.822382843 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.818505431 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.06466205 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.835768615 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.312813157 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.831480232 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.818791169 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.92645485 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.985234014 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.306651486 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.832426247 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.991857241 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.257555382 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.842893796 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.825628304 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.259570231 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.847204011 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.825911139 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.821011855 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.820613555 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.81987885 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.86502379 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.835691891 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.242436648 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.317354942 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.188000594 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.846443828 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.834549065 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.820296969 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.165293948 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.828196373 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.818765148 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.061090788 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.323619819 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.832203711 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.827587797 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.294740043 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.835614789 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.839568254 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.827417035 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.070150453 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.835341073 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.864542233 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.819111233 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.825371493 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.823223311 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.838563986 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.828016022 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.819713626 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.283314216 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.946757792 seconds)
  done (took 226.068762683 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.814381576 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.822960296 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.814180578 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.814155123 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.812178302 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.818607675 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.81440136 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.812714059 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.820028166 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.812591813 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.813769371 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.814093805 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.813428198 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.821396829 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.302542877 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.821670669 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.469571676 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.816931075 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.815634988 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.826296322 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.496321024 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.826498947 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.816239769 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.833914523 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.819143667 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.81726534 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.818654897 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.8643564 seconds)
  done (took 166.515678635 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.823042889 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.006235189 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.843284608 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.860293044 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.83175301 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.820389072 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.844767403 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.841737971 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.825369436 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.819596649 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.819266876 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.883144149 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.835928188 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.970160094 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.855843361 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.854871802 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.931616288 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.830811665 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.819936749 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.819862483 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.849968002 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.818628189 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.882406401 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.95121008 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.842067576 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.940704312 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.830926357 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.823224352 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.823313075 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.943058942 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.837670441 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.883595296 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.852280769 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.841610282 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.945834847 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.946215589 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.936803534 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.854095612 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.827210265 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.82112185 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.82063397 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.809900971 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.941823975 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.842620496 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.823626005 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.932254887 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.842128589 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.824550798 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.833799313 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.82059616 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.835938209 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.840732184 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.891228943 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.959885195 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.858630636 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.850010353 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.848246276 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.104960702 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.834075584 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.928218251 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.818939512 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.945880781 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.846103911 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.812031726 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.82420983 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.828976189 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.853215917 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.856606445 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.93431228 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.833290629 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.929635321 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.863767105 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.832190267 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.823090254 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.828512265 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.942288226 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.948144286 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.859886268 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.862553008 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.855747232 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.818688518 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.824252475 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.813048729 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.842152049 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.829308613 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.946383882 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.949013571 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.836130802 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.827202281 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.82667826 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.828077633 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.851386402 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.955013379 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.860845628 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.925956075 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.895607859 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.905196094 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.844360138 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.83806572 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.829407244 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.890368455 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.844535598 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.838710912 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.151966334 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.898730054 seconds)
  done (took 197.960063894 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.295883821 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.883008147 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.884220196 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.151975614 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.260368218 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.69106777 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.878353005 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.877994749 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.900254584 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.072509468 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.953899768 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.897456906 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.862288871 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.84934095 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.877576645 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.897719082 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.887079335 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.208842613 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.99527478 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.973460858 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.85955922 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.190359627 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.197832124 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.275994218 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.91192697 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.205574378 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.550561798 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.128246621 seconds)
  done (took 60.383342989 seconds)
done (took 801.792823793 seconds)
SAVING RESULT...
DONE!
