cset: moving following pidspec: 19341
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.174309107 seconds)
loading group "string"... done (took 0.524826516 seconds)
loading group "linalg"... done (took 9.788095051 seconds)
loading group "parallel"... done (took 0.173267005 seconds)
loading group "find"... done (took 2.534372772 seconds)
loading group "tuple"... done (took 2.279677046 seconds)
loading group "dates"... done (took 1.43762206 seconds)
loading group "micro"... done (took 0.603403059 seconds)
loading group "io"... done (took 0.574387079 seconds)
loading group "scalar"... done (took 55.303274321 seconds)
loading group "sparse"... done (took 13.956469605 seconds)
loading group "broadcast"... done (took 1.322155422 seconds)
loading group "union"... done (took 2.583466585 seconds)
loading group "simd"... done (took 3.68459802 seconds)
loading group "random"... done (took 13.761925312 seconds)
loading group "problem"... done (took 2.266553938 seconds)
loading group "array"... done (took 23.347045878 seconds)
loading group "misc"... done (took 1.106821825 seconds)
loading group "sort"... done (took 3.742026832 seconds)
loading group "collection"... done (took 20.613545899 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.770371079 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.164951004 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.247877401 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.895290875 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.305538924 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.2099026 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.20342084 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.181276893 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.665893896 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.216783922 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.200764008 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.406534239 seconds)
done (took 7.280248417 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.479663929 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.094342793 seconds)
    (2/2) benchmarking "String"...
    done (took 0.215065966 seconds)
  done (took 0.967618788 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.107271881 seconds)
    (2/2) benchmarking "String"...
    done (took 0.146755115 seconds)
  done (took 0.906655518 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.139240681 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.173239558 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.150166791 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.134756312 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.152187788 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.13380689 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.151929656 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.15060721 seconds)
  done (took 1.698115381 seconds)
done (took 4.844229912 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.532567584 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 1.017075006 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.675779301 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.20840646 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.360750833 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.322364527 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320702235 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.280132201 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.141421895 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.119122481 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.213232842 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.492771462 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.474340068 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.997668419 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.104435417 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.161926876 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.179823356 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.900775231 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.127261993 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.159621695 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.542166221 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.245933439 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.165977601 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.139784257 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.252847167 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.239780003 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.174514161 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.154658354 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.808542762 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.186658652 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.250111275 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.134016414 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.174770199 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.206044917 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.290304305 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.161793619 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.815306053 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.257073473 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.129698895 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.14928742 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.802548565 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.178157223 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.246851782 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.153892824 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.122319256 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.196165309 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.145721813 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.125909378 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.163896331 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.1487502 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.230935722 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.58426089 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.154320741 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.23542016 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.157302894 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.809685785 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.154011066 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.349024831 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.186495643 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.157116418 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.125680647 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.151622284 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.218878951 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.143145298 seconds)
  done (took 23.887465997 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.21247262 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.231234363 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.144846771 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.207655736 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.179521572 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.1449662 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.136327252 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.144208771 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.162544134 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.244845242 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.191644343 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.240158892 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.122417453 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.157697847 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.202348008 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.283759757 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.174221876 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.172929323 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.138671405 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.159228348 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.173696948 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.164157258 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.157712583 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.143457139 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.223380082 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.260396241 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.175791628 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.175547044 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.156116012 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.145847597 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.191255187 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.215854125 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.128509219 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.154439122 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.224704692 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.174918892 seconds)
  done (took 7.195830141 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.2332995 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.272513146 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.153673872 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.279765604 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.23850519 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.196710071 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.227435625 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.231744554 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.323474165 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.319380628 seconds)
    (11/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.253447872 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.212172442 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.177446727 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.151205471 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.14285832 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.129823212 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.143977596 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.881235666 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.221948824 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208168092 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.222837276 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.161320025 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.13130301 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.773160749 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.138216249 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.148785959 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.142370967 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.115337572 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.259319848 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141783323 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.53071665 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.151098893 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.144111063 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.181051026 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.255219676 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.17298792 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.185622767 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142707183 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.148889813 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.150120906 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.244264512 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165830235 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.14460093 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12857068 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.180136384 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.181247141 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.155504761 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152227738 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185063687 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.15022476 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156021237 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.96231099 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.246902766 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.188848317 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.151695617 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331497812 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.153536214 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.165760744 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.156326374 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.268380917 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.190014037 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.148736023 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.130525816 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.144517888 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.143176517 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.146218454 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.167467525 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.537662994 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.136380611 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.210924099 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.15918826 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.166723995 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.744043638 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.15771866 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.154445338 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.159244971 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.151462278 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131529575 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.152892767 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.129966527 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.154864386 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.12525678 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151823147 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.129477848 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.148916912 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.197135404 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.164247981 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.154081605 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.17568987 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.155237548 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.133069156 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178820994 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.147859585 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.136106135 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.225723886 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.16276581 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.124070945 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.162888451 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.194783638 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.151510817 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.293884369 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.134069773 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.172970808 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.148463572 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.162188571 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.162071657 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.129482247 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152209509 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.14408187 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.132488426 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.20971354 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.138130484 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.149764366 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.140645329 seconds)
  done (took 29.048615262 seconds)
done (took 60.78258646 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.416812431 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.115199216 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.11484575 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.133597366 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.114553324 seconds)
  done (took 1.628479501 seconds)
done (took 2.34455869 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.243498073 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.342532734 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.256113714 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.152359319 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.217107077 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.221784349 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.204965939 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.215580138 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.225028895 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.302836206 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.13170767 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.241644346 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.229267702 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.220308881 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.131825073 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.259976007 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.215029858 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.203396326 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.25922221 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152830398 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.167928827 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.154276951 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169345837 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.13547868 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.149099198 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.17014971 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.150226506 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.168683811 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.145060835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.153732957 seconds)
  done (took 2.444378437 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.19776195 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149880582 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.168795557 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.145102949 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166084597 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.135950528 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.167192979 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.151047071 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.171677976 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.151263579 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.163290178 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.136371741 seconds)
  done (took 2.43189291 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.145682562 seconds)
done (took 10.241099794 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.096067314 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.694652232 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.201102249 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.276066949 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.381129891 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.299377316 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.596673362 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.238446733 seconds)
  done (took 14.642140806 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.219560183 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.162611111 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.145457812 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.162273289 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.143706892 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.165148865 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.141977552 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.159224578 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.14234792 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.160526978 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.141082605 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.162034781 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.143541647 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.160439187 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.145678092 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.158106558 seconds)
  done (took 3.294885474 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.169473786 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.185360792 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.147297921 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.168276218 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.144776022 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.165275277 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.150539325 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.168559423 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.145035832 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.163168933 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.16638303 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.149476341 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.165179106 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.145325393 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.166239297 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.152065846 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.16204882 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.149521039 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.166208566 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.148637617 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.168808338 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.147549001 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.164971258 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.149783573 seconds)
  done (took 4.609968558 seconds)
done (took 23.272785807 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.202563817 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.152760766 seconds)
  done (took 1.095014806 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.204900079 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.224180813 seconds)
  done (took 1.17394286 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.168620745 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.158085326 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.172420041 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.169464706 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.143445476 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.159489974 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.184394887 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.143185596 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.159896102 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.143856352 seconds)
  done (took 2.350837911 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.146838994 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.162458857 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.157548736 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.211409635 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.151149738 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.163427975 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.166713868 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.146120328 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.163803931 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.142725342 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.162850178 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.159976 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.163490972 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.16138393 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.164113118 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.146773832 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.168481062 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.16234334 seconds)
  done (took 3.6518595 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.142195596 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.142813482 seconds)
  done (took 1.033351518 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.145037578 seconds)
    (2/7) benchmarking "second"...
    done (took 0.157396132 seconds)
    (3/7) benchmarking "month"...
    done (took 0.144239012 seconds)
    (4/7) benchmarking "year"...
    done (took 0.15973819 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.142458897 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.158635606 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.142061082 seconds)
  done (took 1.80193466 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.622079107 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.275646505 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.429059589 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.12529226 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.139193958 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.371264111 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.15835184 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108470847 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108079665 seconds)
  done (took 3.117886499 seconds)
done (took 14.971415011 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.14409926 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.231513868 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.666679191 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.166346293 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.161147866 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.204927596 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.372170372 seconds)
done (took 2.70831647 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.379212259 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.187730926 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.12235271 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.146494747 seconds)
  done (took 1.587042388 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.134284045 seconds)
    (2/2) benchmarking "read"...
    done (took 0.166491144 seconds)
  done (took 1.062177949 seconds)
done (took 3.408976589 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.160542482 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.160789022 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.145976803 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.162292286 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.145757013 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.163794781 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.144528085 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.160497225 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.145574238 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.160113378 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.144298238 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.162868966 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.142741616 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.164231569 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143900981 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.162926306 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.144515235 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.160938482 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.142558422 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.164528744 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.145358708 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.161445531 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.164753981 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.146816784 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.162752749 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.146622137 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.161092273 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.144051069 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.162270286 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.14661634 seconds)
  done (took 5.379385744 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.174471279 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.160517689 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.14588573 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.168421207 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.139824345 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.141374612 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.156632209 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.139890973 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.162398724 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.142526853 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.162041486 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.14251931 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.281639516 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.143868924 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.161473047 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.168651405 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.168718871 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.140034358 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.158404013 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.142906301 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.163389981 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.140497405 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.160422844 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.142347152 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.160694317 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.140364777 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.159278355 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.142097818 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.159497307 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.142790854 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.164799868 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.145355076 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.159031746 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.152727173 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.162584571 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.143026847 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.16614983 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.140222022 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.160852927 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.14049552 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.156528145 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.143125602 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.138617348 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.166805709 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.142309437 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.15965033 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.139905011 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.162351791 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.143318156 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.162854997 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.139078999 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.157970158 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.14417888 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.160688521 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.145275737 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.158158031 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.143291406 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.157847587 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.143499045 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.161765124 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.140110625 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.157381466 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.148365026 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.162279993 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.159164863 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.166492192 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.140107063 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.162283626 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.144453774 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.166433245 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.144817927 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.171841615 seconds)
  done (took 11.907142452 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.14455246 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.142102777 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.160286934 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.144625724 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.161350476 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.14294632 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.161374362 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143501139 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.160906215 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.142746365 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162071377 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.142741825 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.161330432 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.14329853 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.160589765 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.1440686 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.161198083 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.144549457 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.161040939 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.143645291 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.160643054 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.143528657 seconds)
  done (took 4.108924954 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.287823263 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.151397675 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.212101693 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.177803127 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.162276851 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.175189876 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.147036435 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.16802828 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.149059737 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.172274282 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153044462 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.168705741 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.182386182 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153897294 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.172121888 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.154434722 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.168286554 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.154397917 seconds)
  done (took 3.88848526 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.14554693 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.142653057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.162204216 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.143024821 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.163468553 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.144151711 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.162866102 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.143405317 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.162885518 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.143986676 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.161835035 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.144215755 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.16290193 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143557222 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162757638 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.143701793 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.162639676 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.145017184 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.163555645 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.144474238 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.16262026 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.145882517 seconds)
  done (took 4.138726719 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158602501 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.165523213 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.165184692 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.168036732 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.146189121 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.165129658 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.152216843 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.164627778 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.154801808 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.165411607 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.145488543 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.163671162 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.160683352 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.164641607 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.152263287 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.16674823 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.146070042 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.165431023 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.147674505 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.16471983 seconds)
  done (took 3.971026065 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.239353482 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.182346861 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.182708429 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170045437 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.182405249 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.162068235 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.188502183 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.162430363 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.181451985 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.192220323 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.161364654 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.180499559 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.168621024 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.18786537 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.161563562 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.190636672 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.189658476 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.170454428 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.181157254 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.162748978 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.192460229 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.181593553 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.169078624 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.182021541 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.161317022 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.182730639 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.162111187 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.187322284 seconds)
  done (took 5.80656339 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.157673123 seconds)
    (2/2) benchmarking "in"...
    done (took 0.174960308 seconds)
  done (took 1.125698247 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.148602347 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.146272162 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.168326852 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.147490614 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.167126769 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.14657248 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.16841555 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.146749248 seconds)
  done (took 2.030004095 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.21221295 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.236719837 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.173874415 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.15879666 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.236213068 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.225671504 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.227734337 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.15091123 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.167810236 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.139350891 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.229705258 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.137919144 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.168034637 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.168160909 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.147553121 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.172711488 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.147567299 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.174697704 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.1534325 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.167845785 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152348214 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.173135424 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.148537464 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.176523495 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.141119761 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.171184757 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.151903884 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.178415705 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.14316632 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.168885861 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.146400251 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.169133449 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.149699483 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.171798173 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.148459521 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.236301278 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.176667718 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.143636701 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.169996059 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.15101697 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.200796554 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.148041172 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.1698195 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.147164664 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.172169171 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.150666715 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.172351317 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.147600474 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.159958958 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.162645264 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.149704233 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.142419927 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.16845969 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.167852071 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.150443014 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.174423367 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.149408245 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.164487747 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.144201578 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.163540839 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.14671761 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.165033277 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.150279585 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.171250129 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.149415369 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.169487614 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.147496968 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.169899399 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.147789813 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.181401211 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.146579394 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.207471425 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.149283439 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.173565996 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.153117656 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.168991532 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144760098 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.173799964 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.167243823 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.149960411 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.172950555 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.175819844 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.171282814 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.144227769 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.166950979 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.154999319 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.170498636 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.151734519 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.16253694 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.158077015 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.170904484 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.149539617 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.162235296 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.147978594 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.164327321 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.150895794 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.162620051 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.149090119 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.169851907 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.153881579 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.174296955 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.146088619 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.172568244 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.153763269 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.174895355 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.147971889 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.21693869 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.167376522 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.145260162 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.171272059 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.155021808 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.164014153 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.149232943 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.168307716 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.145669921 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.166281061 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.153970977 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.171520065 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.1504845 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.174189329 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.152312665 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.1730183 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.151472684 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.168371621 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.14607039 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.175364968 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.156297879 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.172729088 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.150234747 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.170628682 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.149106042 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.170178764 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.153052633 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.168272237 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.153476011 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.16783056 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.148792245 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.172024739 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.153197484 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.171191393 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.145338733 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.170104312 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.152035814 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.170186027 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.152173332 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.172018383 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.14391914 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.162723905 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.151765248 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.166205423 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.15066476 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.178092898 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.166254661 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.152583579 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.145536175 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.17976441 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.16705169 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.154753129 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.172452656 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.155600373 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.174909812 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.142151107 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.167899214 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.15216104 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.171754662 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.146970854 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.170585379 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.151639395 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.177355863 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.143468244 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.173215882 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.153435782 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.167388395 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.154178824 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.171178751 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.152786119 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.166091861 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.188587389 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.182667433 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.154896094 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.171660307 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.151064671 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.174668371 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.148918449 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.174504384 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.155543383 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.176762352 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.147889407 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.170535373 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.154538227 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.168047976 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.150838734 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.171609323 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.151227401 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.162771886 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.150771058 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.163994248 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.154103815 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.17318599 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.1542157 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.177364035 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.151925535 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.170593551 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.158385365 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.168224185 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.153129249 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.164382077 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.155819116 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.181042087 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.156906685 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.176938702 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.152239681 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.170693145 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.150233699 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.180142321 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.15179563 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.172761005 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.150940563 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.16449927 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.143406016 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.178815895 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.152885642 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.167841595 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.149734334 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.173449222 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172865139 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.14930467 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.163064731 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.15498151 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.174640504 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.146523171 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.171809209 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.147538175 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.16966557 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.157272584 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.164438648 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.147817959 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.174118441 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.154465103 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.171028872 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.152025129 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.174697145 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.157012145 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.174716492 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.152082119 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.169647411 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.158577149 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.170843513 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.148966778 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.169270408 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.153434455 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.166961595 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.15240269 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.173171602 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.148905388 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.168960592 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.154352031 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.178040518 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.156120063 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.170877945 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.154591516 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.177676505 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.155877643 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.170375576 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.155493027 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.167987633 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.143392746 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.170715634 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.1433734 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.174744987 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.149444493 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.176017844 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.149554283 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.171647525 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.154431719 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.176272555 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.169882846 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.158045796 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.182672811 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.145917438 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.166068115 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.150489877 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.170788478 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.149092842 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.168102941 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.15378485 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.174495444 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.155404538 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.174107615 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.148387864 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.173253526 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.156695136 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.170434732 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.158169346 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.177387361 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.158354215 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.168753652 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.157698615 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.170318866 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.154479141 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.167073969 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.152285496 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.172472072 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.150099394 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.169644059 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.148924524 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.170205443 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.143211089 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.168932096 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.156278532 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.173534079 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.15383765 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.17344545 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.170698941 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.150191515 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.167286846 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.159337162 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.170425583 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.159195523 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.171274504 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.146018917 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.165820598 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.158113612 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.171585297 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.157720127 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.166275334 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.156796545 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.17762126 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.156021726 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.172069297 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.16185899 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.179701204 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.159299796 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1775246 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.145440492 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.170325919 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.155823028 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.172425069 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.156160431 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.173821476 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.147059623 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.174629819 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.158660539 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.174569685 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.151138284 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.166926185 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.154808094 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.178863667 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.157393758 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.174799463 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.152979999 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.173364993 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.148897496 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.176655984 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.161245085 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.176194194 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.158288075 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.17344538 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.155701783 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.170999329 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.15733998 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.175072054 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.147696924 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.168067252 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.151065929 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.178953762 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.148635801 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.177469006 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.156552939 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.170487113 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.15096822 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.177759825 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.150734391 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.177593324 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.156267497 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.171795868 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.15958859 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.17621752 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.150980163 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.178991058 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.156208272 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.16760197 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.151953122 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.173001399 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.158564507 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.174195335 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.156989517 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.174914771 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.156712805 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.177951679 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.155435199 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.179113699 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.155885954 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.168062014 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.158915879 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.177153115 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.154247478 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.172445811 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.151353256 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.169987259 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.150935884 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.181686442 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.148863902 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.182310683 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.177759406 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.151732284 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.17291305 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.160171765 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.171811443 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.160209759 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.170580281 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.156531568 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.168368547 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.15685158 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.173083811 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.15839172 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.172168192 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.14810801 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.179145826 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.159302031 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.178648626 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.157127383 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.180899819 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.146893191 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.168333138 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.155769878 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.171756339 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.162292915 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.177283089 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.151855414 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.174510949 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.154240284 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.175113679 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.159102844 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.169048941 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.150182646 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.175654111 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.155266811 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.174355273 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.149525718 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.181009331 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.151937408 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.176823533 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.152926221 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.170621068 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.151983573 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.18225069 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.152366722 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.171016929 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.150555528 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.18127375 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.172617831 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.151594068 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.168532326 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.159828705 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.178569636 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.161317232 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.172415291 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.155861371 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.174375247 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.155273726 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.181396601 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.152269363 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.17647754 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.154460633 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.179947464 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.15987508 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.167225664 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.152057745 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.183677338 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.158093707 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.178653864 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.156540786 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.175699648 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.160367111 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.182243705 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.156182291 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.170819278 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.14855255 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.17612533 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.148298816 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.178555597 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.15975593 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.17532453 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.151882373 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.180474067 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.158018139 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.177823032 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.155859904 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.169848275 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.159403091 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.173603431 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.157111041 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.169558224 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.147861331 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.177801032 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.160253968 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.175103063 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.153964691 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.177369064 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.155960125 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.171865361 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.151928189 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.180805046 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.156853536 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.183842163 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.154223662 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.177072448 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.157178927 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.186128767 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.155806335 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.178228041 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.160392883 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.182483331 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.175665635 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.155869752 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.179851502 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.160775053 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.17801733 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.160355517 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.174138066 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.154438144 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.183328201 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.162787251 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.18598238 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.154293782 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.172128104 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.159438082 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.176589006 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.150136271 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.181227794 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.160372209 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.182260887 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.155304735 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.174362327 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.16301668 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.182093058 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.155348945 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.17476091 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.153322081 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.182649972 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.152516113 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.18188975 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.151628988 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.185491326 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.161276026 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.183166309 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.185772925 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.150887205 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.183203185 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.15877459 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.18447695 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.155744525 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.170051722 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.150745357 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.178040797 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.162021371 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.182951966 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.158870552 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.158996057 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.180868322 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.177765343 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.157171384 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.173922536 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.162515289 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.182410696 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.156502374 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.179193946 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.155480526 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.177742155 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.156188647 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.183536747 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.164250496 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.178165953 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.165283169 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.181691261 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.154279186 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.175127996 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.155715193 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.178723844 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.15695299 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.187205231 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.152008576 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.171478719 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.160700882 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.185587217 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.15485824 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.184801433 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.162405708 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.176691044 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.15807066 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.184196957 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.159580698 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.178658264 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.158533987 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.180168302 seconds)
  done (took 98.9156369 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.205555958 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.188016716 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.157053421 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.181990601 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.173444263 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.183587731 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.157284387 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.18169636 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.159743778 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.190555727 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.157348989 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.180662569 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.195022286 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.179439089 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.19742741 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.165992267 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.180950385 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.158742602 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.181464905 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.159004089 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.193814101 seconds)
  done (took 4.617876198 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.15891581 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.156073618 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.181688258 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.156518018 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.180630721 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.158527981 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.180233254 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.157129549 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.180760976 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.156469618 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.17983488 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157406749 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.180966658 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.156223498 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179426099 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.159108361 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.180514226 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157272653 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.180097832 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.158420285 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.180210067 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.158700488 seconds)
  done (took 4.587015849 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.186960437 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.183421998 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.156125929 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.15729598 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.182643128 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.157440342 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.185824958 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.157719777 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.187965244 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.152359808 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.173066002 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.152328798 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.17976881 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.158261536 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.176915863 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.158411695 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.188294336 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.161691651 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.185687719 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.157883136 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.173690383 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.157936635 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.183293001 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.150183134 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.186732405 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.162255689 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.184649668 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.161935816 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.173705469 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.161293206 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.182355591 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.153515681 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.173835024 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.150370239 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.172127405 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.16143687 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.183889236 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.159260615 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.181148455 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.152527147 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.159466927 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.186536081 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.150908227 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.184009293 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.158002634 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.176139019 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.161576482 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.182331078 seconds)
  done (took 9.022612582 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.186848482 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.220167942 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.161491626 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.21254721 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.197812654 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.168295145 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.186850577 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.188661491 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.188765415 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.161431283 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.198571411 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.198038452 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.163751061 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.188485073 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.164836045 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.185872239 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.164491239 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.184532055 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.167168255 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.185356811 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.166324782 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.188726374 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.170772834 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.19560581 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.186976291 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.162852064 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.185563402 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.166542966 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.195267848 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.168049932 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.190921905 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.166000928 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.195692762 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.161244806 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.185298633 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.164180096 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.195666083 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.188976126 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.165605067 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.184721256 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.164123594 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.18923419 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.16502748 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.199476484 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.163191981 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.188561129 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.16444207 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.184202195 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.171247265 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.188771212 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.192755098 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.174547615 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.189890348 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.164181423 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.190412761 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.172022853 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.187855173 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.163127658 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.188650176 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.170387659 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.184881332 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.188191459 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.176101304 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.187164793 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.168648262 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.198176668 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.164978451 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.18992066 seconds)
  done (took 13.279999573 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.194566851 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.191113758 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.174075488 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.198951347 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.168732071 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.192038667 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.166654642 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.191345771 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.189759605 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.173662516 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.191884526 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.301889228 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.169615494 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.197949684 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.167625925 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.449552069 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.167397195 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.191291295 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.168020249 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.192004933 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.191761815 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.175169202 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.191384812 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.173834187 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.201693944 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.164154953 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.190513822 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.189138577 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.176218428 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.190668869 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.176831915 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.192700971 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.166455455 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.199369486 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.201927005 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.167673976 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.18614944 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.168004814 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.191709574 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.168828872 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.188446031 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.174182136 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.192213269 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.164737639 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.192091257 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.166799424 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.198246509 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.201927354 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.172149126 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.197193162 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.168786198 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.199028033 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.191147422 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.170480757 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.199956084 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.181815369 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.199578102 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.198590547 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.169430903 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.199959716 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.174695958 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.20607432 seconds)
  done (took 12.728061089 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.164360077 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.162834883 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.186749097 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.162440559 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.186855885 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.161930787 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.190248285 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.162750725 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.187766964 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.163795899 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.187013097 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.162931613 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1866949 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.16321 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.187493675 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.163563048 seconds)
  done (took 3.706229542 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.180777039 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.203470567 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.26943566 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.166710864 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.191234583 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.172211984 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.19008758 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.16572694 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.187941497 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.168391315 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.191267199 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.166437715 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.206152751 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.165146489 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.187558139 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.165224432 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.187137415 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.166937499 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.18750478 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.271562256 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.167829652 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.192001581 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.165642922 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.195336571 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.164861049 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.192701251 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.168825379 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.189070412 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.165175892 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.189116227 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.166095423 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.197834794 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.165297277 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.192909378 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.164835347 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.190290189 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.164302667 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.191329987 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.166204166 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.189477307 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.166620351 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.191190933 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.16367661 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.191544888 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.16300774 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.190322247 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.163635473 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.194487302 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.165864109 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.19074751 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.165103816 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.197387391 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.192910356 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.173213508 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.194561124 seconds)
  done (took 11.005183481 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.176463152 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.188677066 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.176850213 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.186656697 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.165752782 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.189139554 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.166019226 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.191334736 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.166895245 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.187074906 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.166218902 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.19077398 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.166407055 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.189633053 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.16633456 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.190605942 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.16398915 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.190589809 seconds)
  done (took 4.153051516 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.163369448 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.161738794 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.188162406 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.161976953 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.190099034 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.162437137 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.189105752 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.162551956 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.188962507 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.163665505 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.188369206 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.163276978 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.187538234 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.163776763 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.187272837 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.164374045 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.188079085 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.164113956 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.186647338 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.164474337 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.18751337 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.164787995 seconds)
  done (took 4.780269475 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.176300212 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.266074129 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.193922774 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.248834646 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.188569371 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.185243179 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.17207251 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.18672563 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.177505533 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.185128361 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.159789105 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.184173769 seconds)
  done (took 3.268977291 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192629663 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.226307829 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.167385113 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191970292 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173899698 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196189893 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169368465 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195360318 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175692803 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.205334701 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194444 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179313585 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.20252324 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175136727 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197977061 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197972871 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170985989 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194208635 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166995817 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.208394727 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17002218 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200576205 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170675195 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194326178 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192885003 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.178524238 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201052871 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.182340296 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197734362 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177106111 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198449538 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194827429 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.177236924 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.206040447 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166031308 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201007684 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170393107 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.209627355 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198245462 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.178238657 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.190198209 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.175432365 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.202742961 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.174755254 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201994123 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194813112 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174456193 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196015709 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17070411 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.216206404 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198739099 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.179048467 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198058356 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176939191 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202262103 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.215167166 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.182789236 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.204065755 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174492301 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.206209882 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.202416383 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175032104 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.204535856 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.181561985 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198995836 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.202477494 seconds)
  done (took 13.496306339 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.205266536 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.192201886 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171701234 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.209104244 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.178491552 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1957112 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194317448 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171591444 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195189137 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168382166 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.237465393 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17187046 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.204802371 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.204547519 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171928707 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194631943 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171714853 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.205938269 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168553627 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.217195496 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197325093 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179564245 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.203241487 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.177615185 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.207704695 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198906299 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171693621 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195138292 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171605551 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196592527 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176479286 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198449816 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.179134721 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.194883302 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202102586 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172760307 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195495111 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176994504 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197189182 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175725279 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.204581183 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184865896 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196211753 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197157962 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181766201 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197670458 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172981844 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193996527 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171536339 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194304806 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.183017896 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.207116422 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.208979578 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.178795851 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197760832 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172330015 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196284598 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.172961101 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198495563 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200593036 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.180291781 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196967645 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192592787 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197636166 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171693691 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.20432759 seconds)
  done (took 13.51139073 seconds)
done (took 240.185841795 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.317141167 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.348187643 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.159186165 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.260605696 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.157751345 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.905860095 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.689112072 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.252509066 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.185293396 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.158291428 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.183392106 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.17650387 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.564056086 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.158722349 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.184214277 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.172722034 seconds)
  done (took 31.830675606 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.356683347 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.402892435 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.174126053 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.189619643 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.164429919 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.19019772 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.161596457 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.191034907 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.164334166 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.193471949 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.163114807 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.186019814 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.193994432 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.16153388 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.187940101 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.164698597 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.1928204 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.164772979 seconds)
  done (took 4.574568666 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.184683261 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.238949939 seconds)
  done (took 1.400011412 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.193736927 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.287302387 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.390303963 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.238321577 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.184140665 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.206949641 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.238700536 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.177039552 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.278811223 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.200481639 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.1839273 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.187146284 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.188847339 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.195330705 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.20217976 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.165075321 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.21685048 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.179313515 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.202164396 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.165605696 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.214158728 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.165733226 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.1951084 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.178939375 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.270489425 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.201226637 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.167636401 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.190305974 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.166349505 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.203188269 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.170594809 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.205863329 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.19907329 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.249381154 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.169578617 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.244244049 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.192489352 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.166145429 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.201556496 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.165223873 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.192137841 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.168042389 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.200583329 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.163250788 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.187632868 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.168839976 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.189050297 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.165381994 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.199069868 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.167508102 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.197582039 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.196240248 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.215643065 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.194690889 seconds)
  done (took 11.775272749 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.010516281 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.212235299 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.191306171 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.163135201 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.21624363 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.178421711 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.010781748 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.19388541 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.318544069 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.091427548 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.179688702 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.199787557 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.307581851 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.349780443 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.371439762 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.421962318 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.863578742 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.177436041 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.222880647 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.234392795 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169238141 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.208068987 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.204283729 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.487428743 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.192078755 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.164395137 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.196559632 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.196008794 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.217760164 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.192685397 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.191353873 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.265802097 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.338786517 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.301220008 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.165773874 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.189237751 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164817886 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.254300075 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.333627482 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.307782784 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.233458669 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.186911897 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.163918401 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.195119645 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.178657565 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.189846767 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.251075434 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.261017131 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.262404597 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.167346071 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.198825214 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.198251747 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.170349736 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.246564175 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.188165758 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.430097361 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.430264421 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.192548717 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.170148313 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.204589355 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.332568967 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.191688971 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.302861488 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.211868911 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281454577 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.165262356 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.890550817 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.228358998 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.191797644 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.193667994 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.171842523 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.195136825 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.169881449 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.248941783 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.490145221 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.172532903 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.194761847 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.16501903 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.301412561 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.192819841 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164889543 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.24871382 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.192851899 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.170586846 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.200254515 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.17126263 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.259512051 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.340753877 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.198730579 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.197997176 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.172627119 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.200437569 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.167388045 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.300610992 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.295524452 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.244394207 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.295858573 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.198221366 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.251953339 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.255175047 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.170385493 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.257978337 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.196325176 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.178365559 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.195634305 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.291564032 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.228798997 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.192823752 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.172747596 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.197216909 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.2039795 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.196015848 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.171503793 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.255634533 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.548000552 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.254027275 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.190541199 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.171547373 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.198773112 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.248058359 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.172700453 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.352497339 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173582548 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.257038552 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.195745842 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.165283169 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.196024928 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.250653523 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.17455397 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.19856736 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.169758319 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.201787532 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.34858979 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.288653955 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.199399589 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.315937522 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.262658331 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.172816529 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.26437496 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.196388242 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.253700209 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.176521469 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.195888947 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168632268 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.869113523 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.204871723 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.171020211 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.197331239 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.277409439 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.166441417 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.195930432 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.167270503 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.191066127 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.865137948 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.169743583 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.192120171 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.169175074 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.197839823 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.196730883 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.173827063 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.197034273 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.250850894 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.316015535 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.200266948 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.171583691 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.191713416 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.221145859 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.197451995 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.191674304 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168993766 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.187045573 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.198276121 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.197054667 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.171061487 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.25962233 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.249520278 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.298985646 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.67180638 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.168507531 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.19236685 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.311059248 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.167280769 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.420128845 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173641285 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.33050802 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.251993497 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16714842 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.425339074 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.253693503 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.274105946 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.195586044 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.260605696 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.166120775 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.198929906 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.249816824 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.168491538 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.19902496 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.245471159 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.176627698 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.200416058 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.325665995 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.167393912 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.315772837 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.192269143 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.26131214 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.168341728 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.199305721 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.395265767 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.193598292 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.17971154 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.249820944 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.199631043 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.168678503 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.957460512 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.195633887 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.175938085 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.199767024 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.301930644 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.252115789 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.201521227 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.175819425 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.203146853 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.252790317 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.301802206 seconds)
  done (took 63.040560397 seconds)
done (took 113.58837643 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.438015476 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.237143564 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.435784258 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242820264 seconds)
  done (took 2.422142438 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.355584115 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.209745876 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.312259471 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.190351859 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.31853925 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.166311094 seconds)
  done (took 2.573839453 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.237109272 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.236376428 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235192828 seconds)
  done (took 1.739279974 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.277198239 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.281487542 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420872375 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.335874765 seconds)
  done (took 2.398131075 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.347114183 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.18321003 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.224615715 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.297119417 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.314219497 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.276620442 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.191175917 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.244127064 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.224574787 seconds)
  done (took 3.358775093 seconds)
done (took 13.513419899 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.208701469 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.22514993 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.190609225 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.209461971 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.198859087 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.227874927 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.196906814 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.224376577 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.197274737 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.207584847 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.194689981 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.204352384 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.28943527 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.196487277 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.207289838 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.19452767 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.207098891 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.205560149 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.224944876 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.20402385 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.200476611 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.203503952 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.179647845 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.213275445 seconds)
  done (took 6.030313562 seconds)
done (took 7.058479643 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.274564593 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.185043852 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.176066733 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.20709512 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.286491948 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.184131236 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.222384774 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.177453013 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.215088874 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.176799019 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.193321721 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.19138111 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.203756707 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.278180626 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.180095179 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.195934763 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.167691087 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.215871515 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.192945206 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.220202024 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.285990558 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.172848726 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.215252372 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.167992242 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.287761523 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.171666243 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.206412352 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.204553736 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.191186743 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.20337663 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.180048454 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.192580425 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.196360794 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.219023453 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.168847379 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.203999545 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.170596694 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.137256071 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.206565164 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.179138353 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.219299675 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.178509152 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.205829526 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.168420998 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.205212688 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.20271677 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.170931024 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.205560777 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.169689805 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.204159551 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.174346542 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.21973318 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.178947616 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.194143543 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.169372446 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.194993581 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.18912405 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.196109296 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.193025524 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.196821188 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.170555557 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.194902509 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.180797781 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195599454 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.179127737 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.195380083 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.179176277 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.208070663 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.179085133 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.199845386 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.170720103 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.203490751 seconds)
done (took 15.234520745 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.174389425 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.243378645 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.281036925 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.259974889 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.22971762 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.214068423 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.185056913 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.222094025 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.205358447 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.216320875 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.20575326 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.229693105 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.294801525 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.186134424 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.214039299 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.181569667 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.209778772 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.176742867 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.287937453 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.226400508 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.221138805 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.185953046 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.22393511 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.19009198 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.200897684 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.198170662 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.205808155 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.181743362 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.201612649 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.191996622 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.223380571 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.199821849 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.179581147 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.219293389 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.19297887 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.211145985 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.185528271 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.210602619 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.173704631 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.201324275 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.179606359 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.218271402 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.17432091 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.214817262 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.208734365 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.192937454 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.208513597 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.189223085 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.201225169 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.182934576 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.201127601 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.201142897 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.213552017 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.192944927 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.21491029 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.193744609 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.215362233 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.18812518 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.20646117 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.188456716 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.20492117 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.175145247 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.202412472 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.192460159 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.204665063 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.212788092 seconds)
  done (took 14.661050613 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.192281365 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.233039551 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.185043782 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.213791922 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.1784574 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.196361353 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.167431347 seconds)
  done (took 2.421653549 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.170475309 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.299307056 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.296226497 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.297067804 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.290811493 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.303745888 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.19491494 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.197246592 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.209391781 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.20992921 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.299839526 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.331266916 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.181070931 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.214751052 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.300082923 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.169945563 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.299245596 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.279220005 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.184971916 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.297564795 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.218306252 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.231560312 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.184235788 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.197936833 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.26171275 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.202183671 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.347884812 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.21788923 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.180869369 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.213009071 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.187100609 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.282315579 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.295524313 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.183540099 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.208472181 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.296075709 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.290225594 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.186113751 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.304878295 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.204508269 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.290894324 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.187010234 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.214664518 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.188259973 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.215362792 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.281086582 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.192654177 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.215602417 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.186033713 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.305450225 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.208615914 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.266448897 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.212927565 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.185671865 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.210703889 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.214876487 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.195546934 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.213109991 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.274630384 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.221909993 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.294849855 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.298005773 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.293738959 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.296878954 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.197237163 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.29684962 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.286180736 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.185295909 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.292737505 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.217423529 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.298478738 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.18574436 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.211623559 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.286556482 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.190134025 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.300485628 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.299923544 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.211241667 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.186224589 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.202135272 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.185233192 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.198185467 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.27109411 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.217902151 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.211646048 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.193743282 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.213640506 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.187675123 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.290531009 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.223617892 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.187053675 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.213315045 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.191762584 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.215309363 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.188280158 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.299577272 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.213231375 seconds)
  done (took 24.008573088 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.174869724 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.172347406 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.204931437 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.200113715 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.17531587 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.200644509 seconds)
  done (took 2.221557225 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.211977864 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.215460081 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.197058649 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.216115401 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.238856351 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.301698351 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.309146016 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.211996861 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.205959291 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.227560292 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.310182182 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.3083478 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.307605736 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.192082876 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.308778861 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.219902196 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.309656486 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.186524907 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.225134844 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.18607017 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.216747604 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.191199733 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.213546569 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.297515487 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.188827364 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.219721028 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.178872816 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.226618343 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.195456559 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.211710023 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.190569764 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.21690789 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.207242905 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.185013262 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.311247611 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.20801025 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.186044329 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.219265941 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.190691358 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.21676276 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.310110454 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.187068342 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.223207783 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.190971003 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.211350898 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.180429648 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.219390049 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.18030582 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.310472372 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.222301383 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.191147072 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.218926234 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.189037307 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.221496323 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.20752213 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.184342506 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.218818469 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.313320639 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.192359936 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.211043318 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.189115949 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.219243313 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.18308264 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.221385136 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.189145352 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.220117028 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.18108029 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.219977415 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.185189681 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.218178652 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.217666925 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.190837466 seconds)
  done (took 17.070885342 seconds)
done (took 61.427710536 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.689796517 seconds)
  done (took 2.784844847 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.200050719 seconds)
  done (took 2.297114947 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.589527063 seconds)
  done (took 19.722781717 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493215443 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.422132032 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.11642996 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.245794595 seconds)
  done (took 3.377733788 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.164853086 seconds)
  done (took 2.280593573 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.49003075 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.352225308 seconds)
  done (took 1.947087825 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.908428369 seconds)
  done (took 2.028556704 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.840044464 seconds)
  done (took 2.950450753 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.366111151 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.291408286 seconds)
  done (took 1.776925962 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.690530548 seconds)
  done (took 1.814372414 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.621539722 seconds)
  done (took 14.746606256 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.325929855 seconds)
  done (took 1.452324349 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.361521741 seconds)
  done (took 1.49241192 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.798912418 seconds)
  done (took 4.92879737 seconds)
done (took 64.712403374 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.189837897 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.217691789 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.191730038 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.217025852 seconds)
  done (took 1.929588811 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.193338832 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.214688124 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.193322 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.214405757 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.195502096 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.216159401 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.187660456 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.218872596 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.18783031 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.217486456 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.189393637 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.215084335 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.19253419 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.215025319 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.187083916 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.217829726 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.191250578 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.217619434 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.189725593 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.217405719 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.189126424 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.219757973 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.191259936 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.221174704 seconds)
  done (took 6.017804289 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.185840392 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.202983284 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.182359642 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.203449475 seconds)
  done (took 1.902300915 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.200102821 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.23152162 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.202762516 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.225494038 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.204129868 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.230728154 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.187950786 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.21500248 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.188606246 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.229450197 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.204698796 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.23481303 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.229309048 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.19527581 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.230348566 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.18543175 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.220458901 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.202547754 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.226503663 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.201864357 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.222672521 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.196902064 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.217330291 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.199710522 seconds)
  done (took 6.208735412 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.266290427 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.231729118 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.216285814 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.248118633 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.185815528 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.245720214 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.263805963 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.195641638 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.223582832 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.193721423 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.218807713 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.188311725 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.273045476 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.223089542 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.193129797 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.218736894 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.19882249 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.222437574 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.231916224 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.223153587 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.193923683 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.230576039 seconds)
  done (took 6.024090913 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.2801681 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.211376601 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.177218276 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.208967845 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.219612633 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.18342521 seconds)
  done (took 2.418440083 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.180256861 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.173094986 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.20509738 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.173596516 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.208036791 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.174667184 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.203939761 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.173344738 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.204822973 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.175383336 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.203175278 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.173262466 seconds)
  done (took 3.390069855 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311081109 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22267252 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.356521035 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.473267724 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264838706 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262389233 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.380954241 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233339099 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.282256145 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239251653 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284855567 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233761151 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.257001397 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.30990596 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215106055 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.249107655 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272906352 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30410627 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245742073 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.341431896 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260763607 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.279877001 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.264121017 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252550132 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.239677685 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234851443 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.223121809 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19925334 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270008009 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269019196 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275639172 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251026405 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216777636 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29261689 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312648697 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276063387 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.370806302 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234780345 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.233283855 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.295659245 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.333573704 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245064823 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.293995207 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254774018 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202662923 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.317873174 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251244798 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.256953556 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.235635551 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245958582 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283190342 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250996443 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.273615311 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238805298 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.402871413 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206052879 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.243973832 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281889338 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291906883 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272851317 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284591637 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.225966374 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272029355 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29570108 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316315504 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.213009559 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.267052954 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225190228 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238142573 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.313261414 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28552765 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263368687 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.289725391 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201930008 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275940676 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.269651608 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223818266 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308174385 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276159909 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.220571485 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223145136 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236894719 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197192255 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.293853429 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221007783 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321663181 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204856497 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.275965052 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279620823 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22568247 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263348293 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262217842 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234240681 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.251705053 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.158333332 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246131159 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.260830096 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228449232 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23109028 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254038799 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212203731 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.227358801 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222136907 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.225991168 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270628688 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.196236337 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263522337 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242819845 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.236683449 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.28536059 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218807852 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.265937659 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269408142 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299379202 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201829995 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236380967 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326894781 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273808632 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.209468257 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275637495 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.303328656 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.208841641 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241438035 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266419912 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298214599 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21668817 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303063329 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241300657 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20618872 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.227188318 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277121972 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.231452897 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.262327283 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230202458 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.238337012 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290084444 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.231632598 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210598708 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285880278 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237518961 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196585753 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239623628 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236623875 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.217058957 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.25528805 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.209742594 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256175244 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269872866 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237820465 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259351695 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238569443 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272985622 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203967907 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.27523053 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251025009 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.192211593 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.279490709 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301632282 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200321703 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285479529 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.263874268 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281367903 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27768182 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203226541 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.28794786 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198665347 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.224620464 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263137233 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242089794 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266670713 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.29409054 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281202798 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.267584796 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.26715143 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220382005 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271986752 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.290709245 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25923932 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.21464594 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278659738 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271951762 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.1944484 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.2260124 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.199851043 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241396479 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202042452 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242420981 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281859656 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2663815 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.278701782 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241754276 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2417438 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.296943557 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.197455417 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263726554 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.283179865 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210492479 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.293901899 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294909639 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284822602 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212882937 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265915519 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.226448838 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199570351 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.237010936 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233568249 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.243477959 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240030663 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213484131 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.299143417 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272682092 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250785801 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292423498 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238259698 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.308406328 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.227131397 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.233049608 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270707958 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275006759 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.264523302 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234212186 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.263603493 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.296345576 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215153756 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298466585 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274489793 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28487219 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266138103 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.272213038 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23425416 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217077534 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266577475 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241813431 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233127132 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.247214328 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204615265 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252342005 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.241523311 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212013972 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288888622 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248560379 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278039407 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.227984858 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272953705 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230629398 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214897928 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280052722 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248669891 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.165465454 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270859164 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294503791 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221868228 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255656951 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274072841 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203132675 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.456746281 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287854063 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278912982 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20872773 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244100455 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.278013217 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230836477 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262852839 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.293764451 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213602931 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313034779 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.278911026 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.24613116 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204833938 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254348825 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253590139 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.200483385 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.258008159 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.266334218 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.219002081 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290903823 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241898498 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245541489 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285010894 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.250331485 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.2219373 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242931311 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.334120421 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272518733 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244596607 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.271963775 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.269736815 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288847067 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198454007 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230614452 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.206538624 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.294571188 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201520389 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283189364 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.270456878 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285055453 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282204602 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267977094 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213939007 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.233171061 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241702384 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254529504 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289483111 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240600359 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.210290568 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291810711 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.219047967 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206039958 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.267839297 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396092548 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220226538 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273890206 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.165994852 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.391309677 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.235028281 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204201875 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.26499557 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273784955 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.236828091 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.262105398 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284153732 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21315001 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.267018662 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238132516 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.283145853 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25544652 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272311165 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279110284 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.250602748 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235697221 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262397054 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277111915 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219494881 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.254016241 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263863931 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299640478 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.250385192 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.238933736 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274381959 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244636975 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278980239 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278860811 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212493921 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291296051 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234472275 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23704865 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244823102 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22974828 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234295087 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.271788333 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236712853 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275912809 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247316227 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238723932 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20198651 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252461853 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272800403 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213614036 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.237268161 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292762089 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.204027551 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290711968 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319080939 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202862109 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275614378 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24929036 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204339672 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244309349 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24837502 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207057825 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.280299261 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251505167 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.237951697 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279420449 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238168555 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270930752 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262414027 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248086367 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.344641243 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.234740326 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298573792 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225801619 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.325756019 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.257396698 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253483561 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.278270372 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256333365 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269296954 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221618964 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.330874897 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271662549 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.243696911 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240074244 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247828652 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213046925 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.240077038 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225358895 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277580689 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248822982 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.210687756 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.27620314 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249863408 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.222422977 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247887668 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.307680397 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225683867 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293260895 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.297168167 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245808493 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252333763 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279315337 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235740732 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.238118408 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27817455 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.25258673 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224628705 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.242011921 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.244628524 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291821397 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.234158966 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266441913 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250545408 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.279879026 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281194278 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.208971057 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288245175 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248528601 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284012932 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202804142 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.258480845 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246342709 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243263477 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.233362706 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.248808455 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265958192 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.274182423 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217800951 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.287353441 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30566827 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.200166166 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23935411 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392221734 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234956205 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303451438 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.227523906 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211962708 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254113878 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232946103 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.274725369 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28133417 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.203588878 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237460434 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.252148824 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.223780063 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.232742026 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246461788 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.293380045 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265216478 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297828237 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.210284981 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.363716364 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216330862 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281509192 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.210048149 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.203944021 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247491877 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209697616 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250429192 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.286698748 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326580217 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.239264574 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.256794247 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.24197693 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.202432586 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237630917 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236504935 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256945174 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278292442 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222239714 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.197897582 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215839319 seconds)
  done (took 124.164842473 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.32701009 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.259150134 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.313191992 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.326976287 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.310761026 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.422067918 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.334318421 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.391485956 seconds)
  done (took 3.956174944 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.196126965 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.26579658 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.249474252 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.22463534 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.189100234 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.560179685 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.244073844 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.194706533 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.27162267 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.232205715 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.188903351 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.651857824 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.227210527 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.226271441 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.229292706 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.185584423 seconds)
  done (took 5.600612061 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.260967753 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.651155989 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.293986547 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.379083332 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.34782831 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.294415372 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.922862048 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.277895883 seconds)
  done (took 13.698350887 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.25361172 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.285406126 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.46450893 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.392136318 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.305526981 seconds)
  done (took 2.978411012 seconds)
done (took 179.403438179 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.200792294 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.23373943 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.202146516 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.235146104 seconds)
  done (took 2.130195746 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.242169343 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.154600456 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.190184939 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.152824601 seconds)
  done (took 2.008918243 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.483190355 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154406366 seconds)
  done (took 1.935385848 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.223316038 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.245800811 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.212751286 seconds)
  done (took 1.969885626 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.214588252 seconds)
  done (took 1.497355075 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.197840521 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.226970413 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.292803924 seconds)
  done (took 1.999981493 seconds)
done (took 12.819732943 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.222996793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.057011021 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.665405077 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.212471782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.844377137 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.476798481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.543538043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.260747403 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.316548215 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.189015935 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.256430305 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.783873983 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.536411369 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.960269738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.519096388 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.960579554 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.806529308 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.189351663 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.229016623 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.191280749 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.527076383 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.187976697 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.222320799 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.188253268 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.80425751 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.498397806 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.221107447 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.005382318 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.189170145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.229833277 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.478986888 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.22039765 seconds)
  done (took 24.264032389 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1928952 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.280621928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.244547928 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.224858762 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.19811835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.224837321 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200797671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.236394935 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.327391563 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.190002444 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.245788379 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.188343643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.229523042 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.190018647 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.248769414 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.189755624 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.226049835 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.191065009 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.231822985 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.190882863 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.245311642 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.220881719 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.193199009 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.222001555 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.190300875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.2405382 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.190574862 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.234502586 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.18967824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.231132744 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.194803473 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.222553162 seconds)
  done (took 8.312122373 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.234405088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.291551112 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.245226506 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.26292303 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.280046925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.194028654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.314074855 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.261331487 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.301058186 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.224472609 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.212307655 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.223346489 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.262636191 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.192413225 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.248429567 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.190795352 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.225702374 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.191840108 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.231630363 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.192944018 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.245730899 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.189497841 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.225064863 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.190995238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.223121739 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.211931838 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.22345579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.23370437 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.192102711 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.232581182 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.196541683 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.223518647 seconds)
  done (took 8.661724302 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.203914548 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.237331996 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.216139148 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.246713705 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.201553913 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.236572333 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.205683069 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.805652102 seconds)
  done (took 3.647616991 seconds)
done (took 46.176129661 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.215378506 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.240696181 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.213161603 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.239914447 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.283878628 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.233997494 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.209256498 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.231751468 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.205780917 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.248382144 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.191650977 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.23316708 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.210350492 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.235984478 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.322093054 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.207701133 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.326450242 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.323762051 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.199018116 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.242083299 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.198881925 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.325547404 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.24077119 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.199893925 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.297750713 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.195506147 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.313785224 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.238617564 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.202429932 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.227522019 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.322734057 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.202481405 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.233273869 seconds)
  done (took 9.299364466 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.30148331 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.235727881 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.199046471 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.233746135 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.200882179 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.233750815 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.340981978 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.199871437 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.235038827 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.199521811 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.2329167 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.289262133 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.241508225 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.19401315 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.236332637 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.175332352 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.343026023 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.234275811 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.192143987 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.158694063 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.230538046 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.199670154 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.353036514 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.230602509 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.201195976 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.234311081 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.219700774 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.239451958 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.201590091 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.234647297 seconds)
  done (took 8.330857228 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.205627265 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.246451451 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.221922076 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.303245545 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.230780045 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.247861058 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.217016843 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.246550137 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.22159019 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.22822134 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.20906213 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.263557258 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.244955661 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.205520828 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.226572737 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.210960835 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.242027355 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.195373657 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.235069487 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.212593095 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.244857953 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.212527376 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.250156392 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.201946421 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.226353645 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.201322529 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.238065119 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.207270841 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.235199322 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.210471038 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.229074032 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.196284038 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.229766858 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.228753461 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.230459614 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.208117736 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.249097668 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.207901717 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.240838937 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.261245232 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.197034343 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.229116496 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.223609999 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.286466666 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.195061328 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.238295177 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.196993276 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.24283954 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.193351194 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.246067953 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.236752941 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.227582991 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.21541168 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.228051835 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.192791486 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.237180161 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.194438133 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.231342477 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.209549692 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.229204007 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.216129509 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.236737088 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.207049723 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.231379772 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.206652396 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.228220432 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.194625308 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.233326668 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.222749624 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.237284574 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.232162623 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.229190458 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.205505532 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.242400378 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.207312955 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.241867628 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.193015327 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.241360162 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.20558564 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.233590249 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.207488606 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.232735043 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.195526959 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.245629839 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.249674208 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.209792041 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.240160149 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.206343767 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.229671734 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.198055632 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.246285648 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.197314756 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.232542839 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.208889483 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.228873378 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.199318922 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.240041279 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.204784561 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.226281848 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.223340412 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.232261938 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.194694521 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.256414171 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.199006312 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.232500027 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.204575247 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.270919856 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.195197727 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.238468174 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.2064178 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.229649664 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.203500808 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.230847932 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.194623143 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.244443305 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.211673984 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.236341926 seconds)
  done (took 27.548604121 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.421418185 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.414076189 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.299755157 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.460017855 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.244910823 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.336856523 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.41118937 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.416094533 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.194906 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.266647246 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.288966844 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.376962252 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.196382654 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.259828083 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.418777276 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.499542714 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.226009956 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.271481729 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.267903062 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.210402245 seconds)
  done (took 7.819472015 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.204449532 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.262445385 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.217565515 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.246519757 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.207320987 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.243664994 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.196887537 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.251229154 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.207239203 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.236763768 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.199204452 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.237843863 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.209140353 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.244771699 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.210768003 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.253886685 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.202111595 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.231915036 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.219179268 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.232381017 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.21420601 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.256994692 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.23696463 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.216689985 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.248355953 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.207458644 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.227990305 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.198665486 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.236817825 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.205008332 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.229280204 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.20529552 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.236730453 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.169771379 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.207866517 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.247422036 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.202507665 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.232825836 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.202114389 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.233096262 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.208011997 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.242894994 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.20460032 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.236234371 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.216117916 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177368016 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.242732543 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.208486218 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.207490143 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.216475573 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.242629178 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.208643153 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.238266542 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.21589163 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.236816497 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.215629725 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.23830705 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.2083582 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.232557716 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.196171595 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.228611683 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.199924864 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.239475984 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.208259654 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.241475959 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.205184681 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.23995754 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.197230667 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.230712649 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.200900896 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.233373113 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.212290962 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.251314221 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.206210999 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.237624841 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.209100403 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.239895031 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.163111803 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.204821856 seconds)
  done (took 18.834435092 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.223712736 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.241156575 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.215264874 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.263908629 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.208913438 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.237128967 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.208414562 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.252775161 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.208266079 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.249621268 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.20992034 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.245002594 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.220230729 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.243851889 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.208686873 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.246656924 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.209428937 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.27024477 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.211116441 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.256988686 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.209242251 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.239156529 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.210663521 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.244294194 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.222251307 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.244257318 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.255623567 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.209359515 seconds)
  done (took 7.831706393 seconds)
done (took 80.959605201 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.556052135 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.772723333 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.45844922 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.46096665 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.46474185 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.50940619 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.458275456 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.474687389 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.095438952 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.434010568 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.458744649 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.462661907 seconds)
done (took 32.012509762 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.74659096 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.213586588 seconds)
    (2/2) benchmarking "String"...
    done (took 2.268831603 seconds)
  done (took 5.842697665 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.210730009 seconds)
    (2/2) benchmarking "String"...
    done (took 2.224204349 seconds)
  done (took 5.780544579 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.465439914 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.447430012 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.935682603 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.456908382 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.447905771 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.46067604 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.454965328 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.455590128 seconds)
  done (took 18.006642395 seconds)
done (took 36.189045619 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.475597421 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.786184612 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.721066555 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.434698785 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.453551461 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.448769149 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.450329822 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.528848675 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.454393188 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.435930715 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.984750016 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.751172059 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.452432533 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.886691387 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.435017121 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.452422057 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.458436859 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.851217463 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.450374032 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.438001997 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.449656832 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.435064962 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.450372914 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.467192371 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.466505831 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.459025621 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.505978239 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.455969995 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.785949735 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.486371277 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.437315597 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.468209261 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.50479422 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.455146705 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.463042473 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.465536155 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.790083152 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.465003057 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.435464664 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.455672122 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.786185799 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.48273059 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.452471924 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.453743525 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.435094575 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.519961861 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.437715368 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.64256146 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.473942392 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.45570795 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.479847193 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.862555148 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.461496675 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.463955717 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.45514035 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.808903632 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.457844884 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.576600558 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.484581105 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.463404599 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.453383143 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.460037761 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.503893477 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.469825807 seconds)
  done (took 161.143966915 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.452191442 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.454693016 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.456192998 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.461504707 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.455497867 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.454851906 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.452209112 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.45292254 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.455438782 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.45488934 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.456152769 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.454484889 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.455767735 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.464371342 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.463431698 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.474390912 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.458004611 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.457559652 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.464189615 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.454985861 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.464613692 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.457349011 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.45542677 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.454432579 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.47739716 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.565327826 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.47579563 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.483024831 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.466966155 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.454566185 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.47877017 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.465218098 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.265094954 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.416440317 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.466206073 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.460985646 seconds)
  done (took 89.813701381 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.455150896 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.454923703 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.457678382 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.456207735 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.494284364 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.455898127 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.095687866 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.095703791 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.531535051 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.746240846 seconds)
    (11/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.861625561 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.166513075 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.775121125 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.455623442 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.5543163 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.47034801 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.459828097 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.555321735 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.484113518 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.457333995 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.456049683 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.097933473 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.469374423 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.008563031 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.647826096 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.455836038 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.49486258 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.860271128 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.457621462 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.495348955 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.805744152 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.497035831 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.456767792 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905969048 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.805300451 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.573459237 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.45960698 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.494710187 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.457465995 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.457421087 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.749554395 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.458143176 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.458169925 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.461806141 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.203553888 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.460674503 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.099335398 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.459079818 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.494534675 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.459410795 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.459408141 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.020867458 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.32451494 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.460118637 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.459039938 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.461665551 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.459235214 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.458439373 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.49673244 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.082443516 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.413342856 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.459296255 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.459836059 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.462878205 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.497527304 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.460260764 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.460239672 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.481261689 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.523136915 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.606675262 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.102336756 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.460567576 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 22.023631009 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.560623037 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.584409582 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.460128903 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.461075811 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.460910148 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.461632237 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.577641682 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.462100732 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.938268337 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.652590598 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.463644853 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.461592287 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.185517726 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.566631692 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.461746358 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.906251207 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.464748555 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.462169246 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.279458582 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.561039501 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.460729957 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.461722053 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.461026853 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.938777899 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.104714293 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.854416264 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.464942434 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.115300277 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.463938815 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.950470518 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.104356846 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.160988628 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.464492168 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.57921807 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.655103488 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.466755653 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.463732294 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.127485415 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.466450936 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.523987722 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.466243019 seconds)
  done (took 402.784715301 seconds)
done (took 655.088998904 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.448215238 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.44827565 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.473999382 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.469789559 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.449113326 seconds)
  done (took 13.648489798 seconds)
done (took 15.007046917 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.472857826 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.467779457 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.469601267 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.291042387 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.469305978 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.489921239 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.471793934 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.469389858 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.509263154 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.483962521 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.280614665 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.482032876 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.469809813 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.470845769 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.279411788 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.477541592 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.403163559 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.482544533 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.47459457 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.888896486 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.903911803 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.599090848 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.838685701 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.539462665 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.870480248 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.91600992 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.77257974 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.723282269 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.523526002 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.516885631 seconds)
  done (took 20.45477515 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.387196514 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.865667904 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.913282548 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.601396449 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.872930909 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.541499726 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.858402804 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.901112216 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.784169411 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.717047748 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.525287539 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.519519975 seconds)
  done (took 20.464343127 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.28143097 seconds)
done (took 93.36521062 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.530297183 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.605703979 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.525612091 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.50743897 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.509183536 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.507739915 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.510549142 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.507988969 seconds)
  done (took 13.568498551 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.505953655 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.505336747 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.505662417 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.506572169 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.506168347 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.504498443 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.507495542 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.50541036 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.507549877 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.508466893 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.506390652 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.506463497 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.509671726 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.505855528 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.50629916 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.507792856 seconds)
  done (took 25.469862684 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.509051116 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.506979484 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.508231389 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.505736728 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.506782881 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.507678246 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.508158056 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.507507973 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.507004417 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.50787031 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.507488417 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.507448677 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.508511453 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.508513128 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.508323649 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.510839612 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.508172164 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.509314558 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.511615618 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.507620068 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.512885054 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.50837205 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.508199611 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.508675789 seconds)
  done (took 37.566920278 seconds)
done (took 77.969598022 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.472595712 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.481455987 seconds)
  done (took 6.320619333 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.608092621 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.607274989 seconds)
  done (took 4.583165568 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.510288145 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.508774056 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.51025525 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.509922945 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.508784532 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.509834945 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.51156191 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.509028767 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.509319446 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.509220481 seconds)
  done (took 16.464104759 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.510617028 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.509863649 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.510760831 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.509811967 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.510730799 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.509580024 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.510636024 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.512955034 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.509887116 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.511134062 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.510182126 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.510161034 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.509767757 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.510729472 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.509796742 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.510465332 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.510121644 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.510484119 seconds)
  done (took 28.555756776 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.532693159 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.536825947 seconds)
  done (took 4.437104677 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.692964029 seconds)
    (2/7) benchmarking "second"...
    done (took 1.592963323 seconds)
    (3/7) benchmarking "month"...
    done (took 1.679950642 seconds)
    (4/7) benchmarking "year"...
    done (took 1.664863807 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.593351152 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.53919238 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.594505698 seconds)
  done (took 12.725597089 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.512764787 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.886307609 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.074690573 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.736553301 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.505371039 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.527802034 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.466718009 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.528548428 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.532865178 seconds)
  done (took 17.139593031 seconds)
done (took 91.5919801 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.476462335 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.486503835 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.504115991 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.495493945 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.914901958 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.488015899 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.481528832 seconds)
done (took 18.216904049 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.474908227 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.471715432 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.478374589 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.491348656 seconds)
  done (took 11.286553618 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.475882303 seconds)
    (2/2) benchmarking "read"...
    done (took 1.888550772 seconds)
  done (took 5.733742678 seconds)
done (took 18.389924655 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.514200583 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.515251765 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.514137587 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.514068374 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.513469834 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.513460476 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.514286908 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.513873937 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.514825593 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.513318139 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.515105308 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.513819949 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.514696876 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.514501949 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.514255549 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.514908844 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.514026469 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.514363175 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.515079117 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.514212108 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.514910451 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.516311397 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.51499866 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.515011441 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.513800673 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.513471161 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.516244838 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.515065847 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.515418267 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.517067499 seconds)
  done (took 46.8092219 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.522115557 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.519193327 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.516115562 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.516249727 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.516527625 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.516689239 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.516790369 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.516226261 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.51535974 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.516696432 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.517337784 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.517319836 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.522415036 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.516126108 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.51644221 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.517309709 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.518579003 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.517112267 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.516294007 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.517224921 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.517628673 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.517140902 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.517017003 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.517452952 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.517417613 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.517443245 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.517618686 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.517611073 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.518048699 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.517376756 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.518031378 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.51861581 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.517972152 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.519264565 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.517826883 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.517961397 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.527283672 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.522731627 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.519560623 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.519246686 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.518224349 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.519592471 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.519094642 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.519215537 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.518943575 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.520202045 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.519030318 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.51883602 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.519507963 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.519515854 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.519545817 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.519131308 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.518881067 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.519005944 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.519391537 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.52089529 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.519641081 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.519559156 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.52031896 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.519734318 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.520422534 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.51969388 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.520029258 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.52090381 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.5211991 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.520798071 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.521691061 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.520331461 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.519973315 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.520225093 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.521454579 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.520773906 seconds)
  done (took 110.732343131 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.520816998 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.520806033 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.521009411 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.520866306 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.522166331 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.522458756 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.52172689 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.521114242 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.52141449 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.52132237 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.52232564 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.520906534 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.521031062 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.522212077 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.522463646 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.522484948 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.521353797 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.521545442 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.521719137 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.522054655 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.521500883 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.522619182 seconds)
  done (took 34.852606677 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.522311043 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.523572795 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.524757792 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.524889582 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.52514583 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.524243202 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.522383538 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.523456929 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.522065341 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.523262351 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.523643474 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.522895684 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.526222434 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.523486821 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.52292837 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.525114053 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.523039207 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.524443228 seconds)
  done (took 28.807880597 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.523347418 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.524676497 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.522867049 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.524707716 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.522915519 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.525575913 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.524148147 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.524780211 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.524993856 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.522854059 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.524915144 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.524708694 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.524731811 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.524697799 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.523814515 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.524468719 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.525283977 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.524511532 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.526249882 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.525302485 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.524996789 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.526516745 seconds)
  done (took 34.921592195 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.525428268 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.52505343 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.525579265 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.525373582 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.526269018 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.527151951 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.52562969 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.526396618 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.527115844 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.52800625 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.52585877 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.526342421 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.529013082 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.526845767 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.526211189 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.526484618 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.526237729 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.52628117 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.527564224 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.52631211 seconds)
  done (took 31.911079475 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.527799869 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.528484454 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.528418244 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.527418955 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.528281215 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.527638885 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.527409665 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.528027901 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.528070853 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.527937526 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.527657323 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.529578656 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.527770116 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.528904479 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.531158187 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.529017482 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.527953729 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.52835399 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.527910218 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.529621679 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.530596803 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.529905932 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.529674619 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.529433666 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.529500365 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.529104155 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.530189977 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.53032952 seconds)
  done (took 44.189781048 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.55588682 seconds)
    (2/2) benchmarking "in"...
    done (took 1.555840376 seconds)
  done (took 4.496294676 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.530152543 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.529066022 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.531248702 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.529396022 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.52977498 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.531034009 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.530529615 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.531648682 seconds)
  done (took 13.62723507 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.525977571 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.530899635 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.532460308 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.530957883 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.532308613 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.523713176 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.539499401 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.536232785 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.525925189 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.524896637 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.529200675 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.529483323 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.528170796 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.52603016 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.525411437 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.537113763 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.533915312 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.53380587 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.533685604 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.536110633 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.534384505 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.52940538 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.532408974 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.535766245 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.527039437 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.546072863 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.541616989 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.537028138 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.526521145 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.538783389 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.529334143 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.536418423 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.534694112 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.534968099 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.533729324 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.534676371 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.544314958 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.533361052 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.542886494 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.540289516 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.534766467 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.533611362 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.532201476 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.53076973 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.533494937 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.537951858 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.53480921 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.534821222 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.526437475 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.532689457 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.53931537 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.527444656 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.536421147 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.541630678 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.535064969 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.546675245 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.542060062 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.529512307 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.53304453 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.547268965 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.555343525 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.542052659 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.544134349 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.53956156 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.541697446 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.542766158 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.548778236 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.542550278 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.537419878 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.536676277 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.545743282 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.557402586 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.549874604 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.54171819 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.539157319 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.535892867 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.531504251 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.541010837 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.548189962 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.545737345 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.542614393 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.538538315 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.544250494 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.540378703 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.536214766 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.543424063 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.539631122 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.538691129 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.531181165 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.55051421 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.546196691 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.53924043 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.531727114 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.53392921 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.53520081 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.542469402 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.535320378 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.542776564 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.542500342 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.539211865 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.538870899 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.536929312 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.545946381 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.544710608 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.540318081 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.550621626 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.5458632 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.5340434 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.551865429 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.547492108 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.541062379 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.533555349 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.546680133 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.543151192 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.537026182 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.546617206 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.54657586 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.544491796 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.546575999 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.541126563 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.54638687 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.55470343 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.54644784 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.541077326 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.539814246 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.548773626 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.541147446 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.546466279 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.546232381 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.542836837 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.5409609 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.543809097 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.54673873 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.539385281 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.54560744 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.542470868 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.545803974 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.542338938 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.547624317 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.544655574 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.541370799 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.541871701 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.548024438 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.550123518 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.552700731 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.545477117 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.55889286 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.5415241 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.550660178 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.545979066 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.54937028 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.54302492 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.545029085 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.54953315 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.537608379 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.54609172 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.537665021 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.54796214 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.543856031 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.544310558 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.544799168 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.537675357 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.542012291 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.547404108 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.550327804 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.543348005 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.547923657 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.544985504 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.543828095 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.537642531 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.546771904 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.535907255 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.54285751 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.551206547 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.543019541 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.547589257 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.553111119 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.550856153 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.545121275 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.546121542 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.5418937 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.550380324 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.551883868 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.555529233 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.553289912 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.546679295 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.54669033 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.541169097 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.54155057 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.548888793 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.541843275 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.553839912 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.565473934 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.55979479 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.543000406 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.550351341 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.538618214 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.549007175 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.552971716 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.553195207 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.547782298 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.546587454 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.54031864 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.551301392 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.545798596 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.551119873 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.538576658 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.549432369 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.549215232 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.547651834 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.547753105 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.546191802 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.553163708 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.551524394 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.548010819 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.547711619 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.543544958 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.554617246 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.540044722 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.544291003 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.55198395 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.549139035 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.557467049 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.556095576 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.551459652 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.556929341 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.550230375 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.544783872 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.552957258 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.552514813 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.548536864 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.561975374 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.55053174 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.550027346 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.563764569 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.551542344 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.543049154 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.556724008 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.556790008 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.550555695 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.544939828 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.554955906 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.551213181 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.550020641 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.549241912 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.543676469 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.553761899 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.560683939 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.558099253 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.54555087 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.553754496 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.546742362 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.555679392 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.554648116 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.558003501 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.55438251 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.559339913 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.557666516 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.552116718 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.552158483 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.556606046 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.551196979 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.551829601 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.546581028 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.557639976 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.560396123 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.551552471 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.558382948 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.550064572 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.556063588 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.54651447 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.556332478 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.554035188 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.573897421 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.570547344 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.566281997 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.560756155 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.556533551 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.561782263 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.554674445 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.547947752 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.549680445 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.553628432 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.551350559 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.548752324 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.556978231 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.553914991 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.556962586 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.556686503 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.554309245 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.557196554 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.554312109 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.548441181 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.557541221 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.553181448 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.554016052 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.546543314 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.556389538 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.559679063 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.562397983 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.553170274 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.549623733 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.569726779 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.55816651 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.559701202 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.55845684 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.549880959 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.547670972 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.556079373 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.56119832 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.552999722 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.560980695 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.551448337 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.562086841 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.55220814 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.566943044 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.564192835 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.552506433 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.561517215 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.555728769 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.547187809 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.549916439 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.558497628 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.568525089 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.566791909 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.548697359 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.560025266 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.555776052 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.557210243 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.556820808 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.557859278 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.557232174 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.556671417 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.570494614 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.559831246 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.554850586 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.566754124 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.56465714 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.55878677 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.557147106 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.548726832 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.569204366 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.565995927 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.56059552 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.564257997 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.554358065 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.560243031 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.558066707 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.557165405 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.560161316 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.558213723 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.571829769 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.562524955 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.562184898 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.559022135 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.570883211 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.567108848 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.570492728 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.569538277 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.559188078 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.566743439 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.559427006 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.555345132 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.554682199 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.563164352 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.564684448 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.552182439 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.564726143 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.559524714 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.563025158 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.567179388 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.566345833 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.552117905 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.566706703 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.571102931 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.551500718 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.562455324 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.559029679 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.552954465 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.564166505 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.560498021 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.551265073 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.557626427 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.559661532 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.567360068 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.554930204 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.564034575 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.557341196 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.566058365 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.563005394 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.561931374 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.560986631 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.562193488 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.554435659 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.56348178 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.570795281 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.56971288 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.560547399 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.566831438 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.558059653 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.577420913 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.571792894 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.563079635 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.567868232 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.563718263 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.561074002 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.56709453 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.569120208 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.563229165 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.56593314 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.555516522 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.560532802 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.560502212 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.571596989 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.570691566 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.568110372 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.556690833 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.557894268 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.565114182 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.565072975 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.563350688 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.566560873 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.571378596 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.557431501 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.556654097 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.565892422 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.56280474 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.569326798 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.559166078 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.562182383 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.562724073 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.568081108 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.564351724 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.564131096 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.557254663 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.559160002 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.577910292 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.569408512 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.566758734 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.562765977 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.568512518 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.559428263 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.565880549 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.567356925 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.561623584 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.565260219 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.569710995 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.570264348 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.560779132 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.562174142 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.568409083 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.577422589 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.567797833 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.560035812 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.580670768 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.579946095 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.574987154 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.558781881 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.566017857 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.56365387 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.569380995 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.567545147 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.56108406 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.582218521 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.57741812 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.571373287 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.572569179 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.565676054 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.560440472 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.571317694 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.567462455 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.571945636 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.575565859 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.572975307 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.580467321 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.56899561 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.567225902 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.560534059 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.563225673 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.566238276 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.566099921 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.570068582 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.572981802 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.570879091 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.572061712 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.574827288 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.568725534 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.568719598 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.569690392 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.563785521 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.569432538 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.562038162 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.576138907 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.569507058 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.563208911 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.571965402 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.570279991 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.565840181 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.568138239 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.575203034 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.569843903 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.563418645 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.572422792 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.581099174 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.578721707 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.570227331 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.565412403 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.576725364 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.575066564 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.570680322 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.569425902 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.566506118 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.589005277 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.582265315 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.567106962 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.570548881 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.58499562 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.57837704 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.57197036 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.57103316 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.57498031 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.574842304 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.577766279 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.571661522 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.582139321 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.57543365 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.566999686 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.57568445 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.568356982 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.57122648 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.581388946 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.580032489 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.57227864 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.572757821 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.590433602 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.581507676 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.578663251 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.594143361 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.578841485 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.577316222 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.579063441 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.564803877 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.574605192 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.576495377 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.58212647 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.57367805 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.574419974 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.573452532 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.566138334 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.582312597 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.587731652 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.583642026 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.573295529 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.566718016 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.569879591 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.574904043 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.573662056 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.57573285 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.5743509 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.574515307 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.574145916 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.57048344 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.596028447 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.593350383 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.580687391 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.575667059 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.574217085 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.582980909 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.579107511 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.575905498 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.58166461 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.574780354 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.576163701 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.580682083 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.583744203 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.581086115 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.56982288 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.571625484 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.57166257 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.578112832 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.5945182 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.596493032 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.586671392 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.577300996 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.578924736 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.575254856 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.57802972 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.580154991 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.576251981 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.578228209 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.57302685 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.580880921 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.579794609 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.575967377 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.573007713 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.583667518 seconds)
  done (took 929.082539082 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.576941663 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.576123752 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.576803796 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.576682062 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.576382723 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.577046145 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.576668095 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.577456324 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.578454076 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.577509961 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.57727767 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.577653695 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.577494596 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.57814 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.578647885 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.578348964 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.578768641 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.578011003 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.578124635 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.580200876 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.577628133 seconds)
  done (took 34.55604592 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.579756406 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.577507447 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.579219606 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.579563575 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.580209257 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.579485003 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.579421517 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.579858235 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.580094997 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.579172044 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.578810267 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.581209734 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.57895372 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.579316057 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.57992612 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.579783435 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.579837911 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.581898299 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.580306407 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.580638712 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.580940705 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.579605829 seconds)
  done (took 36.182746634 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.58074047 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.580320654 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.574422348 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.584419849 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.580570546 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.580836641 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.582187861 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.581617048 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.582794851 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.573992615 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.575094361 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.57470325 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.579827015 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.587536236 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.585903278 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.588426084 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.582107055 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.582822299 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.582448439 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.582521143 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.592244446 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.59142437 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.585219881 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.573896653 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.585746694 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.58272061 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.582807842 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.584781766 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.575060278 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.586631373 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.582961213 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.577092031 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.59167524 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.58381181 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.583008845 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.586316458 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.583990184 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.583548159 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.583480762 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.589640205 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.594497876 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.58496503 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.597687877 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.592065932 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.584628045 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.580641994 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.590587043 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.584358318 seconds)
  done (took 77.448374966 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.585435829 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.585124268 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.586112243 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.585056801 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.585364592 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.584337645 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.584837918 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.585302921 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.584334432 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.584230299 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.586943633 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.585168826 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.586008109 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.584927106 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.585804172 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.585999169 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.586440147 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.585726439 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.585992255 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.584924102 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.588524281 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.586710084 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.586722585 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.585925278 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.586523956 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.586059303 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.586958509 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.586451322 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.586348376 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.586039607 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.586632141 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.586635773 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.588239259 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.587245976 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.587119354 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.587151132 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.587490909 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.587341589 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.588276973 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.587654199 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.588591328 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.593536161 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.587380001 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.589609125 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.588684636 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.587591062 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.588721582 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.588426783 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.589211589 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.588186039 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.587615227 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.588962605 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.588602154 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.588057671 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.588192814 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.590137614 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.588149722 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.588514573 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.590604853 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.588482167 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.591292929 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.588624503 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.590132655 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.589323894 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.591034586 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.589123798 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.588941931 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.589539704 seconds)
  done (took 109.378061836 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.590453856 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.590057995 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.590090612 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.590571399 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.590432624 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.590698161 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.590636072 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.591739983 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.590628599 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.590410275 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.591222319 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.590386389 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.590798243 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.594063673 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.591915494 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.591714002 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.589441996 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.592087304 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.592500206 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.591277214 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.591627888 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.591136485 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.592448873 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.591033329 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.592896904 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.59237512 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.592224402 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.593833057 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.592307723 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.594098803 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.593256727 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.591444484 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.593854009 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.593160974 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.592769653 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.594053127 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.59397267 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.593556276 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.593788428 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.594071774 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.594141406 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.593478891 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.593569405 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.594263698 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.593649025 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.592966605 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.594049286 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.594541667 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.594477482 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.594195812 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.593436987 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.594877044 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.593566194 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.59380952 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.59321077 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.594637768 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.594207406 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.595164791 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.595003387 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.59384891 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.594760898 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.595018892 seconds)
  done (took 100.188798942 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.594913082 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.596774004 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.595476073 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.594296733 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.59521773 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.594578962 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.595171984 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.595233793 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.594849457 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.595335412 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.594377889 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.594832207 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.595498073 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.595032441 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.594505488 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.595317184 seconds)
  done (took 26.962332501 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.597367514 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.596562035 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.596060085 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.595846581 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.595423971 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.595443248 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.597209254 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.597352429 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.59690768 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.596204098 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.597731527 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.606205091 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.599092455 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.597189768 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.59655086 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.597162949 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.59723726 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.599526029 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.59762013 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.598040435 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.598153648 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.597911298 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.598231101 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.596873178 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.598037851 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.597964448 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.597295089 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.59781394 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.598004676 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.598497966 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.598071096 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.597800112 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.598345223 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.597115177 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.598128645 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.598399839 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.598648474 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.599433141 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.598376861 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.599234302 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.598390899 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.599382575 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.599150981 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.600481248 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.599367699 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.599286614 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.598658531 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.600482296 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.600158791 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.600346594 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.599779204 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.599663476 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.598779496 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.600834366 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.599655165 seconds)
  done (took 89.350871995 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.599751757 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.599503959 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.600444162 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.601356778 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.600451496 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.601032505 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.60004893 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.602927509 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.600210753 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.601100182 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.600694614 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.601911249 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.601098296 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.601569236 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.602206677 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.602532766 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.601476347 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.602601979 seconds)
  done (took 30.265900365 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.600791763 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.602547712 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.60148808 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.60143081 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.603321903 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.602549249 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.603723281 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.602428703 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.60229342 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.602063992 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.602356277 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.602754024 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.602962919 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.602397624 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.602419833 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.602485833 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.60245636 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.602855154 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.602671611 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.602897477 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.602889445 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.604704271 seconds)
  done (took 36.702611695 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.593289273 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.592626828 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.593724872 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.613574045 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.604456824 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.593821812 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.604455078 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.594596212 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.619986592 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.625085844 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.623055558 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.603815332 seconds)
  done (took 20.709248153 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.604329224 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.604020945 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.603877909 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.604794715 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.604332716 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.604864277 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.60404923 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.605218164 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.603491896 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.604602932 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.604832569 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.604901643 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.605786811 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.603808906 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.60536071 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.605455694 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.60508756 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.60564685 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.605049707 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.605602151 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.603440005 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.605411554 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.605725072 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.605409179 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.606963846 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.609185219 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.605935992 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.60645617 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.605180659 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.605560665 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.605207827 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.605687916 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.606472513 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.605483001 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.607048005 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.60730146 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.607960621 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.606750621 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.608336088 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.605939694 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.606659758 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.607222748 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.607548278 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.608294742 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.606835339 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.60745511 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.607228266 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.608205904 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.605986697 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.609259809 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.608858152 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.606940938 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.606228837 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.608595339 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.608463688 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.608108056 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.608136063 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.607419281 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.608907879 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.608779022 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.608733904 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.60800958 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.610048247 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.609380355 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.611212431 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.609587853 seconds)
  done (took 107.482133799 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.608499308 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.609958361 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.609213504 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.60945725 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.609677878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.608913466 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.609855206 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.609777333 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.610555016 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.610586375 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.609681441 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.610629815 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.610542514 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.610554875 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.610460101 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.611934101 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.610300025 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.610015631 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.611514774 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.610915537 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.612758578 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.611218857 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.611364755 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.620738084 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.610949479 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.616389486 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.610440545 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.611539079 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.617341353 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.613082083 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.61230887 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.611058082 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.612737626 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.612032717 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.612276882 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.612548635 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.611373974 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.613035708 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.611412667 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.612901682 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.61283219 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.612011555 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.611866705 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.612450158 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.61414381 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.611815301 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.612557016 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.612338553 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.612666737 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.612627067 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.613273377 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.613594718 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.61178527 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.613238108 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.613367734 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.613222603 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.613733353 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.613414458 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.613000368 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.613572927 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.61306979 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.614159105 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.61413913 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.614215747 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.612890089 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.612758368 seconds)
  done (took 107.854483384 seconds)
done (took 2057.883306722 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.577830533 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.578880526 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.605298341 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.648197582 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.604354646 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.274985108 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.111556435 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.605125973 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.60629344 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.610717117 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.606532227 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.581472476 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.942448268 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.606631611 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.606515256 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.580140882 seconds)
  done (took 58.603299905 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.64418045 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.622190155 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.760986645 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.609923232 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.645338559 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.881969348 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.688910161 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.611324038 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.828275579 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.618156541 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.596587388 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.644482654 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.611072888 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.584162274 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.637882513 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.881634389 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.969100052 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.59850893 seconds)
  done (took 34.892290284 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.217158551 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.615975328 seconds)
  done (took 6.29258581 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.638317415 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.613145569 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.619636967 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.611748603 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.591746339 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.581570045 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.610701892 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.581260159 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.591285316 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.774223035 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.621526033 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.636504684 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.65276555 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.614719721 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.620941671 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.672769142 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.805794926 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.620429107 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.620402985 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.625994897 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.612105492 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.867946964 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.673202368 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.622072122 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.773809714 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.584238401 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.625890136 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.633270264 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.824828003 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.621937259 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.612822203 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.613996864 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.615756655 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.603859542 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.251558526 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.584802579 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.652209544 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.629115616 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.621642948 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.822130245 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.614787676 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.627812587 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.587163633 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.243827655 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.796069528 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.917654543 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.590075456 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.637102176 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.616973778 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.821094149 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.618617633 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.616365811 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.720303469 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.601984792 seconds)
  done (took 102.032810879 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.599779204 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.584582439 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.853350974 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.614656585 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.585575093 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.585478293 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.585976541 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.994566907 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.636803326 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.587527786 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.005764141 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.381503193 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.590133354 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.64084972 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.63614556 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.627721654 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.587952142 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.586215677 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.587952979 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.587565011 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.288095784 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.588708662 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.587968484 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.743886636 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.661224936 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.290657073 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.586754573 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.585802985 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.589493119 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.587194083 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.359330122 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.60413325 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.652646611 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.588527494 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.990153077 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.132777849 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.095999638 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.595047736 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.593284942 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.590242656 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.592636815 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.29506769 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.115614353 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.58904851 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.602428493 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.291947112 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.586981277 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.597008181 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.592289146 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.951277254 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.591547291 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.591453214 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.588900725 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.589408891 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.588447456 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.660577508 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.669904462 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.295889931 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.588984465 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.589948275 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.629639984 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.591332041 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.591923177 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.593704618 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.589265088 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.116004207 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.766611243 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.593302961 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.114974607 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.355952039 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.593272999 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.429046529 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.59389766 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.597843203 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.668699001 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.590099132 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.590452948 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288112476 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.613335956 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.58858176 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.099143683 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.593633869 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.015197044 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.611337447 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.591864999 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.312676703 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.598989159 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.65585505 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.592580244 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.591654777 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.591960611 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.597603788 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.995720964 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.615094489 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.591817926 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.593169005 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.61018332 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.592100713 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.59426733 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.603368557 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.436818257 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.600257267 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.592755127 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.592974987 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.594467844 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.592413393 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.59605813 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.597710575 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.966717416 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.592830415 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.614982045 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.594495012 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.593905342 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.604105662 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.751468465 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.60111387 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.05407622 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.59431105 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.593711812 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.594378587 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.594228638 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.646448407 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.606540538 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.596605127 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.59351493 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.002232687 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.614812401 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.613790413 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.595761235 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.595484663 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.631973521 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.595055069 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.627780809 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.597161063 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.584453582 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.60849337 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.612130844 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.596170295 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.603168741 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.595944498 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.602243064 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.596856555 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.015147387 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002004724 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.791059883 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.59715366 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.595789869 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.56278239 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.605480837 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.865453841 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.617881156 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.596532841 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.988280423 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.791340295 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.59554326 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.596393089 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.599708385 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987264442 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.597029273 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.024565484 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.372959997 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.597076206 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.599211324 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.575369466 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.443717319 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.599237655 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.601925078 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.014940797 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.617025601 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.598515566 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.596988346 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.598044975 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.597577248 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.6031121 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.599123394 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.599971547 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.59821434 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.715676065 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.879978174 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.616913436 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.605845059 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.300458948 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.60208236 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.604854919 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.602770925 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.599277534 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.598138004 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.627888574 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.604135903 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.64778908 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.598053286 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.610972387 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.3340686 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.610457168 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.597525007 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.881316402 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.532405692 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.602528716 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.601154449 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.600102569 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.63222481 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.330105875 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.656141609 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.059495834 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.605901211 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.677074508 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.600449401 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.630278613 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.330003627 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.612378292 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.600233661 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.49419832 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.601596544 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.29790583 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.599686664 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.602822119 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.431395151 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.601266544 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.601698513 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.61928797 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.6015941 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022609858 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.602629706 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.652679995 seconds)
  done (took 564.111136005 seconds)
done (took 767.388792966 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.601450506 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.606533205 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.60547057 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.605396329 seconds)
  done (took 11.896688329 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.641137885 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.631043515 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.639039294 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.630873312 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.640304539 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.629920607 seconds)
  done (took 11.290634863 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.602093535 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.605889479 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.605884101 seconds)
  done (took 9.291571715 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.932398875 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.603809674 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.117900049 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.604039522 seconds)
  done (took 10.738174596 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.639307275 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.641210171 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.641455383 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.641987714 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.643426165 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.643174806 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.642382317 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.642846831 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.64313772 seconds)
  done (took 16.257423028 seconds)
done (took 60.952491376 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.761598105 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.765541274 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.609354653 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.674832044 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.834210411 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.761875864 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.769384641 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.77699308 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.77210866 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.674984857 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.767420145 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.668118551 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.766755465 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.906394801 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.676835092 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.769056945 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.665405496 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.862546558 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.767526444 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.676238997 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.793951242 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.67429259 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.676195905 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.607256411 seconds)
  done (took 45.159627284 seconds)
done (took 46.639614858 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.674183428 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.792785032 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.636741516 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.63710497 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.648102249 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.622642935 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.668769821 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.640371237 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.659990702 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.66059853 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.622761386 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.646312914 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.663010569 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.649687017 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.680842166 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.637984761 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.638666901 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.648770001 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.661838911 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.664611401 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.641657225 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.648621867 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.674832673 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.639765084 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.65619825 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.656057311 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.653584649 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.616515131 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.647121886 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.662767242 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.62592359 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.654792345 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.664154499 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.649990547 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.644495365 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.650623169 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.651000592 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.794104683 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.670729008 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.650207963 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.649887112 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.665755192 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.654234103 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.654678015 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.650002699 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.675492045 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.657591234 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.663289515 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.609916457 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.641299428 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.668979763 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.661246797 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.650188826 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.617295398 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.625286568 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.663920949 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.650744134 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.6668913 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.646914457 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.648436858 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.680401397 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.667777026 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.658441761 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.657192859 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.646662749 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.662281984 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.649526033 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.663751585 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.646628178 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.649475747 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.642039676 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.647568172 seconds)
done (took 128.698004198 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.816604193 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.607878349 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.856544398 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.645033283 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.858359083 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.818511837 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.645249581 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.646123505 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.646563017 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.508497275 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.647241454 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.647013702 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.612171073 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.647380928 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.81557159 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.649062705 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.647995531 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.405009883 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.648896413 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.831533885 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.613007631 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.646369696 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.65315764 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.501784899 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.609522761 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.618519366 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.831531579 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.648063417 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.398570517 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.617526013 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.611826476 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.399526644 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.829028887 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.666263706 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.659424708 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.65719726 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.872632476 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.65109362 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.819176866 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.818754187 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.850447462 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.687470034 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.618802014 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.614207854 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.650397023 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.650805944 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.649157061 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.677575899 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.614123626 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.650186103 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.408559356 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.659161196 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.650943671 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.649661315 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.650506744 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.681458165 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.650242883 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.652524738 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.833555091 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.652469284 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.821194301 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.503700226 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.50863989 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.651236586 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.614622991 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.651783303 seconds)
  done (took 130.112975823 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.763595077 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.777839416 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.821914854 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.644046844 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.73795725 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.823047191 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.644094197 seconds)
  done (took 13.699842697 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.657234695 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.651169957 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.734067998 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.733893325 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.653375754 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.8781271 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.651653189 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.662388632 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.651222058 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.737537644 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.655122903 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.651820528 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.661069469 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.616248058 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.735686011 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.663288537 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.819633977 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.646436463 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.654130808 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.856229692 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.653629208 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.662584886 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.737240608 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.664007273 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.653423037 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.658368288 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.484064139 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.652707443 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.65342618 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.653589818 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.652199906 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.767389066 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.653534504 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.620001188 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.653519488 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.81816319 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.654475335 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.654001951 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.654630033 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.620456484 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.655081069 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.654797652 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.65373418 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.654333558 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.654084713 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.679144185 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.655535596 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.655334942 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.656436828 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.655901774 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.739157123 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.656379698 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.655890668 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.654853665 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.74540261 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.664545191 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.656883253 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.655196587 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.656570574 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.657034459 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.858671204 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.738598114 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.660458009 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.739234927 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.656727437 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.656110948 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.657102205 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.656384866 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.795632042 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.656177507 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.739401358 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.657887361 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.891512811 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.680596324 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.656759354 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.65600451 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.654172993 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.657763463 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.619757163 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.661843661 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.655546561 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.651945195 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.662778695 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.658643812 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.656903438 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.867604184 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.821620543 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.65747418 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.672706844 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.664894328 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.656723456 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.742666229 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.659347812 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.657902866 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.742740959 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.823995007 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.744553131 seconds)
  done (took 169.949457543 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.66997577 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.670385878 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.656549621 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.68716336 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.653112103 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.651279398 seconds)
  done (took 11.482517086 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.653300884 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.663181191 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.659949425 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.661383127 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.660840251 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.661538174 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.660358416 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.65240929 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.662800486 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.666194144 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.660843952 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.664261286 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.661849877 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.661191064 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.660873705 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.66195806 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.661149368 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.660472397 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.667473916 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.662259076 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.624648707 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.660960168 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.661307419 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.655255951 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.666238772 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.66297935 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.683589512 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.661426708 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.661357635 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.671486018 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.664218614 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.663761293 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.657348885 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.659517597 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.666682963 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.655430625 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.669115116 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.663190829 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.661871248 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.662583559 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.664165534 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.66316373 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.663238531 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.664289781 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.656201113 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.659268962 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.667539287 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.685297691 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.664507965 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.664298512 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.663766601 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.663177699 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.665045325 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.665778938 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.661479299 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.658969902 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.669621814 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.664473324 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.665510118 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.657281349 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.668053109 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.666326493 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.659483305 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.668991566 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.66510853 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.667206842 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.659326232 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.669857668 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.665761547 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.673071695 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.667474614 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.664727267 seconds)
  done (took 122.237778355 seconds)
done (took 448.965933948 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.082409433 seconds)
  done (took 4.582467645 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.814341126 seconds)
  done (took 4.317134532 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.178067966 seconds)
  done (took 26.686326453 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.698286004 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.635060157 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.645687486 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.632806448 seconds)
  done (took 12.111430232 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.304785686 seconds)
  done (took 4.805030235 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.63775219 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.655002986 seconds)
  done (took 6.797636068 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.03807656 seconds)
  done (took 4.539788126 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.398459749 seconds)
  done (took 4.907752027 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.655622967 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.640970126 seconds)
  done (took 6.805147219 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.616410788 seconds)
  done (took 4.117294455 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.172764009 seconds)
  done (took 16.675449791 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.637410735 seconds)
  done (took 4.140191361 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.640100602 seconds)
  done (took 4.141654186 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.857251261 seconds)
  done (took 7.359296807 seconds)
done (took 113.487559629 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.629904403 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.631450271 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.63035949 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.630446861 seconds)
  done (took 12.024740298 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.785862504 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.786373044 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.788770136 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.772935022 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.773755727 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.790062689 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.700753147 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.700967351 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.766343332 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.762906792 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.793322531 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.775051772 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.789197984 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.703694933 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.762595928 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.794128289 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.765163782 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.790331159 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.701014493 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.775767994 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.669162818 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.777808896 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.764596951 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.670678374 seconds)
  done (took 43.662854125 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.22105772 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.78847359 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.872071302 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.753821488 seconds)
  done (took 9.13861211 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.836368228 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.836580196 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.848926459 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.888438956 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.938683265 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.845044122 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.700602081 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.699712792 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.686044015 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.840312025 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.912675418 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.834445079 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.059684196 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.669565871 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.055561185 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.670490221 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.670632278 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.836555263 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.883074866 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.912769285 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.673093904 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.835300285 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.845690363 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.833207491 seconds)
  done (took 45.317900273 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.687429246 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.695527832 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.672689803 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.671670329 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.671933212 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.67567405 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.695561775 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.673815365 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.687235087 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.672013809 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.672963371 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.673077002 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.694204689 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.673826958 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.672742951 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.688165653 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.676913663 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.686154852 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.691041019 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.674287562 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.674527327 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.688274955 seconds)
  done (took 38.475885726 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.637099312 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.63668676 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.076091939 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.978837951 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.635987929 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.636194799 seconds)
  done (took 16.106453971 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.76735638 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.960151846 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.667650335 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.123728653 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.250972348 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.667750906 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.667548925 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.01148051 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.394565817 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.3919643 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.75766667 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.763232112 seconds)
  done (took 24.932768267 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804002031 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.647743124 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.648043861 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707164298 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646535569 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.648670826 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.703579555 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.274017946 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.677103631 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010256193 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650302668 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81319496 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.987999801 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647783702 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.648641772 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.638305122 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969887232 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.367176231 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65520343 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664341743 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716618293 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.659567812 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.648037925 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.946846104 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.65094835 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.64836981 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.996485028 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.649308128 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081273324 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047885559 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046110542 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656239386 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.001159854 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230583931 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829074633 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93729873 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666055858 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.659618448 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.635941345 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.651382554 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.672289891 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.656967761 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039279436 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658725946 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.651457633 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.6510763 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284677402 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.683091055 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.651006389 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.651297557 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047819628 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818356231 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.679620572 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.65159089 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731137179 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651370541 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.680183283 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851345481 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37299855 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652279455 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669697872 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.656178345 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.655305957 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665945858 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.491357316 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.682969671 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.681019073 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679831772 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653826579 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.652242789 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710147987 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651372287 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.702236506 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652426052 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661857699 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.658902505 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659117895 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409049503 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656154668 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.652183353 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967306108 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653717767 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654062434 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.655700701 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.65348289 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.671438316 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.685417259 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.630041432 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719542408 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.282127846 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.948231965 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706513028 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713855023 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.959711846 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.629440238 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654940967 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.660196803 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660800441 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706610317 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.285031986 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653609303 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.682290535 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992640894 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.953517972 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664323096 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.649876706 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293660807 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675765194 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.713938414 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.665759941 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.950153368 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.466827241 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060454406 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677078769 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726088562 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.654798631 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.663495058 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657847482 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.684171989 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.666743306 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062389637 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.651908249 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662554854 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808536826 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662070505 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.658647095 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.678272076 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664499655 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.657337151 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.950815533 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65863159 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.056041205 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.663894411 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65723672 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.659116359 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.676066139 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.665387128 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.964995968 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657826111 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.015573139 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659120549 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656926415 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657484796 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.966040444 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.658195361 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.688314136 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090080519 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671578348 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.679780787 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05375502 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724559248 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855894803 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721507113 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.674608413 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.004814998 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.68725611 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.688748898 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.678057594 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.666946544 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66792977 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.689278015 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656316072 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470592035 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66273288 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.667639021 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.659055946 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.705296532 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814437646 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691101152 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.951514784 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.661352607 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655725564 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.691265488 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.663603661 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967652939 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047907559 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.665723414 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918906727 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.291632127 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477244488 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706316076 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.660401926 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.659507051 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.660547476 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660548174 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660304708 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.661713616 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948812205 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063784857 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.671253306 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.478454488 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663547439 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.664971992 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.69715262 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051944734 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.698175655 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662074486 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.668654304 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668959998 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.702183427 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056559567 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972583385 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.707671206 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.663647242 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.268091844 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693662092 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.663775959 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.662906924 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.71868776 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.668688456 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390648979 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095284114 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.685653322 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066678312 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.674105346 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.715289842 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.664256258 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675512508 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671148335 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.674849225 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695210264 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.955847667 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.667699014 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672892971 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386378673 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672269218 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.419545251 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.68207668 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.669471027 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.670830837 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301989171 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665718036 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666832493 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037409436 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299394358 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665697014 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29758924 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.682276427 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.680950211 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058923415 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989127318 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679744191 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.674833231 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06388878 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969575391 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723831082 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.666892696 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.693004676 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.642737949 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381759859 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.681427226 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919285407 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300033475 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678785479 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.671774951 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.712623512 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.666043357 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.252215732 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.666656773 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666852817 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.666426226 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.685325138 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392748757 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.676785993 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668410418 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.503707699 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.671736679 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.308979934 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667086995 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.957993541 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.056852132 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.041535938 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.669193268 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.680917665 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.003131264 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058342754 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670755618 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.667672475 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.425272306 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.623877939 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.698623337 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668787281 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.66867316 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668724773 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103130852 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.688737933 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.674568114 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.701812151 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.67037596 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67061817 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.670524653 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.671386424 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669939173 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.355220382 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.688147145 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672282348 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.672066818 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677200152 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.00790345 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.716316509 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.487231163 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988037306 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66710264 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735745726 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.697147801 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688807704 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.65438985 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.671887466 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.671022761 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.763379966 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.980692657 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.679850071 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.647069714 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.719514681 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972946211 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.671434755 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.677300585 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008424326 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.671839065 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.68361717 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678770674 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73242163 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.684740357 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679020077 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.666623807 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735636704 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827069909 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962713415 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.060520266 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.060777142 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236981532 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672458977 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.677911206 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.718598015 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836052755 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672836259 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.697405794 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.672685263 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492072351 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.690576574 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495286307 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067739131 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.674994356 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.67550713 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674059669 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002210267 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674754939 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.031778483 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674316127 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.66549636 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726795496 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693312955 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681217772 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978889704 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027449161 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674609809 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679610026 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680433804 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.674875066 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069783524 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.974489703 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.368288104 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430259742 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677691346 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.687944257 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.318197936 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037236299 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675886158 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.678554794 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675170983 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.694240867 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.676417022 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.706261949 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696397147 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994272037 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061073968 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273622434 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.0567253 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.706579657 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.63743483 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697770785 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.018712924 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.595639292 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.969406655 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502197032 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.622156631 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020348817 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832761135 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974003538 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.679104585 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002118216 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.696098226 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.679676794 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679355245 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677423924 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.678529861 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.06146892 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500628606 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019378302 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.707659542 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.696605204 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739259092 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.971705061 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.987244118 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.692386232 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.988147795 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072541557 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.690007298 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.677642666 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505254125 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071622307 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679513156 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.707358038 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007222916 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.681158337 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.7457419 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.637251357 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.679870184 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.435086612 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.983919394 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730783363 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681300674 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.626469539 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506866341 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.682790109 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.372094943 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.683670389 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.690342397 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03868355 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.710563194 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.68719863 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056240113 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.708938127 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.699703643 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975667017 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.49748533 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.702689776 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.703390285 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701165281 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.689253571 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682343474 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.742833289 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68158842 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.685822199 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.243202366 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.683696858 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681853678 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724730568 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.681447271 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696221007 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.68283341 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683446548 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.714499938 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.680816465 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.679592357 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.704572558 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880659754 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405132804 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.690612821 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.408551534 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.110593463 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.023189122 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.696558829 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.660766708 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.718588795 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.685851113 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684407633 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684112903 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.682074864 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.436492169 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.699394386 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.068871118 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71498261 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.98375806 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984596296 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.700678138 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984975254 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689969863 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.739735898 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.66084493 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685107932 seconds)
  done (took 1144.129983179 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.788443907 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.768858386 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.701374805 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.761349121 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.701242037 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.822584632 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.725626701 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.721115583 seconds)
  done (took 23.532033159 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.681533734 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.70953946 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.678333257 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.70994461 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.691217298 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.334474866 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.697254169 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.711875512 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.736198088 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.698837331 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.680085715 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.513196615 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.712783658 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.687397119 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.686354319 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.713419772 seconds)
  done (took 38.191942565 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.919976346 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.911895081 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.393088395 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.706267117 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.690977254 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.686756326 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.115130143 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.701312715 seconds)
  done (took 30.669687675 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.724420822 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.723015965 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.723613806 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.725492118 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.725107641 seconds)
  done (took 10.165227156 seconds)
done (took 1437.850488915 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.7180411 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.716166211 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.718157665 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.716991246 seconds)
  done (took 8.41374591 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.665051121 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.666246805 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.666102791 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.703815199 seconds)
  done (took 11.245457541 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.21949139 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.432622543 seconds)
  done (took 6.196686185 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.688397177 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.538046772 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.522746503 seconds)
  done (took 9.293643975 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.093070983 seconds)
  done (took 3.638111872 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.17955761 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.281550818 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.680254033 seconds)
  done (took 8.687166295 seconds)
done (took 49.018702519 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.68089741 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.450252927 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.840832064 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.680583473 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.905495524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.842946299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.969534045 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.682307785 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.680427867 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.681464592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.680150877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.875946306 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.958631192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.453791575 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.956964779 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.455053048 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.845347932 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.693610759 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.689535729 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.696224918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.96848866 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.680730559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.69623714 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.70047455 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.847010922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.831599884 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.700754964 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.456319201 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.689860072 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.682690865 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.853970816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.696543045 seconds)
  done (took 93.071950702 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.683494807 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.683791493 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.682514794 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.684292465 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.696837915 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.683059696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.683471061 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.690630701 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.683266985 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.684223461 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.6831243 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.693855134 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.684755303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.683171722 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.684724573 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.683869017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.696315992 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.692214073 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.683818173 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.684259919 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.684747061 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.6848095 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.685360199 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.684889468 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.687753449 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.684487043 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.684454427 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.689930193 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.685574192 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.685178052 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.685774427 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.6849767 seconds)
  done (took 87.503662514 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.685217582 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.685864872 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.686251094 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.68427696 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.703634379 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.687490777 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.687419678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.696710385 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.705850933 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.704997611 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.685714084 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.702944418 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.686520472 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.695715496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.6858919 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.695627286 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.686758002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.688010745 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.694334734 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.695199019 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.688105241 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.686893634 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.698608043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.686407958 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.686349919 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.690313412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.685917252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.686548688 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.699007954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.687932802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.687859957 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.689163126 seconds)
  done (took 87.668888413 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.013934872 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.723725133 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.727407235 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.696848461 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.728514848 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.725738797 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.696942328 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.018231299 seconds)
  done (took 17.88354867 seconds)
done (took 287.674280235 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.698480443 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.715410667 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.759907597 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.705556621 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.752135449 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.756387317 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.013268517 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.758357679 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 2.005804579 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.701739027 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.744658452 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.700769561 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.704397326 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.926670214 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.692673 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.707200825 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.71471456 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.69207453 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.706175694 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.043723088 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.76083921 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.690893723 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.718473976 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.70593132 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.681058395 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.835360278 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.80870682 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.943413893 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.907965531 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.806054737 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.694139458 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.702069516 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.723734352 seconds)
  done (took 78.031449602 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.720335246 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.729202575 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.729760398 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.730831204 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.728411622 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.732988113 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.720428484 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.729256911 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.730030405 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.730184125 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.730390924 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.731671954 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.731252906 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.728700137 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.729690905 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.710982032 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.722553406 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.729988848 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.722284168 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.711896185 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.729174918 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.72962735 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.733897516 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.729485503 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.730491357 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.730060366 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.739166063 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.731646672 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.72962756 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.732602868 seconds)
  done (took 53.401684601 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.731359204 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.694940048 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.70114803 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.738273631 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.723922575 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.72803434 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.132490242 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.732767903 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.729998138 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.728529375 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.696358454 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.734740221 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.795524208 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.696201661 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.734134906 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.732263439 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.732519617 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.725174619 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.696537388 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.755105799 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.162217207 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.740063314 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.1495429 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.755236961 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.728442702 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.726378473 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.73859965 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.706587618 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.735546748 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.698507052 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.736559237 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.141268174 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.701741122 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.707260539 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.708004838 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.739456394 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.73529937 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.699324963 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.741113447 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.727479521 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.144801375 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.733972037 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.698277972 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.703855986 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.729981445 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.73690586 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.699324195 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.706260552 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.066553785 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.747635297 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.715649036 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.736467466 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.73792233 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.734183935 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.057591751 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.736384145 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.729101305 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.717805945 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.74126165 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.140348015 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.741258088 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.730696829 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.699594551 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.735190139 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.69898756 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.736852151 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.750773684 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.731236773 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.700389064 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.739599638 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.700392138 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.733063261 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.739265866 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.700439561 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.728880746 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.709736552 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.738045739 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.70170711 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.706449752 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.141709361 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.745391157 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.698870646 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.171326186 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.742330781 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.740754254 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.741249777 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.738291092 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.902944571 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.136396745 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.707417543 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.702890779 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.719891335 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.146426093 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.753338186 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.732873643 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.704128018 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.744651048 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.739828857 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.702677345 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.710171873 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.734172272 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.755676543 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.703658895 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.736706532 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.15178236 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.752414326 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.720009088 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.739509123 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.862264887 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.741232038 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.754571793 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.739098945 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.163951506 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.74521774 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.744753506 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.703636824 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.705343745 seconds)
  done (took 247.596591235 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.7073528 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.707675117 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.706778844 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.70607226 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.705721237 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.736229866 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.707016514 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.709165949 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.734686792 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.707356013 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.707023987 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.739285771 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.736528368 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.706077358 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.71028355 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.729812708 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.707715835 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.71021287 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.70972454 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.707168279 seconds)
  done (took 51.858080836 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.744811124 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.53479147 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.491109798 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.751423627 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.744132058 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.73674278 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.814697036 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.745946953 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.743272032 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.174758047 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.978768669 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.746180852 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.743316871 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.745114166 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.486531842 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.751680922 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.172513627 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.542644424 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.751151595 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.540117776 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.752804599 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.746195658 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.735138386 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.543142952 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.190908145 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.151819725 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.823675412 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.539484735 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.752173443 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.745364127 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.538776823 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.753137602 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.739696717 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.528241965 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.753655057 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.767365319 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.746099906 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.817618498 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.819621127 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.168794439 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.54795327 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.163546985 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.772656844 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.98413262 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.748592122 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.725757654 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.550653753 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.754491126 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.727328035 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.74881722 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.761216003 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.49935533 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.746095715 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.494578326 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.753127965 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.748235582 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.501398886 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.50034987 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.496981285 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.978976936 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.740663181 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.13845378 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.746774153 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.513111758 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.749485113 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.748377011 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.748188929 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.977001405 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.546234615 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.159820743 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.173581222 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.170895475 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.749645398 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.830929827 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.751909164 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.184762392 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.831517612 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.224584495 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.171595564 seconds)
  done (took 160.486470106 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.121398329 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.868589435 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.295422274 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.507457338 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.436221045 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.950804987 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.88964267 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.073679901 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.726069286 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.908649696 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.646351048 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.874385563 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.623796085 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.844555373 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.877438255 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.937459506 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.331889271 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.73540518 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.603158055 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.622016808 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.724314384 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.903054571 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.622220186 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.221995898 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.719885539 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.643689467 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.717540478 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.454315315 seconds)
  done (took 66.455255659 seconds)
done (took 659.381977851 seconds)
SAVING RESULT...
DONE!
