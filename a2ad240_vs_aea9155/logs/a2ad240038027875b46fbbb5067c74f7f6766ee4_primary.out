cset: moving following pidspec: 26543
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.166153741 seconds)
loading group "string"... done (took 0.571380062 seconds)
loading group "linalg"... done (took 9.670403129 seconds)
loading group "parallel"... done (took 0.17217811 seconds)
loading group "find"... done (took 2.483832197 seconds)
loading group "tuple"... done (took 2.265874592 seconds)
loading group "dates"... done (took 1.410647052 seconds)
loading group "micro"... done (took 0.584446038 seconds)
loading group "io"... done (took 0.558751919 seconds)
loading group "scalar"... done (took 53.650005495 seconds)
loading group "sparse"... done (took 13.483794203 seconds)
loading group "broadcast"... done (took 1.312347541 seconds)
loading group "union"... done (took 2.562491222 seconds)
loading group "simd"... done (took 3.567683712 seconds)
loading group "random"... done (took 13.484937505 seconds)
loading group "problem"... done (took 2.263069487 seconds)
loading group "array"... done (took 23.328692637 seconds)
loading group "misc"... done (took 1.104207805 seconds)
loading group "sort"... done (took 3.737624526 seconds)
loading group "collection"... done (took 20.472853078 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.791457978 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.162048889 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.244335331 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.893153103 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.302003488 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.20590677 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.201140802 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.177008543 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.674620984 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.2274732 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.194388755 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.403795064 seconds)
done (took 7.287150971 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.286662221 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.091167738 seconds)
    (2/2) benchmarking "String"...
    done (took 0.211535699 seconds)
  done (took 0.950564873 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.092573643 seconds)
    (2/2) benchmarking "String"...
    done (took 0.143037743 seconds)
  done (took 0.886032505 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.135523728 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.169338014 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.147797496 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.13235035 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.146366308 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.130172908 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.146229001 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.146493629 seconds)
  done (took 1.669169731 seconds)
done (took 4.577024914 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.527947584 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.925974804 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.57039076 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.203043977 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.352437485 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.359535175 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.315487325 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.271743984 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.135127029 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.096457168 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.226745105 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.501681325 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.471624429 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.960798157 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09872694 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.152038747 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.173876161 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.821226079 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.123714056 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.153618069 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.533940804 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.240329933 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.159636222 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.135600484 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.244549115 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.169907012 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.167550078 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.207125152 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.725440714 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.177279877 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.239118256 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.126725821 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166969557 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.20825267 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.281985858 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156277555 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.724405247 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.244659603 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124370355 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.142025742 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.727848982 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.167674884 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.240577241 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.14844695 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112584079 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177199838 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.141526727 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.120678684 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.152863642 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.142754047 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202480497 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.511288412 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.148671769 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.229743601 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.153198601 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.745029867 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.140899272 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.319847727 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.172107081 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.151085484 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.134332236 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.132965512 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.202486573 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.139126142 seconds)
  done (took 22.806220889 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.208940676 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.226795809 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.138815068 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.186148532 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.189922405 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.141179405 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.131448769 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.137719748 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.157595251 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.239296631 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.183196341 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.235360097 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.1194353 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.151216576 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.180843807 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.295803188 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.171900212 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.152307637 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.1492254 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.13821122 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.18597763 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.15747624 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.138900834 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.154139294 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.216303135 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.248800982 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.151368271 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.167359061 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.14818295 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.141807558 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.187238824 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.207046721 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.123555446 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.148008417 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.218262881 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.167123766 seconds)
  done (took 6.971267645 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.262884547 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.147059832 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.231646985 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.273389375 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.232741748 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.190871758 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.221399873 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.225375657 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.314604741 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.340441476 seconds)
    (11/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.226632032 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.226026927 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.17177366 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.139960326 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136276687 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.125489002 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.122114341 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.885354905 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.220154113 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205401399 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.216389458 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155270233 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.125827454 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.410750558 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.127810178 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.144102264 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.137070224 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.109896586 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.251288101 seconds)
    (30/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.126413073 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.154204595 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.521670319 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126870603 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156748913 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172234333 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.234859196 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.181143147 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.16476788 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.153728069 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.127954539 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.255128393 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159274374 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.122836221 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.140796675 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174610891 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.159867396 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.151233827 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165233931 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177917247 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.1311928 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168103639 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.12570111 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.888789839 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.249759973 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.180807001 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.144878689 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323992318 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.148214728 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.159982286 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.150526404 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.232170096 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.178481914 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.142559259 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.123387967 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.154096132 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.122704849 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.162762108 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.210865921 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.128947822 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.202023595 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153534538 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.144701083 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.412562379 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.14861422 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.130700001 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.16770729 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.130234159 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141330682 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.129042178 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.140808269 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.131291556 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.142648866 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.120087757 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.145193674 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.124093294 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.205562244 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.140884815 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.165781836 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1525305 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.146570873 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.145330213 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15687777 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.14090039 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.129251911 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.22011123 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156744443 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119000258 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156242914 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.188592628 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.147237369 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.255517548 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.129216432 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.168824192 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.144008466 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156373237 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.15607285 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.124467783 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.146183324 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.122904176 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.143642917 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.193105841 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.144595622 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.125793441 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.147974823 seconds)
  done (took 27.197037138 seconds)
done (took 57.620232574 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.405843438 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10858839 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107880408 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.128326374 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108106555 seconds)
  done (took 1.587042039 seconds)
done (took 2.299594383 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.236289894 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.337035666 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.249578525 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.148612264 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.211932188 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213815248 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.200273303 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.209100473 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.218167408 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.216515452 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.144402372 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.235474288 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.223539041 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.208295552 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.143345743 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.255532216 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.192630012 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.217415427 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.254018755 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146611591 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.146139464 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.165233372 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.144834899 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.147429572 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.146369661 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164487257 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.144713444 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163727175 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.13966378 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.149229032 seconds)
  done (took 2.38227913 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.172503291 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146201203 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.145809533 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.154658843 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.143886942 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.147242327 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.14447801 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161528082 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.150158131 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162727467 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.140097354 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.148857686 seconds)
  done (took 2.370888924 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.121422075 seconds)
done (took 9.905769372 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.084502925 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.557908167 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.194991905 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.271722542 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.39225016 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.292584203 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.565135902 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.233329253 seconds)
  done (took 14.426818662 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.212377775 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.156266729 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.137362929 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.15896379 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.136232617 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.155806684 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.140253659 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.156269662 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.139109868 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.153194062 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.137040681 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.15451064 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.140228726 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.154047522 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.140286345 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.155306621 seconds)
  done (took 3.203224726 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.162967582 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.18088208 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.142368034 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.162559778 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.14016098 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.160908101 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.142799305 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.161460616 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.140496078 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.157571853 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.145926657 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.160356355 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.142898269 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.157082266 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.142823819 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.164025327 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.140353253 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.160663029 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.144959007 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.16097913 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.143591863 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.158336197 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.14249326 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.161862553 seconds)
  done (took 4.468294397 seconds)
done (took 22.825497293 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.197288985 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.147278296 seconds)
  done (took 1.075890167 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.200393849 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.220951142 seconds)
  done (took 1.160264724 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.158944374 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.151369249 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.166142286 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.164880674 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.137593056 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.153900576 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.161313181 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.15475222 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.137047385 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.154942678 seconds)
  done (took 2.283069377 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.141245965 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.157449771 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.152271039 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.205915082 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.144972485 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.158504235 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.14258126 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.15880078 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.144418435 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.154728265 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.142012891 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.171312917 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.141547888 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.172669234 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.157628634 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.142039012 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.161542051 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.140601888 seconds)
  done (took 3.534764721 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.138420116 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.13974766 seconds)
  done (took 1.026019649 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.139361646 seconds)
    (2/7) benchmarking "second"...
    done (took 0.136630782 seconds)
    (3/7) benchmarking "month"...
    done (took 0.154724633 seconds)
    (4/7) benchmarking "year"...
    done (took 0.139093456 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.153901833 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.136465608 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.154772685 seconds)
  done (took 1.763909084 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.61154753 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.269685831 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.419215251 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102831024 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.15214784 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.363892852 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.154546608 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104309353 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103736865 seconds)
  done (took 3.057341579 seconds)
done (took 14.640136082 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.139340694 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.226325917 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.680778191 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.161001828 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.1543653 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.19759035 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.345376392 seconds)
done (took 2.660350454 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.367243628 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.18332862 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.118009839 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.139675234 seconds)
  done (took 1.555514218 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.130235626 seconds)
    (2/2) benchmarking "read"...
    done (took 0.144584448 seconds)
  done (took 1.030576095 seconds)
done (took 3.343496684 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.153738615 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.155412012 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.140939431 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.156546513 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.140910377 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.15798657 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.140537215 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.156040234 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.140302897 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.154952176 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140025348 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.157543917 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.137493951 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.158153282 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138338331 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.15651718 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.140501596 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153756703 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.138062809 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.156743885 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.139999018 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.154965167 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.141554104 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.156386717 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.140076892 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156724958 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.138547158 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.156367301 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.140519895 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.156131377 seconds)
  done (took 5.208798828 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.165711156 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.133172242 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.153906652 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.145018302 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.152243103 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.137220941 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.151686118 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.134516687 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.156595612 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.136159214 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.154929548 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.13653936 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.152217471 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.138197322 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.154133218 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.161341606 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.162341245 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.135297582 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.13305009 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.15598066 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.139477793 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.152063401 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.136255595 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.155244741 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.138166872 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.152289128 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.137490599 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.154432977 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.138564618 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.153442138 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.139947615 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.156450272 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.137347843 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.281042024 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.140785431 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.136536707 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.162910172 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.134760712 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.155209891 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.135378668 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.151942227 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.136819563 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.152852817 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.143350003 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.154213255 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.137050528 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.151190036 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.138032218 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.154715625 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.139060142 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.133449372 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.152037211 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.138539196 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.156083606 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.138551976 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.152002081 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.138298802 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.151390271 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.138004001 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.155041224 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.133774483 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.150243338 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.143498415 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.154404901 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.153324526 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.15957986 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.134751213 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.155928069 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.138297754 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.142069533 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.156970869 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.166346223 seconds)
  done (took 11.453782496 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.13883658 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.139237887 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.15600671 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137129239 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1553817 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.137261729 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.156129841 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137534948 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.15454577 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137065126 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154536411 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.137798319 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.137115551 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.156302069 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13720355 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.155244811 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.13870004 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154801948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.137592357 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.155080475 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.13787745 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.154571193 seconds)
  done (took 3.974600751 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.28179156 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.144942104 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.206295298 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.171573914 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.155783987 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.169597824 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.143368511 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.16363694 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143399031 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.167942376 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.146891584 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.163417709 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.155363751 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.167130332 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.167402502 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.149050448 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.162208197 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.149688378 seconds)
  done (took 3.781281754 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.138896014 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.137796643 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.157959892 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137797831 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.156906476 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.139749126 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.158150558 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.138073145 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.158009898 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.139257304 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.156981764 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139359342 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.137600948 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.157025276 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137964053 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.158168717 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.138476897 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.156962557 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138457272 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157710279 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.138749068 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156090869 seconds)
  done (took 4.01473672 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152555154 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.162159588 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.159131409 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.163510039 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.140889704 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.161064825 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.146076886 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.160932127 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.147059692 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.159941429 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.140675082 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.13964639 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.174824257 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.141962745 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.165216331 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.140404237 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.162050495 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.142653965 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.160112819 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.140598815 seconds)
  done (took 3.839061448 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.231985366 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.177239089 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.156271199 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.18437575 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.176804676 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.157553066 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.18417363 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.156927009 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.175647406 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.167981626 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.176198035 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.155801796 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.185312462 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.182381433 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.156952641 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.184335313 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.164179816 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.185754767 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.155516145 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.176381159 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.187059612 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.157250374 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.183874779 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.156076761 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.176425857 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.156044844 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.17700952 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.161526196 seconds)
  done (took 5.632060054 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.151080315 seconds)
    (2/2) benchmarking "in"...
    done (took 0.169476859 seconds)
  done (took 1.108339476 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.14253747 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.142411126 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.161437568 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.141765723 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.162721251 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.141372307 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.162376096 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.141940047 seconds)
  done (took 1.980480339 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.208061793 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.228422553 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.167539252 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.152513458 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.228975207 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.218985459 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.202114808 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.167290268 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.143986676 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.156227268 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.223908361 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.132344763 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.162938737 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.138139773 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.162870432 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147481953 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.162667473 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.149485071 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.168016618 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.142945272 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.167132776 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.146266225 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.165029995 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.148549547 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.156800456 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.144837831 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.166504833 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.151165732 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.159291485 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.143562948 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.160445752 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.142006885 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.165128121 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.147605502 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.161923035 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.231035664 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.149140683 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.159481104 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.14439427 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.16827957 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.17454587 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.162705397 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.144851731 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.160671479 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.146648816 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.166012801 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.147078899 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.161838108 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.135129893 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.158186037 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.141985235 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.157423999 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.142383539 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.162260508 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.144342238 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.169944865 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.144331482 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.159345473 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.13905176 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.157521358 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.142755444 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.159316209 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.155548901 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.165187137 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.144236498 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.164467074 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.143655908 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.163349474 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.144076911 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.142357069 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.162174254 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.200670769 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.145549514 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.167354103 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.14877716 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.163912254 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13952696 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168396204 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.142721082 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.162876578 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.146306734 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.189412913 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.144709953 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.157920012 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.138690751 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.168443138 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.145783553 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.144114136 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.156080253 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.17035644 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.145575496 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.144288111 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.156496856 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.141474345 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.159395689 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.14591653 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.156891599 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.145026683 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.162535892 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.14756695 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167026408 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.14092232 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.167660985 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.148173521 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.168716288 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.142465113 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.211475356 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.161028298 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.140340472 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.164576445 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.147303997 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.137496186 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.165161575 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.142342263 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.16126527 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.138639068 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.167367233 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.143075387 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.167148351 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.146956746 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.165126305 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.146181019 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.164923765 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.142111018 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.160798031 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.147795819 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.171348186 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.14615001 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.166407404 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.143563298 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.163985797 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.14552947 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.166903766 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.141824599 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.168590643 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.14196058 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.162471219 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.145074873 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.168238503 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.144734537 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.158705447 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.144113019 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.165869696 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.143136289 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.167228598 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.145054269 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.15924993 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.137218148 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.166130274 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.139666294 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.164887099 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.15356443 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.160220654 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.146370289 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.160225892 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.152579389 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.160249708 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.150675655 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.166547505 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.149715686 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.168166357 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.136759639 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.160215276 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.146815667 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.165475582 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.141830815 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.153776469 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.162930774 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.151370576 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.157466812 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.146217406 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.157384189 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.141562834 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.169409881 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.146443204 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.167721258 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.141855609 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.202786193 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.155721478 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.169886688 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.145458302 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.165499956 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.149131884 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.163958001 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.146950879 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.16944103 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.148936956 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.163198058 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.142723875 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.169999131 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.141597476 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.165191327 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.143625108 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.165672394 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.137015119 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.165469785 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.1375911 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.168339075 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.146740029 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.168942853 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.149385687 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.166527391 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.144564054 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.173308491 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.141891228 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.167555385 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.138728884 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.169530357 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.154061421 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.17077458 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150737115 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.166671405 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.14269573 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.144547012 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.172814295 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145607552 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.166600027 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.144822816 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.159755441 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.138246351 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.171493386 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.147695318 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.160341688 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.145087864 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.167502795 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.147282556 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.163470998 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.137262776 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.170536979 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.14850862 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.161509854 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.146523311 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.16269129 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.14410366 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.172739494 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.137347354 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.164290445 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.148028531 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.169859868 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.144223158 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.166742852 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.147233318 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.170663323 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.14797608 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.167325259 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.145455229 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.17218705 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.144920943 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.164743575 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.143400638 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.16746962 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.140902904 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.1656659 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.147380473 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.163508432 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.141765304 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.167772243 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.15166356 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.169999411 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.144551063 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.168770484 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.151584848 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.152066265 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.165356292 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.150749966 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.162397676 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.138470471 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.16249741 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.138897481 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.166852014 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.141977482 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.171794961 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.145494549 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.165272273 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.14885636 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.170198738 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.143592003 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.172179996 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.156282792 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.160849156 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.140126898 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164113398 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.144272257 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.163745124 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.143624619 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.167330077 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146437197 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.171134611 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.147292543 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.163186184 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.146069134 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.17272357 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.145777407 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.172669374 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.151753725 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.173888034 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.142560796 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.170658294 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.143639495 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170162071 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.141323069 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.167313874 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.145203171 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.167763023 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.145590023 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.164472661 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.142506948 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.160388064 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.144295095 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.170833316 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.144804028 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.169644966 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.147030568 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.16332887 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.142697895 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.164076452 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.154116037 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.164309372 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.153834786 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.166773721 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.14147218 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.159955187 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.152445014 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.166943855 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.153654386 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.161457612 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.150415706 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.151580239 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.170353227 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.144770924 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.175079527 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153645726 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.171929476 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.151553141 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.160424241 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.143733781 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.171919837 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.145519343 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.169228713 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.148370753 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.160925353 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.148899871 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.171580339 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.14818281 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.167120274 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.140499082 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.168122776 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.151653153 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.168635551 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.148924385 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.168566477 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147925585 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.162177397 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.150037096 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.170323684 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.147067025 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.172238034 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146736467 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.169184573 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.143838194 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.170737564 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.146917985 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.13984851 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.159882342 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.143751869 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.174229977 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.140355557 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.171909222 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.151575211 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.164126109 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.144462784 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.172117139 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.14312239 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.170962732 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.151109998 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.16692849 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.154354335 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.168619208 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.14486074 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.171544161 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.152692672 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.161982819 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.14701255 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.168245976 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.153464418 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.166545829 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.151154138 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.167113849 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.153003395 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.169355405 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.152172144 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.172123424 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.152401363 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.160660304 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.154136361 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.172361863 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.148163953 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.144783355 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.167032553 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.142047812 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.168193036 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.154596684 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.165048083 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.153959801 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.172308224 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.144445044 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.16733357 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.152004595 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.167623271 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153170875 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.165417474 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.149465376 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.161357111 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.149362359 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.16778656 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.15204643 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.16476781 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.141758808 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.172991621 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.151504741 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.173720205 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.150060563 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.174074161 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.141570587 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.161381486 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.148806842 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.166645284 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.157157695 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.170554231 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.146039032 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.16684496 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.149642424 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.168964503 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154262284 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.164511772 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.144946295 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.169048312 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.149783852 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.166657855 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.14416938 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.174022898 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.148259845 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.170621138 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.148585305 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.165860268 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.150010906 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.175187082 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.147668639 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.166972141 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.145969191 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.17475679 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.148494651 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.165721074 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.143401127 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.174424555 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.151935034 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.174963381 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.147317756 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.170168288 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.147657254 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.171806625 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.155678456 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.145413743 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.170382421 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.167039188 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.154080418 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.173959273 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.141492923 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.145482746 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.178649045 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.153637763 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.172818066 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.150446715 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.168954655 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.154663174 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176349869 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.151624868 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.165066801 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.144781819 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.168764547 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.143030759 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.172096885 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155041573 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.169644687 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.146947178 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.174707063 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.153664862 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.171657932 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.150163579 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.164627709 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.156034158 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.168679131 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.154437726 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.164618 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.143909012 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.172211633 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.155461669 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.168576046 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.149645426 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.171599475 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.152427135 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.144030606 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.168690376 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.152397173 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.174561933 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.154394284 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.169953386 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.149896156 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.174303032 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.158481675 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.172405164 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.148781071 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.178640174 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.155658481 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.17274145 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.151356608 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.174487832 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.155528227 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.174357018 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.156472132 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.168898154 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.150376804 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.178836428 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.157558164 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.181372366 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.148254886 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.166268979 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.153452893 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.169355334 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.143897349 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.176281914 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.155746272 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.177694873 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.150404182 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.168982592 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.157924343 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.17693968 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.149944067 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.169969729 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.147598099 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.175959875 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.14688027 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.176432073 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.147728911 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.180643083 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.155654849 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.177371787 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.158606552 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.16697242 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.157262456 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.174363304 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.158222844 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.172824212 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.146444321 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.167029061 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.154407973 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.177912987 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.156114545 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.153523783 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.175426847 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.154884151 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.174138415 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.150765191 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.170373761 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.156681307 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.176851539 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.152191001 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.175690428 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.150203528 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.174727457 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.151790671 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.178630118 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.156584437 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.176095089 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.159287295 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.176891 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.151668937 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.169981253 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.151299128 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.174388238 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.152488595 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.177229381 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.14782655 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.167573964 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.157035472 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.179359261 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.151455573 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.180323769 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.158007104 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.170481176 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.154109472 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.179772512 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.154824647 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.176054092 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.153099148 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.153877529 seconds)
  done (took 95.275674793 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.198930115 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.182314804 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.153739103 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.17549187 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170308738 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177901114 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.153778354 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.175326206 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.154566024 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.183727344 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.152785909 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175107952 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.168176414 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.196246184 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.189438824 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.163870349 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.174876917 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.155000786 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.152370494 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177110791 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.188540875 seconds)
  done (took 4.505729744 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.154578317 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.152930551 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.175545368 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152978113 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.175519806 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.153804545 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.175313565 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.152898563 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.175057387 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153118005 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.17499886 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154141319 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.15278556 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.174634218 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153171223 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.175436485 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.153548646 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.176057863 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.155009935 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.175084136 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.154317878 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.175264257 seconds)
  done (took 4.478525866 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.183257452 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.155831339 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.173446986 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.153388709 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.178860524 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.153400233 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.179778029 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.153224582 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.184253039 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.148230232 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.168091836 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.148127007 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.173645336 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.155203535 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.171940649 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.15464718 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.181903789 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.158605225 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.157020596 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.177994981 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.145794936 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.177818981 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.154761091 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.168457665 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.160004495 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.182174772 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.157426234 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.179922112 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.145583108 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.179774886 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.154146347 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.170991716 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.14678333 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.14580695 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.168538611 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.156203663 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.179992511 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.153685605 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.177005819 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.144710301 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.179890403 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.158627713 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.168967157 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.155461459 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.176986263 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.149426963 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.179220695 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.155571389 seconds)
  done (took 8.771260578 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.181618277 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.215870887 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.157461853 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.208641476 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.192271657 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.164773607 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.181006817 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.182969357 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.181685744 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.158435232 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.193697117 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.167876306 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.18359262 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.161301238 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.183960614 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.158105022 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.182650042 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.157811479 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.185635897 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.158734641 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.184844386 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.159675263 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.190319594 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.190216857 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.161774902 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.182472017 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.159970203 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.184321484 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.166854319 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.1856565 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.161002737 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.184225662 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.166969836 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.184013972 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.158159637 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.18182389 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.169284585 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.182016512 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.159467067 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.179776702 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.158761809 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.183265483 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.160194324 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.190378609 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.184395655 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.162220839 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.182453439 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.158122273 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.192491098 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.160825898 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.186349605 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.169252319 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.18384398 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.159373339 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.185314487 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.16633868 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.183579002 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.158771238 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.183887699 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.166115048 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.180417217 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.161813035 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.191199733 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.158785974 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.186941789 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.191116203 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.16343447 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.182748099 seconds)
  done (took 12.924842607 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.190391041 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.185014031 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.17029945 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.194704998 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.162931752 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.18550704 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.162126832 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.18466643 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.162514521 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.19168492 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.163402623 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.29288934 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.191405136 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.190730469 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.16529148 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.185724735 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163600064 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.185526037 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.164659416 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.187002202 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.16468463 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.193065682 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.162521994 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.193090476 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.174090993 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.18153775 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.16443369 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.187810266 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.194730699 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.164505975 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.19780183 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.162944533 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.186794913 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.171268008 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.199854954 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.16284487 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.183001204 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.163606979 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.185759307 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.185824329 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.1622024 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.193169816 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.164324668 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.183285318 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.163711111 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.187759421 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.171083628 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.197898141 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.168079684 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.190510539 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.16319694 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.193864807 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.186935573 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.164953308 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.194563359 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.175796587 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.193818781 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.170653335 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.186248894 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.194165612 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.171383666 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.201290612 seconds)
  done (took 12.1464138 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.159630565 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.159488019 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.182291617 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.158728844 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.182370468 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.159296305 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.183208074 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.159237358 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.182359992 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161382324 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.181995769 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.160277085 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.181877668 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.159976349 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.158820615 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.182521674 seconds)
  done (took 3.631237604 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.178080746 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.200152827 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.263808128 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.402186479 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.183984918 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.167478141 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.184281256 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.162100362 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.157082615 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.190705047 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.162820496 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.185020106 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.197473855 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.16272174 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.181258944 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.164100966 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.157733675 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.187876615 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.158212508 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.261508534 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.188708565 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.161311225 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.184231458 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.162274895 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.184568442 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.162561035 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.189432888 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.160863682 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.184706659 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.158896672 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.184872671 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.165563442 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.181148874 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.163606908 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.182779877 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.15965941 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.181956169 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.159678266 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.185402417 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.159060171 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.183460341 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.160711079 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.183167286 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.162634159 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.180090568 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.160846781 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.178528429 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.165401481 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.181639299 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.161566076 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.159661155 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.191100349 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.162830343 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.190440977 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.189139065 seconds)
  done (took 10.903054432 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.169222288 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.184082278 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.171895812 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.180749661 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.162885308 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.161257727 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.185673332 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.161728317 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.185732697 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.158283257 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.185979307 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.161344888 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.185662716 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.159858667 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.187492349 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.161319327 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.1819642 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.1617536 seconds)
  done (took 4.031628254 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.158905962 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.15813638 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.183178671 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.158693644 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.184007967 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.158324183 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.182942887 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.160384083 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.183486461 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.159119187 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.181577629 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.160588438 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15782391 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.183337002 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.158658514 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.185097001 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.158836469 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.182819477 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.159583702 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.184095268 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.159503733 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.182412443 seconds)
  done (took 4.675170355 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.170953513 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.261185379 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.164641887 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.268952218 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.182765281 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.154358456 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.190024094 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.155542196 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.199416629 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.178780137 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.158178355 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.176515184 seconds)
  done (took 3.192088183 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187880107 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.220040691 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.162746394 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.186421612 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168843049 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188587249 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167238865 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189336996 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172618599 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200524313 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164383613 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195757715 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194874921 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172988897 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193039353 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169016046 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190243466 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164216553 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185465135 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.178219451 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190043441 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194909842 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16719689 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188812348 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165824089 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196283759 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173189761 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.200266947 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164950375 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196282922 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168159792 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190541269 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19667948 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.177743831 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.186510659 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173891946 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190648615 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181201185 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194515378 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196215525 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.165566445 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193556248 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174122351 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195192979 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172218618 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18965226 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171092776 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19097652 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16601755 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.210727635 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193232324 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.174594898 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193338692 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174232701 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197244915 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.208898003 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17884027 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19781056 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170275215 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.202687367 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.173465984 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194694591 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198496262 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.179094004 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195081232 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172594155 seconds)
  done (took 13.117273014 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199651785 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.188162196 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167494903 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.20184543 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175193159 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192323828 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165779321 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191036444 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166186287 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.187713745 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.234723983 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167965564 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199968027 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.174313926 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192259783 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167485195 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191391307 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.17410105 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18865765 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.21050519 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168006141 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199491989 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174816085 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.199454624 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.200195988 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171804529 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191410933 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168509697 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1906908 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168243043 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19650334 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168894662 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199276877 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.163124794 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199446243 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167446223 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192443327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172449933 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192582591 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169872789 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.199443099 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.205320243 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168586522 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193273251 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.177751794 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193639708 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168416598 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189094507 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168121728 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189193752 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.178378549 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.202478472 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201759455 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.174902059 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193089848 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168224255 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192522177 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168335303 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193451485 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173689615 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199998896 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191960165 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190394393 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192902114 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170347291 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.20136129 seconds)
  done (took 13.190924559 seconds)
done (took 232.597533184 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.313384893 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.341762874 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.154439541 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.767219421 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.154480608 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.916911222 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.863872425 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.248844703 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.178349356 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.156444196 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.177584804 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.173290402 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.564159521 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.155914659 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.177284486 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.171412929 seconds)
  done (took 32.461525381 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.349057516 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.395527741 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.169651112 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.183790341 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.161052464 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.185566056 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.157386006 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.186062766 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.159268787 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.190059854 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.160225752 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.180369934 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.165944357 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.17952709 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.160241746 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.183388055 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.16688924 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.184113706 seconds)
  done (took 4.481455428 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.180786049 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.232851677 seconds)
  done (took 1.378445541 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.19044405 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.281961833 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.383679447 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.233104084 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.181714239 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.20113256 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.208635469 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.195527099 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.273692695 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.172339234 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.196312883 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.158351562 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.2106198 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.187961961 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.177650873 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.180495439 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.188759199 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.200390845 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.183640671 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.185266367 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.185039383 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.185624722 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.164545156 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.200658548 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.264306585 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.172808218 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.187013237 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.161825607 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.185851846 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.174225368 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.191695537 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.179892848 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.196651054 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.242994727 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.163065848 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.236870904 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.19102932 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.162649943 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.199828065 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.160890711 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.187666183 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.163264197 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.195606089 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.158423847 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.184757503 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.164839258 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.184012157 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.160902444 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.191949549 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.162883213 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.192396324 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.190287187 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.212197445 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.189081586 seconds)
  done (took 11.497327279 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.996165225 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.209696988 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.184978481 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.12594353 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.179949489 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.198139233 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.012243317 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.188468799 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.316485288 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.053842461 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.177259692 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.192326272 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.30518832 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.341595674 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.344246011 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.441309751 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.82675695 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.197919303 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.215077351 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.202104751 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.189731529 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.198918801 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.176703964 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.518332115 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.160268634 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.185290322 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.16470153 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.194034032 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.239337349 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.161149124 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.188801174 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.260574406 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.357123137 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.271371101 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.160958038 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.185320494 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.159167098 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.248871243 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.351426253 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.279233274 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.251755548 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15935965 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.159657035 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.190935313 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.199065538 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.15955779 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.24662396 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.257763365 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.255844266 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.165064775 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.194387918 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.191994108 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.165214515 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.244822264 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.158187714 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.448140298 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.423469353 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.184873649 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166089696 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.197533918 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.328890357 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.163074928 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.324610832 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.181163959 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.297458776 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.162323016 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.865919053 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.250458595 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.184346277 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.166205423 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.189737675 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.167057348 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.188024259 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.220109834 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.492307995 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.19342788 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.16628155 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.185042595 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.290577454 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.161531715 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.185362329 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.242732822 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.162255131 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.191675282 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.169831722 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.192839187 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.253566114 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.338313902 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1682971 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.192288488 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.165963353 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.196453194 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.16271755 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.293559537 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.316677002 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.215110804 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.292368324 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.192292609 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.246090303 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.250265973 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.166459715 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.252680177 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.19183033 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.172972485 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190503066 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.288145022 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.223347746 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163839271 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.19229212 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.166698153 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.226761448 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.191493625 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.16865329 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.252536024 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554491042 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.249901611 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.183208005 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.167639544 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.192321454 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.217729853 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.194087041 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.324183822 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193948616 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.252451097 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.166972629 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.18506236 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.167039957 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.247677585 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.195135498 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.169116198 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191587142 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.16977103 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.3448097 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.280490348 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.197787791 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308970714 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.259851899 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.166843633 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.257145479 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.194516286 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.249784068 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.17166771 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.192140495 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162478483 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.940160338 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.175044117 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.191870139 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.167398941 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.269625419 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.161055537 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.191895422 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163126331 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.187571129 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.863987173 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.166635366 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.188045491 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.184313382 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.192629733 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.166916058 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.195040934 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.166421303 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.246086043 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.334233634 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.170424116 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1930492 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.162179701 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.240637723 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.190684863 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.163284242 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.187611637 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.163322934 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.196232356 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.168669564 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.191407231 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.252853383 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.24138733 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.293713468 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.63008627 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.187031396 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165362927 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.302762592 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.188628736 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.390410819 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.196257289 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.298280249 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.249476976 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160627898 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.451463765 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.249059465 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.242918182 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.192389409 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.258759162 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.161035771 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.19537219 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.246916664 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.163148959 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.195920794 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.24387347 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.17294839 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.197590978 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.326572255 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.18848137 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.311870036 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.162594768 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.255919555 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.165847207 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.194168896 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.392160064 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.18936605 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.174077025 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.244516079 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.19295261 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.164900089 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.040076325 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.190467447 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.171990935 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.19527602 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.296709658 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.249152004 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.194978356 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.173021793 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.197842337 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.24611796 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.294678464 seconds)
  done (took 61.951650208 seconds)
done (took 112.727472539 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.323087804 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.232602344 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.427059335 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238172885 seconds)
  done (took 2.281641472 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.349256773 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.205492542 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.308834454 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.185292767 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.28746847 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.189025783 seconds)
  done (took 2.53609422 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.2326219 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.231388433 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230237518 seconds)
  done (took 1.708689422 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.274202816 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276310416 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.412884278 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.328530604 seconds)
  done (took 2.366637615 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.343055217 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.180366023 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.219964843 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.291477778 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.30864267 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.269978117 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.188248799 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.240208409 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.218722157 seconds)
  done (took 3.311171833 seconds)
done (took 13.213194499 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.206451882 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.222099123 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.187120792 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.203166757 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.197239537 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.224849822 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.192891289 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.221909155 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.192922647 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.203373278 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.190715105 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.200658268 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.283076221 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.19626581 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.199592839 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.191556832 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.200097652 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.202003481 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.221499815 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.175099571 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.224282572 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.174898567 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.200439874 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.184602455 seconds)
  done (took 5.907708585 seconds)
done (took 6.9271957 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.269316999 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.180335363 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.171824155 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.200035284 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.27927909 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.180288988 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.215290715 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.174797857 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.209297915 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.17399098 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.188567206 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.187070157 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.196993835 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.24864349 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.202863018 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.163362394 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.190266444 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.183371922 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.216581383 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.189137599 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.27851349 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195766654 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.183595554 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.19190939 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.283106671 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167757366 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.198312718 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.175380752 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.213182417 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.176343864 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.197897792 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.166599537 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.213366448 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.190116006 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.189307104 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.177968721 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.165079581 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.159343797 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.174551876 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.202511786 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.187884297 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.202084916 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.173560618 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.191133453 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.174423927 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.201641773 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166284065 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.202749317 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.16431 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.201227265 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167894744 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.21469022 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.174759723 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.188739015 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.164368388 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.189997206 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.184552449 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.190234457 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.189268761 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190936152 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.167094502 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.16632122 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.20392258 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164804197 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.202107265 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.163912394 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.202269576 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.175750702 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.20062691 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.168141773 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.193013441 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.173502371 seconds)
done (took 14.857846658 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.17123651 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.23772618 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.248992557 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.283354608 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.244692988 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.208980485 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.180121997 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.217144582 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.179822239 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.210428086 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.201743113 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.226488648 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.287253777 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.182210531 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.209435082 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.178474162 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.204829749 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.173540573 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.286452069 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.219043847 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.189881758 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.212014671 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.190448031 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.212825108 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.169722491 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.222699688 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.173902561 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.206893488 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.170419856 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.214603268 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.191226063 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.197681703 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.172327221 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.217372684 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.212615445 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.18371149 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.206507267 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.180471274 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.194362286 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.171221284 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.204367469 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.187051859 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.196365474 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.182455046 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.205554561 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.185991598 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.203076034 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.183318354 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.200137392 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.177938619 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.197005778 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.194670146 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.211330994 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.185483014 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.210080346 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.185146589 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.21050987 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.182548912 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.201615512 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.182392957 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.198366286 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.17070376 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.199615258 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.191727663 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.202385722 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.183166868 seconds)
  done (took 14.305854118 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.189157993 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.226926693 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.182912855 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.209209146 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.174137647 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.192549415 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.164104248 seconds)
  done (took 2.394024687 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.167049944 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.295673773 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.289941549 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.290164273 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.285620049 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.270858535 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.219479656 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.163930134 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.232010789 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.202452421 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.265931513 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.328062947 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.206752967 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.180706708 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.294817658 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.195278674 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.295426604 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.273112104 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.181814461 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.293806985 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213628842 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.20678279 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.207908981 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.166791252 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.287390666 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.193759625 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.342233743 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.186593002 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.203170738 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.181876131 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.207987832 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.249080068 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.286301212 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.210473133 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.175807203 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.287431035 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.286982444 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.209071489 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.271810543 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.201809113 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.28917071 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.180995642 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.212137451 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.181345826 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.211523686 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.276592785 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.18850826 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.211590873 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.182000239 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.298014853 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.205796701 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.261750115 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.210897209 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.182197331 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.206179711 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.209746505 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.192245886 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.208352333 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.269753856 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.215497795 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.289581727 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.298261672 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.28839659 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.262364439 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.223663358 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.294573703 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.279580245 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.181136722 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.287815371 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.210656746 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.263218528 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.210670645 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.204743424 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.251917579 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.215943103 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.295858363 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.293950649 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.179620747 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.208470086 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.171926333 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.207002999 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.167948662 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.295459011 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.180824042 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.209276613 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.21333467 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.181169965 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.207562847 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.256722171 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.220587967 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.209209495 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.180770543 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.214965814 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.183526341 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210874512 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.297524077 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.177860816 seconds)
  done (took 23.488891011 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.171608275 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.167532897 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.199934712 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.168249887 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.195555943 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.167811633 seconds)
  done (took 2.159158578 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.205598142 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.208876492 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.191256374 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.208468339 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.23451376 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.297163417 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.302967507 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.204983749 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.200296001 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.219016468 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.2993799 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.300663234 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.271693279 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.216427801 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.304285831 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.184894183 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.304098378 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.209913425 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.191921403 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.209336746 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.182935973 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.216505255 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.18133989 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.290862686 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.214599147 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.186001935 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.204535577 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.19223492 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.2207273 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.178244385 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.216009662 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.184290684 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.203898065 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.176856638 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.303650835 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.206939863 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.178744727 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.215748665 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.184912062 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.215244201 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.306588289 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.181041738 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.220138818 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.185725503 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.207426447 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.176608143 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.215065826 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.177038714 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.306862136 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.218060132 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.187802653 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.215060658 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.185107059 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.216737687 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.176466016 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.205888892 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.213965477 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.278873452 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.218832926 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.203629107 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.186001097 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.212013972 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.180117178 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.215085522 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.185681713 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.214169833 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.178130892 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.213828169 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.182271922 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.214093147 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.187668977 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.21188288 seconds)
  done (took 16.690004714 seconds)
done (took 60.080035669 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.631656931 seconds)
  done (took 2.717308465 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.182321649 seconds)
  done (took 2.271512529 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.778042516 seconds)
  done (took 18.903400356 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.485746966 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.415458069 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.101095467 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.213921407 seconds)
  done (took 3.30898175 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.143803482 seconds)
  done (took 2.254716539 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.480448596 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.348141688 seconds)
  done (took 1.923348772 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.817390885 seconds)
  done (took 1.926194664 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.816719152 seconds)
  done (took 2.915871774 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.335328605 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.312767427 seconds)
  done (took 1.759176499 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.686819811 seconds)
  done (took 1.801170876 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.7771035 seconds)
  done (took 14.893620481 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.321127009 seconds)
  done (took 1.434703044 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.357515365 seconds)
  done (took 1.477115979 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.636869396 seconds)
  done (took 4.755174942 seconds)
done (took 63.440581796 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.185752183 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.214040277 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.188949517 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.211521242 seconds)
  done (took 1.904464108 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.190147365 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.182622105 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.217628513 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.184220144 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.219992012 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.182995896 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.212942791 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.185513465 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.213847236 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.184346418 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.212398588 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.183057357 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.214645452 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.181770392 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.211780981 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.186894507 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.215912932 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.18435857 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.215538163 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.184413605 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.21273683 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.185252119 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.216172741 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.188188875 seconds)
  done (took 5.881283438 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.182667922 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.173605736 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.205663514 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.172654567 seconds)
  done (took 1.859614062 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.196042527 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.225671924 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.198493328 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.221111358 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.200578649 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.226156832 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.183800188 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.209208657 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.185514303 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.223078717 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.202133945 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.227899861 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.198795462 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.217260938 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.19712353 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.208237025 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.189296209 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.227345461 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.196189124 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.225067099 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.189593523 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.223119784 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.186275154 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.224638761 seconds)
  done (took 6.108385082 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.262057487 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.225208457 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.211162257 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.243585444 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.182507985 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.241181577 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.25838167 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.193707035 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.218336075 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.198087899 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.214218861 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.187025739 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.260013651 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.19076099 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.217040519 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.185661389 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.22462186 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.189648837 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.257358076 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.21733909 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.192427473 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.225789955 seconds)
  done (took 5.923447178 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.275849045 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.206029342 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.17421119 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.204113317 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.186410157 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.208142529 seconds)
  done (took 2.377498005 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.176621412 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.169710478 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.199873042 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.170792459 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.203094961 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.171164853 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.197447245 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.170825355 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.197790305 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.171502186 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.197947798 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.170901621 seconds)
  done (took 3.327002198 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306235311 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218359402 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.350563993 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.466636993 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260886458 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229934198 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.38204565 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.25685906 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.27877728 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233144941 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252416875 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257980432 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.24993709 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28007549 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.240553356 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.242643496 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241354505 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.332465742 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238320739 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332608776 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225298483 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274902905 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.289881905 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24517161 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207126968 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26049374 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.184915903 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.224312742 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265184141 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231462884 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269355273 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24865236 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237856085 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254762705 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308206442 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269713907 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.397056427 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203125621 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.255470475 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.290703797 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.33001103 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209679387 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287064577 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251629624 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198829963 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.311933242 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246178861 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.284674259 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.201909125 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241159228 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276763547 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2471037 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.267605468 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234917303 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396123138 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201583456 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.238497926 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276376835 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256055746 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298428383 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278178112 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.219464291 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269109291 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260853842 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312981072 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.239382676 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.260462731 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192267466 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263789551 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308616061 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281999269 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227351676 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.284503776 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229040857 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270396466 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234616358 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251445313 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305018466 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268741577 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.18747377 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247005223 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201303811 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224621929 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.256309409 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219073738 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317636063 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198454217 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.271314599 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276280943 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249239307 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228763238 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257511168 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260985283 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216135446 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.185198411 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210874441 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.258894864 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223743676 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226978445 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248970836 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206980301 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.222665606 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219113828 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.221123371 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266226522 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.191586583 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257709727 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237033774 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.232175475 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279261001 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21535483 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.26329668 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265495843 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296896693 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198501569 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23101988 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319869586 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266723722 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.20570472 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272058898 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.297112922 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.206238587 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233563151 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258382508 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262511036 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242276968 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299016795 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203878789 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.235012008 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.221847135 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241396689 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258388025 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.258495231 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196148058 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.264487055 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286167676 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.195017117 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238422358 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280215173 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200180065 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223622291 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203819355 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234694439 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.210327515 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.250521313 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.236970428 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221406507 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266155633 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.265133296 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221777155 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231896388 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270445564 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198880389 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.271199151 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246187033 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.18765403 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.273686689 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298518618 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196698058 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281608158 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.260290642 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277794125 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272152066 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198256566 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.283849853 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195940769 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.219478818 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256686972 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239855851 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263553138 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.292142737 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273467807 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.263299614 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.234091919 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2479749 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268508027 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.2827421 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226940521 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.239238803 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270647405 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237506389 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.220083294 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.191866996 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.226580699 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204417824 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228904667 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205427799 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273651279 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262395867 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273441615 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.268562154 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204914047 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.294648223 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.222435129 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227243702 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.275609419 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236887735 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.258907086 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291656642 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279282372 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239399088 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229013061 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.219727523 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1945276 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231964623 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.25903273 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206338041 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234425132 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208886549 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.291858413 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268826644 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247951084 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287298755 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234418147 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.302506974 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.222405797 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.229506908 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264908408 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268679209 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.2580252 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23127983 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.257719994 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262681378 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24170001 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295560839 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267097233 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249379407 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292817124 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.267590941 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199380941 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245555457 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260437169 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207718034 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.262525773 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.242859863 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201565297 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247093363 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.207058454 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.24091199 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28844066 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211091997 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274512492 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.256203879 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266667989 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195118806 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240211412 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27335145 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214306372 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.160504349 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264224173 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293507226 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249060932 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219878589 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267985196 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228378902 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.416202228 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281492151 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272071749 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235248002 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208592378 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273437076 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.226116044 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257309816 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.286698678 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23986039 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278675871 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272906283 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.24066133 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199347836 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249832748 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249601364 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.195520324 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.252750437 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.233673361 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.244403356 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286189186 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203695805 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272474802 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281309795 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.244677064 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.21932398 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23845218 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328223582 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238940371 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27206246 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.268221678 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.262444757 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254684971 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226313276 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196995302 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.232625462 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.286364069 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200830776 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27985521 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.263513886 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278809547 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246063274 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264623945 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242119057 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.196846889 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.269098046 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216365852 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.313903605 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204606745 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.237521964 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283211573 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.185498379 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20008529 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263535956 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392746452 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249032925 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238060999 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.1942812 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.381079047 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200306128 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231865867 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228283499 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270037342 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.232071131 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.255216742 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279607064 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208763698 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.263707137 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235025837 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.276394296 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25216405 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266817728 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275419731 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.245485407 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231978522 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256522076 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271498142 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216430246 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.249272132 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227418724 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297937119 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.277435489 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.232696072 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23993498 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273801088 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273511666 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241669069 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240689406 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287266488 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197676325 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267334903 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239976396 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195686197 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260231835 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.263856737 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200467252 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274413737 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271763749 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202507595 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228880292 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215210537 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269670675 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242216277 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.202262313 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284903828 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.23204983 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254309365 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312895935 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232085658 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238510708 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245386791 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232349239 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210520416 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246061668 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201581989 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.27905902 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24718737 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.232169817 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274772162 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265185887 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236655514 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254941358 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212807229 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.369808549 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.22980583 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262101835 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256166235 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.323296699 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.251144506 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247067661 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274594346 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251524722 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235004256 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248997935 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.325002711 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237238339 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.271348263 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233307811 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213753439 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240217559 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.204918307 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255295872 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273209183 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211938683 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.239134599 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.238208574 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247761395 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.248029656 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213721522 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.304256987 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.254279402 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290763092 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.25854894 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24301973 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279389928 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243059051 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232297347 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.268094078 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243782677 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.247060677 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255343644 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.207386917 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.240875882 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317580468 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.198276681 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26289181 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276666118 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244111001 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276648867 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.206413469 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281137287 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244685305 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279651833 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19986976 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.254969294 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243076301 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238742092 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.19825936 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275845273 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261423118 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.268534148 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214357636 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.280493141 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270272917 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.22651002 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204790916 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390307106 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263288858 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301035837 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.190728234 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241439153 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215633915 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262073271 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.269804212 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242906797 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.233656668 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232214725 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.218210989 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.247404366 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.197438725 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.276394994 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285499574 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229692686 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291866584 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.238517133 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.326870966 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246353325 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275655025 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.175846593 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.199608972 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244710238 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235937335 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215958258 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.282166748 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321452051 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.269427418 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.218576957 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239909838 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.198233519 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234968497 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233271982 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253956108 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273800251 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220308672 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.196035264 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21281128 seconds)
  done (took 121.703597716 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249548703 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.246897179 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.265345754 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.320449898 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288830654 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.388291556 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.324685353 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.341744296 seconds)
  done (took 3.688509482 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.192348831 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.240995172 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.24472721 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.190895294 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.214535382 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.551405804 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.240537921 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.190918482 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.267926598 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.228235728 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.186068774 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.648925468 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.226284153 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.220871244 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.223058463 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.182327725 seconds)
  done (took 5.501873318 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.129103149 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.628923972 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.066716236 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.372733991 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.339842658 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.289087251 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.888204499 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.27459742 seconds)
  done (took 13.250252634 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.248483554 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.280874684 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.459371055 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.386057123 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.298896669 seconds)
  done (took 2.942376751 seconds)
done (took 175.574448403 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.197765582 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.197619684 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.229697436 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.200147379 seconds)
  done (took 2.076316898 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.239401672 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.151378957 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.185562564 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.149921089 seconds)
  done (took 1.996676673 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.476040983 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.151870919 seconds)
  done (took 1.919427463 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.219486919 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.239492606 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.209700759 seconds)
  done (took 1.947510015 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.211485343 seconds)
  done (took 1.486552235 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.194020343 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.192568622 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.318745002 seconds)
  done (took 1.97922152 seconds)
done (took 12.675981702 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.21901151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.056013268 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.659274409 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.209332346 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.827856043 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.472564004 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.537412893 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254238057 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.28206485 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.217775179 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.218637719 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.799967091 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.490658484 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.992746634 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.504197287 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.960030183 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.76976758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.218244792 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.221635237 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188300481 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.50708208 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184694506 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.186305955 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.219316507 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.76721991 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.525805482 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.184197446 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.002409175 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214212086 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.196706648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.474472976 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.21815791 seconds)
  done (took 24.03492609 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.189187257 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.276671705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.241398504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.220499269 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.194799842 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.219467085 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198003601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.231760198 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.323197105 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.186368601 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.240646733 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.185198341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.223667758 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.186069472 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.242360149 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.186757339 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.220492983 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186688963 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.224177111 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188620145 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.240668664 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185350525 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.219229136 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.18746085 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.217001617 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.204449183 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217327077 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.198413849 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.218605453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.196683321 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.221042914 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.187705713 seconds)
  done (took 8.143610581 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.230076814 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.287347854 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.24093413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.259189873 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.277415585 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.188817586 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.30954048 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.222891542 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.329749055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.218279713 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.208129958 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.219720119 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.228008045 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.220847637 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.212721255 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.218685979 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.189459567 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.22041511 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.19407014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.22172631 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.209487394 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.21777965 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.189573269 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.220587338 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.186428107 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.240261488 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.186217535 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.230609493 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217216239 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.196924484 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.223087028 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.189786844 seconds)
  done (took 8.495398193 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.201027938 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.201964091 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.242825432 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.210380664 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.230420432 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.200825957 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.234895234 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.196902972 seconds)
  done (took 3.013583362 seconds)
done (took 44.960337067 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.212325115 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.203474898 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.23965352 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.203266631 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.312188721 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.228061055 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.206559647 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.227784623 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.203376072 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.242973985 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.18649739 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.22796181 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.208531546 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.229405569 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.282487528 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.238890923 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.321893168 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.316936742 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.196615995 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.237398275 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.196685207 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.321078539 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.200397481 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.23029807 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.262190953 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.226347079 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.306472143 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.198187354 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.233104084 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.188003446 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.318349561 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.19772256 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.232859011 seconds)
  done (took 9.115697395 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.299570637 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.231023652 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.195598127 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.229732217 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.198215499 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.228811848 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.337626314 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.197853162 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.195617403 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.229943416 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.194877156 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.320599009 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.236151888 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.193134825 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.231494801 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.172664485 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.338223946 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.196235988 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.221486964 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.155718266 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.191753574 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.246431896 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.350145154 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.192935219 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.230419106 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.196664185 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.230584351 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.202608307 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.232834007 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.199152211 seconds)
  done (took 8.179081362 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.203162916 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.211833223 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.249762348 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.298538103 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.226389404 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.242879 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.215029998 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.24327472 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.218348367 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.224406819 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.206302771 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.259271936 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.208257768 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.234833284 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.189222805 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.240328606 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.206429952 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.223869599 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.1992583 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.240634022 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.211256962 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.23904618 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.211787337 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.231402052 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.188047028 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.230618921 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.201092401 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.236514154 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.198359582 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.238354961 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.191735974 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.22511061 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.192551651 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.25770833 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.191557739 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.237351342 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.211226022 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.238290219 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.203850084 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.257070261 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.192904908 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.224248419 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.218246748 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.28391257 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.191670463 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.234853468 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.193169327 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.24019933 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.189086895 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242012758 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232588376 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.223984698 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.21182079 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.225439492 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.188495618 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.232677144 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.191540907 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.22743849 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.207681717 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.22582306 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.212363178 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.231001372 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.205657018 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.226838413 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.203818726 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.22210911 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.191642248 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.226910349 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.218836906 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.231695386 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.230098045 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.22282226 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.20276503 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.23793738 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.202521703 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.202278795 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.225407714 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.20361884 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.235765736 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.708460064 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.239934701 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.19324308 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.226245321 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.208302676 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.245683686 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.204738187 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.235707698 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.20089077 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.2265052 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.192597466 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.242835908 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.19172054 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.228088641 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.204510224 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.225103066 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.195349492 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.236129329 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.199553798 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.221667434 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.219602437 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.228407746 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.191022126 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.251751078 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.194691308 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.22834482 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.202399342 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.265006465 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.192739733 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.233525017 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.203223468 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.223246196 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.200115322 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.225305117 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.191838082 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.239934422 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.208539718 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.198964547 seconds)
  done (took 27.483584541 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.416013936 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.407846697 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.296002097 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.454766629 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.240790537 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.329193119 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.40821022 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.409449972 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.19351993 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.259783594 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.281764392 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.372062467 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.193826743 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.255238253 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.416609682 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.453418832 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.258207975 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.264333963 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.226693073 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.241014168 seconds)
  done (took 7.710247651 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.201616071 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.260662686 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.217118741 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.243291832 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.204032999 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.238843501 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.19243753 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.245640315 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.204819202 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.233549113 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.196894381 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.198994021 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.24082392 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.207395717 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.24139627 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.248953027 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.199500858 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.230849467 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.215519795 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.231116402 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.211167007 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.250655408 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.200062243 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.24943137 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.210149978 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.235649939 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.192590553 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.229737525 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.199241468 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.234630256 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.19746303 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.23433776 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.20124703 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.168691354 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.239597088 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.207833691 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.23212903 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.197024495 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.231554725 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.195524654 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.240979318 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.205881139 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.233948954 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.202086801 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.211223857 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.208616194 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.208069476 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.23929747 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.170271443 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.21170674 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.238633767 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.207543152 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.233047443 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.21477836 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.233277221 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.209975933 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.236555989 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.207039107 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.231114096 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.191782488 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.224488393 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.194916755 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.234876167 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.206830771 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.238697044 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.201051474 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.234628021 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.19306645 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.232372985 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.19592275 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.226759911 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.20729305 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.24803643 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.202521214 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.233429056 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.204222409 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.235892777 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.159738888 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.200502033 seconds)
  done (took 18.525197793 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.219279351 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.236539647 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.212144505 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.258731366 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.206810447 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.199217443 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.239145774 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.211758004 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.244389248 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.211352156 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.243233166 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.20638197 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.2510637 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.236676885 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.204860618 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.208627019 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.239639273 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.264484541 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.207926441 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.254697472 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.208784441 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.232337716 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.206613634 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.237087481 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.223507402 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.239202974 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.222165263 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.239270232 seconds)
  done (took 7.719877717 seconds)
done (took 80.027462503 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.525334682 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.755048041 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.442979237 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.448218869 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.45361334 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.450697956 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.440794252 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.442659782 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.963182678 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.417628317 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.442987338 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.440263458 seconds)
done (took 31.61429383 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.516884514 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.199351887 seconds)
    (2/2) benchmarking "String"...
    done (took 2.240435742 seconds)
  done (took 5.786976682 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.199035716 seconds)
    (2/2) benchmarking "String"...
    done (took 2.207987691 seconds)
  done (took 5.739275574 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.431712161 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.432322644 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.925948823 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.433928156 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.431820835 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.433051228 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.43450679 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.44784885 seconds)
  done (took 17.87186541 seconds)
done (took 35.680391202 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.486470032 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.775529765 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.728019813 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.440238664 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.435058257 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.435538137 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.434955451 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.503620258 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.439308099 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.435760232 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.946698041 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.737934343 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.445732799 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.874281289 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.437755597 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.444807611 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.450055486 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.828813706 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.4400774 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.482131421 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.424137385 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.447589181 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.437027083 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.459543633 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.447100082 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.449497942 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.493565209 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.44244516 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.761607464 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.462324992 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.481818044 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.435271971 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.485825886 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.43629361 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.462851456 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.440697591 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.85535507 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.454104255 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.437020797 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.436779635 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.850769641 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.453033308 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.435064473 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.436297731 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.433398898 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.460780382 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.435820784 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.62274211 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.468247673 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.439920328 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.502754784 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.914651018 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.438868448 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.438573579 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.448100209 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.823986347 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.467559807 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.571605161 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.468171057 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.443984811 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.437747146 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.443992564 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.496496796 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.451926533 seconds)
  done (took 160.672467292 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.437448575 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.437154264 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.436097495 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.442130525 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.44209288 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.438504855 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.439809141 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.437542931 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.438667375 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.467262562 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.443742881 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.437784372 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.440999446 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.447816793 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.448076323 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.462491634 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.443037414 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.458695131 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.448474977 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.437839407 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.452538832 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.4442889 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.439611839 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.438692727 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.463741654 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.534732873 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.454542718 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.468673006 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.454092032 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.43958083 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.461896237 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.453176204 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.202726478 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.396672021 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.446346006 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.446711205 seconds)
  done (took 89.220791277 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.439020423 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.439505959 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.439659889 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.440066226 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.476281167 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.439339318 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.065297759 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.076914739 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.52009875 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.069916224 seconds)
    (11/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.848805703 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.003907061 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.794317769 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.445586831 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.534878632 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.455357417 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.442299192 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.537672703 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.466602212 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.446303193 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.44220302 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.06856235 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.462044021 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.981843781 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.632973927 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.441771122 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.47686099 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.847542066 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.442626608 seconds)
    (30/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.441562366 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.476926291 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.782096312 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.478970336 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.442015986 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.878632612 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.764524455 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.560788002 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.443275573 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.477589923 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.44259923 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.730188175 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.442768385 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.44359384 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.446749479 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.183897548 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.448552431 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.069743157 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.447979942 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.471692525 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.442242411 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.442982379 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.443219141 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.913865514 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.389635791 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.449401352 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.443325509 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.447066279 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.444473281 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.443940532 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.479957961 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.110702416 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.384270095 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.444637199 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.44845598 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.480032691 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.443286119 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.445347135 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.463620689 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.509532043 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.615220413 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.073147081 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.449367339 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.637507326 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.546491631 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.566445915 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.445885751 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.445044164 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.445610367 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.445207034 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.559146592 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.445376609 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.445286164 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.908302725 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.629946168 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.446028227 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.039841938 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.551881283 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.445588437 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.854734461 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.450706197 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.446222945 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.270980479 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.549237163 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.444831008 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.446125376 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.446367027 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.908474115 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.079197851 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.801216412 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.45258835 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.300467679 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.456965023 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.914671342 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.057851282 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.176287013 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.455726039 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.561224022 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.631927846 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.449298266 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.447243117 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.068977208 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.455743709 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.505013941 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.454320273 seconds)
  done (took 401.695608509 seconds)
done (took 652.924130383 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.438143426 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.458027798 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.451937987 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.438615902 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.439443242 seconds)
  done (took 13.570115446 seconds)
done (took 14.915599813 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.447537218 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.448129682 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.447897041 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.259730515 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.458176979 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.460646846 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.449646984 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.453420997 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.449435853 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.449852038 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.2419638 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.450072876 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.449732609 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.43037037 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.254376133 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.451254939 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.351910113 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.450601015 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.450799854 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.865461244 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.891801255 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.57945553 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.84959044 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.524408655 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.842664839 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.876476331 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.758041368 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.701499471 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.50802403 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.500950575 seconds)
  done (took 20.24614464 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.347491325 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.83660911 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.894576538 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.583174648 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.815278954 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.52546731 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.836951333 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.883037152 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.754470872 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.709711968 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.508365135 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.503533725 seconds)
  done (took 20.199404548 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.249885268 seconds)
done (took 92.245745848 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.514874063 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.586420242 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.494815018 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.492712097 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.491458935 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.493520789 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.494958333 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.491312548 seconds)
  done (took 13.408612087 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.491291805 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.489701589 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.489220591 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.490427938 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.490555049 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.490123011 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.491502027 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.489432769 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.490531932 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.490346991 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.491705265 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.489923614 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.490078731 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.490732096 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.491979532 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.492384472 seconds)
  done (took 25.199515875 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.492108319 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.489651512 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.491628719 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.490740547 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.491209461 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.490986039 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.492966389 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.490759963 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.492850801 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.492449774 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.492394948 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.490866681 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.49136842 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.491247385 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.493994034 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.492801355 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.491921494 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.493284586 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.494970345 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.493179056 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.491475976 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.49179969 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.491269386 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.491877703 seconds)
  done (took 37.15881482 seconds)
done (took 77.116284482 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.453630241 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.461342186 seconds)
  done (took 6.265932351 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.590052898 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.590414116 seconds)
  done (took 4.534780506 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.493637633 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.492599583 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.494390384 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.493514294 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.493678002 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.492479456 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.494974465 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.492592878 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.492818675 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.494628053 seconds)
  done (took 16.286692114 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.493459119 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.494289881 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.493939069 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.494294142 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.495028034 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.494086294 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.494964828 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.493875583 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.496284059 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.494240643 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.494617228 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.494649424 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.494758796 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.495148441 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.495479278 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.494474053 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.494460294 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.495440656 seconds)
  done (took 28.256054979 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.516932635 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.520189544 seconds)
  done (took 4.389496946 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.676572349 seconds)
    (2/7) benchmarking "second"...
    done (took 1.576489022 seconds)
    (3/7) benchmarking "month"...
    done (took 1.663284556 seconds)
    (4/7) benchmarking "year"...
    done (took 1.648301994 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.576417853 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.522467347 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.577095803 seconds)
  done (took 12.594013107 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.50341702 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.864015668 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.055842088 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.727251559 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.496172174 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.515565911 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.449419231 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.520680319 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.518852363 seconds)
  done (took 17.004521106 seconds)
done (took 90.683720258 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.459171589 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.48073299 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.496126218 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.481274051 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.856303166 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.516252451 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.464734587 seconds)
done (took 18.111188162 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.457926877 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.454375658 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.475279433 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.471483978 seconds)
  done (took 11.215010303 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.460290935 seconds)
    (2/2) benchmarking "read"...
    done (took 1.874740147 seconds)
  done (took 5.690927666 seconds)
done (took 18.261989392 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.497977431 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.49767425 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.496866187 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.498214613 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.496540237 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.49844872 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.497444682 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.498230187 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.499258321 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.498038752 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.497932593 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.498231933 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.498662155 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.498132339 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.499235832 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.497966397 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.497753101 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.49777559 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.49825959 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.499510168 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.498540352 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.497779012 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.499230105 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.49938166 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.498262663 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.498859876 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.498501171 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.499105299 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.499621076 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.498338021 seconds)
  done (took 46.305834633 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.503653991 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.503015851 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.499979991 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.498911279 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.500586701 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.498620391 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.498561235 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.500018054 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.500799228 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.499020442 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.499101527 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.500212422 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.500789102 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.50028415 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.500562187 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.500056746 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.500057514 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.500190562 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.501261997 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.49989695 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.500789102 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.501329394 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.500903292 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.501867451 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.501655832 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.499974334 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.501728955 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.501722042 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.502510759 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.500965661 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.50133114 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.501526416 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.50201775 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.501583616 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.503640023 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.501367527 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.508603154 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.505636785 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.502637731 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.502487642 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.502872606 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.501935058 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.502247528 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.501551699 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.502256817 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.502638499 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.503464931 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.503006073 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.503493217 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.502740328 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.502344676 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.502729293 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.503606989 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.50280053 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.503104969 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.502981001 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.503040715 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.503086741 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.504311338 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.502464245 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.502836848 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.503945439 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.504016677 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.503688074 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.50448147 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.503084924 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.504306728 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.503991604 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.504492436 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.504111172 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.503851852 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.504646855 seconds)
  done (took 109.514640028 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.504222011 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.505091744 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.505175065 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.50470587 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.5050233 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.505064855 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.504606556 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.504998925 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.504865668 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.506756621 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.505673661 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.511246158 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.505903719 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.506969986 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.506102278 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.505174436 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.507963687 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.505413712 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.506562322 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.505499198 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.506543884 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.504715508 seconds)
  done (took 34.491344466 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.505932493 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.50875017 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.505752373 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.507565592 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.509281313 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.507013287 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.505748602 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.507693122 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.506252506 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.506760671 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.506871998 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.507605122 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.508329376 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.506575103 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.507550995 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.50894377 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.507261782 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.507950139 seconds)
  done (took 28.495908524 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.5070341 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.507178671 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.507736074 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.508231878 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.507066785 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.507020411 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.507153319 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.506852164 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.507220157 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.508340062 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.507577884 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.507959916 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.507458106 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.508422125 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.509600977 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.507446303 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.508660354 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.509181719 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.508028081 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.508190671 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.508393141 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.508800525 seconds)
  done (took 34.538060393 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.509466392 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.509915542 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.509607751 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.509622208 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.510032247 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.510272849 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.510300786 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.508639123 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.510920069 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.509785776 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.509396621 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.509665579 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.513575714 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.509223903 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.509869377 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.510245891 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.510192183 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.510576799 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.511237358 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.509698614 seconds)
  done (took 31.568739852 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.511383187 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.511988082 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.512506932 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.510974685 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.512294405 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.51183485 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.51047106 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.511136298 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.512473828 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.512810951 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.512646894 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.512508958 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.512186152 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.511164933 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.512927587 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.512438489 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.512265142 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.512916412 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.513345307 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.513256958 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.513042825 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.51315478 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.514298082 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.51263551 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.513536044 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.513133548 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.51416706 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.512838819 seconds)
  done (took 43.719205635 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.539198525 seconds)
    (2/2) benchmarking "in"...
    done (took 1.5389809 seconds)
  done (took 4.447411504 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.513237612 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.512366272 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.515783047 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.512649898 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.513804933 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.51450565 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.514214901 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.513684666 seconds)
  done (took 13.479433313 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.509984615 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.515916305 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.514323784 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.513820926 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.515457517 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.508733897 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.523818078 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.518779309 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.510990609 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.50957283 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.51451941 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.511622044 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.512586063 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.50980596 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.509505713 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.521693296 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.517366908 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.516978102 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.517162204 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.516277524 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.515717118 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.512419771 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.516429079 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.518700946 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.511585167 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.529336726 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.525717412 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.519244451 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.512365853 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.522673029 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.513149961 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.520221391 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.517156337 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.517503448 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.520188426 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.516562546 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.529195786 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.517155848 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.526180319 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.522060872 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.51858515 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.518368852 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.516502133 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.516086299 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.517560787 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.523038928 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.518710026 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.518174623 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.511247694 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.516425447 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.522174223 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.511794202 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.51992729 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.525350256 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.519198705 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.529282809 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.526001596 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.514246958 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.51623101 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.533042296 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.538735408 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.526274466 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.530141647 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.52427491 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.525849482 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.525094916 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.532967985 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.526035399 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.521116757 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.522019595 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.529678739 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.542544552 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.533094956 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.524668814 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.520402839 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.521544116 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.515647695 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.525001119 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.531652245 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.528399945 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.526018427 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.521518413 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.526295557 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.52249263 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.516307346 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.524882459 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.522094185 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.521745886 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.513392869 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.533218854 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.528802021 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.52200828 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.51485339 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.517471601 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.520550344 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.524632706 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.516529441 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.524059031 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.526838993 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.52282703 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.52180616 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.521345556 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.528673653 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.526318605 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.523293989 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.535580607 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.529661489 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.517434236 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.536223077 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.529343152 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.523269544 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.517891137 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.532259514 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.527357494 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.520511582 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.527743367 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.527967348 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.526253513 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.530050155 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.524611335 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.530539672 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.53954382 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.53092806 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.524296979 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.52372484 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.531164612 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.52515917 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.531107483 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.530368003 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.525036599 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.525360732 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.526536929 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.530142346 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.523561202 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.530087311 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.528409025 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.529501692 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.526457519 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.525564878 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.527774237 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.52603079 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.530709736 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.530286288 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.534026499 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.531481762 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.529128879 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.542037923 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.526531691 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.532718232 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.529569857 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.532484333 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.528301539 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.531321267 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.530791171 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.520149873 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.529257037 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.521252389 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.530807165 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.527776123 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.526592244 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.527120872 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.51925849 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.525625849 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.531117889 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.535399718 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.526753018 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.532356104 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.527722764 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.527885006 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.522132598 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.530736136 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.520526109 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.525916878 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.534345394 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.526811196 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.528545564 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.532965121 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.534921026 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.528810472 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.529520898 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.526016332 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.533512467 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.534083629 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.539048367 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.537001528 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.530059374 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.531365825 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.523854116 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.525253735 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.531540848 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.525071659 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.535065248 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.547403759 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.541727967 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.525627107 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.533504505 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.522841627 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.533488372 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.537235078 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.53550448 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.53132832 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.530234117 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.524713024 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.535094093 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.530330429 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.539908951 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.522297213 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.533630359 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.531984479 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.531549787 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.531190035 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.528634682 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.534850905 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.535159953 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.531872803 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.532620454 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.525977291 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.536396912 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.523339246 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.528403088 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.535842162 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.533361889 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.542848291 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.538794075 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.534276112 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.539133713 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.53399549 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.52767178 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.534380804 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.53532848 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.532463591 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.545150609 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.534012461 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.532491038 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.546680901 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.533301267 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.527508072 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.539454703 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.538481744 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.533520219 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.528547101 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.537250652 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.53356834 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.533562543 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.533046137 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.527819494 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.539828353 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.543735345 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.541685503 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.528481869 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.537349058 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.531100289 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.538059065 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.539253141 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.54126024 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.538160683 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.542856113 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.540935618 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.53604121 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.537086735 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.539033979 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.535437502 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.535237477 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.530416473 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.539556322 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.543713346 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.533617718 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.542593999 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.53280707 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.53933311 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.52876319 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.53828975 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.535921782 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.559035056 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.552482547 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.551081042 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.547025218 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.540611903 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.546391548 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.538965953 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.532816638 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.533344499 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.540853764 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.534629718 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.532722423 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.541316183 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.537264271 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.542014805 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.54140558 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.539867326 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.539114087 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.537696937 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.531278104 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.541340767 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.536963185 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.539226951 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.530636961 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.540082088 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.544675967 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.543470438 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.537910443 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.533657038 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.553110141 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.541589541 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.543860012 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.542857021 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.534499953 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.531767902 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.541727059 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.544548786 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.536361293 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.54301158 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.53487046 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.545653955 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.536924702 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.552376458 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.54650525 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.536328258 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.542869872 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.538739738 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.530491831 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.535706391 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.542494615 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.55150421 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.549580013 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.532980695 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.542461161 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.541663433 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.540582081 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.53966283 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.54094777 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.541623065 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.540777427 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.553129766 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.542864076 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.539339256 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.549407575 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.546162329 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.541085707 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.540737199 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.53285107 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.552634592 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.548890959 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.545652767 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.548292838 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.538663401 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.542694291 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.541028856 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.542152323 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.542887682 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.542906189 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.553313519 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.546085435 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.545865505 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.542620399 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.554979512 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.550523708 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.554148401 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.552618179 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.542965764 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.548865816 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.542640094 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.539010233 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.538538735 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.544976075 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.547275041 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.536101343 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.547757226 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.543182482 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.547865339 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.551321715 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.55139421 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.536483934 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.550172267 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.553911151 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.537440411 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.545843016 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.543307079 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.537055585 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.549142248 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.543615916 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.535881832 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.540564341 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.542775865 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.550026228 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.539503941 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.548042596 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.544559822 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.550686579 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.543664526 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.544458342 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.544704673 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.545211511 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.53796876 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.547910667 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.555045023 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.551864941 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.545351822 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.549830185 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.542208265 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.560258326 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.554750713 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.546031796 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.550589639 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.548527155 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.54280911 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.548839975 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.552013004 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.546541917 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.55002574 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.539578113 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.544664584 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.54859993 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.55229621 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.551881143 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.550140909 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.541496024 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.541815688 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.554996554 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.546731256 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.546363752 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.553713849 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.553875322 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.541306545 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.541264849 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.549075689 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.547164133 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.553592464 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.543078837 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.546880577 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.545258793 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.551193766 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.54904873 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.547460888 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.541430094 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.542488259 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.561284365 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.551971797 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.548372807 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.544633783 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.550504781 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.543969174 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.548087226 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.550718217 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.546047022 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.548471352 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.552905226 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.552006439 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.54453824 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.546196761 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.5515524 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.56107505 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.549450876 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.54373751 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.563312415 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.559727881 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.557241951 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.542891104 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.548761194 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.546419765 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.551911455 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.553112446 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.544311535 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.566347159 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.559896618 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.556034465 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.555468821 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.54955955 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.545190628 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.555092864 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.551689918 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.556932205 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.558688923 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.555113329 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.558502097 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.551912642 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.551748934 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.543529802 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.547237886 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.55070313 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.549408064 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.553597353 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.555937106 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.558371633 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.555934522 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.558741863 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.55284174 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.551626432 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.552764496 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.54514977 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.554873144 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.546734819 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.55843037 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.551824921 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.547067123 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.55592216 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.553187874 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.550688115 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.55186543 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.559311418 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.552559372 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.547990426 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.555000395 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.565978606 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.560494809 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.553067747 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.549336616 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.561501082 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.559773349 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.553316102 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.554123538 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.550583214 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.572192455 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.564126835 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.553292287 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.555392135 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.567216194 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.562275412 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.554579741 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.554942147 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.558670624 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.557561685 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.560198053 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.556637265 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.56632034 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.558724122 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.551993378 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.558225316 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.55132828 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.555827595 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.56391766 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.563249419 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.555419233 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.555944509 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.574087738 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.566131908 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.561907349 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.578200133 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.561223253 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.562117571 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.561070301 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.549371327 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.557941272 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.561492282 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.561421324 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.557380306 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.556377176 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.555160401 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.550388146 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.565766429 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.567236797 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.5652378 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.558012161 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.549742883 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.554938446 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.558290059 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.556487874 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.559869869 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.557050935 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.558057139 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.556959932 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.555671151 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.579848388 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.579723721 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.563926879 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.558248923 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.558682986 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.566020093 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.562044098 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.558324841 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.563104498 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.559126967 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.559369456 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.564374213 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.568755566 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.559771951 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.555002839 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.555178071 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.556056884 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.562874581 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.578184 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.577751822 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.569483801 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.561481037 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.562054574 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.559754003 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.560071082 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.564644918 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.560791215 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.56320081 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.558296065 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.563332321 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.561945901 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.560690224 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.555976916 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.566115565 seconds)
  done (took 919.23764847 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.559587221 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.56091665 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.560758879 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.561988644 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.559820142 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.561646003 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.563168962 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.562459094 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.562046891 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.560686034 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.561262295 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.562631743 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.561917615 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.562479698 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.561899107 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.563828403 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.561427329 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.561628961 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.561940105 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.562449596 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.56328881 seconds)
  done (took 34.208256303 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.564692131 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.562178193 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.562338479 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.563207165 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.563261641 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.56221919 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.564475483 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.564437279 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.563186631 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.563426536 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.562510987 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.565797717 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.563532486 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.563002879 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.563351806 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.563049114 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.564356054 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.563129641 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.564584505 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.563122029 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.565078702 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.563428142 seconds)
  done (took 35.810482046 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.564610207 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.564925261 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.558847812 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.568950563 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.565151755 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.564286771 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.566362314 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.567019172 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.565768594 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.558400967 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.558972758 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.55971077 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.564367648 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.57123996 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.570592531 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.571944589 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.565830752 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.566567718 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.56820794 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.566773959 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.575708196 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.573348748 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.566798195 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.558128517 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.568597026 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.566543553 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.568337566 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.565261057 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.561150339 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.568719877 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.565685552 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.562339178 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.573265567 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.564974708 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.563180695 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.570656156 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.567928435 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.566675064 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.56887716 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.574593948 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.577865244 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.568031242 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.581914083 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.577245054 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.567746779 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.567027064 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.574801656 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.569282658 seconds)
  done (took 76.656955751 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.568038017 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.568810601 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.567930741 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.570435947 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.568941693 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.569669719 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.567756486 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.572133021 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.569828957 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.570120893 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.56986262 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.569291458 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.569298372 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.570624519 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.569586118 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.569663223 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.570278944 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.569472207 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.569337623 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.570544551 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.569061331 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.570579611 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.569991547 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.572085529 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.569553363 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.570375953 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.571093852 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.571032252 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.57049643 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.572875084 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.571145186 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.571115643 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.571541115 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.571705173 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.570415065 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.572501084 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.572195528 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.570815535 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.572441789 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.571842131 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.573196493 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.571826068 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.57264817 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.57217758 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.571863503 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.573190139 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.57303977 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.579032921 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.572205097 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.573646411 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.572396671 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.573109332 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.573582297 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.573424526 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.573114151 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.573355243 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.574417808 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.571773478 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.571784653 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.575687243 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.57289897 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.572564919 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.573275205 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.573500164 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.572853503 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.57270537 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.572729954 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.574329669 seconds)
  done (took 108.284126357 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.57371751 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.574168964 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.57365996 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.573864106 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.574315351 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.573957764 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.57462866 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.573976341 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.57447417 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.573703402 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.574270234 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.575345091 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.575095129 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.574165961 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.574829243 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.574784894 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.575407529 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.574710793 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.57583852 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.575863314 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.575636748 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.575686126 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.57554386 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.575956062 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.576042457 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.576753231 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.575270221 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.577687009 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.577061301 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.57646304 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.576075003 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.575629206 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.575697441 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.57636631 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.577498298 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.576202044 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.577843035 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.578019733 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.576255682 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.576403326 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.577620659 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.578031187 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.578011771 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.576808895 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.577530145 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.578252305 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.57903299 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.577927403 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.578799022 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.580582908 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.577750984 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.578315091 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.577461282 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.578174013 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.57786685 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.57981207 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.578966711 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.57803873 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.57932793 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.577626457 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.579000374 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.578783377 seconds)
  done (took 99.165405324 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.577572748 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.580049251 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.578577485 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.578834501 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.578944571 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.5778892 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.579119663 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.577973148 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.579577892 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.579023142 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.578540399 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.579357752 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.578806216 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.580057562 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.579169739 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.579260672 seconds)
  done (took 26.686923666 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.580228953 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.580314368 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.579719949 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.580076698 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.57966247 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.578528946 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.580432191 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.57982045 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.581226146 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.580412635 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.580675098 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.581052451 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.582730807 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.581021441 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.581891734 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.580363397 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.580492323 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.581263372 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.582061378 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.581781105 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.582704477 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.580781816 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.581296267 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.581553981 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.581572908 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.581689543 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.581114051 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.58259322 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.582381111 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.581561874 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.582783607 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.582375804 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.582744914 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.581154 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.583473359 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.58220602 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.58306367 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.58265908 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.582988242 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.582400179 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.582948642 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.58153715 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.582838781 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.58227593 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.583071702 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.581717619 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.582538953 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.583965461 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.584468807 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.583513798 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.583137004 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.584733017 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.583086718 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.583868032 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.583767601 seconds)
  done (took 88.432946468 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.583928026 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.584569658 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.584240984 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.583768159 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.583932984 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.585027048 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.585267302 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.586506986 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.58374595 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.584207112 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.584193213 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.586963537 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.585228541 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.585079639 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.585643258 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.585494287 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.585365359 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.58634209 seconds)
  done (took 29.959624126 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.585417601 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.585887773 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.586801786 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.586206389 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.585679925 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.586324909 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.587912472 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.587487906 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.58624976 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.587558796 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.587284948 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.587003627 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.58572176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.586716579 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.587928675 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.587224395 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.588123392 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.587661671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.588182548 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.592769234 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.587364427 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.587075564 seconds)
  done (took 36.349611079 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.576992647 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.576514164 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.577841498 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.598553559 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.585352789 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.577923422 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.578315791 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.577604457 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.601729103 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.608162043 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.608306126 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.58755684 seconds)
  done (took 20.48609275 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.587421418 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.587611386 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.588616332 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.587509068 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.589092021 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.587466255 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.587483157 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.58753896 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.588523233 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.587767691 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.588378941 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.589814808 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.589443113 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.590270313 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.58928143 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.589072745 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590558129 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.588944027 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.588386973 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.590434231 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.589372154 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.593108034 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589865723 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.589441716 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590078809 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589318726 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.590974173 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.591531995 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590418306 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.590247755 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.591205767 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.589984453 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.590885754 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.59175451 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.590583202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.591979958 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592420447 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.58939185 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.592339361 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.591109735 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.589907278 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.592923793 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.590927031 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.591237476 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.590719393 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.591147659 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.591195152 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.590743278 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.591426885 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.591976745 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.591865068 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.59117846 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.591416059 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.591243342 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.591267787 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.592064884 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.593216777 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.591753951 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.593185628 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.592282999 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592267425 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593822231 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59332517 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.59258646 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.593286479 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59241011 seconds)
  done (took 106.414607964 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.595458194 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.592884402 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.592257018 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.595870606 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.591109177 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.593379088 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.592745069 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59416578 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.592998942 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594498644 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.593739051 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.594327324 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595124492 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.593020942 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.594968187 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.593934047 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.593442294 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.593877964 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.595135247 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594029031 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593983634 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.595462873 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.59467192 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.594021 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.59455312 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594431526 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.594919647 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.596196975 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.595319488 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594831089 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.594277108 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.595774853 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.595535508 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.595136016 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.596404403 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.595364885 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.594432923 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.600347712 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.594779266 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.595795387 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.59552999 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.596726511 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.595135317 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.596518384 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.596065394 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.630267648 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.596336448 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.596845869 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.595222269 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.596513355 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.5975322 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.595694676 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.596580822 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.594569743 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.595390517 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.596166593 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.595605558 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.596283019 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.596209686 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.596107228 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.596616581 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.597359902 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.598256873 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.595246015 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.598526391 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.597802067 seconds)
  done (took 106.762047677 seconds)
done (took 2036.372395173 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.562215418 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.561354136 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.588123881 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.000875111 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.588537411 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.24351267 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.267542262 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.590313615 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.588131144 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.588378592 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.588654535 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.564726911 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 11.864350906 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.589809501 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.589643767 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.561857273 seconds)
  done (took 59.780739857 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.627981952 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.605728354 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.740300215 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.59359378 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.628295539 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.858814169 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.665233756 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.597645134 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.801015409 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.601589211 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.562843222 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.627016676 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.595245597 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.576139466 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.619124052 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.858194607 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.941428026 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.564801851 seconds)
  done (took 34.508189345 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.176771502 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.567598436 seconds)
  done (took 6.186869504 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.620387341 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.594807692 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.603831954 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.5953058 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.56774608 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.565199807 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.594166269 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.572079522 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.580364724 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.749744923 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.5990502 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.617020572 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.59563133 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.598614321 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.602368709 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.655040211 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.78721519 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.604415827 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.604901712 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.609627733 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.595044524 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.847943792 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.651867671 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.603779084 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.750780809 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.576519193 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.608782932 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.617591874 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.809111131 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.606815643 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.597980093 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.596995749 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.600008004 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.578811174 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.225410299 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.567877731 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.658777907 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.612791263 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.603811421 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.809103099 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.599212791 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.610832146 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.583109067 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.221969218 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.795144899 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.883749113 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.569748918 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.623463151 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.600574556 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.800976297 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.600282411 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.601416004 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.705338507 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.569809331 seconds)
  done (took 101.055532973 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.589854338 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.566693153 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.837026831 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.591117837 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.568589553 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.567768359 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.57003003 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960638361 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.568171972 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.568398328 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.987768137 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.347271326 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.581842007 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.62056383 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.628627704 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.609579263 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.569632773 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.573865852 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.569701916 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.569169375 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.259026933 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.571253509 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.572334932 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.769420329 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.643874266 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.259325715 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.570270213 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.570287534 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.571489782 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.570758893 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.310352246 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.581422819 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.644201822 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.574718126 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.963842469 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.103293373 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.060934494 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.57602346 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.586123557 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.571923567 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.572616532 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.259562476 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.080165641 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.571461776 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.575477161 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.261314724 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.572126176 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.574898107 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.58343313 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.936780508 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.572513236 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.575016767 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.572276824 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.574588011 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.572884373 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.650365665 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.625284053 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.260574826 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.574519917 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.574186354 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.581309048 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.572020018 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.580279517 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.576838158 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.573602481 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.087860335 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.77461687 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.575188087 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.082543877 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.30874373 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.573912577 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.390355505 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.574066856 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.600627915 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.68865559 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.573014487 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.575114475 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.255504908 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.582306242 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.574361936 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.065791886 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.575021656 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.000750584 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.592014809 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.576943129 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.284110291 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.578503104 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.64971656 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.574976259 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.589217247 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.575771262 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.582602858 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.980380047 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.609606291 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.575832653 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.574331833 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.613124337 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.576161676 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.578369429 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.582343537 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.394727011 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.578511904 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.577146787 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.577283186 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.577649784 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.577828996 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.577955548 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.580806819 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.954834969 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.577663193 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.583044883 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.575460888 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.577191415 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.58669409 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.779866211 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.578424114 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.018663756 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.580214844 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.578389752 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.58445847 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.577329701 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.583316356 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.583386965 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.577364203 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.594354142 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.982610568 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.598385102 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.597209044 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.578110946 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.578718145 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.586028363 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.580561816 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.61926576 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.578891841 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.544032729 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.605876907 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.612187975 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.578314533 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.587330065 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.579880165 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.583186381 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.578967758 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.998504768 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984368962 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.816255894 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.581376374 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.578643067 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.53270182 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.61517341 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.848225044 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.603210855 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.580446438 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.968530077 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.791984861 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.580764495 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.580524661 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.582778299 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.959904189 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.580883854 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.0008404 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.339589972 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.57934993 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.585117493 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.538234925 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.443304278 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.582531969 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.58534748 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.992996735 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.599271668 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.579884076 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.581092959 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.580701708 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.580967035 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.585740547 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.589424675 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.58202967 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.583372858 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.658723013 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.865936094 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.599731782 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.591183698 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.262020122 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.59786241 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.583214387 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.584719607 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.586424293 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.58250927 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.612925289 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.586826649 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.608224133 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.583225144 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.586517531 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.299440313 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.588704332 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.58363134 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.866106856 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.493035602 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.583588876 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.583431105 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.583286953 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.624579913 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.296068376 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.651022731 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.027259542 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.583570927 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.656410358 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.583574001 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.624110371 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.296442097 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.595787286 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.584066871 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.460214529 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.584017912 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.363133469 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.585659391 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.584862432 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.397920295 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.585266674 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.585440649 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.589482364 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.58512343 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993646818 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.586287055 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.615356953 seconds)
  done (took 559.919519459 seconds)
done (took 762.892073376 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.584339391 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.588892484 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.589254472 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.589839742 seconds)
  done (took 11.81361303 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.624039063 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.6143592 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.623323609 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.613859625 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.623093482 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.614769937 seconds)
  done (took 11.177394206 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.58562489 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.591293697 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.589268091 seconds)
  done (took 9.22932581 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.905386502 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.593762587 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.090998373 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.603257509 seconds)
  done (took 10.656349247 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.623280028 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.623472231 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.625460542 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.625617825 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.625644434 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.626482739 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.625772034 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.625645412 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.627222917 seconds)
  done (took 16.090065085 seconds)
done (took 60.428857959 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.75070482 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.746091455 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.588204827 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.664608188 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.805521429 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.751010516 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.74912983 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.763689363 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.751846656 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.65845538 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.747416623 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.650809576 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.747867658 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.882419475 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.659195838 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.751774789 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.64872628 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.842708001 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.747983106 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.655519881 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.777984128 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.656511348 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.657902936 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.592908218 seconds)
  done (took 44.714824491 seconds)
done (took 46.179431338 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.65532684 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.772612356 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.620256459 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.61827981 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.628617089 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.592624872 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.648300458 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.62010211 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.64151426 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.642806114 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.593476237 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.628425095 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.64495953 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.630036892 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.661990467 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.620285024 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.621521774 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.631289495 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.643206095 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.646905588 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.624592625 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.629140619 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.657251456 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.62355625 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.637907796 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.637171738 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.63534008 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.589601233 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.631539807 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.645255448 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.598688982 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.636935325 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.646577963 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.632537141 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.626164403 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.631926449 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.632335788 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.77468706 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.651138668 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.632664252 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.630248721 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.646431505 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.63537584 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.635381636 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.635273313 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.658032072 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.640411396 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.64682527 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.599786677 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.592893761 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.652860675 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.644848342 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.631574797 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.593983215 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.595140485 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.645938495 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.634186582 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.652274776 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.631785997 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.633737921 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.66511321 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.653038141 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.645344984 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.641594368 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.633249103 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.648174604 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.634475515 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.64968988 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.634363769 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.633163687 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.628335349 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.633200842 seconds)
done (took 127.355488785 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.803926183 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.59562672 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.835404419 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.630754022 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.852306567 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.801202024 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.630118746 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.63291128 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.630535279 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.497364155 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.633346181 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.635227077 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.596142079 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.634208303 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.802956647 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.633158518 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.631488753 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.405631959 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.635398049 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.816344383 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.600924671 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.634285897 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.63455681 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.512729867 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.598556842 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.604785776 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.816808199 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.639034126 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.39817717 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.602980938 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.598024302 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.418444203 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.818771996 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.65257635 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.643527365 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.64169885 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.854597292 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.639212361 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.806635188 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.806086445 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.838487771 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.673186094 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.604346335 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.599640359 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.636922265 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.636208697 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.635282462 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.663281693 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.599182969 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.636534297 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.412398532 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.645568825 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.635900068 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.636035001 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.635299014 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.66604629 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.637627592 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.638136386 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.822546569 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.638665434 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.80901028 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.500997648 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.513082285 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.638859383 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.599586233 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.638455281 seconds)
  done (took 129.322303001 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.752238745 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.759381204 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.805106641 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.630058404 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.721609151 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.807236311 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.635564131 seconds)
  done (took 13.585437017 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.642223638 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.638175986 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.720520745 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.721475754 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.638676608 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.863523707 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.63805516 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.650180306 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.6380509 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.72307086 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.63894899 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.638679681 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.647133899 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.60372342 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.723071279 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.651046686 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.805738355 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.63116895 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.639652082 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.842196343 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.63893104 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.646798451 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.723199228 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.650123664 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.64000478 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.6444932 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.459844998 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.638533503 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.637867776 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.638878939 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.638858545 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.749397531 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.641357396 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.603478418 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.639578958 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.804513689 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.641159466 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.640644177 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.640419497 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.609710075 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.63897532 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.639280875 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.639822774 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.639386894 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.641163028 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.664471928 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.640268641 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.641185866 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.640523701 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.64116198 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.724627692 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.644350584 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.640840641 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.641586685 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.727948366 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.650381658 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.641899085 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.641059802 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.64187506 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.640079231 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.844888515 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.725748435 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.642081161 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.723841629 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.642642056 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.642176635 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.641896082 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.642638215 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.783300656 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.643839974 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.725044575 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.642057415 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.878849259 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.66858544 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.644239606 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.642393911 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.63957791 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.64338433 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.606728342 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.649164325 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.642996222 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.638418754 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.650479017 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.644764952 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.644382502 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.852283799 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.806566114 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.642838241 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.659006289 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.649731854 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.642589187 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.728784785 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.644929359 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.643253936 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.726532543 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.814278896 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.729619808 seconds)
  done (took 168.557387435 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.655833259 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.657174002 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.642937625 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.672549002 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.637248913 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.637893897 seconds)
  done (took 11.385788165 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.639898482 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.647873658 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.644967562 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.646625314 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.646357613 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.64642068 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.644067936 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.638430417 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.649061658 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.647091226 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.646491289 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.646831905 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.646833651 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.64749826 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.647038845 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.647752203 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.646494502 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.646508121 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.646428362 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.648307442 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.611865378 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.647928065 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.647241035 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.641235942 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.65250204 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.647711906 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.670299415 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.647546871 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.648855486 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.650519944 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.651637893 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.647862623 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.640197891 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.644961137 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.65217637 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.642064329 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.651426483 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.649669976 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.648192274 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.648679416 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.652312281 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.649648325 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.648310724 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.649690858 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.642716856 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.646630762 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.654844516 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.672346392 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.649247715 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.653353685 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.650188267 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.649315252 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.651337156 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.652236014 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.646275479 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.646283022 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.654658319 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.650410572 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.649694909 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.644089936 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.653303748 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.650881093 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.644619403 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.652733005 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.651705849 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.651559811 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.644408692 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.655519393 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.649640991 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.651939119 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.653972547 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.650540757 seconds)
  done (took 121.173676697 seconds)
done (took 445.494777036 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.083080118 seconds)
  done (took 4.570558309 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.73771539 seconds)
  done (took 4.226816971 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.797605897 seconds)
  done (took 25.28917595 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.632378321 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.621489646 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.614338527 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.61937164 seconds)
  done (took 11.974039995 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.197288077 seconds)
  done (took 4.684594249 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.622268936 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.636834405 seconds)
  done (took 6.748463754 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.006080312 seconds)
  done (took 4.493490129 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.350664494 seconds)
  done (took 4.844468071 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.634903014 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.638118647 seconds)
  done (took 6.768098932 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.605252037 seconds)
  done (took 4.092457777 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.478584044 seconds)
  done (took 16.967865956 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.625654911 seconds)
  done (took 4.11652215 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.618427665 seconds)
  done (took 4.10567985 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.666327331 seconds)
  done (took 7.154672602 seconds)
done (took 111.523895325 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.614541765 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.618038579 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.617136369 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.616924331 seconds)
  done (took 11.955373236 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.772365466 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.769897066 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.771724253 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.761466524 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.760867845 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.77342866 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.70681551 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.685723722 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.74929284 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.747015735 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.779449748 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.761780461 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.774208369 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.686564891 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.746651163 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.781154992 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.750778853 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.775062248 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.715536661 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.762402887 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.655557107 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.760962689 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.746173169 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.65628611 seconds)
  done (took 43.339819262 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.232669113 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.773830248 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.862010875 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.739869784 seconds)
  done (took 9.097049003 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.818762777 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.82324114 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.83255671 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.872382584 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.926765338 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.830845529 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.689904282 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.685743976 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.672046005 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.82523469 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.893049947 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.817686453 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.040808961 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.65560851 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.040626465 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.656124288 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.656224021 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.821425895 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.871898585 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.899705053 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.657378009 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.820643533 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.827349903 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.819468454 seconds)
  done (took 44.947179318 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.672298621 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.680927931 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.657811094 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.660390054 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.658793272 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.661477901 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.68148261 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.660425952 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.672638399 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.657323742 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.658615596 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.657568047 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.679711785 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.659400892 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.6594414 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.674069168 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.661631553 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.673918311 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.674554774 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.659949914 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.658852078 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.672883473 seconds)
  done (took 38.147303788 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.622200002 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.621174452 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.061626482 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.963833949 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.622774028 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.625555876 seconds)
  done (took 16.010173431 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.747743131 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.938968985 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.651700191 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.08614189 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.212536804 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.65350489 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.653037513 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.984298004 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.348543135 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.333929056 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.719751583 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.744354712 seconds)
  done (took 24.569002874 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790072536 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.634352525 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.632754417 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685202148 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635713871 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.633898627 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.661113679 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266780573 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.667456036 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.994150234 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632542449 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813033906 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.972009569 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633645731 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.63334674 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.614824344 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957828925 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.299763049 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637854576 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633534544 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.696969007 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.644184711 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.639524132 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.913073932 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.63880337 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.636837129 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.982507552 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.63492201 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046557876 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99919473 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005220427 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.638897795 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.994891249 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211184956 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818616529 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912315455 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631281883 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.637901999 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.622174999 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.63531843 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.639209427 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.6375449 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998189784 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640565116 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.636318627 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650599913 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279361642 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.670540576 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.636335808 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.637266792 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011466612 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801780241 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.664270645 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.637177395 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.727217197 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637189548 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.663004213 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835432355 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.359296458 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636899567 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649786191 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.639335351 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.656499685 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637318195 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.461272555 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.665679903 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.666802322 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665046721 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637793675 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.64431685 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691559311 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638313294 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.687072288 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637325669 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58908804 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.639375231 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641207307 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.355035302 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653028992 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.642739136 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954883159 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640064424 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638646297 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.638895561 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.638706501 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.615705391 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6704201 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.619283569 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704819796 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.270698949 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.922453267 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693846403 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697665325 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.944963742 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.619983169 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641442812 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.639975865 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642831746 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.692468644 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.278704296 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643494679 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.667261947 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978215177 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.9392744 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644794774 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.62552745 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304828428 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654712726 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.693095819 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.648550839 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.923493414 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.426815868 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022183687 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645608216 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706855041 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.641770507 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.644065352 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655851837 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.672529935 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.64172546 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030074355 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.635143757 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642918698 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793878328 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644818451 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.643241924 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644753638 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643297866 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.64058146 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.931602476 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.655045938 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011874764 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.650588738 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642745422 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.658326872 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646158495 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.644668781 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94517564 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657209342 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.002354071 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645155295 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644662216 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643981473 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.949023755 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.642660705 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.671308062 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075100891 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657730149 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.648749468 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017519965 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713080134 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84153774 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708489047 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.646718274 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.985842683 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.67160866 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.673660945 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648089887 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.645233168 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654016827 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.67338172 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643007606 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454716274 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648274407 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.652324503 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644653835 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.689238205 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79983998 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675684038 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.924043623 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.647743333 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638637707 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.675562444 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.660719844 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955860239 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013162638 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.65556912 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898789225 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.283784621 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43529439 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693449425 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.646252432 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.647052744 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.646427314 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647613848 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646441632 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.648564527 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928819929 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032406845 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.642163295 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.437311267 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649293391 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.656543266 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.676395441 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019063318 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.684821024 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648852763 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.660639667 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647088642 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649269995 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.044061609 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952702784 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.692336645 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.648400122 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.252560538 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677951504 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.646974452 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.647973252 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704947885 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.657109399 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367286232 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082648289 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667550043 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019878156 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.660036168 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.695903788 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.647751505 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648836281 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663824708 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.662434378 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679875981 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.93325506 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.667966367 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651528242 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37247921 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606981936 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.378106531 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662198943 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.669929605 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.653737881 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.29425355 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653204364 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650792954 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.011500694 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.293612757 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651673373 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291121309 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.656274028 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.628625679 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023975395 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97247569 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.670980507 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.652879741 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026796006 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.954980937 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707865784 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.663144245 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655702726 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.632434334 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376159706 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.655253018 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904536045 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293786661 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673124844 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.653492179 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.674921511 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.655427341 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209269768 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.657417749 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652313049 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.666651534 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.673413637 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381611656 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.6667945 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652365849 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462990371 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.662076093 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.299733088 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655730453 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940346743 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.031797339 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.021539331 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.658945386 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.658907672 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.988658055 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027866532 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659946212 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.662269901 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.389810394 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.607743066 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.684132738 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654386148 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.662555692 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672922304 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076176587 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.675625372 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.674292241 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661986696 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.655219634 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654939291 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.655849812 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.665780474 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656154529 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.315683091 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.651008902 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667501992 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668142995 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658866886 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995323008 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.701004017 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.447659231 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975171773 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674624196 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719719526 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.684995138 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655270827 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.639946533 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.655442008 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.656196993 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653088776 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.962181713 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.670677954 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.638767961 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.718183437 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.958469579 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.658258986 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.656532581 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982734536 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.661821521 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.673305872 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.617886883 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719997285 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.656605913 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659794517 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.660774809 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720359481 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810971982 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943629982 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.035892064 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.040038402 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223449504 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663247191 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.660055235 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.703689694 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816870497 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656989342 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.698020049 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.658324149 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449523155 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.619996998 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.453591759 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039680465 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.665579331 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662569032 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660803793 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985926772 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661059622 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.022240678 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660845559 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.673167027 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712257613 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659838867 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66011879 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965198019 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.014132244 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659011666 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661232759 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665582124 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.661792188 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044288942 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.966223289 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.325638197 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384433803 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662679102 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.676015714 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319548526 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025448627 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661313076 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662492696 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661381451 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.683853792 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.663569857 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.690924593 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660468486 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973402135 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024909034 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258019054 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.031786723 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.673023085 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.618200541 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662312785 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.000591276 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.583240368 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.949432466 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46654152 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.570484976 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006758192 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815495392 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953085514 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.666823344 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986146632 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.673539142 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.663770721 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663606664 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662810962 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.662128543 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.030600819 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461885272 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006744712 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.691707095 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.673462247 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723995908 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.951862873 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.973572896 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.655534757 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.971460757 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049214638 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.67919873 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.664055254 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46315352 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046637914 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672521415 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.694838499 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992807046 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.670277135 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.730539058 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.631954385 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.665160912 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394688319 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.967721524 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715240605 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663255502 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.581729073 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464405355 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.668195376 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.337513101 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.670012506 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671831383 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.023237522 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.69565662 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.669849357 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038570268 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.69701594 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.665880207 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959562036 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.460645449 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.652411805 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.695246861 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681297601 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.670448596 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667948767 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725209819 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669638157 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.672138335 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.230221664 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.673321097 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668170443 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711751753 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.682672357 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668970964 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.673433542 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66895916 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.700479998 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.671595389 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.650105435 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.674444565 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872925391 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406005052 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678730794 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.368196053 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.096214819 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.008971113 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.670328119 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.656700549 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.697271769 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671833548 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668975713 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669466837 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662507223 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393334865 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.673487459 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.045796397 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706928235 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.970093893 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972170763 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.669605682 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961599027 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677308616 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.730275687 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.652508744 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670488056 seconds)
  done (took 1135.120996421 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.665958989 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.714066433 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.682096724 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.692665876 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.675214914 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.718910834 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.706633435 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.705079535 seconds)
  done (took 23.088783917 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.677226972 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.695568969 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.674899022 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.698169439 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.6655222 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.297111734 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.675214076 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.695368314 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.720655678 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.679136362 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.676255829 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.464596301 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.69866182 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.676117264 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.676984133 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.697712537 seconds)
  done (took 37.903724769 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.795519388 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.852571127 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.09909682 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.743775867 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.69006317 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.674031942 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.045754422 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.685093614 seconds)
  done (took 30.11750391 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.710309531 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.711624083 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.712831639 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.71222828 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.710034635 seconds)
  done (took 10.088125871 seconds)
done (took 1425.875052444 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.701996951 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.70241132 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.703690532 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.703806259 seconds)
  done (took 8.344018259 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.65542832 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.659500346 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.663835325 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.696207039 seconds)
  done (took 11.206179502 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.187021269 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.41043222 seconds)
  done (took 6.128397962 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.676098825 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.522383538 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.509409402 seconds)
  done (took 9.240592536 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.092015542 seconds)
  done (took 3.623633983 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.157922247 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.26140503 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.66666704 seconds)
  done (took 8.618555754 seconds)
done (took 48.691629991 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.665503483 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.459895354 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.828005503 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.681092826 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.832755059 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.827168664 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.947593405 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.682300522 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.66880544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.668453579 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.681376033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.835345193 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.935964832 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.442017033 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.932333016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.441526329 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.833143726 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.66919669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.675914654 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.685572726 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.948552955 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.677361346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.672607041 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.673043269 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.834688056 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.818684764 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.682038058 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.443790723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.67765468 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.679128191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.816595462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.683056833 seconds)
  done (took 92.535261295 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.667854551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.683881868 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.668694252 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.670048126 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.682774814 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.669076913 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.670443986 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.669723853 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.681046102 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.675590381 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.67246624 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.687898161 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.670659167 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.670274272 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.672218164 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.669449446 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.672355193 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.669957053 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.671305199 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.690240218 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.676047841 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.671714749 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.684398554 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.670807789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.671514513 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.672112914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.686417246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.670032201 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.671087433 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.684795741 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.67367205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.671364633 seconds)
  done (took 87.125383684 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.671601955 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.671882158 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.67150285 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.675133548 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.672894298 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.674869689 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.672287796 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.672314336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.673101447 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.671834805 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.690042987 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.671296678 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.673949949 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.673772691 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.675199618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.672797009 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.67351826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.676223841 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.672633999 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.672978037 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.673173104 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.684287506 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.677270273 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.681923099 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.674528723 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.674012038 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.677907504 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.683657607 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.674506933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.679505334 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.674876044 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.673528247 seconds)
  done (took 87.145515574 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.002154604 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.710336489 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.715359125 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.682881042 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.715249544 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.710430425 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.684118909 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.00413656 seconds)
  done (took 17.762552347 seconds)
done (took 286.104488644 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.684705437 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.697875407 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.740089993 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.68355117 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.733189116 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.741684679 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.995491186 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.740797695 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.984388797 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.685837284 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.732646938 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.684622954 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.68718564 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.910450135 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.694059489 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.706670031 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.691591158 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.678867822 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.6855311 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.019064226 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.74364715 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.677741213 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.688712441 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.700467147 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.688082403 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.789270619 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.789881312 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.929670665 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.891271509 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.789146581 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.696843362 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.694429019 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.6994013 seconds)
  done (took 77.496832665 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.706367479 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.714461664 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.715522833 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.717152509 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.714948179 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.715944884 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.706813975 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.71497004 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.715833487 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.716267341 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.716378319 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.716759513 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.718737069 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.715872389 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.71592044 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.703051624 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.70762106 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.718688389 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.708874641 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.7018873 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.715999569 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.72471213 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.718606605 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.716113062 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.717374675 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.716887881 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.716856522 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.717765087 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.716214611 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.718172122 seconds)
  done (took 52.983704284 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.716447811 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.681390351 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.688082891 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.723714517 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.710153016 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.714923595 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.100198077 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.71855143 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.715915411 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.715134376 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.684990529 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.721804986 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.780114217 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.692753596 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.713961391 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.72025018 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.72049672 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.713184198 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.680451124 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.736815834 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.112547901 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.720646738 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.1031935 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.736130132 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.717665493 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.714436173 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.723187634 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.683451227 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.71663303 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.684223042 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.697376601 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.093388971 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.683023169 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.683246452 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.691732168 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.725161279 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.724239933 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.694971477 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.714732858 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.714629982 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.099060013 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.715372674 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.697352506 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.684524198 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.716480427 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.721635272 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.699334671 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.693890683 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.016057489 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.728359033 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.685907964 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.718762142 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.729435846 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.716158877 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.015386733 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.718847347 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.714472839 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.685146275 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.727000899 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.092146145 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.723929139 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.716494185 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.68681611 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.716379297 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.688168796 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.719143824 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.740145308 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.717421817 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.7034801 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.718618268 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.686507411 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.717269982 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.725387565 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.689382777 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.687536104 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.700599846 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.718163881 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.688238637 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.688930695 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.093338965 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.724312638 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.703176221 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.120965592 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.722818733 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.727592035 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.726086397 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.724784765 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.847265075 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.095717549 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.688561164 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.688534555 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.689047259 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.105308783 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.734373624 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.719206751 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.690587819 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.727363724 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.726842499 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.701857827 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.689052427 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.720102047 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.740547733 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.690227507 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.722553545 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.105803608 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.732441255 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.693631013 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.719128529 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.850854358 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.72749314 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.74065473 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.724959299 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.121157307 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.72329065 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.72647241 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.691901184 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.71077614 seconds)
  done (took 245.330004122 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.691988905 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.710400394 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.691499667 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.710071232 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.691056454 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.722247152 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.691601495 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.694114245 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.718203202 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.692761838 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.692973527 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.72396839 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.72299152 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.693521012 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.704070608 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.693707768 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.69274794 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.716349195 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.694456886 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.693084575 seconds)
  done (took 51.595558906 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.727955349 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.450136501 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.420933276 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.731680474 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.730964671 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.720920866 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.795523858 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.732173134 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.730338195 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.128443289 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.947258307 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.732196601 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.730875204 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.72948669 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.421030706 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.733282773 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.129037778 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.454435163 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.730844754 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.457258287 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.732644983 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.73155022 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.721462694 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.454555639 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.141215723 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.104734477 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.800828025 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.458277271 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.733076951 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.730387293 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.455159347 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.732942366 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.72330874 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.450453161 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.732017318 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.751388079 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.732538544 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.801529161 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.802839034 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.133660503 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.461568472 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.115419775 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.752498065 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.978083596 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.735017072 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.71595522 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.466913216 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.734000392 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.71749571 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.73449431 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.745506814 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.437475952 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.729259356 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.437576874 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.734461763 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.732884538 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.458500763 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.43602961 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.428818357 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.950118238 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.727278727 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.110130206 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.73951485 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.469033807 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.736651357 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.735008341 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.736149338 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.952754886 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.459939913 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.109793501 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.13724357 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.134350674 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.736998538 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.814443024 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.736494844 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.137404904 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.812426985 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.242685889 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.138590948 seconds)
  done (took 157.884153289 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.095871968 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.847493107 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.258415752 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.469614327 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.40319799 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.931077827 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.852299374 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.057307357 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.713753753 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.893919122 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.601188042 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.855150225 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.595647115 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.819686567 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.858009597 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.917143374 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.285281948 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.715031221 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.570450614 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.584451277 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.708442183 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.884863291 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.58726148 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.21124509 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.70920939 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.576696659 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.703345935 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.421963994 seconds)
  done (took 65.688869166 seconds)
done (took 652.51895735 seconds)
SAVING RESULT...
DONE!
