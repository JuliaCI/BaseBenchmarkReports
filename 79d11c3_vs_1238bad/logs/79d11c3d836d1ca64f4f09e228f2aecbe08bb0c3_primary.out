cset: moving following pidspec: 28856
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.186611509 seconds)
loading group "string"... done (took 0.51663106 seconds)
loading group "linalg"... done (took 8.783775228 seconds)
loading group "parallel"... done (took 0.167092896 seconds)
loading group "find"... done (took 2.51495494 seconds)
loading group "tuple"... done (took 2.144156809 seconds)
loading group "dates"... done (took 1.418577599 seconds)
loading group "micro"... done (took 0.199884427 seconds)
loading group "io"... done (took 0.567494721 seconds)
loading group "scalar"... done (took 48.998417537 seconds)
loading group "sparse"... done (took 14.519936648 seconds)
loading group "broadcast"... done (took 1.305823317 seconds)
loading group "union"... done (took 2.93310099 seconds)
loading group "simd"... done (took 3.399908466 seconds)
loading group "random"... done (took 12.932451397 seconds)
loading group "problem"... done (took 2.293831779 seconds)
loading group "array"... done (took 25.490533329 seconds)
loading group "misc"... done (took 1.097827734 seconds)
loading group "sort"... done (took 3.900924692 seconds)
loading group "collection"... done (took 19.596050518 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.614855003 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120063033 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.209259153 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.215078328 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.249261725 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166192502 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158872228 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.152550335 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.622314123 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205258294 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139528916 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.363656999 seconds)
done (took 5.898861651 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.24256632 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.102151538 seconds)
    (2/2) benchmarking "String"...
    done (took 0.172308364 seconds)
  done (took 0.893262893 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.104544929 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099960896 seconds)
  done (took 0.836749562 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.107612218 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121476062 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090544126 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107416941 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091454646 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089914786 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107236192 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090581072 seconds)
  done (took 1.327936465 seconds)
done (took 4.045386568 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.454144204 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.87758129 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.516960432 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.154868088 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.33254131 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.281022678 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.293714096 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.222051002 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.095148831 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087731058 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171819964 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.441435744 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.389001771 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.952466371 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069670312 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.097623168 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.146598321 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.784626033 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082871432 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110689355 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.525111119 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.210015533 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.104374935 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123316869 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188840844 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134852553 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141295412 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.092361885 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.74073819 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131581327 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.193245174 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099362356 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137902522 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165281283 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.220585942 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113544188 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685696624 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202599437 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098050039 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103280522 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68127148 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118858411 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.1986379 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106269729 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.072751919 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.1535029 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116386518 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.082899928 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.117048404 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.088978634 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.173108745 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.471866779 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108512263 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.18906657 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095902558 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.700251757 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102181848 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.284103306 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128711759 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098861175 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093879676 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.09576511 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167127887 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.10187329 seconds)
  done (took 20.181635947 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.169328447 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.185683319 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080994866 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.164497106 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13278553 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100869182 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091156075 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081874657 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.135701544 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181408823 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144311927 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.195987423 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079320911 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093827714 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.159278704 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.237789526 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128937206 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.111441127 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.092643555 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.115214302 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1298992 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.118578417 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.099562941 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098005759 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.176564631 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210913902 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112792834 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126457212 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093351676 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101004464 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145890899 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.152628277 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095628501 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091773193 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.194020832 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113181013 seconds)
  done (took 5.395618186 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.109454631 seconds)
    (2/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.168536027 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.130246521 seconds)
    (4/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.20581912 seconds)
    (5/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.240272383 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.195095549 seconds)
    (7/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085778087 seconds)
    (8/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148462734 seconds)
    (9/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.179598188 seconds)
    (10/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171772752 seconds)
    (11/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.287317682 seconds)
    (12/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.185300938 seconds)
    (13/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.489199569 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164334794 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130834165 seconds)
    (16/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101566966 seconds)
    (17/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097459739 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081198873 seconds)
    (19/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07933048 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.85904255 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.153229472 seconds)
    (22/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.167392864 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1809126 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114958333 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086724715 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365744345 seconds)
    (27/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107522122 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087737693 seconds)
    (29/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114377184 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065962997 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.215513998 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098929898 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.487487899 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084169084 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114984455 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114875433 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211059101 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129756025 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084768112 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142090276 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096748965 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.103883531 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.200414312 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120623091 seconds)
    (45/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.929376354 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09912287 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082686911 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133282941 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122337903 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109930669 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109358041 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.137165697 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.092208164 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112142822 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.865889091 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198493887 seconds)
    (57/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.153271795 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.088411941 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283205357 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.126801879 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102849182 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.092584049 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.211172594 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124596431 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101798978 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083964937 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095862958 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099158629 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107511717 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.17851481 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082711286 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110059596 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101293747 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.347886417 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091291497 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089088284 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.127795092 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.089964513 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082334702 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.104385062 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084627172 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.091479021 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105517887 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08890537 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08160507 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159941288 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.103283176 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108649082 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127852083 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092978374 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.104181195 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115606182 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098163879 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.090578767 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.179808899 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100558109 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107526383 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100899074 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145527166 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096181016 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.200844884 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086272772 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111156104 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102877468 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126183783 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099611829 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082341547 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103361956 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080900162 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081743635 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161086616 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090083452 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084340195 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106273361 seconds)
  done (took 22.277905033 seconds)
done (took 48.48820964 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.375236055 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078055527 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077503082 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.095434553 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077663647 seconds)
  done (took 1.400657444 seconds)
done (took 2.080103483 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.12479946 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.100186553 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.119117452 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.109732948 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.123191363 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.105450351 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.10748343 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.123384405 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.104463982 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.097807829 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.107033862 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.102822642 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.114373692 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.11498627 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.094686691 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.119010874 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.105830777 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.121389877 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.101258687 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.111073482 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107424694 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.107488878 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.125577701 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093016298 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108665215 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124545726 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108605082 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106855907 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118841439 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092277446 seconds)
  done (took 1.881192643 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.104436604 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.108670034 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107354853 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096303867 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.127063854 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093303625 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106152815 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124541186 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107600834 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107244504 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.120429281 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094325612 seconds)
  done (took 1.873312871 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.105935538 seconds)
done (took 6.760820842 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.640186227 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.682010331 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.156847041 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.274510257 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.572700201 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.263791925 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.623223177 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.196731512 seconds)
  done (took 17.202282987 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.117700582 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.160944489 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091367415 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096717537 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098840223 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.117009154 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094400343 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093884285 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.116898665 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098263473 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094618038 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.112120403 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095128856 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097496267 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093624196 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.111563 seconds)
  done (took 2.425725925 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122461313 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120496818 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118286131 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10259922 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098401201 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117544068 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101693938 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101867214 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.115504353 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099462788 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102798198 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.117169159 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10100195 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097544876 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.117015858 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10503717 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097233314 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.11765742 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102361061 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101872242 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.118833827 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100616426 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.100100229 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.11686975 seconds)
  done (took 3.344087332 seconds)
done (took 23.651353291 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.15784591 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10494442 seconds)
  done (took 0.949761279 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.157572762 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.171037043 seconds)
  done (took 1.020280651 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115625248 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092083637 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137702357 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104175748 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09585353 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.110442676 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118534417 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094582488 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.112038549 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095026889 seconds)
  done (took 1.765087865 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.099287067 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098949734 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123207776 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.148419642 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.102349468 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.114976562 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.099568108 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096759161 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.117937833 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094410609 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.098827162 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127491142 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.098478165 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129643651 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098974947 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.099282458 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118678709 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097966229 seconds)
  done (took 2.662992689 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093383663 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093718691 seconds)
  done (took 0.88454747 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097543689 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093928495 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096330755 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111483451 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093608692 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093700672 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.110284485 seconds)
  done (took 1.393901278 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.593424904 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.232406999 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.382693428 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070295531 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122740748 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.337533495 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.107045037 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.09107904 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074809094 seconds)
  done (took 2.73590671 seconds)
done (took 12.106626828 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094369263 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.162158819 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.596301737 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.115180638 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.106160986 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.152243732 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.294421448 seconds)
done (took 2.226732394 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332094395 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.150156036 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08372636 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09277346 seconds)
  done (took 1.350197466 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083010276 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101253937 seconds)
  done (took 0.88607874 seconds)
done (took 2.936505822 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109985216 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094025994 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.11200307 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096377199 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095682908 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112729419 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098809143 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.0963332 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.114031749 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097932845 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098532362 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.098100114 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.111778321 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097805803 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09613513 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.114023089 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098024825 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095036945 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113001451 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099060293 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097845124 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111827349 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099523899 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097463302 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.114265509 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098678749 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095702883 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110842098 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09811115 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098394007 seconds)
  done (took 3.771919739 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.123010614 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090557814 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094194101 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117570118 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09110977 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095234946 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106753659 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092200202 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09557633 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092915516 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.112034079 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093588438 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09122864 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.111268898 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095794304 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.117998525 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.121982132 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092087338 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091797008 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094128939 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.113192676 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091529446 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093335822 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109198523 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094078933 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.09029116 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093993656 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109533901 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094517187 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093790837 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112532815 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096692533 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093701999 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103274027 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.229325112 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093521529 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10065449 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.107895984 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09517991 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090770481 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.107380065 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093971727 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090985593 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09952746 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.111519558 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094969479 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091146576 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110434016 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095567949 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095965695 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.09083683 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.108330396 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097101384 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09516259 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.112951375 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.090945923 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094228113 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.090119281 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.110919413 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.094359835 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091009967 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.106892154 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099630477 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094160437 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124905897 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100475487 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09088558 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095996006 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.112121381 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099618674 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09664574 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.120915586 seconds)
  done (took 8.05023509 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093342875 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094363467 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.094138018 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.111711762 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094865066 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094572013 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.093488285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111431768 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095047353 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094277143 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111909133 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094846279 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094191448 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094212539 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111220428 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095024374 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094613358 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111416962 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.096094622 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094516838 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095064114 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111566212 seconds)
  done (took 2.892230011 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.222418227 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115585648 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144110155 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124699656 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114376067 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123059294 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100116223 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10263023 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11441853 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104883589 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105500427 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116740962 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113846181 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103262502 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121733008 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105301729 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098843086 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.123081783 seconds)
  done (took 2.863941776 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093466145 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094788311 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.096395428 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.112952842 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094472069 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095548114 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094997137 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112683394 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.095316031 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094965288 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111774549 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095658813 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09621866 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096132546 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111497768 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095075498 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09523341 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110667565 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096368959 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095462279 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094722101 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112286695 seconds)
  done (took 2.911266859 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106662097 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094906482 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130447315 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100497416 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096906876 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095339079 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.119533636 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096946476 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.102002007 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.113478327 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096980698 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096608095 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127365218 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096928457 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103705925 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114556816 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098826743 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097373626 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11379394 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096979371 seconds)
  done (took 2.813064147 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.183972347 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125116958 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108943603 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116375134 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127009098 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110499457 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115830511 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127209123 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109843368 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138321291 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113158174 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111789705 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137900846 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11883648 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127773022 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122749897 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122478564 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137015049 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113651533 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11332286 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142378021 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112991953 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136977405 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113061235 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112897387 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131409449 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113502562 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118034213 seconds)
  done (took 4.182820944 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104901399 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103897709 seconds)
  done (took 0.928025763 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097366292 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097748324 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.097944997 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.115397007 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098694534 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097218368 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11421229 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100973035 seconds)
  done (took 1.540862913 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.157799186 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.176607584 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097458902 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103529785 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.175843381 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.166326668 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15278123 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.114599 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093735104 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085586512 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.170037126 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.087613935 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09220991 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109040612 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.096268038 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103702643 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.115958181 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106251989 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10388409 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.117771191 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101857715 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10313623 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116640252 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106542319 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.092230863 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.118283687 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.102199728 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.107082402 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112694848 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.100625366 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.096693861 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.116050582 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101393061 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102167112 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.113566536 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.16702508 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123628151 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096299048 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.100338388 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101605448 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.148325845 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099198928 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.099609804 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.114455616 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102439703 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100997131 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.119060252 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09779854 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090531275 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.111174473 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098159829 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094421644 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.113029248 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099771486 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.099665677 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121480951 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099296147 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.094321771 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.112007609 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.094384488 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.095883562 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.092701663 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117157705 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099507277 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097866495 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.11495575 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095468216 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096885994 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.117163852 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097734914 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097313213 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.153800215 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.099808362 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102046636 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122133967 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098973549 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094649326 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120825212 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098469017 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.099166242 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.118368195 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125672126 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100939862 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111074669 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.095690939 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105060497 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.115317737 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101200159 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.090639529 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106655811 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.119323833 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09761381 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.090589313 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.116110226 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.094015237 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100836496 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.10839926 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100053086 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096417848 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.119381522 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103513442 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092007649 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113586231 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099937848 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09988861 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092634545 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156761904 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090711466 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107400669 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096380971 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09838346 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106029545 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09544 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092668139 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09062151 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10710943 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097527347 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094332457 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.112304924 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.09758301 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095405498 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112956054 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095446495 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093230362 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107151614 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098339391 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102527353 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.112172365 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.0975212 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094656101 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093791326 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.111678727 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098649137 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091539713 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116929254 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091751611 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092623231 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.11375427 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099085156 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095201352 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.107658313 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094359555 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096022756 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111569704 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097291772 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094816736 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106153862 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08689869 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.097611435 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.092800349 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.117077388 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107735627 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.095298221 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.120214658 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.096190095 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106747024 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.114002067 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104598985 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101716217 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.122353059 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103574135 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086935357 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090820488 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114522734 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097557099 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.092018754 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.11249126 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094578857 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.102588046 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.107632891 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100095899 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087593122 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.110655063 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102139944 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097077638 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099592972 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.109483405 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130661308 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106094358 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116802493 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09538266 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09393911 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.115453648 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094067828 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096756997 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117694087 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098708991 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091339129 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110990162 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099928071 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.091328653 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.113897724 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09434391 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095278806 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086778144 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.115632163 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.089032271 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098459937 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114989204 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098216261 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099436737 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116891471 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09441494 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101468141 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107597552 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098313968 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086666887 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.11742841 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106549374 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103744897 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102762788 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.118596436 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093347554 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098629232 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127014406 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101517868 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.100017118 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.119074499 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.093103739 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.094589402 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.122990919 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102283817 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.094521168 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098219613 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.120409237 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102236744 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.095148203 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.105725386 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098360832 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096604393 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.108357843 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095929098 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090088411 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111288523 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102901702 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087903008 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108889476 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096882502 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097959455 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.113599432 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.102221309 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100565582 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100446363 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.11970789 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09580108 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092570711 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119337592 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092461967 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093428641 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108618072 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098989823 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088976887 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094760933 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115655978 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093069307 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.092088736 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122789916 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105959494 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105815411 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118342773 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103006814 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099741943 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.120094741 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092756488 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099421442 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.110461253 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.094307594 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.096446063 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.091613326 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.119761668 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.097445073 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102803925 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.117415979 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099683556 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103367265 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121742925 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09881061 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104990236 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.131419226 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.093892317 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.092131129 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.117461306 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100405226 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.096722705 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.116454195 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101911074 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102351424 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.122447973 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104294547 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.09619694 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.114631756 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106653017 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.097478806 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105078935 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.125617161 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.108989627 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.095498038 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.123699878 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.098367188 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104151582 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.11235081 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.101865747 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099415435 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.119847573 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.098582718 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099091791 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.114322918 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.094257028 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.097246025 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104655837 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.117481909 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105893005 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101346408 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.117795007 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.097840305 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095449289 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.126029295 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.099522153 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106416954 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.115837286 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.094567263 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.094307872 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.122237821 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102231995 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105575018 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.093953568 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.123074031 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10628712 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102883823 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117476182 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110313749 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109222269 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.125335142 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106325253 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.093547511 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.115898258 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105806472 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.100846134 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102231366 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.1208873 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.093224495 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102799315 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.125372368 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.102185271 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.098886318 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.112675641 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101123264 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101162096 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.119229547 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.104703747 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101648051 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101172712 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.116198156 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104126649 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106835094 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.12045135 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106660979 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101342357 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.124906317 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.099373461 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106019348 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.118992715 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.096643226 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.094293206 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.098262844 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.125682113 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.093948259 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103660249 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.123489306 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.098699004 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.097850782 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120141535 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.096315251 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098278768 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118406328 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.097440952 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110972492 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.101197645 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.119137496 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103707461 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100713296 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.109964961 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.102668503 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098915372 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.126820247 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10148581 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106668383 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11978702 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105798021 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.103165633 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105520192 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.125152019 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105396294 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.094886228 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.127001486 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104590535 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.1029251 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.119401636 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099877366 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.095936152 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.118389426 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108662771 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.0994748 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.127166241 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107063405 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.100310591 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.099189079 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.125506253 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101658039 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104479208 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.116568315 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102186109 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.094679428 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.124392984 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101478337 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107887532 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.117812607 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.096014305 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107090015 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.123505999 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106153024 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.101652591 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101306737 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.114621699 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.095599867 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102928033 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.117652741 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110886238 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103767455 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.119002144 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100452089 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.103464274 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.120687205 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109232046 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.096483429 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.099674407 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.123991256 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104036623 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.101157906 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.115604645 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105326522 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.102066401 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.123016831 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.102777944 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.096899333 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.122499027 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.109312714 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.100425899 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.116396017 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100657144 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109017565 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.119014296 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.098462312 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091511358 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121472081 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105946434 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108811882 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.099040039 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.123091002 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.099561334 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103569246 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.128559085 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10076435 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102405062 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.119900512 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105439805 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101597067 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.110228542 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10049183 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109866485 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124909669 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.104459024 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.105435894 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.120178272 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109794199 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108548371 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.104949659 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.115177147 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.097530489 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.101606776 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.115938137 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104280369 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108415742 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.122526964 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.101514375 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10684159 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.125359168 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.10504583 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.104607017 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.097409664 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.128358013 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.098438984 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099651918 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.115964258 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.097012756 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.105695354 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.126380527 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102304001 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.099287696 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097177302 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.124440056 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.098790636 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.097200489 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.125347784 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102220401 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101581214 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114628893 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093708355 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098120159 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122844113 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097822984 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.097608432 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122178316 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10443884 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096854495 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113412956 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100905849 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102220471 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098263194 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.123715523 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094593105 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.096493416 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.122620202 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104616865 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108301481 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.121875763 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09772374 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.105249069 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.116909909 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.094734393 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.104001144 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.127085575 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10707444 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096627721 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093915923 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125001161 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101333696 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09793019 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.116752207 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094934349 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103846446 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.119080506 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104536966 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.097665213 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.129402977 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10615477 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10187357 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.123168945 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091723326 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102041398 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117330493 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105425487 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098055556 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.09196798 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.113011229 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098865017 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10444317 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122852564 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101458782 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101336839 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100945029 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.117858354 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097511702 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094883644 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.128833492 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105915075 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099021601 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117446639 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096089454 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096827885 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.120018195 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105203532 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104073151 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116694518 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108447659 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101405423 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115204175 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.096495581 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098101861 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101289207 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115942676 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101438668 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092950437 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.11224067 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104135588 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103685531 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115831768 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106277482 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104165271 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114869356 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101270699 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104129304 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10040781 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.116828055 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098646483 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099565035 seconds)
  done (took 64.061831677 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148351616 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107150078 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12286758 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101793461 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116753255 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124405345 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102076947 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101681436 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120670792 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111505101 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099643886 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119156283 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116562029 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119247008 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134700788 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10892691 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119442144 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104372699 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099156953 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100292223 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136288141 seconds)
  done (took 3.186582945 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102227664 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.100398731 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099407404 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119828786 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101618928 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100351448 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100201569 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120316069 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099059175 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098974947 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121851598 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102806719 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.099402585 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.099353556 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118061941 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098912648 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099082432 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118514861 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100271131 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100031436 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099614762 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119271522 seconds)
  done (took 3.0871453 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.132970331 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103968179 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096306031 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11773676 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101752394 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099513772 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123005027 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.102312103 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105778047 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094295092 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.121868291 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093045701 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095110418 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118389985 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093705142 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099279525 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.123843961 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103735538 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102566954 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.099016014 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.11046272 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09983141 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.101394039 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.11014564 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105049532 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104174072 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.102718929 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123837326 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089698278 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102322788 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.116716169 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094126704 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090760215 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090387821 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.109284637 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101535328 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102296598 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117999224 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099961245 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090490627 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.100472693 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.122391681 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090431472 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.100119645 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118083452 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093874926 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10265677 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.099087531 seconds)
  done (took 5.788329857 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129661321 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.133910116 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.123492171 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127599327 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132613652 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108663539 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102401081 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150412284 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101432103 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.103932979 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.138261017 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113832562 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125738685 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108749165 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102685614 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12269151 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10557858 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103580909 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127381003 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107077025 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107513183 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125929771 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117332518 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.111502936 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128732502 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106086116 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104057576 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.126940374 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111656796 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107860644 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.129206654 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109875075 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.111463686 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.124432373 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102870414 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104371722 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.133303963 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104449525 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123764551 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105747665 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104672668 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.1067971 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.126310965 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.115363203 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123504812 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108545298 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104239722 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.121500855 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116536328 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104421729 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130281371 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115280162 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105005043 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.125312025 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107791849 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.1120558 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.123384545 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10331244 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104901888 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.133475493 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102713201 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106846897 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.139335247 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111795222 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110043673 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.132664147 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105881132 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126390444 seconds)
  done (took 8.755067178 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.137400712 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.115863476 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135411842 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115814798 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106226776 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127848869 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106541831 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107202529 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128641988 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112036314 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107971901 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.235154903 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.132958737 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111471787 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107434053 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12820541 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106460325 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107036097 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129611804 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106673411 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.106764555 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134146109 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107655241 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135783957 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118513255 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103975163 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130172 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109687621 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11624502 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126606882 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118102239 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127328692 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109934092 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114836321 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139967939 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111031089 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101117467 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130187436 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10922192 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106766161 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.124977276 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115425083 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107837037 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.125195948 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108177164 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.106620332 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136733868 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.11673335 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.131573575 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11345507 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.106443634 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.137698726 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10956938 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107010884 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133445252 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.121304811 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134597563 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116089204 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10666999 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.133954744 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115117921 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.143465171 seconds)
  done (took 8.258709016 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107605444 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103177646 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.10209769 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.125971885 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.105170148 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103705576 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.122879662 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105616015 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105017335 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101970229 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126870183 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107622066 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1033563 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124106564 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10760223 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102479302 seconds)
  done (took 2.540148716 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122681662 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119014226 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.201810579 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.35272118 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127408451 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111556155 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103443671 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127380165 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.107475748 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107515697 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.106395652 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.132538432 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.123143313 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103720941 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.129874197 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10523056 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101231029 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.131196152 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105162116 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.201539804 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105327989 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104704236 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.129825029 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108001513 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103449468 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130770191 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.114350784 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10226936 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126850348 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107333411 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107089665 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130322368 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105827145 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105922688 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103464274 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125456247 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102129398 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102226338 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.13023814 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106447126 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105197595 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.126598222 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104666732 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104241887 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121936665 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107467228 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100404388 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10665197 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125201326 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104746909 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101591829 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.132303626 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107133665 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109017355 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.132326255 seconds)
  done (took 7.453160769 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.121462094 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103785544 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134814141 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105630821 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102974407 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10308783 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.129358908 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108855602 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104049754 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12452659 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108590205 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106190948 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125227936 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108482161 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10407776 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123978754 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.106332027 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103541379 seconds)
  done (took 2.816797723 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110725393 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103546478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.100958369 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125859231 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.109118695 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103303919 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10205816 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.129302896 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105685996 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100272318 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124069828 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107392008 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10174583 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.101968064 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128260095 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105036471 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.102001728 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122915142 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111875749 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103554859 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101743175 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12588633 seconds)
  done (took 3.222917593 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.1206805 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.202089176 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.114152156 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.208471761 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101182281 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096712997 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.133225601 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.106391253 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.117467382 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.124756437 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099078871 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097545155 seconds)
  done (took 2.316241821 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139524865 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139204783 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128188438 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10893159 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111641432 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13205974 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112794791 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107115577 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139045684 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119243655 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129111321 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119024004 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114730721 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138533469 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111353266 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110836581 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132246287 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112189616 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10530564 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145278809 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11021632 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137082236 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109957419 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107179062 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13000501 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115262143 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116097725 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141655653 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107476866 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139087939 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117064747 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108988581 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138043392 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122092271 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105858014 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13869138 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10900185 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14466672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114309368 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116892449 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12841214 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110995888 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114827801 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136716618 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116095978 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131231003 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116954537 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108941438 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131002972 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130976362 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133291741 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119322296 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112859813 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139095202 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116736493 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150345306 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12469365 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116272188 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134112795 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119943675 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138780846 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114234918 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115741674 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140428123 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111945241 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139255417 seconds)
  done (took 8.941848331 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148839108 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105154573 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133907462 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123515847 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116407261 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131574273 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109627558 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131015194 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114648728 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104989818 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174422599 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11217013 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116030816 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140357304 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111244733 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130849879 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113902543 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11562413 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127201022 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129583168 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108760409 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13925891 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117759807 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139274624 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123037783 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111530942 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132544299 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112090371 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109302587 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139148002 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113350657 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130206502 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11982278 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104432694 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139547564 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116551064 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109761723 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138921716 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111377292 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112499711 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140300662 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125620723 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136102643 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113352054 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11949243 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133495677 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113992149 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1051559 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132978852 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10991258 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119097547 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142285971 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119549071 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137647881 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109502751 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108406384 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133572084 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109266898 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108885984 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136314751 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118716632 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130399683 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135173405 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108501647 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133552039 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118568709 seconds)
  done (took 8.925225757 seconds)
done (took 160.01568014 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.188994425 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.218083529 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.215055909 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158458489 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.150279305 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.145779223 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127222324 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099212896 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096810425 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.12064502 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.164116471 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09804487 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161484501 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096429791 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.267943501 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097960782 seconds)
  done (took 3.20822599 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198249861 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.336839552 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110367317 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.123138285 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101380979 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100301372 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.12316203 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102524071 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099381004 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127081593 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101048394 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096173404 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129931816 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098543397 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100256185 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122405859 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108503602 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100008248 seconds)
  done (took 3.094008602 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.125250565 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144038009 seconds)
  done (took 1.083111058 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13416748 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.216362849 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30012371 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171789653 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121240907 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142707951 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152122207 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132905239 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190015155 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132975988 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11409307 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098796292 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149410131 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104933665 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116740962 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.124340253 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128387206 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115719674 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.136527766 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101290814 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.125106202 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125977822 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105858503 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136616954 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184563972 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129574648 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112451381 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105529201 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124403948 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.121015668 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10655992 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139855564 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113567444 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.185468906 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102779411 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178902708 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108685399 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.12615892 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118385306 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.101238363 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124852329 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103462388 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113734575 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12292918 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10783166 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.107118859 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.130468966 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.107120326 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107142116 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.130370769 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108138123 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.131268299 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157053841 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.13142202 seconds)
  done (took 7.934549917 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.933719994 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15420704 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100574033 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.981039698 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119120735 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106287119 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.878572827 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.150284614 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.191870489 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.941317189 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114801121 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124849676 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126398825 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.233457131 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.175776543 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.244156397 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.786309907 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106451176 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157984127 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.121861167 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097179047 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138239227 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112137654 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424701493 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101060547 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101519334 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118383559 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103837017 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180029667 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.104708706 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098818851 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160918718 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.233661068 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.112603077 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125092583 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103488579 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100398591 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.141940815 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.169705519 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.138441068 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.14634319 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096614381 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099537867 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122058608 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111207997 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096659987 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135869303 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.123637511 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.147384385 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103035938 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101572972 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122188164 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105074046 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.109716955 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122090456 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.24785156 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.244730004 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122590728 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103165842 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111755902 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.186785694 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105734465 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.119927611 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142915729 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222204444 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108175628 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.697549318 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.138809412 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102683937 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099792928 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121330443 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102645106 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100701911 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158685822 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.383778412 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101728369 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100355918 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125560659 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.142971394 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101050559 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126492622 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.118486855 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100528356 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12701259 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106884053 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101999702 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147607458 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207848637 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123673968 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108735336 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099333651 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103231842 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.126791892 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21061994 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.136242256 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.111743121 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.188759828 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102282979 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.115048988 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.138662884 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100416959 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.121923256 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121156748 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108968117 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100942794 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.130714806 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.117615376 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105595202 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098621061 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120668977 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.117193534 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.1054287 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123642748 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.119789814 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.398535317 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.14230811 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.101565639 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106149392 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123064672 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157904926 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122613078 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261557143 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101690027 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.119217116 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120472652 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099882673 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100128166 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.134767696 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104393513 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100655747 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124275929 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105294954 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.211625375 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.140210428 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106424706 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.150175451 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.171512942 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.102842268 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.128144927 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124911136 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.126472438 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102571982 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123218392 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1018999 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.701955396 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127333301 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101835715 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099789505 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18324942 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102671157 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105154852 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10150788 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123397675 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794681223 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105743475 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09963341 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.13036141 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103457499 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100964446 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121328976 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104894973 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.114329622 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.15140843 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105678382 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100053296 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123360519 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158230666 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123432177 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102571423 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103262363 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102451296 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122125656 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.100402572 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106464237 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147213413 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.109026155 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.139147514 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.473023071 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101697918 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102560737 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.152534201 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103189868 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.236052155 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10002061 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.121921649 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14184639 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103278496 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.244035502 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.144010422 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.159748108 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106634929 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150277001 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100677188 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.099807734 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.137344281 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10571072 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099383169 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.130775708 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108294847 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103799443 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.175705584 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103790642 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.182577477 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.121588577 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.122828609 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102393048 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123834113 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.219106913 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103308389 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127922622 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.114197832 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100152261 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102833328 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.82672196 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104062255 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102448223 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126363066 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.115243426 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141009342 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105118396 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102047194 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103443671 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.14128333 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.164667658 seconds)
  done (took 40.863863415 seconds)
done (took 56.996309029 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.244009311 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174086873 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.350733777 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150172448 seconds)
  done (took 1.832961649 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.268990002 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.171464612 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.240403895 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099394134 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.244370041 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102385017 seconds)
  done (took 1.964438844 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17758201 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167830909 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147028264 seconds)
  done (took 1.332662275 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.21596217 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.20722719 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.34399549 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.235039944 seconds)
  done (took 1.907506604 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.274995864 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118179833 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.130203149 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.227233575 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.242186035 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211668398 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125178907 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177086416 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131407493 seconds)
  done (took 2.516462743 seconds)
done (took 10.394712833 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.152984468 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.136127786 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.148877172 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.117700442 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.136004026 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.16035021 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.130130863 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.13297508 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.155016431 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.115997223 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.126790285 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.137216611 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.191766006 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.160993937 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.113489223 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.127984641 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.136502274 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.138878065 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.133387842 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.138869266 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.137926058 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.112470517 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.13532531 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.123381541 seconds)
  done (took 4.137511411 seconds)
done (took 4.986096765 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.213486156 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102116547 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.133940356 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109594104 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.21056288 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117115941 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.126157244 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.136714522 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121272474 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.110607222 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.126865015 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124715161 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.109558904 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.20581919 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112643165 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.129605378 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104855583 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.121009313 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.150743331 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128052876 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.211947483 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104775125 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.122138995 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12540652 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.187417478 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127373599 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110064066 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111352428 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.122204297 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.139028294 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110982339 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100210578 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.153047814 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.126000171 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101325315 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.137832821 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103160604 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084041414 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.133786845 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11344655 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124357294 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111875539 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137742027 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101871055 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112105667 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.13579569 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10273555 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11228034 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.126372774 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112895152 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104330027 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.15132015 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112447889 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101348153 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.123060551 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10842531 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.121808786 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101365893 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.149010709 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102953106 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100991474 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12853492 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113827603 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101812248 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133303753 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103200344 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111387698 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.135717887 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111111406 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104715411 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101982103 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.13671124 seconds)
done (took 9.813622599 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.112871406 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144984918 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.207659578 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.211148778 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129106152 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.116104708 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.141552428 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125491237 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113716835 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144087876 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137840852 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.15560177 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.194863956 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.142091742 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117097432 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113750708 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13768364 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113192537 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.213639388 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.129376089 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123527091 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.146024226 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126692577 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117062791 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.131864464 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135768382 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132808858 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118017871 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.10674011 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113916232 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.147634905 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105301798 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108847291 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.148353013 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123896342 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.115622943 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.140071304 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113840664 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10374308 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.129707486 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111817431 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.142947996 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107192612 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116812969 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137487107 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123121662 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11332307 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117775452 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.132039556 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114796372 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105764078 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154772684 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118769991 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120182462 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.143364949 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121680068 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118116138 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.143047171 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112758124 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118527643 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.12945012 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10645851 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106220211 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.150979046 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110618746 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.117367997 seconds)
  done (took 9.436021369 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130173677 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136135328 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140600212 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118353039 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110226447 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126529567 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.106131583 seconds)
  done (took 1.732363522 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.109528174 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.195384693 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.216711566 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.216817795 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.21723356 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.205674269 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152454442 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104647456 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.138781056 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137614497 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.19663066 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.247114594 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.138548065 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.117838728 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.221594659 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101013125 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.225530635 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.178636612 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.142161095 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.195357454 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.144633965 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136340732 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.137772687 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104719183 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.189547567 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.127729651 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.268344878 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121488144 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111180689 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143836378 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120653891 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205009659 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.192005212 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.143091031 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116389312 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.216403845 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.189227135 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.1431754 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.206144371 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.132109607 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.190429942 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.143452321 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118725153 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117333915 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.142467558 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.180488524 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.147657953 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118275515 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116847192 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.225861333 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.112510327 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219979021 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114561775 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.142062479 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113172632 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118360023 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152430767 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118360302 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.226503315 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121126297 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.217752202 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.215315509 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.192107809 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.218596304 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127079847 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.220074913 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.206425831 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.1196245 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.215356925 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118630169 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.222049745 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11675116 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112760219 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.209808594 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11896834 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.223299834 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.222342799 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114967972 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114385845 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.13197635 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116311858 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103181557 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.222520964 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122673281 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142096701 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125395834 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114100892 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.144530111 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.188656323 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.149614766 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116612594 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.137229322 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122490227 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117217979 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143594168 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.198886325 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.1377363 seconds)
  done (took 16.260255023 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.111986028 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10422771 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107860434 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130866641 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106314567 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104626433 seconds)
  done (took 1.550834432 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14717053 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118112645 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149901884 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118398226 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164219835 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.225156844 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.232662407 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112051889 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157812945 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126427949 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.227574121 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.202433564 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.227465029 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120438011 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.229913036 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.116764709 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.23418816 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139277348 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125748603 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1137498 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138842866 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120182043 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113435165 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.219570379 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117742347 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145176212 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110046326 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124730247 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149908169 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11245613 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120871935 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.141514154 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109748174 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111967591 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.229992654 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.10853552 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14042498 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119195744 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118377274 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142468466 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.229151347 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115636842 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124331802 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.143166739 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114620442 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109584186 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.144566918 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.109687412 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.233997494 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121750329 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.1194749 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.142117235 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118002785 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119378169 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.137071341 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113883267 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119502417 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.233864655 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.1195673 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.136264535 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119653275 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118222366 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.137457494 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122285243 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143512174 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121196347 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109544307 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142126244 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116037033 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118324055 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.143256486 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121165059 seconds)
  done (took 11.194258851 seconds)
done (took 41.029445365 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.617672401 seconds)
  done (took 2.503802753 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.936190419 seconds)
  done (took 1.82423994 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.750626739 seconds)
  done (took 16.671759028 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401265343 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.31705652 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.003817036 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169205944 seconds)
  done (took 2.781797951 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.030774584 seconds)
  done (took 1.931991981 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.417456997 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.274633876 seconds)
  done (took 1.586488058 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.689989628 seconds)
  done (took 1.587560821 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.738002507 seconds)
  done (took 2.635327719 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.280075281 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.253474203 seconds)
  done (took 1.44191283 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.655016046 seconds)
  done (took 1.563021737 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.259073518 seconds)
  done (took 14.171266472 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.263774883 seconds)
  done (took 1.172498751 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298339684 seconds)
  done (took 1.212172721 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.184319878 seconds)
  done (took 4.095487352 seconds)
done (took 56.079725363 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.124783187 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.122074602 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.120430677 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142346663 seconds)
  done (took 1.409506125 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12937993 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118108524 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121191458 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.14401601 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123968697 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.1186917 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144258847 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120822138 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118013541 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145396702 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119129255 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11717335 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147096848 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121345458 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116330575 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144319958 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.1214901 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118096023 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.117475204 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.144329178 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120107801 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119720392 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.147513172 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122187605 seconds)
  done (took 3.971308922 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.121725954 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108052986 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110699412 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132713874 seconds)
  done (took 1.388912654 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.134257576 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133003366 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154575732 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12866741 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133307385 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155448609 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117889922 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114379489 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14287571 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.132182451 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134595817 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157627796 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132942395 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.122751155 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156945516 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116638854 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121137611 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156450691 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.129595531 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129757422 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.148461407 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129318889 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117228734 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.15209043 seconds)
  done (took 4.163105867 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.200233004 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130288985 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171916974 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.151310233 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.139882243 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.146665788 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.162997334 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.151865122 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.123262253 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.122885599 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.14410373 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.120069389 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163656845 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151151694 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120911116 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117909826 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.154700957 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123701694 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.187429351 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121374792 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123431129 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.156927148 seconds)
  done (took 4.100114268 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.215541865 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.135473373 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.111669857 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.106322459 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.146613686 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.116034658 seconds)
  done (took 1.748818827 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.116378067 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.1044299 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.105032839 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.131178483 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11095538 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104874719 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.10256416 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.1361347 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104721208 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10354536 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131772483 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.107035469 seconds)
  done (took 2.281270195 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24549728 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146352061 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253200215 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384306622 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192560102 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161518863 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.303766631 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190302202 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179350391 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16211859 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182046614 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188679929 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155189987 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237654733 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142604378 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.18543657 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169346046 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258409606 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140965202 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264279836 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181420346 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177718759 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218651269 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148759769 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164363359 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1607548 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.146558582 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12837673 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192040413 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16376447 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199089493 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150358087 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171052269 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186858608 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239864581 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206697025 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28477546 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134478763 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.191771174 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.219109078 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229721042 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168217969 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213413311 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151899065 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127844399 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242470778 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173408504 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184701421 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.159505759 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146328943 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205576003 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178577807 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196467093 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136123106 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320485727 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158556406 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14095263 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202329011 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193181899 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228056724 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200910953 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.126947778 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195323372 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195576756 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243770943 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142854199 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187964685 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12381393 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191417777 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236813354 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18417335 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184294455 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.205648917 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130187086 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17030783 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192580915 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150209604 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232987658 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198439061 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119535382 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147774867 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158775987 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125400933 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.218015783 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125385358 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245343979 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131259987 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.214821871 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180699096 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179438042 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158367345 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187231282 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160812977 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174245272 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10032016 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141610326 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186759155 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153846799 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156781879 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153611922 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166679227 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130405759 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149091096 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.152218239 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173436231 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.163159086 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161195359 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195761765 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131709137 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20499639 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147006474 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.187419782 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165648858 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222274146 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130127302 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158754406 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221069523 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19885797 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136572046 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195130959 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225932013 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.153332347 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132421169 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192114235 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222231473 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142039361 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228354528 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137317672 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161918984 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.139569075 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201322808 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161914584 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.187360558 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128203593 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.190609085 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188128393 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153980335 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141532244 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207263437 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134039112 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122813313 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162373581 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134433366 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.163518001 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15162822 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136996821 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181603261 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166758426 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194280292 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152524842 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162147715 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168780262 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158590419 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170513094 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174355622 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119096639 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200641995 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195523537 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155369687 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180605788 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.184078366 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20090809 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174491323 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153273751 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182807883 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126451066 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.147623452 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157884253 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194998959 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160312984 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217280144 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200792782 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187511345 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163863715 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172167983 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166107296 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.212361711 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155314443 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.165527055 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170516516 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196052794 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119978805 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122073065 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.152940119 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135621995 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154836379 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139045126 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199250337 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164584687 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200620065 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168269023 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162071238 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191118507 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.154485148 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156959485 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204390936 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137982351 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.218481624 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218869313 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181370271 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162865543 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160177352 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.143253552 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126853352 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132405315 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186945979 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136398211 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158315244 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139974434 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222107993 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16892616 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172589476 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209332416 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165321861 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230754763 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119372792 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.184206874 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166337213 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193179593 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179965832 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134530655 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.181482156 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191797713 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17008804 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215228208 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168583798 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205127831 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190498247 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.192786387 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129319308 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170776395 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159476006 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161441479 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16089553 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141773546 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157500196 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146338931 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.164057525 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139606161 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210787978 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142081894 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199656604 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152313293 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191776342 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123493637 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169398497 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173902003 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171896929 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104563576 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161499028 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214692944 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177921298 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151989649 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193170234 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128768679 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.367346155 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177835324 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195603784 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133948179 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163081144 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171556871 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183769738 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155770228 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211474169 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139253322 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234199265 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194165124 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142706415 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128846692 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175037202 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149590322 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162817702 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150304659 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.193032368 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.146755883 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212663216 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135735417 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198326478 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177123991 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.169252459 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148561838 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137883945 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251460957 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19622628 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169294224 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.190622564 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.160853137 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20741192 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123310443 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150630118 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131406864 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209565337 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129329016 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175366575 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191527218 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203365665 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198594738 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161117486 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139287335 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.152116132 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166347341 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176260124 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204888205 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134970725 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136487188 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209888771 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126079162 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157274259 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158002075 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311665751 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145456066 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191406533 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104254388 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.3003655 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127533117 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154985211 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157101403 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195239143 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134309118 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179674733 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198187982 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138712611 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184769026 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135301354 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201260649 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203778217 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16385247 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199729588 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.142817952 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185177249 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153460157 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198240991 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143338409 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.173266167 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157727739 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221073923 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.17275458 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.156756876 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169027081 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196546921 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169752662 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195939861 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136839119 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21105114 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126662964 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190720342 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135443201 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123782989 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183997141 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188711707 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131572388 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193481797 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170349595 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128632838 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153064087 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144558885 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194163238 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137421526 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.153068766 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181571274 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.155825541 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184226989 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236085748 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128599454 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195646108 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142608149 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128130749 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16399348 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142496961 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15801332 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16973569 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176199292 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.153884024 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170090345 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190527301 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186335776 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154157453 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142306643 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.2952432 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127854526 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218062018 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148214308 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242695806 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145971635 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203895063 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192097473 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148418384 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161494279 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174217825 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219468062 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188350627 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.192757263 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131697264 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142645164 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162109372 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.132841753 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175084485 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168611595 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138673919 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.161103168 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.16761496 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171758713 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144607355 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166891404 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20164743 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175369089 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182787699 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21214702 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135647556 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205416904 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197496833 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128806952 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.163233537 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195534921 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141311825 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17709752 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134018159 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164438089 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21408721 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.151277827 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159343447 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199700954 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171074409 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19943004 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134552236 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205380237 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140543291 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20044623 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126170094 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148955254 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194818699 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132829601 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.151643027 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17111764 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185293116 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166602052 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166157862 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.172096535 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220889681 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12484318 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131906159 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305772612 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157073046 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22028765 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.131521403 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163139321 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142725622 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184585693 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.164204051 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197887525 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130537899 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12780445 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.169120179 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.152604811 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.160701301 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170072325 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209623793 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15641605 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209400371 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131263061 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278589268 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142137349 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196631918 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116115953 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127189917 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165337086 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132911245 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164213061 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177674969 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238568047 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.187848958 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.146647698 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134397118 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.151203167 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129324406 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160274851 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175335425 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166987017 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173597704 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102104534 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164523505 seconds)
  done (took 84.204069807 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.218922043 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.167446014 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.312660221 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.283031732 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195354033 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289569504 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227254597 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24446335 seconds)
  done (took 2.938764489 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.126263613 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.181761522 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14230413 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141157545 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109730015 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.459161881 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.134499297 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.142977609 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164836394 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.156824831 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137953855 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.569624181 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.122695071 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.141741837 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120924944 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133906413 seconds)
  done (took 3.984552226 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.766865675 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.501545273 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.460413018 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.291785778 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.228182229 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.208367418 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.719268071 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.196556699 seconds)
  done (took 11.373066575 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.178251229 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.171541646 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.40310594 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.307315337 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.186879002 seconds)
  done (took 2.254824444 seconds)
done (took 124.722217682 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.129875943 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123548463 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123978405 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153293796 seconds)
  done (took 1.52740813 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.183926881 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.099697245 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092630005 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116796766 seconds)
  done (took 1.497373304 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40993537 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091942697 seconds)
  done (took 1.525034782 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150503566 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133726642 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162182705 seconds)
  done (took 1.469312194 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.140534771 seconds)
  done (took 1.153171154 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.124178431 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119253573 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.23855366 seconds)
  done (took 1.499638676 seconds)
done (took 9.692604905 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151442024 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.939683252 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429634383 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135342211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712997651 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424788446 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.419810019 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171985698 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.160573283 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110900206 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.169077436 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691394346 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.43240331 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.885966504 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.394460776 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.879258109 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.72138091 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112551813 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116917172 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138711773 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.40443006 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110954822 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137972364 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113586442 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.695118353 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.448988171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110408593 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.895417846 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135700776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114388219 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.399507787 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137426135 seconds)
  done (took 20.90780776 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15980433 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167616427 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.142196085 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113291712 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114932702 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137837291 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122517255 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124234723 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189143885 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11074418 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158014717 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110902231 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116195782 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111007831 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.159750761 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111193819 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112226422 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.137680497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119728913 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111924359 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158673529 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110563502 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112277127 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.138795792 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110337983 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134437976 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139813101 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122742215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11143561 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14048246 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115532708 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111701774 seconds)
  done (took 5.154008901 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166632502 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177394626 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146221597 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149260462 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185155528 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113610467 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197715854 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175770257 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165170166 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139055532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133687112 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110361939 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.179147013 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112817978 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.159264806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112629476 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114643629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11357387 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147767534 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113097343 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.156987072 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112001045 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113272574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114360004 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.136422655 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136402541 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110785038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.151598608 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111652955 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.139121882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118551598 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111948524 seconds)
  done (took 5.449852597 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.132278553 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127649682 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133892516 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162273289 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121824081 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12433732 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152415192 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120667021 seconds)
  done (took 2.09876228 seconds)
done (took 34.632134925 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139309964 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126819688 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129538191 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154091313 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.201432878 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.144670841 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129047486 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117332029 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.15042688 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132490731 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110094796 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.118409331 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.159576857 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121478506 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.233807525 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127363333 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.23612046 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.205165894 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.148267738 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126133359 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117267427 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.235798491 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123388805 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11716455 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.224755816 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115827229 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.224473447 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120407211 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.119860633 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14160411 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.206457959 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.151955008 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118160277 seconds)
  done (took 6.040039798 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.226464343 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.120444437 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.151921834 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120160531 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121994773 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146249533 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.221806279 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.149276315 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121295453 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119212017 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.119161242 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.232238331 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.125387523 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.14740401 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123134513 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108557729 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.251523256 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120507852 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.111958511 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.122168888 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116824842 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118610963 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.264093011 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115358943 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119724442 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.14938394 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121327789 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.12359791 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.146943476 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122897891 seconds)
  done (took 5.389179309 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.139598548 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133874706 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.165761931 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.189213726 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148154664 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162068794 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134270775 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131425162 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169320693 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114319147 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129409892 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179552512 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130692736 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124084564 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.140311209 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.128786139 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.128558527 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.140374206 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122721961 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130743581 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.156568024 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129816159 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134490496 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.120479706 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.139650091 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120555344 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.125695593 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.154405529 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121029707 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128600083 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.142819768 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115004359 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.115478302 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.172700383 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115860264 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125856857 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.160677276 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12659494 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126455955 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.17359533 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115570772 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.11489806 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.165972013 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167875817 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114402118 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.153347643 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.116480943 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129477498 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110879323 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.157800095 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.15438325 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.141005431 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135003829 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112921972 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111518232 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.152049434 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11424274 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116932886 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.157467371 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114599489 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.131964128 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.148044524 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126543117 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115050175 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.152725287 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114831781 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112037222 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117648899 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.170838554 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121187128 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.151418418 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.143237978 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124604673 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126567631 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.154212348 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126005968 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112792626 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153259922 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125649917 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.611440952 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.152102164 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.116977795 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.114447165 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.12918675 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.164816699 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127482342 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124788425 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.154540532 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11617001 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114932213 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.16043325 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.114627147 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.115834632 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.152900519 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115890295 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.11711587 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12374304 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.149365712 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111736764 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140908072 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.146096581 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114294353 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.140609989 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.143829533 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118193242 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12128777 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.180981674 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113986422 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122637802 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.152466525 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118483922 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122535973 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115708918 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.143154028 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130515829 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129403816 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.151024652 seconds)
  done (took 17.271484174 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.333574542 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.327879893 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.181796232 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.410113116 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13084115 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.243775064 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.322847689 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.29564395 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.147310003 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.14858789 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.197055785 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.283830926 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115609813 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.141801761 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.326318591 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.408384823 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.144190473 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.181865026 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.150840271 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.155111415 seconds)
  done (took 5.689565691 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.129706089 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147072194 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.133505665 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.15932026 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125709072 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.126012044 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.143046054 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136954078 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.124377409 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.1533401 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11803589 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.122002037 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.154153192 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130578057 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.12709619 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.166202839 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121783015 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.116316188 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.164406801 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116700873 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133773366 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.168225512 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122640176 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.134169506 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.158872437 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12559586 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.112665933 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.142269139 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122150519 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.123390272 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.115024404 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.149446728 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.141878936 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.101601398 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125840723 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.156247244 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120299796 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117103649 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.146199597 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.117293757 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.125086646 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.15435224 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123942786 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.13411943 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13311623 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.135714744 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126862571 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126548704 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105111761 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.164603613 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126988215 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125767669 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.148197616 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.133143118 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121404894 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.157615434 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.123723554 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125698457 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116393573 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.14110698 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.1130634 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.11693568 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.150540791 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.126854748 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127306552 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.122979884 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.149319477 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115499254 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.115338619 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.143633139 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118782423 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127224139 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.16343475 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125024907 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121411668 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124656424 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124131287 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093450222 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.12270925 seconds)
  done (took 11.478679517 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.1468538 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123118589 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130684076 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.173122224 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125279059 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120914818 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.150409071 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.137294903 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123816164 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.157315955 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.124084914 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127518031 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163209511 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126684196 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122490437 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.155435827 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125764875 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151237738 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.154286379 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.139088567 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124502424 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.118670608 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.155368081 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126095434 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.13873077 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.15344556 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138683139 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.123600355 seconds)
  done (took 4.921305426 seconds)
done (took 51.818209915 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.189618945 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.43112745 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.142664092 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.153670938 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.163836267 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.157099028 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.140622282 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.144051768 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.574875618 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.109949387 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.142128619 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.142513583 seconds)
done (took 27.551322414 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.206104701 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.357599314 seconds)
    (2/2) benchmarking "String"...
    done (took 1.47848005 seconds)
  done (took 3.897896304 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.357466826 seconds)
    (2/2) benchmarking "String"...
    done (took 1.448854844 seconds)
  done (took 3.853211571 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.131984661 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.13063379 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.592064466 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.132915435 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.128612514 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.128764908 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.133553366 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.141668505 seconds)
  done (took 15.435673071 seconds)
done (took 28.578053118 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.15494212 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.450397288 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.405762422 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.109906086 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.13256623 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.136992211 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.13051967 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.18572697 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.129661041 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.113959813 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.612545282 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.436861419 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.136743995 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.561177507 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.109667228 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.158340177 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.140613272 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.501158492 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.134342642 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.166882394 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.107971272 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.112717546 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.143258232 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.147460651 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.135864623 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.140814135 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.15126302 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.133853544 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.461351335 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.143574612 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.167972896 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.130994731 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.14948088 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.13358242 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.130833118 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.134680255 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.45835263 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.137386116 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.122872189 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.143029781 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.468243134 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.160104927 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.133844325 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.139535831 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.121890221 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.192690425 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.112104339 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.301617545 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.166313258 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.137139507 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.138090116 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.542382379 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.147239883 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.144007768 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.140745551 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.503068373 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.1452566 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.216096474 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.166418928 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.146799813 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.131766477 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.134079969 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.140177463 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.136376421 seconds)
  done (took 140.111681803 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.136066045 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.137529291 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.134921278 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.182297204 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.135177525 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.13587901 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.133453912 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.135546567 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.138577469 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.165263055 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.138441907 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.134208617 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.135667951 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.144673356 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.144879248 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.159242596 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.137333177 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.145826155 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.156553986 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.13735825 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.139083259 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.137296719 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.13637202 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.133145772 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.180872512 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.219947104 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.161350965 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.16092626 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.149786226 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.139172377 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.175680791 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.138203189 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.777502921 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.095821822 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.146227813 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.149096334 seconds)
  done (took 77.96001482 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.138170713 seconds)
    (2/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.138330091 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.140226421 seconds)
    (4/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.138942808 seconds)
    (5/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.139580879 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.166686141 seconds)
    (7/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.137094528 seconds)
    (8/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.137232465 seconds)
    (9/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.661196162 seconds)
    (10/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.660460454 seconds)
    (11/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.192308743 seconds)
    (12/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.534220587 seconds)
    (13/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.280415478 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.387714877 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.317176995 seconds)
    (16/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.1358355 seconds)
    (17/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22871882 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.151229007 seconds)
    (19/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.136609271 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.233336934 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.163594057 seconds)
    (22/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.141863361 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.139828465 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.66298354 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.154927872 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.141955902 seconds)
    (27/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.30432187 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.150475141 seconds)
    (29/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.170363215 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.531833762 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.136307976 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.170415875 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.471518829 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.182542975 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.138482833 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.447745136 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.399979006 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248641325 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.138863119 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.144142073 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.170669608 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.142240923 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.421761315 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.137731481 seconds)
    (45/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.485900198 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.145092194 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.143821571 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.727347452 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.140873292 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.665507046 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.139030041 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.096749524 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.14403759 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.142897501 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.348371047 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.810365899 seconds)
    (57/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.14339561 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.140498732 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.14311806 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.139549729 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.140831037 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.170734282 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.531717268 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.019677712 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.143295457 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.144374016 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.172291672 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.143646968 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.141536295 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.844502713 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.207757146 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.66434307 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.143269267 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.20381279 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237217247 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25621666 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.141416726 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.144311368 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.14194766 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.141933203 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.252737377 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.14145053 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.521700699 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.309767604 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.154588583 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.378838817 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.240561247 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.14142825 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.469669711 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.144183628 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.144430517 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.870020273 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235931818 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.140295704 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.144611686 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.143064003 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.521178008 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.667655922 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.389822966 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.145973451 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.921337903 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.148059261 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.536853953 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.651932414 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.773675969 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.144522847 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.255303136 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.309886195 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.157735771 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.144866048 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.381660894 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.147543972 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.20748651 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.142906441 seconds)
  done (took 361.400063942 seconds)
done (took 580.524604715 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.125159072 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.125668495 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.123684513 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.126533618 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.125009961 seconds)
  done (took 11.682500268 seconds)
done (took 12.744774318 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.45783315 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.458997544 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.460428802 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.232507989 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.458564249 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.460651037 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.357551264 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.43190178 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.460970282 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.462649545 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.206515298 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.476316227 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.419101829 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.248767319 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.202447462 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.357755968 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.217604348 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.363897043 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.359787652 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527075196 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.371574277 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.230467296 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520993626 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.214464004 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5045129 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.553047772 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.389238883 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.401680758 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.194032356 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.196392223 seconds)
  done (took 16.164613392 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.211726575 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527134701 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.431735209 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.229550141 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.492109855 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.215786868 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.514258483 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.549443962 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.428162966 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425405214 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.194700458 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.194311372 seconds)
  done (took 16.266145925 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.192356165 seconds)
done (took 61.992435911 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.206426669 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.270321735 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.202891164 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.189957676 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.186833326 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.18767177 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.187866767 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.187376901 seconds)
  done (took 10.680928211 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.183067903 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.185224253 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.186286399 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.185563401 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.182508334 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.187525383 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.185353389 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.183433941 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.183884906 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.185109643 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.185732837 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.187888628 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.184258906 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.18331095 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.185559351 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.188771351 seconds)
  done (took 20.023616691 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.191796667 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.185138138 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.18441549 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.183734259 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.185402976 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.187981377 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.186252526 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.183678874 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.185649237 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.181696849 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.189896355 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.182370398 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.189344888 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.185970996 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.189015796 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.191063822 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.186094545 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.18445502 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.187470348 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.188095847 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.186529586 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.184375122 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.188528653 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.18626803 seconds)
  done (took 29.540193206 seconds)
done (took 61.308998863 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.154639776 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.165511411 seconds)
  done (took 5.382935079 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.286905548 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.304067787 seconds)
  done (took 3.656237431 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.18761038 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.185884043 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.187657174 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.187463085 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.187107313 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.190760571 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.187315091 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.18788339 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.187768989 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.18393163 seconds)
  done (took 12.938794662 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.187078608 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.187448767 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.184348094 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.192375161 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.189388749 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.185376576 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.187741402 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.188625244 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.186311681 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.187225624 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.188601078 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.186077154 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.187231141 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.187545148 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.187755579 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.187486341 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.19046612 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.191292133 seconds)
  done (took 22.446047085 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.208798828 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.21747584 seconds)
  done (took 3.490645074 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.372269965 seconds)
    (2/7) benchmarking "second"...
    done (took 1.271862364 seconds)
    (3/7) benchmarking "month"...
    done (took 1.356886306 seconds)
    (4/7) benchmarking "year"...
    done (took 1.346016138 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.270752936 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.221398126 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.269236821 seconds)
  done (took 10.173196257 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.186712919 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.529180981 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.705887319 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.390743963 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.176527756 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.200490859 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.135255328 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.204035304 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.204951691 seconds)
  done (took 13.798663015 seconds)
done (took 72.955710152 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.153275358 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.176973971 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.182129515 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.175856581 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.550457987 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.211425001 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.15739299 seconds)
done (took 15.681236839 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.131668349 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.14180253 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.146945223 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.168911354 seconds)
  done (took 9.655868879 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.157228514 seconds)
    (2/2) benchmarking "read"...
    done (took 1.566138264 seconds)
  done (took 4.790470702 seconds)
done (took 15.518390573 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.191296184 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.190498736 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.192083085 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.194858718 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.190970304 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.19458452 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.194597371 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.192619327 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.193152914 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.190596863 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187708925 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.194774489 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.191299536 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.191364768 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192107949 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.191097066 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.193139854 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192641886 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192649778 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.190196183 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.193425645 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192962387 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.192643981 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.194007353 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.19399052 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.192310978 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.19186106 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.192473638 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.194957893 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.194393854 seconds)
  done (took 36.841899309 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.20000155 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.196670261 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.194142496 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.195027804 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.190693523 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.196030375 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.196255893 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.193671277 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.194153391 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.19433393 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.192251333 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.192610457 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.194828477 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.192544247 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.193254953 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.193723517 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.194590458 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.190710984 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.190330698 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.195206877 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.19113066 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.194710585 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.192567714 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.192560939 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.196042318 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.190750932 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.193606463 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.198652217 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.192207542 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.192220045 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.195503702 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.193480819 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.193767867 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.198044318 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.197449201 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.193351054 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.204734625 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.199057995 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.194821562 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.193880869 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.19275873 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.193317111 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.194574603 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.193956578 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.193489619 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.194265695 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.190031777 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.192228983 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.194905301 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.194504553 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.193200197 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.196652242 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.195305352 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.194826381 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.19627468 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.194726788 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.194782032 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.195696324 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.193369213 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.194700039 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.197089727 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.198330598 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.195936788 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.196873219 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.199023074 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.195811702 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.196764407 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.199361595 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.193819969 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.197261747 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.195416121 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.198357347 seconds)
  done (took 87.099685933 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.201751075 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.197686731 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.194951187 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.200999652 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198658782 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.197160896 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.197153354 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2006487 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196428191 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.202520307 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199465449 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.198707601 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200980166 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.20194705 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198345823 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.200795366 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.198590267 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198854337 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.199445194 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.200843208 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198027906 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.201229639 seconds)
  done (took 27.458215882 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.199304884 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.201986789 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.199805017 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2042699 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.208126815 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.201851925 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.200943011 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.205940643 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200555462 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205673012 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199946935 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200284827 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.204136155 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203178002 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199523208 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.207034568 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200312484 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.203308186 seconds)
  done (took 22.721553139 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.201614814 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.199769049 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.200964942 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.196702807 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.200822465 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.198733303 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201096941 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.201225379 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.199018953 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.20997719 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.20772886 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202475887 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.203452618 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199822268 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204448625 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.202871399 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.201107417 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198409169 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20347804 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203579868 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.203429011 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203222002 seconds)
  done (took 27.520695195 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200807518 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201426173 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.205768136 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.202259869 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.201776427 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.202965405 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.203192599 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.200378554 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.207206028 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.20477625 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202194776 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.202593361 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.205799145 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.205848943 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.205951749 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202041405 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.202147843 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.20448557 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203158098 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.202629538 seconds)
  done (took 25.145201077 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206838732 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.207997889 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.208005013 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205863888 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208783463 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.204628326 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207498174 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.20849474 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.208272295 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.207643095 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.208795406 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.20712145 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208123184 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.206689971 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.207271329 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208422943 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.207664746 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204522447 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.209088949 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209196296 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.206957463 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208755526 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.207251216 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.210080486 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.209182257 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.210172467 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20598625 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.20779067 seconds)
  done (took 34.896672406 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.235768319 seconds)
    (2/2) benchmarking "in"...
    done (took 1.236454999 seconds)
  done (took 3.552165677 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.208500117 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207135628 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.204988568 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.207062713 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.209086435 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.204088104 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.206703869 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20646145 seconds)
  done (took 10.734225071 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.19981696 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.206994689 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.206268618 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.202553132 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.207438111 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.199471735 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.211741242 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.208740371 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.207003628 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.202323354 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.211573134 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.213070391 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.203687354 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.201100503 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.198652636 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.21097655 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.207995933 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.21019314 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.209318098 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.207953609 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.211323452 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.212319318 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.207882581 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.212572772 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.204358879 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.222511187 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.215159554 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.213732416 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.201807088 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.21285088 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.208068847 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.211809756 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.212521439 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.211816042 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.209984454 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.210629229 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.221800133 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.208829698 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.215806214 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.212946632 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.207394809 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.208879775 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.208504168 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.212815331 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.209550042 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.215047179 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.210133635 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.208557107 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.2038035 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.211073978 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.215666043 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.20589385 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.210456302 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.220014431 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.21508615 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.223019841 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.219193866 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.209130505 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.212161407 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.225694482 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.233451614 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.222048418 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221078952 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.217553503 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22542748 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.232439335 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.223808209 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.216910684 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.218297453 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.212945794 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.221558901 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236205735 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.229897741 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.217086615 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.215009744 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.216289515 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.210156543 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220531536 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223790679 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.222623562 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.218213433 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.215672119 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.227446801 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225744419 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.20937886 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.218946278 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.215727293 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.214743579 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.207870638 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.225809232 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.220100335 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.214485376 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.207246745 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.211377509 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.213430283 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.21685956 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.211663997 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217059934 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.216950913 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.213602373 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214210201 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.216943579 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.225052572 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.218330488 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.216193973 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.226860063 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.219404158 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.209634898 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.234013487 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.224645815 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.215392753 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.212300112 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.226663949 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.218012779 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.214060252 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.22280019 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.218676621 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.22116339 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.222502875 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.213147077 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228104495 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.244998543 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.221572939 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.217604557 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.221494996 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.232928923 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214432505 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.226823048 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.222851383 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.21619076 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.218273916 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.224777327 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.2206789 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.217156595 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217261427 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218762666 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.219872024 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.215554995 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.219216844 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.221795034 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.22171786 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.216747674 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.229505861 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.231840236 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.221729942 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.223901029 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.233349227 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.218858627 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.223329028 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.22629372 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.2227872 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2165517 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.222284552 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.220151739 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.215555205 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223013695 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.212715458 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.221846717 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.221166113 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.218682907 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.218011242 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.209706835 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.216070982 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.218662862 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.226137765 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.220167663 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.220063809 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.216232874 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.21853142 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.211745223 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.219426018 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.211883439 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.222569155 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.224057752 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.220888285 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.218832227 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.22809828 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226738749 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.219391027 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219273065 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.220796303 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.227474317 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.225657886 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.229537848 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.227533823 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.220565269 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.21900718 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.215224017 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.217261637 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223089543 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.219648323 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.230764541 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240065375 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237886466 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.21743149 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.22180118 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.21547775 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.223313174 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.231181354 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.228122166 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.217224831 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.221519301 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.217308291 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228235448 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.221564627 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.223043866 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.215255865 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.222431777 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.223837822 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.22019099 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.223413955 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.222502387 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.230486502 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.224801911 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.22138346 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.219579598 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.219028272 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.227149556 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.216123992 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.220981523 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.226153759 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.22225047 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.237052771 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.226970413 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227408038 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234112243 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.223842501 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.219514227 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.221142716 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230600693 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.226678197 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234419195 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.22665075 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.223587092 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235960033 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.226430121 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.219926012 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.235531278 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.232420268 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.222944063 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.220093841 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.225935645 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.225442635 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.224316654 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.224634222 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.219243313 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226380883 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.236176891 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.230642458 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.218287605 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.228583887 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.221605695 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.226650959 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.228892375 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.232584535 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.229519899 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237235755 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236324256 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.225033225 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.226882832 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.226835829 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.226853219 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.223638635 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.224475683 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.228715118 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.237742523 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.228763239 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.230008299 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.226512324 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.226230514 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.220086506 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.22446374 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.227809625 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250677268 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.243820112 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239576485 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.240680327 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.228137391 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236663266 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.230357994 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.223415073 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22282645 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.225846946 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.224118724 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.22478885 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.228263036 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.227120502 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.229078711 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234096319 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.23071621 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.227437023 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.227940159 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.220916571 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.22997729 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.226085105 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.225811886 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.221259421 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.231387036 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.232902452 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239060358 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.231394928 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.224029326 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244243838 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234812192 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.234598897 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.232380808 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.224161467 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.223190463 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.232123373 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.232677005 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.224131644 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.235766224 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.22704179 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.238997082 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.226550527 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242335147 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.238307539 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.230412261 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.237674568 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.228713861 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.223931479 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.227104928 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.230076883 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242500739 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.242231222 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.223461866 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.233049887 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230891163 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.228811219 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.230114248 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.229700299 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228940705 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.230286337 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24730177 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.235975049 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.230658452 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246081572 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.241408841 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.232447296 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.231705442 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.22442826 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247121998 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247320557 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.237349107 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.237640764 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.231973912 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.231559894 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.233065112 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.231924395 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.230891652 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.230464573 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244312353 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.240377285 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237646491 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.229586248 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.249956297 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243269832 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245769172 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.249124487 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.2357723 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.23616376 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.232026992 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.233480808 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.229186128 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.238852511 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.236134846 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.229308419 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.243599274 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.234715322 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.240103996 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.245036607 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.2386418 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.227114565 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246703299 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251716297 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.226321098 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236169907 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.232510992 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.226964616 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.237967552 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.233048281 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.226827867 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.23314124 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238263329 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240675159 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.232108636 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.236372377 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234360389 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236723538 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.2303735 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.234727614 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.233085716 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.234111964 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.228001829 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.23617263 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246249331 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.243688531 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.235188707 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240122994 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.228837131 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.249950709 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.244221001 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.23802531 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239347616 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.23315409 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.230634007 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.237718917 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.241201972 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236329774 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240512289 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.2265008 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.235672288 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.232816059 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.246181794 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.249835472 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.238126161 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.227985696 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.23031155 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235629754 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.231783176 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.234749125 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.242156422 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.239841254 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.234994548 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.229360172 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.237140351 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.238843291 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239993508 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231726256 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.242335006 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238809907 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.238422637 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.235925463 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23458402 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.229802686 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.234400617 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.255572793 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248696779 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.242917273 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.235543221 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.240543298 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.23275788 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237819279 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.244883166 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.236852396 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.237011354 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.242729889 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.240075571 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.234328471 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.234184948 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241580581 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.253138964 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.244725674 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.229785366 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257540222 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.256396502 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245705267 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.233872338 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.239384352 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.235293049 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.236698885 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.242017787 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.231795677 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254669326 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.254665345 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243105705 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249163598 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.241587774 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.232000592 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243048993 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23773072 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.246088347 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.245451325 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.243788054 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246935591 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239418295 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.237725063 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.232282821 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.235616695 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.238600802 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.239236009 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.240312333 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251259465 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.246758055 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.246646658 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242197559 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241419387 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.236511221 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.239414873 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.234459424 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240975756 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.23931039 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.255241466 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.245363883 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.235802192 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.243242803 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241346333 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237983685 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.242011921 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.248631199 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.240486727 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.234880079 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.246040576 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.258600343 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252696659 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.242287235 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240025914 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.249973897 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.247590773 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242204962 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.243373266 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.238596053 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268746885 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.252437757 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240473038 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.241169007 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259762432 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.254454285 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.241800302 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.242187082 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.248655154 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246043159 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.247716836 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.248238271 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257652666 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25016624 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.242702022 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.245222454 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.24073599 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.243886391 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.257735568 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254444787 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.243133851 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.248729255 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.269991876 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255381358 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257072495 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274186752 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.256111199 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.253811815 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.25083937 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240901933 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.244371648 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.250788177 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.251194723 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.241518632 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245031229 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.244121058 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.236886688 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257664749 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.262932598 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.257577447 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.245199058 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.239782377 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.24667655 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.246369667 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.245606931 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.250617415 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.247250227 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.245530036 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.25086598 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.246243395 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2727446 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.277240144 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.250959846 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.244709052 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.248079173 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.260319207 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.25800774 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252395434 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.253179681 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.244811718 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.248543757 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.256075301 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262334687 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.253866081 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.248275427 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.243862365 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245248366 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.251505307 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.271874448 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270651526 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.263356046 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.256425835 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249260328 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.249667922 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256580812 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252675008 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249366487 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.256912838 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.245641852 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253928031 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.258530362 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.250717217 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.247568702 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.254932837 seconds)
  done (took 734.940526814 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.250055821 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247205597 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.246940759 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251315617 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249864106 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249270944 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250789712 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249129725 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.249228621 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252635897 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.251437001 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249604436 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.248639649 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.249686151 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249121554 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248903369 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251870716 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249012112 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248018481 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247799948 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251746399 seconds)
  done (took 27.359867621 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.250782729 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.250902018 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251705053 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254324939 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24921598 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.250672799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.251154843 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253315523 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.250910748 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252628215 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.253102856 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25133664 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.252702316 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.251218608 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251408088 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252574717 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.251970729 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250708697 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.251032132 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249206132 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250351738 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.252791713 seconds)
  done (took 28.65170976 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.249705776 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.250860951 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.248093979 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.258149657 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.250458107 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.251330983 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.254228558 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.250406842 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.253825015 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.246799051 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.252429726 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.246194017 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.254390241 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.256196127 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.254396526 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.255493803 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.249946309 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.252699313 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.251329726 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.253327605 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.264769982 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.264270756 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.251647294 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.247168442 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.258682406 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.256381346 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.252898151 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.253662215 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.246199744 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.255797472 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.253843243 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.24782963 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.269324332 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.259572534 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.248611153 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.258344305 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.256827561 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.253803853 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.25244551 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.266549539 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.275695813 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.255327581 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.270897856 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.267351945 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.254277097 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.254733301 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.261081944 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.256188653 seconds)
  done (took 61.37304311 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.254376132 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.256853402 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.257272171 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.253697973 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.254841974 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.253642241 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.258410723 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.256661618 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.255806133 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.25479064 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.254947225 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.259490609 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.255600311 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.256276025 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.255711358 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.254088527 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.257463816 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.254816412 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.255667079 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.257846057 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.256184602 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.257376933 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.262915626 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.256448045 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.2645115 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.256458101 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.257504463 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.260043543 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.255639073 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.257033663 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.258017029 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.255624406 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.257344178 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.256787472 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.256288806 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.258399968 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.257791512 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.257940762 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.257055873 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.256082145 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.258106356 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.257307511 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.261494217 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.260171492 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.256471371 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.262789703 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.258341162 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.257239486 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.259856229 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.257029403 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.257627734 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.259111791 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.255120432 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.256087384 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.25937628 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.258630166 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.257976381 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.257030381 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.257275664 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.256065453 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.257544901 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.262407601 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.256634241 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.257672362 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.256986101 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.255697879 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.257897321 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.257563479 seconds)
  done (took 86.622728493 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.256130266 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.256121746 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257491612 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263054541 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.257657416 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.259689238 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257254571 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.255990723 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.255464819 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258092177 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257310374 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.257985669 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.259921461 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.25797233 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.259892896 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.261552255 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.257456902 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259168222 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257727047 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257691289 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.259190642 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.258747918 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.256968641 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.25594861 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258316578 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.255084952 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255361663 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.257591067 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258313994 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260386114 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259296311 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.258021079 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.258231581 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.253574355 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.256698285 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.261941899 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.259215017 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259091537 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.254420272 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.260280445 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256034863 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25788915 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258345353 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.259681765 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251750589 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.259325225 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.257971771 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.258359879 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26040141 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258518908 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.259363289 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257492102 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260151658 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263021086 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.257720342 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.258542165 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26007539 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260768775 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258677937 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260176172 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258283333 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.261808293 seconds)
  done (took 79.142855529 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.258937327 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.260046896 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.256889581 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.258879638 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.260409721 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.260003175 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.262692763 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258893607 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262191093 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262002103 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.257074451 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.257754495 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261913195 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.259691892 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.261737125 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.26201649 seconds)
  done (took 21.290609582 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.260654026 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.260252787 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.266971868 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.262879239 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.259891848 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.261615322 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.263320217 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.259662489 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.260389746 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.260118832 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.261173366 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.26179656 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.260616172 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.259901765 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.25949068 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.259628965 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.261370039 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.261844401 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.263587709 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.264576522 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.263040712 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.26424743 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.264332986 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.264689386 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.262814985 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.263205119 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.265469513 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.26429101 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.2665795 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.264272294 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.264736528 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.260861874 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.267014192 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.263591062 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.263045671 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.268108954 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.264191556 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.264963233 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.264268243 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.266581665 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.263983639 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.271730783 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.265670306 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.265574205 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.265525385 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.263306947 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.265533766 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.265026579 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.266126789 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.268342504 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.265945481 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.267716865 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.266417119 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.26871818 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.268791653 seconds)
  done (took 70.649050555 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266673856 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26713397 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.267917939 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.268761482 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.26930366 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.26808891 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.268590231 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272535774 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266186015 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.267586402 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266421589 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.273741654 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267815063 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268924561 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269273418 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269003691 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.274994048 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269517373 seconds)
  done (took 23.974591044 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.267877361 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268925888 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.268799894 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.269173126 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.269771596 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26892058 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269581768 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.270861888 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267484993 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.267871145 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27021872 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.270381869 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271108288 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.270817749 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.269981678 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268645755 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.268451525 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272679508 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.269366516 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273045266 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.272426193 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270416021 seconds)
  done (took 29.070176802 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.260277441 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.262543163 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.260966496 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.290335663 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.279768468 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.262491899 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.264349817 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.260768706 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.296117614 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.312963331 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.306633895 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.277237909 seconds)
  done (took 16.470978537 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270048586 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271994784 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271091456 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269597132 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272417603 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273199267 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270528256 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271664923 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271783165 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274237039 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271228835 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271935768 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268948237 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271925222 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27425813 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275694695 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278977725 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271947012 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271781139 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271703965 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272601844 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27189973 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273010206 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272557355 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272926746 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27337387 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273537369 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272571044 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273711203 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273282099 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270462955 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273437565 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274593439 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274942994 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279474855 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273438962 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273886994 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274413177 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276034962 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275746587 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275044473 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281279065 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275745121 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275963235 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276398067 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276155229 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27503295 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274660067 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272888682 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275188346 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275172492 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276543477 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276520429 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275401362 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27545507 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27483467 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276974118 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276642372 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277382619 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27642768 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276083222 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277891693 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277712131 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276460854 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275683381 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279241795 seconds)
  done (took 85.242887174 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278690677 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276990042 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278008188 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276339191 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27871568 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276169546 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277493737 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278721617 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277854816 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277160455 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276214664 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277340226 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2788085 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279775382 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281071287 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279340201 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278370665 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279844106 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278514537 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27952549 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278163305 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277769261 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278902436 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279357801 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279800037 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278213102 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278941407 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28011083 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280639808 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284716234 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275198124 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277008411 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27973641 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279048055 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278474029 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279566696 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280675985 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279413534 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280508366 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279095547 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278767363 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281563459 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28000502 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278655198 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285138075 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281743998 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282056817 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280542518 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281855465 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280253096 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284272602 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282996392 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28119742 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281399891 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281782551 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279752404 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280807357 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280368055 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28879245 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283123852 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279104487 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280377623 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289498406 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281953661 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284320234 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283554075 seconds)
  done (took 85.627688411 seconds)
done (took 1627.459249644 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.498275164 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.458047842 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.352345155 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.266070287 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.28552318 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.255271986 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.261075379 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.889093648 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.934446901 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.740981377 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.31019622 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.535258848 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.292597124 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.147346251 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.385403829 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.440198296 seconds)
  done (took 33.195776433 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.311693128 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.29259468 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.412290557 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.27880368 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.313598887 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.511559606 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.350199421 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.282721427 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.461105634 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.2996967 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.260931226 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.307498182 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.279155889 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.251567465 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.313982386 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.51616473 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.604430563 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.265686439 seconds)
  done (took 28.458831602 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.782976522 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.277561763 seconds)
  done (took 5.205199418 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.302528765 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.277160385 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.283593745 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.275563254 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.251622431 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.254482501 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.276114302 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.255166806 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.272330092 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.415830253 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.283344482 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.303173818 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.277957274 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.27959582 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.285385034 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.341771604 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.48776482 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.289441276 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.290379174 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.291359606 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.277377032 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.428413278 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.327834705 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.287266698 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.418468717 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.266174281 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.286032532 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.297759164 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.467185038 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.290894533 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.276510372 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.277070778 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.283871992 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.255340012 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.892074893 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.256291041 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.311857814 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.297693512 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.293676172 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.485291042 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.2831689 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.294842661 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.269100351 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.872821886 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.439391559 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.453034286 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.257741784 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.28463843 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.288573707 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.362785309 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.280935027 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.284490088 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.393643772 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.16689343 seconds)
  done (took 83.058588947 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.313793604 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.254893308 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.523752846 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.282457986 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.254922291 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.25733405 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.259371879 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.608176501 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.315760126 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.256711765 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.663066651 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.986667299 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.26624496 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.328674687 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.311775331 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.302747368 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.260487804 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.259667308 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.2590108 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.257799123 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.913190916 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.272023209 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.259049562 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.418336089 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.325305474 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.895593497 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.256019289 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.260900217 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.259633645 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.256019079 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.948348041 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.256743333 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.329444897 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.25865468 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.636944963 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.740902596 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.703247459 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.261119379 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.261142915 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.256424577 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.256397898 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.910938675 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.718125817 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.258764121 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.261266674 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.908605417 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.261569785 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.273545121 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.272963133 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.619368008 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.260893931 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.262781881 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.260583207 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.26325324 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.261967881 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.337080505 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.31612791 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.90484607 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.258234654 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.257638 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.303836402 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.263407309 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.267319678 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.260245525 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.265993532 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.723396809 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.430761481 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.263310929 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.728304696 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.95249766 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.26311209 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041408129 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.263337398 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.269674027 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.336861832 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.273808353 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.263722223 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.90730595 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.287847009 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.258609004 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.71859096 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.268058879 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.658406631 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.276002137 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.264569678 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.953278137 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.269973088 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.335826713 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.263518357 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.274661464 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.260487664 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.26483263 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.635149833 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.334074955 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.263794928 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.266142712 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.270560453 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.263839278 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.260857404 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.273359412 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033906616 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.27286773 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.265919989 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.267025297 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.274376581 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.262258071 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.263982591 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.268065722 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.636676424 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.266877862 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.268027589 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.266160173 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.263021855 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.283643402 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.421453175 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.274646517 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.656206212 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.263202116 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.267161767 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.26881051 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.265679735 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.295104287 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.268253456 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.265581468 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.270453038 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.704027446 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.282217313 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.263593786 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.267699335 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.266059602 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.263303176 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.264345556 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.314334246 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.273519838 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.190392577 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.292336756 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.299691672 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.266686567 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.283109466 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.268788441 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.268373653 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.268957945 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.674973821 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.644527911 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.460985157 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.2690523 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.269458987 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.178146187 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.278603027 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.528031952 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.285185078 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.266404967 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.656204815 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.464994536 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.271709412 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.264290661 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.270932079 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.639539916 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.269758815 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.687291939 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.987794677 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.269628491 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.27553455 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.189796482 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.08971944 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.271303565 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.273613844 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.656551298 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.279775801 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.271381088 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.269754135 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.271804955 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.263532744 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.271432282 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.272759826 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.270083856 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.27177206 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.341134721 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.550756489 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.282695586 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.27554321 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.917442085 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.301990288 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.269717958 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.273902987 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.270655857 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.273993711 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.334783984 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.27145938 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.274114956 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.273825533 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.277839731 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.997379206 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.272940784 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.273699889 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.552899359 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.124982793 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.272642352 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.27363766 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.270387526 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.314881243 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.94584898 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.326103759 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.677510737 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.284355294 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.339737057 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.277225337 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.309820194 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.943229722 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.273770847 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.271338625 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.114623026 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.272951889 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.961239275 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.269877196 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.272289095 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.051852055 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.273926733 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.274828384 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.270836327 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.270856999 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.671404862 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.27591253 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.290482819 seconds)
  done (took 488.027637605 seconds)
done (took 639.094761578 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.27483439 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.274820352 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.273807933 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.27369507 seconds)
  done (took 10.260832611 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.313667123 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.297969595 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.307008594 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.300866751 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.30822921 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.299121837 seconds)
  done (took 8.991103338 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.27550794 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.276963293 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.274990416 seconds)
  done (took 7.992936393 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.568509096 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.288729244 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.720729082 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.270774167 seconds)
  done (took 9.015808574 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.311690125 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.310796506 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.312155058 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.315314747 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.311232665 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.315537541 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.312146258 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.309748328 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.312706595 seconds)
  done (took 12.976092351 seconds)
done (took 50.404275293 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.439288194 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.434387152 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.283539198 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.349261384 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.48988981 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.437163273 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.442618157 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.462932681 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.440250817 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.360761868 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.435432956 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.336579114 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.435885178 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.554810915 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.347267275 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.439711991 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.332911609 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.528818155 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.434693685 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.346352912 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.466039781 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.352794724 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.354311466 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.314996272 seconds)
  done (took 36.986166119 seconds)
done (took 38.15584 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346176913 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.456734059 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.306204441 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.304714028 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308329502 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.289705346 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.332980612 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.307568162 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.330951443 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.329101907 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.29008193 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.311847337 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.330904719 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.319207282 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.351857663 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.304872428 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.308746943 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.320451295 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.333453437 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.333925075 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.31080775 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.317145428 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.344702843 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.304570994 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.325605092 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.324863867 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.324819239 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.285141498 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.31066234 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.334541634 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.291449352 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.324826222 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.337568765 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.323891118 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.312715046 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.322022375 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321275702 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.456612325 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.340543654 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.322121968 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.320060254 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.336339698 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.3262968 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.324604687 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.321677498 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.346708335 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.328420534 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.335690593 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.289908933 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.288601854 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.336405209 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.33307364 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.32125426 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.284845161 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.27738681 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.351659873 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.323492674 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343253426 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.322364248 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.323169169 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.353654609 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341363451 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.334113507 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.329059513 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.315787084 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.336264339 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.322884845 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.33773785 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.319271606 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314792963 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.316883523 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.321998838 seconds)
done (took 104.607383595 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.496480872 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.286335504 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.525862752 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.322963067 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.535978703 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.488853087 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.320059975 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.321105708 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.318971009 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.18686224 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.321515188 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.322648572 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.287697479 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.323891537 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.490952865 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.321715841 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.319000482 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.086499478 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.324770559 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.505109344 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.290464241 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.323964102 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.323811708 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.183655827 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.288137758 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.285852272 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.506850557 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.321584191 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.081641318 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.291902971 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.285503834 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.082498759 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.505333744 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.341680112 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.331505913 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.330646796 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.53668822 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.32128073 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.493261469 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.496742009 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.526866091 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.364075418 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.294104439 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.291241225 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.321728343 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.325002711 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.323433797 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.352608387 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.288083701 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.325550407 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.088922481 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.336244434 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.324378191 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.32616536 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.324259671 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.354632597 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.322713105 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.328410617 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.508228106 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.327913557 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.498405279 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.187856081 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.190863517 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.324298153 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.289407194 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.325534972 seconds)
  done (took 108.377056261 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.440086271 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.450627485 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.488835138 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.314825859 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.414156018 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.487820833 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.313852691 seconds)
  done (took 11.087291967 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.3294919 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.323633125 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.411701027 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.409819014 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.328980941 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.549949683 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.327060655 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.335986999 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.326746788 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.413091986 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.327835963 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.328162192 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.338205298 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.293696915 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.408687655 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.336047692 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.491317367 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.318907593 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.338005762 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.530426739 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333477532 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.338338206 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.413537155 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.334312695 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.327440591 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.329959487 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.140913031 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.333084954 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325956814 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.3270279 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328355303 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.439309426 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.327654725 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.294302719 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327272972 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.492370433 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.325676401 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.324069632 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.328538915 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.29503654 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.328029423 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.328219392 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.329838452 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.326703556 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.325108102 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.351680965 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.329657563 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.326070445 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.32882715 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.327910623 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.413522488 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.328354045 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.325903105 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.325873702 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.414240386 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34095069 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.330695685 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.329091569 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.331265729 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.329085983 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.533113953 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.411679097 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.327581531 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.411971033 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328177208 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.329847322 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.331499348 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.328172877 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471378518 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.327249296 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.412594716 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.326394928 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.564439794 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.354991791 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.331955481 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.324377423 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.32440976 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.332561355 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.295006998 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.332932491 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.32720823 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.321316558 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.334531088 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.329310522 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.332085595 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.540763878 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.493301488 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.32845804 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.34370516 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.338269482 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.331381665 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.41656212 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.330328389 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.333503234 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.417598774 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.498577787 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.417911314 seconds)
  done (took 137.942318577 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.340996645 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.34131596 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.327457563 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.360092579 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.320574635 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.320602851 seconds)
  done (took 9.192737429 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.326252102 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.336615991 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.331193792 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.33063576 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.331440471 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.332482085 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.332988294 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.326439906 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.335899279 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.33331166 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.335358707 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.333564066 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.334390288 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.333933805 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.333768212 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.335375679 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.333024612 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.333058694 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.334475355 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.334657081 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.298953589 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.331995152 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334589126 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.327326122 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.3377998 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.332340028 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.35563901 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.335496364 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.334674891 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.337070098 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.335196815 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.332203278 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.328072166 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.331628275 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.335023818 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.325679473 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338470206 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.336653495 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.332720104 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.331580364 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.33556404 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.33400644 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.333919768 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.336251209 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.327512389 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.329758065 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.339839305 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.356247118 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.335705609 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.338581323 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.335536104 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.333208154 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.335342644 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.337666613 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.327169608 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.330857297 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.340870232 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.333841545 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.33199138 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.330308693 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.335480161 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.333241818 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.329303119 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.341621724 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.338249089 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.334350339 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.329916116 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.336187235 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.336522752 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.334972974 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.339531515 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.33448625 seconds)
  done (took 98.225725006 seconds)
done (took 366.00033392 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.812964903 seconds)
  done (took 3.999567613 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.401293279 seconds)
  done (took 3.590231062 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.467814308 seconds)
  done (took 22.906948573 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.343922366 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.307325674 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.322289517 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.30364846 seconds)
  done (took 10.464832644 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.751879761 seconds)
  done (took 3.938616146 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.313099452 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.308578067 seconds)
  done (took 5.809598483 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.503123058 seconds)
  done (took 3.690656473 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.999521867 seconds)
  done (took 4.192895758 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.33650138 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.325987473 seconds)
  done (took 5.85799521 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.280869445 seconds)
  done (took 3.467838264 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.261713588 seconds)
  done (took 15.450636076 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.316850767 seconds)
  done (took 3.506570215 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.351057771 seconds)
  done (took 3.53909118 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.982930651 seconds)
  done (took 6.171871856 seconds)
done (took 97.779517286 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.302125292 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.304161653 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.306549317 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.301930574 seconds)
  done (took 10.400618752 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.456324997 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.456013087 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.462104783 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.450900775 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.450281073 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.462249844 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.374303674 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.374317781 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.437818664 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.436659998 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.466737356 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.451412571 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.462397976 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.372710314 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.435868207 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.466666607 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.438983547 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.462346364 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.377228138 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.450745588 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.345354391 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.450094876 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.436194993 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.343237991 seconds)
  done (took 35.510563111 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.915955094 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.460727233 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.544589364 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.426750008 seconds)
  done (took 7.536460817 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.507919478 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.509299472 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.522331227 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.560528961 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.6123264 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.517134267 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.377601649 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.371963921 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.359079321 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.50734231 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.584110871 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.506238607 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.729104518 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.344395681 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.726909895 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.347533579 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.342398849 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.502873795 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.560273482 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.58631157 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.341081014 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.506654443 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.513776997 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.505615693 seconds)
  done (took 37.133276726 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.360832826 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.370215933 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.345239084 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.346216373 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.345542614 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.345303826 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.366317742 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.347369802 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.358788153 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.341975471 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.342664594 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.346241376 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.364129265 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.345296214 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.345937497 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.358962966 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.347528621 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.361192091 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.3626443 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.345741661 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.344918932 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.35806816 seconds)
  done (took 30.94389999 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.30645552 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.308264759 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.746325074 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.648904725 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.309374956 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.303121437 seconds)
  done (took 13.814256828 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.419803105 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.602510906 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.33321451 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.723237362 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.849905564 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.328403493 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.335971215 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.648393487 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.962191281 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.905903048 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.407549731 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.422792381 seconds)
  done (took 20.134383431 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476333478 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321433124 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324147156 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316200685 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31617184 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314886341 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392438033 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.869975644 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.338887438 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675885949 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319892495 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475552233 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.659081647 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329853329 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321235124 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.290030737 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634345611 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908659684 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322073359 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332322357 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382091047 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335574237 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321367752 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.568992537 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32102113 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317739009 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.667488024 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322677835 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69240041 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641330438 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646362013 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322843429 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676030102 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837609727 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496268275 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.568748023 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327726871 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323321911 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.299865437 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.323253328 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322646196 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338822695 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.642983162 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323812755 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323687949 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326089931 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878927341 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.348566462 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.32121459 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325362813 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65568345 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485697518 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.348042443 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322693968 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364945081 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319417714 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.35037179 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516562756 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048037673 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32329614 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325660895 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.324453829 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317222742 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339162334 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073535678 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.359205455 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.350117916 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.352790184 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324852483 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321424323 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376549769 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323987569 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.371808594 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324257365 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204951482 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327385278 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326327042 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960108475 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325118299 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.324920788 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638322513 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322000654 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326505766 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.326041182 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326951632 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192145803 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355012882 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.294421797 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398550333 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.879847011 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.56873587 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371484949 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382708793 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.629505749 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.294135658 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326118147 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.327065195 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326657741 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370775292 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.8838302 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318707917 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.34696584 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661395489 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.622675482 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336521495 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.303314828 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908454001 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329031716 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.381006971 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335983717 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.576543148 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.048608136 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670757015 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336375666 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391959341 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327166883 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249178335 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325657962 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.355607022 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327710528 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697895732 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.291257848 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329915836 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478038024 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328432617 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330767411 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328136769 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344969776 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326936267 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.579027124 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32837409 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.669147942 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.331735341 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327460705 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.322890292 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328675734 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.330600561 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.63270427 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331290313 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682030236 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330348713 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328248096 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323443365 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.628676803 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.326999893 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.360019316 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.757218917 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340194029 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.339003305 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659347394 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392903734 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523909919 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3916116 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.340173914 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.66443142 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.355594381 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.356320102 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329855354 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348357078 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339430803 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.360420135 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325846604 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053475655 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33258524 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335928263 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.331571704 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.371438085 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479541428 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361190833 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581135423 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.340694302 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330687792 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.362035423 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.332443811 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633587553 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653907036 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.332427329 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582444038 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.888552239 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.049830987 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378444353 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.331034903 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.331148815 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.330928396 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333370465 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330851989 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329450693 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.582443759 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673991364 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34203288 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.063346463 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333899514 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335082135 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.361375772 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659447546 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.365448288 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334062383 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.335711686 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335747653 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340311013 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.659990631 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638478748 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.380428615 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332682249 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.936620362 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3618875 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332788478 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334062872 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389181683 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337150695 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966914647 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.75944902 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321764171 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662588029 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336077654 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.381348005 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.334835386 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335644009 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346272246 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.335786555 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363751703 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.58412009 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343140563 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336023666 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05753476 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231014223 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998440794 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354646425 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.34125862 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336948924 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.909670287 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331769494 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336068155 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677126819 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895106913 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328847544 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891524544 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.330397043 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22290586 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669972977 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650823125 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343871592 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.338524613 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671253656 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63659869 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389906356 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346316735 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335602453 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.300659672 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968791632 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333468872 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58903531 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898714634 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333146065 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338265502 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.404045724 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.334740053 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829147268 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339500295 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334108408 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342897655 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342086448 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975813964 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343536144 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338850213 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096263359 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353607746 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.905646521 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334058821 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.590390719 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.668339668 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.657155844 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.34098973 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.338175336 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.667611154 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675012584 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339607223 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351921429 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99938854 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.287715568 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.367652758 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342053762 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250429052 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34290429 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714332179 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.343137071 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.353806445 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343934449 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339692918 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341251426 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.338211095 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.34096808 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340845229 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928059916 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.333423684 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369939642 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341141984 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357434141 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.673398901 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.385752825 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.070368655 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655230249 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336679057 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42213315 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.367294822 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347980145 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.311680906 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33989448 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338381857 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389342457 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640034881 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338415101 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.309617585 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376167878 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63563083 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.339348601 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347467859 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632898918 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.339916689 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.350721485 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242627432 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40362542 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346704913 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342472392 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342496347 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399008282 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495176796 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593084916 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.67867087 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.677061937 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83914854 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35053913 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343196716 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.38509946 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499773749 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341493077 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.344409021 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.358044413 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066193404 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254089644 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.077249069 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680661208 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345380233 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346696532 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340142765 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663770651 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342120461 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693179209 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341644632 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.349967129 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395428776 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353847371 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345323172 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654936497 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695045508 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342333058 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35124732 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344425014 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.339802219 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.687758339 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.646070914 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929301974 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978014034 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342095179 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345087877 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.908373405 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698592258 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343615693 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344964189 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34411862 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.362112947 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.347838367 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.373746201 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356657296 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656335418 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673648933 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87434296 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.668951198 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.377659128 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.306371851 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345410264 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679607861 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268840472 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600673243 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077599812 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185385935 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684238757 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498712232 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598720619 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.351280564 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670786208 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.356453639 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347240456 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346498462 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3471153 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.343527554 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.674805224 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082287 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687729354 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.369351856 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.35841576 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405690626 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.600996119 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.653777831 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202041894 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.648053779 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689668917 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359719627 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349042291 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083610772 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690660593 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349280869 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.368815965 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643290045 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34918798 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41308556 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.309898627 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.348980203 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98817175 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.640668203 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399281501 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355887505 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.18550271 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086276544 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.350900208 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932745707 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342802601 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348950171 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706650406 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.376318874 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353621435 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721974212 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.375290322 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.353520235 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605060671 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.076862218 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24590683 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.373893427 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350787834 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.351772945 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350633834 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359267823 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349924596 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345332392 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.831572367 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350117637 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348764672 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384153181 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.351118183 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347659433 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.349994857 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350534101 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.373689978 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.317508043 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.334513697 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35742988 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541686621 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988949503 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348391091 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.053454982 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.777242832 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.684094255 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353642387 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.32088878 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.368214003 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34455443 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347319796 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344833585 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335522415 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006268186 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.347655313 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.679645715 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373767642 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.64691362 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647598763 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363888313 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605621846 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352221816 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397553768 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.321741543 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349032025 seconds)
  done (took 975.777056591 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.34443521 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.357532406 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.367913895 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.367882885 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.353441593 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.43665015 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.389705632 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.404125693 seconds)
  done (took 20.243364258 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.34075241 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.3638763 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.338598225 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.366913628 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.345209751 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.929075408 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.354945067 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.361028731 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.391412623 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.352664888 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.348904983 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.080151045 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.37159886 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.340869464 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.35085565 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.375597972 seconds)
  done (took 32.243481871 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.27089192 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.400659958 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.288135943 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.365706841 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.358248211 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.343252797 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.553980642 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.37422154 seconds)
  done (took 26.180663967 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.382388571 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.376252874 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.384606101 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.378592767 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.379864437 seconds)
  done (took 8.125395834 seconds)
done (took 1219.237728865 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.380064881 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.377383535 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.370349539 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.375644138 seconds)
  done (took 6.72576359 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.320267612 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.317591713 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.31978459 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.354329067 seconds)
  done (took 9.535700735 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.8091728 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.000300597 seconds)
  done (took 5.03528675 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.349956443 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.194823238 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.183951185 seconds)
  done (took 7.954681458 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.75404526 seconds)
  done (took 2.979055926 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.84567856 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.918389482 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.339176023 seconds)
  done (took 7.329153729 seconds)
done (took 40.789994804 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.342266569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.109087336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.494402326 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.344397426 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.501413553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.495520136 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.619070623 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.338893165 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.342566537 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.333351678 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.339679159 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.501550861 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.602983592 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.114383051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.608644437 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.114430124 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.505562963 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.342127585 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.339426334 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.336761539 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.632892981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.356687886 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.345880995 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.337827596 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.505395065 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.489565887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.349453866 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.113321673 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.347068227 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.33733326 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.487174871 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.339571184 seconds)
  done (took 81.595633009 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.341703089 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.338953997 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.340520746 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.353802603 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.335672364 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.338433051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.358889144 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.33812512 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.36951787 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.335223705 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.339230289 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.336539095 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.341339845 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.340322676 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.338155013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.336784238 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.339695711 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.338115273 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.355570635 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.33991201 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.339964181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.346401243 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.338253209 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.338859851 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.344630976 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.338361044 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.357137594 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.340937699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.361831627 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.340031997 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.341016061 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.368305425 seconds)
  done (took 76.232649628 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.348420424 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.340615032 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.355460775 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.355320324 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.340100442 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.352320851 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.33977554 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.347512767 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.338340301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.347338862 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.337999477 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.347209377 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.343261667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.352908355 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.343048861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.348100271 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.340088289 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.36451891 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.358651543 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.340777553 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.343541313 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.340050017 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.356713448 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.338878987 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.352317218 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.342125839 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.358911004 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.342148887 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.341777261 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.356602191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.347440062 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.350282533 seconds)
  done (took 76.338202576 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.677176895 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.381158805 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.384809549 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.357477651 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.392073322 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.378715407 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.357023892 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.676098964 seconds)
  done (took 14.833165935 seconds)
done (took 250.229022286 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.356390153 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.375711743 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.418199409 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.358682483 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.419787321 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.418417873 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.650512261 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.411445547 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.639031821 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.365051589 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.399234707 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.373597998 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.284532132 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.576443066 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.353136666 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.362087595 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.366316904 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.347986081 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.37229441 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.678816839 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.417946793 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.346785439 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.357059232 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.364346611 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.318950056 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.452320717 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.452719511 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.593226973 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.557268421 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.448709923 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.348082741 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.381902615 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.361388065 seconds)
  done (took 66.160352446 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.371378581 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.380564316 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.381720958 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.385118527 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.38449659 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.383507079 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.370888854 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.381845904 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.383482494 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.38446558 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.383595079 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.382863422 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.38469878 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.382211523 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.380965624 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.361386248 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.36970246 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.381618571 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.370692251 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.357737251 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.381644551 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.38329518 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.390329455 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.387169975 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.383582507 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.383207389 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.385522349 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.383380806 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.388403372 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.383732247 seconds)
  done (took 42.646457207 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.391229779 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.34936831 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.359884452 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.390806541 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.373286854 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.37690561 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.733177662 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.386819302 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.379584862 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.37942332 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.358182978 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.392220827 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.447630177 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.365182193 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.379756951 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.384880298 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.386273143 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.377200202 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.353942634 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.404085673 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.747404262 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.389534242 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.736605262 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.405413007 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.378620424 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.376291846 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.386477289 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.352942997 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.381586653 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.359250852 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.18728052 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.719623913 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.360816344 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.355601714 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.195236489 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.390193194 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.391167061 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.365893805 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.380956056 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.37628116 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.727260429 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.379976252 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.352423447 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.37869278 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.379062519 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.385047707 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.349871866 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.368408929 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.65213677 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.392325728 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.350681606 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.383517904 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.390820299 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.375164607 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.649412261 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.378377655 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.372739648 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.35884228 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.391184451 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.723481806 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.390119721 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.374550144 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.354012197 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.37763608 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.349432983 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.380888799 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.40181213 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.375474702 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.350017974 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.398855679 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.349415174 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.399835202 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.386206165 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.360676242 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.356038013 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.353432234 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.381288081 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.354261181 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.355686153 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.720552313 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.388168705 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.352304787 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.750338154 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.386944947 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.394585024 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.391864427 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.387142457 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.50744784 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.718207113 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.356196343 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.367742574 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.360510719 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.733224525 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.396147792 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.377502334 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.361977944 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.393956103 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.386588546 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.365030987 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.356767156 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.401581235 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.401839088 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.36381044 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.385515365 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.729665972 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.392307918 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.361705703 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.382103269 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.548468908 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.386209517 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.401424161 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.380651967 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.743025213 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.385772939 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.390087454 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.355620502 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.360116674 seconds)
  done (took 205.058373001 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.354320197 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.356566153 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.35302925 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.369897317 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.35157739 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.379357249 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.355241962 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.357322883 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.377549058 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.353723962 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.360670236 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.383855796 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.378894062 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.354593765 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.364026668 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.3597095 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.35491713 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.37329293 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.362681735 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.353750013 seconds)
  done (took 44.495397565 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.392924618 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.058046208 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.015174137 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.395355024 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.394960491 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.376187922 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.446117415 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.392445716 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.391061392 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.753989666 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.585956985 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.389654368 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.393467214 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.393481531 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.997322704 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.39394835 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.760273147 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.068005785 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.399196714 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.060501059 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.398576872 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.391554471 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.382637624 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.06117391 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.778977061 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.731602601 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.455424394 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.063004939 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.401503641 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.389959506 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.059071479 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.400097666 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.378357122 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.044010485 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.398143297 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.416893727 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.394493322 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.453474076 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.452273086 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.76137182 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.073761615 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.740976349 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.420212655 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.606008208 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.402259953 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.366714301 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.073912751 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.398974828 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.369014035 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.396733133 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.409136246 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.024131351 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.387755454 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.023438176 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.401949507 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.395262903 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.064651587 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.030086997 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.020684614 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.588160478 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.385551473 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.728665077 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.397329507 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.078141222 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.402308003 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.396087031 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.397429799 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.587686325 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.071994071 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.735361249 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.764427516 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.766571433 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.400666175 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.468822537 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.397329717 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.763429205 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.470464506 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.838293612 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.766209446 seconds)
  done (took 129.122896846 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.730353839 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.521596147 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.869849232 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.086631268 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.009243494 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.58358294 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.528069805 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.694897724 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.38883981 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.549364482 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.175885984 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.498173964 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.269938656 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.47599356 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.512049193 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.573489618 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.901181009 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.379927713 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.189183345 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.131395271 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.378262487 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.536276785 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.2515741 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.861187655 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.382733446 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.29484322 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.370435305 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.057723541 seconds)
  done (took 55.447370508 seconds)
done (took 544.162345379 seconds)
SAVING RESULT...
DONE!
