cset: moving following pidspec: 32332
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.250229838 seconds)
loading group "string"... done (took 0.576012099 seconds)
loading group "linalg"... done (took 7.350938063 seconds)
loading group "parallel"... done (took 0.174134816 seconds)
loading group "find"... done (took 1.186302805 seconds)
loading group "tuple"... done (took 1.828760501 seconds)
loading group "dates"... done (took 1.245701275 seconds)
loading group "micro"... done (took 0.230701556 seconds)
loading group "io"... done (took 1.047886019 seconds)
loading group "scalar"... done (took 40.687674593 seconds)
loading group "sparse"... done (took 13.195409141 seconds)
loading group "broadcast"... done (took 1.020007489 seconds)
loading group "union"... done (took 14.119310544 seconds)
loading group "simd"... done (took 4.733218371 seconds)
loading group "random"... done (took 9.499652868 seconds)
loading group "problem"... done (took 1.98665882 seconds)
loading group "array"... done (took 22.594371383 seconds)
loading group "misc"... done (took 2.051246203 seconds)
loading group "sort"... done (took 3.453765919 seconds)
loading group "collection"... done (took 19.698059444 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.550017358 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145332698 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121373614 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.142099581 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.193493086 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134581664 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131330565 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.105810018 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.025578311 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171332015 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.125954909 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.519579148 seconds)
done (took 5.226691734 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.199874321 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088155202 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096526738 seconds)
  done (took 0.964231239 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068309963 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129036742 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06598183 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.086629068 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06830169 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083562988 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069385211 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067672229 seconds)
  done (took 1.357945416 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074091586 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068929964 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086234875 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068306154 seconds)
  done (took 1.085537078 seconds)
done (took 4.470061674 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.949491722 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.247595227 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192931429 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465306265 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.156302089 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.19435559 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674275402 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327653678 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210632965 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.073787873 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.122843086 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.382154723 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128510056 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669817224 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078315307 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.112460979 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.163286508 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.443568491 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084087378 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083242272 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104981649 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129028199 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103096323 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08998867 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.161239871 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069975765 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.153388959 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097666723 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068462198 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.2625279 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173215364 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.698546439 seconds)
  done (took 10.700908689 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097996175 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.120753157 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070146434 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142105758 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102963843 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088752195 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072701111 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084360409 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094544815 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.16427302 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118801231 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107637067 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082820061 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071125296 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101206134 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.216094847 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112124017 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087385505 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088212025 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078666067 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126060961 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084655215 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.097939468 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081026462 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154880144 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195832119 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101506842 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115742292 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071511356 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100197459 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13048739 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131730251 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065002049 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086050117 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.160135724 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095948796 seconds)
  done (took 4.701478343 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.109452229 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.177583255 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092784903 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158619768 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.145800274 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068040957 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.135955801 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.086241346 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104596874 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239732407 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.100584878 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.495068495 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129123945 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.087748461 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068070574 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089049317 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067691769 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.561344206 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146414219 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102449076 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103875754 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090602642 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071870052 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.372856719 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067905627 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066360117 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085147624 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059027654 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147311645 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068534955 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.206392649 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088121116 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090301296 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102752367 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202212773 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09993944 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121537012 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066351112 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08389926 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163476202 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075149218 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064536891 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085522223 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089943638 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122719767 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121826779 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06978472 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084134436 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183874111 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068645642 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102221982 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.920912306 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167231736 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096751459 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067868288 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298122924 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102593659 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068074541 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064410479 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083144954 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.257334442 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.19705009 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067294296 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08542387 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071354181 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067085577 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367458062 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08444694 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.794501788 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072985902 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077968866 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085984694 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068907858 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091306826 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075205068 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102262196 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067579485 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067894245 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084005229 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067376555 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06837931 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.101766351 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208462736 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070356937 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085586665 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065338297 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102903574 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097699341 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086429268 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066193248 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116602664 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070841764 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067880366 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120194486 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068066272 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101245762 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085716496 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114191093 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084842569 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.13069084 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068432653 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113372261 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071793388 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116602213 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102757406 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068399003 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15585575 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065244607 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080852966 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068661798 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065620116 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085963105 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06986004 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064102422 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097228579 seconds)
  done (took 21.355757278 seconds)
done (took 38.655376823 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.322753067 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.099712403 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.099930534 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.0802104 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100974776 seconds)
  done (took 1.567840964 seconds)
done (took 2.400600221 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.135021322 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.125718855 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065683947 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121204268 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06494132 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.126566396 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122687288 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084784112 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124154546 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066788691 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.117947889 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066157391 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065847625 seconds)
  done (took 2.147376585 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082324183 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08616773 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090468482 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083936318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064104427 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102300606 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082259163 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109217768 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082277368 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090482505 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066986652 seconds)
  done (took 1.771303 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082621728 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083315538 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0896439 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082963231 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064595863 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100588639 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081499166 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106100573 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083037808 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09327636 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067375564 seconds)
  done (took 1.766799403 seconds)
done (took 6.505749572 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079351118 seconds)
  done (took 0.906379542 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.769238093 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.993769131 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.101658653 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.138261056 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223842428 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.180825794 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.467382939 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.094761407 seconds)
  done (took 10.978875265 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.10268386 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091738222 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072188919 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089543655 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085955177 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073461115 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091945711 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073400511 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090277929 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076185595 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090416408 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074420427 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073398158 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091171479 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074183987 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089037295 seconds)
  done (took 2.232621773 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10696247 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.108160955 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096619159 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079578168 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094954577 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.077296201 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.097380126 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077799127 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091721651 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077232101 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095177804 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078391417 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091890798 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069139583 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07790624 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.098018075 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073706312 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.097399676 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077415122 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.097059873 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077514383 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.087309455 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074272241 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.096277057 seconds)
  done (took 3.039667326 seconds)
done (took 17.989013451 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.137505224 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075124625 seconds)
  done (took 1.044725408 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083235234 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101439186 seconds)
  done (took 1.025758915 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084613873 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084297401 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094542086 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101007015 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068446723 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.087091449 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.10913638 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069781739 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068952229 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.088838799 seconds)
  done (took 1.697114683 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071258331 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096281198 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074132532 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098785008 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077005738 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082823211 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076536144 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085690745 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080993484 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079708803 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072893935 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102874743 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073518966 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104683043 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075246551 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.0888614 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071778461 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086820498 seconds)
  done (took 2.338341823 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067873466 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068246216 seconds)
  done (took 0.975626066 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069456114 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063818703 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084861133 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067359072 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082235314 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064075985 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.08133039 seconds)
  done (took 1.35561609 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.426140004 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112341441 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.277269025 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075151709 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.11131022 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.288757272 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.089120217 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073280541 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093672976 seconds)
  done (took 2.42916135 seconds)
done (took 11.699957007 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081242261 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08479306 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115249663 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.437901581 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096945926 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.085135572 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.133509342 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.237928803 seconds)
done (took 2.110841301 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.13465853 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.637549227 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.426044881 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.226652174 seconds)
  done (took 2.136267174 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.392939443 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091511339 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076041362 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069005819 seconds)
  done (took 1.478013314 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067920604 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07059543 seconds)
  done (took 0.984452098 seconds)
done (took 5.577116415 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068597537 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.118075599 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06880132 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064870566 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087901584 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066531528 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065691247 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088744597 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069080839 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06553932 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.086166741 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066565362 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.068705541 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086332131 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066247085 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065093134 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087003728 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066626298 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06479854 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084928227 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068709847 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068190267 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.085656039 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066156869 seconds)
  done (took 2.675182072 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086295712 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084385072 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073687713 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072168497 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09021848 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072330096 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09097793 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067793305 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089654556 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068934311 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087952267 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071938656 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068125907 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090977004 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068482478 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08922259 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072026631 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085397011 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069464562 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088399765 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074494663 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067962503 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.089869063 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072839729 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.089388252 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071177999 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086875832 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068136881 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089563699 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072192195 seconds)
  done (took 3.220991187 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072243636 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063711673 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082224176 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072670081 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063691127 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084919957 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064997327 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065309439 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.085977466 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065894196 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08426703 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067008213 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066513776 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.087150884 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068116426 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069331941 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.103040392 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066605662 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065445991 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08714939 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069497841 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084200121 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067697573 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066252754 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084089775 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066684734 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066808007 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.084368856 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068440175 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065973803 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.087770686 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070240838 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064951777 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091809772 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069883857 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064973036 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.089276797 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065842187 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065608031 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086039796 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065448829 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.083369886 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067375149 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072438779 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084549129 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068664234 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066047552 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.086137784 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067046971 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068328256 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085917228 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066304624 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085928273 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068496416 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070596627 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.084120491 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06748613 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064474456 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085607065 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065865724 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063476388 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083678918 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067414008 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064586285 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100884996 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072327449 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083878629 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069699879 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067671361 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087336063 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069240669 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079533167 seconds)
  done (took 6.20348687 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122599071 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095270869 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08782787 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069546832 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063013498 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08767502 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069414463 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085036497 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068737866 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090032747 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067375771 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067563591 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086340007 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082320809 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06538514 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087037696 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07276058 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083796881 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066867239 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068970586 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086367798 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070894958 seconds)
  done (took 2.602109445 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.196878746 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08935823 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111760171 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094963821 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069216843 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096330263 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071257045 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090326298 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071851484 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08896188 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071296937 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090790025 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072073178 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088433225 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072544576 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071954027 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.203769576 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071181024 seconds)
  done (took 2.579332559 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079876353 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066073443 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109258904 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065986485 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08626996 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068851611 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091726506 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077639801 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089709957 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069759214 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095477217 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072126007 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070538537 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088458487 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071444332 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086803437 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072297713 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068995188 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097206317 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072613509 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091968281 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076588071 seconds)
  done (took 2.627516163 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083657249 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068558767 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105387453 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069836656 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082136651 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065457892 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092287701 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068425711 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091244775 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070792677 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067544521 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085295172 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072356547 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08428152 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073434132 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065988992 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087830995 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067556052 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087529988 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064596248 seconds)
  done (took 2.41290466 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088084698 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086065129 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07008532 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096326955 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070761257 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069243553 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097113096 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068638003 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087657371 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111099255 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069537391 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068157012 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096459543 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091957931 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070094715 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093768752 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078025775 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095967331 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069346499 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086668639 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094087634 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087285518 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077386668 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087839378 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068802975 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087349674 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070403203 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093111173 seconds)
  done (took 3.191247289 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068449706 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066572969 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082215145 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066144827 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064809946 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082776477 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06583256 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064512056 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084977494 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065475592 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06702988 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085609989 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067717379 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065599699 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085423738 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068142215 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066351822 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082963232 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065115676 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064081914 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086108504 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066728327 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065970335 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083156344 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064574411 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06660252 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083420117 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06534835 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084672269 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066243628 seconds)
  done (took 3.022522842 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076498177 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072862724 seconds)
  done (took 1.012191316 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066156211 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081621478 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083859513 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070476198 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090496335 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067879155 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093244552 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073459879 seconds)
  done (took 1.495078241 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082625451 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078399733 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09095789 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081924811 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099503648 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085121411 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166214999 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.089063978 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076304687 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066129339 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.10307486 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067771804 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094026909 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068713556 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073881887 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093572236 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066031249 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091478602 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071663305 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065658158 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088590532 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08039693 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088081116 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068122691 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068537978 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096837336 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080892793 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.088061066 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070975156 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093251289 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074589325 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062052375 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.086735172 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069368415 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083878012 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078263771 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102925123 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072618741 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076726816 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088031056 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078369302 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081543614 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073369784 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092742499 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079304903 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068011823 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086889933 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062552156 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064517311 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090096437 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062369032 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085387805 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062620075 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074795202 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090625787 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078160683 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084529635 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070239901 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069151083 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090396454 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074928359 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087693124 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07103068 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066868476 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0941622 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071561146 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096871371 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062573851 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061218679 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084988169 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07748056 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109609413 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07391903 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087360139 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069818074 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064562731 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090861932 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069344544 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09183862 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074635547 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084589374 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075706004 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074769968 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087317193 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069730772 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094087499 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066048316 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087947658 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067002382 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085041638 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085365392 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066449403 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083308932 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080056289 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070038772 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087268663 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066267418 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095188434 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063945507 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070227044 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090815395 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070664778 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.100001942 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075996043 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094563367 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079865346 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094459643 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070365288 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07293595 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.085341862 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071048459 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066944599 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.097291287 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063312938 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090584677 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070818417 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070122185 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.098895721 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067214075 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.088987791 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077638964 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.0733874 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.088655829 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066916699 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091071459 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070762301 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071202769 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.098506223 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067926768 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.083984991 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066112027 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072267244 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.089118173 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07370979 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094413694 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073627538 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063320755 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.087698494 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073014673 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099197349 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070564755 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088734239 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076954336 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069792104 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087918908 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076934311 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090134564 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069519591 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074610382 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089612236 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064678348 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091681336 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073900992 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067168094 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092549941 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073179045 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090619377 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071088795 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067500293 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.095417289 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070555147 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087093295 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070688181 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066955609 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.100214705 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072665264 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083611653 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067222276 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077323483 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.087750792 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068812449 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067629007 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092185269 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069034371 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.086449801 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068579311 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070599067 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10276575 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072727252 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091366141 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075582473 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.101826462 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070040928 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.090174631 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.071265731 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070132231 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.090254201 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079884991 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093421392 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075124825 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069729938 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083942943 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073978428 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094942843 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068663214 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06589329 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086748867 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071542987 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091851646 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072336161 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067589881 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086359168 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068386156 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090849688 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071187629 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067337505 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085844359 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073629097 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087341771 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074128168 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086702327 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079421071 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070060085 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082309495 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07121288 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084337887 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074430342 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063359492 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085111714 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067052164 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087538925 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068150718 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070046901 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080884383 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075734601 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093239509 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069031639 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066545451 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08634641 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075283942 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068269159 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090473656 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070770082 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093244947 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078474217 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084902409 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071794808 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078154205 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087727109 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062597768 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091888877 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067758853 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06650345 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085441359 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066986659 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07047163 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095664359 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07416118 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.081237731 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070172449 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085002574 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06836894 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063298015 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091592224 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071859441 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067029052 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093991129 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068644308 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08781567 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072295185 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086539962 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070641539 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068701398 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090326667 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068266268 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08954877 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0681091 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070897564 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085954561 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066576964 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068532622 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087440458 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067751181 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091753249 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068082143 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06810122 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090023557 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069508531 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08731528 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06890024 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067025175 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090990955 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069609047 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067169891 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090930407 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06327236 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094206934 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068471093 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075216456 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088313875 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064431673 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091290676 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071269424 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090539684 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070582321 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068799625 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088462955 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067941245 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069727684 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094269633 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066196254 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098321337 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077117562 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088486313 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071800634 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067600813 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089052018 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067781885 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087816692 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070195119 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068134205 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088102954 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074627526 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070356017 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088450748 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0692304 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088349164 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068751585 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06941762 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.082563102 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067422659 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084701948 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069730491 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077342047 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.089144298 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067740572 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085784477 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070022236 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066768375 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083759509 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075692256 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096926374 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068850883 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09379878 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067948455 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069091658 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098590098 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06442188 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085051807 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066755398 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065397421 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094846013 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070086945 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096891256 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067801476 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067570461 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.085361764 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069580401 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06509564 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081982992 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065865879 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090469508 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068832435 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066059841 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088340682 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071285677 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086876412 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080432788 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066165074 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08821602 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068829171 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083833803 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068377852 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067492169 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089610652 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069880755 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064446533 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085379766 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068132112 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087278964 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070501385 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067667788 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088842613 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075901137 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06696305 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091170493 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070768637 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082884704 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072157153 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067816293 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.087893875 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067319781 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090705335 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072957238 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068099483 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09759167 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067377271 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088882003 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068890788 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065542838 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088141009 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067915186 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087547898 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067588746 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069647569 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096847118 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066068946 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089907369 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068909874 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068027261 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094280748 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06908979 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090493904 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076287349 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067349941 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090237029 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076035689 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092198804 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071776914 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087348541 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07040208 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073258129 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087075687 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074208894 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086806275 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070779644 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069264283 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085312436 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06858128 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067447829 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08726982 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074451598 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088428699 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067785252 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066263687 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085239409 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068722733 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090132683 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076072991 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069140117 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091282041 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063750001 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084175439 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069973024 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065604914 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089273428 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070865103 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09265042 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071488858 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068946222 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086053377 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078025349 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093396476 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072107715 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064714132 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091023842 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069509515 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.0902016 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069924846 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067823769 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088504361 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072522689 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067896858 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087756406 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074246713 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09145493 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06991347 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088694367 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070638373 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068765067 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08284983 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06997889 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070168031 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093137081 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070325827 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08770996 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080371554 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064932257 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08854284 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07207266 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087667093 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073632409 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063746878 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092332345 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06998462 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090096387 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065318658 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067004068 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.086850393 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070896972 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067520555 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083799417 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078434861 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097626444 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07147924 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085088186 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067924407 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063237593 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083691431 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067916906 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068676625 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090280366 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077849132 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086697545 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067975847 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062206274 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088870412 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071379402 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090611801 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065380037 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06357251 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086665972 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072280292 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093379197 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069052828 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067309051 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092866429 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071528605 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065795296 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092698852 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064313326 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091573848 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081823121 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088851974 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070111831 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075005821 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097194217 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069012761 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083144261 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070191081 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070091057 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08895755 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069136932 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088968938 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08542694 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0900806 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067597208 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065803451 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091238397 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067929277 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095173498 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070856213 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068845769 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093508803 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070843232 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096539817 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07120496 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095284576 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071936803 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071008384 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087578097 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069008853 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064755543 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087010984 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069339323 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088660208 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073540843 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096110139 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068523694 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099202048 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079572836 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070249946 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.087236385 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069092224 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068536085 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.086460627 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070987496 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087266655 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068632652 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067836762 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088560849 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071950372 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075966393 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091535372 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.0708207 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089878826 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064519041 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071244699 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093251546 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070817917 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066180265 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.091459193 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070928447 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093860768 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073520686 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065987154 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092955818 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071662841 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090189266 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066616684 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076628313 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089904596 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073246484 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06806421 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091870938 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070358923 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09385554 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075655725 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090786936 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072932294 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077519606 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094196407 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06737388 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086390275 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076772287 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067334748 seconds)
  done (took 47.600470021 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109572734 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086434632 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064206832 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08439149 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078812774 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086304192 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066701543 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065952898 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08715357 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068466644 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063545502 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087363224 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074044239 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111494385 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099241009 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070631165 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085210775 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067554706 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064520684 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087916613 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073851007 seconds)
  done (took 2.599065105 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.0880186 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105061612 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079299285 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104188234 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074118879 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.103219348 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100927982 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081445986 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104606512 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076801918 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104257669 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100807043 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.078017389 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095969163 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078300278 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099141957 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084384845 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097120843 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.081849329 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102162334 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078287658 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101434898 seconds)
  done (took 2.932240242 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069526562 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067102402 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087865869 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063367717 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067074613 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083377021 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072146676 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064545557 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.092625728 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066307788 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.094932333 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067476488 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069172537 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.086355145 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067588607 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065470068 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.136097112 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.092959507 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06719889 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089857942 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064544554 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069811485 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.086844871 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066454961 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066874798 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.09448304 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069806235 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.087760961 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069613675 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067548904 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090325972 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067433553 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069667641 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091042675 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067498541 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.087712581 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.070523624 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068607403 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.084687599 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067943931 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068632812 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.086885928 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07053348 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069316028 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.089172633 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067014792 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090660293 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070206915 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064303346 seconds)
  done (took 4.672741054 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087856599 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.145028821 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091132149 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104378229 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.10793611 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.098195997 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074207657 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12754956 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066158377 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089580627 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.086569053 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107785004 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068298639 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.097500673 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071549844 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090039131 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071085066 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089506579 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073997621 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08828045 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.074441899 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09578504 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.085436799 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.104914242 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072622919 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.090439145 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069415817 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.093984045 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082922729 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094381964 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072904253 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09636554 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084298011 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.095389092 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066730975 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092711876 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084816354 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089649949 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069827501 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086529107 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070350578 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091892187 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074248972 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105442691 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06769384 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093722937 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067496553 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084079244 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.08374647 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.092592591 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078336789 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105978484 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072774134 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.091867372 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074329813 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.106046156 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068736206 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.089459563 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072437835 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.10285968 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066945712 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094811845 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084106977 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.09290895 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.077311483 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.105206641 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073877908 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094264757 seconds)
  done (took 6.962291261 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078813044 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093291057 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084624758 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105284597 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072498501 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.096326472 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092525198 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074723295 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092962816 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07962172 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093542476 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117689374 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070205223 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09698125 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076073356 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094742719 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075162988 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094485005 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074390826 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095295119 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074160522 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.103147233 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093331891 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083712763 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12483297 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068901801 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094926975 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074083302 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103710118 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093944779 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085922607 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095050274 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074383141 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105001143 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.106366788 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073867694 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086621908 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074421773 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094237628 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0735792 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088884302 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083124281 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094489852 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068410093 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094527973 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074415963 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104454197 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106767419 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077518853 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099735439 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073142628 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10394782 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093419988 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074457788 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103232779 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128798766 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08259034 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103919686 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093948975 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083823883 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103770085 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110598915 seconds)
  done (took 6.51191031 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090645513 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098093619 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078124677 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085334275 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065971297 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09216646 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066164344 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065346651 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096733092 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096205839 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080886947 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092550878 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07614458 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100148615 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071092144 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096460924 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070641485 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093338292 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096401788 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072402682 seconds)
  done (took 2.606825068 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077615929 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105040127 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070082237 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073961222 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092442935 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073971724 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090904344 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071628959 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089235605 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071550189 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098409666 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079512409 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088474885 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075755662 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098025974 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075048378 seconds)
  done (took 2.258085273 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081164945 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099497763 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082150126 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088465618 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066251344 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064075642 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089548065 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063951542 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085617759 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082757047 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089032905 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070495829 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066849183 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088163091 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065121357 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090632757 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065540012 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065432152 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089515379 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081891654 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100372921 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067247301 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088681498 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070784559 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.08761574 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.076042059 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069414952 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.088969007 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065880054 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089555175 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069459906 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.094678391 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06598773 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065424715 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087856314 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064773208 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087314724 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069893343 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069060706 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089270134 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066199169 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087907981 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067775642 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067766565 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086131175 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068680852 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08451181 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.074115282 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064812537 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090471993 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067648892 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090841432 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069146239 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099113393 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072001107 seconds)
  done (took 5.230803622 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082417377 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070137639 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08470801 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065962764 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090838168 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071319762 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070576276 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091669065 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070234837 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084965345 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071007075 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069789799 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090695877 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071866072 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090019748 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072405575 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062783886 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091137605 seconds)
  done (took 2.334347302 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074517484 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067260974 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096859081 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068304936 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087312005 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071272831 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063032105 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087906187 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067195902 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066765821 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089095711 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070310646 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086485401 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071297355 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067416821 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088368143 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070325434 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06512613 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089592212 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063113115 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090391527 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067497566 seconds)
  done (took 2.598491217 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073977867 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093609337 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167567287 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.11050102 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083179936 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102184883 seconds)
  done (took 1.564340474 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093549424 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103060089 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069418935 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087482703 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097062063 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068659847 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091806342 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06997477 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100605659 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104562267 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06969639 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100825345 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078828872 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101817298 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096346573 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077791309 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090495415 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07103919 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088771076 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090195 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090736832 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078802697 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09061374 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06905384 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090826315 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076919182 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099948989 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104168123 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070387174 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099891453 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075769446 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091452574 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079478643 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104929617 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090596113 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082090342 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089688896 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089237929 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098117797 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098807911 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072524801 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075588689 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09997401 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095319618 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079881744 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090552775 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076128262 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090164863 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069756114 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116374041 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096285835 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079041253 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096728856 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079628221 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10060065 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116292477 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103016805 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078917501 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097045999 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083739029 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100569509 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095801756 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078961641 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105054643 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095274422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08006527 seconds)
  done (took 6.810917232 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084490114 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108613433 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071124517 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105850369 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077930002 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092947242 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068343686 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091187884 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06935616 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090739729 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134006595 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070257579 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099534426 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078638048 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090640328 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068627212 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091316829 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098965768 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070921406 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117450121 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07001028 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099024937 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098505859 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079027533 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104444776 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074442861 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091212053 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069492757 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091059007 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069426353 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096757666 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069396784 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100559314 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088443249 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079346063 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089995938 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070232728 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09625771 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0699534 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097726835 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077950751 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110436811 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089396392 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070403048 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105480233 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06995582 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090793921 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069502467 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090210238 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069702608 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104575619 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08383369 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105447498 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099171265 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069451607 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091052969 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069719434 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09100283 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070393201 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096388752 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07842995 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09149056 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117640034 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0693752 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090745558 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079307964 seconds)
  done (took 6.678770745 seconds)
done (took 133.246123598 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202333902 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187930444 seconds)
  done (took 1.32313485 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070357652 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095907475 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099998901 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128967548 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090012119 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101693653 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099872028 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.101640136 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067962757 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087809131 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06943991 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069393792 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153490508 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069100027 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066340797 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090440026 seconds)
  done (took 2.402530577 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096438552 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.199870223 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.080805617 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.08885861 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.071710957 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.091446474 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06732939 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.072236797 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093444984 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066762801 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.070068026 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090170518 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066100883 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087349811 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07277679 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.070952437 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.087195305 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.070764768 seconds)
  done (took 2.480161478 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.096280007 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.110245477 seconds)
  done (took 1.14732821 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.204400479 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127119974 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.211533229 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.434799141 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.254209091 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.282643891 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.180238862 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.180763997 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.160376528 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.176356239 seconds)
  done (took 3.149583537 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101835754 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.16387719 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273888725 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139364326 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108312504 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.087478058 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139893435 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.11124883 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08584616 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104099698 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081847337 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101103313 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097463292 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098185158 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075754128 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099544927 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121974986 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075933538 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076276449 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099772361 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097514821 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089459663 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077263758 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09666194 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080469921 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101224173 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067793063 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066644 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.100276495 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075541288 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097043181 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107018468 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080821921 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.135144406 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104784553 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136615494 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079283269 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093960199 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076885311 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094259002 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07949919 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100226266 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.086613461 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100591376 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.0682805 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099996443 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067939323 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068489835 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097969791 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.080284802 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.096555008 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075582522 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133932907 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099691167 seconds)
  done (took 6.298669703 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.773027342 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137033967 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074512541 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.833651446 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117043684 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085595073 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.755790949 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09504267 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210787082 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.722669212 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114371483 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078098271 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209617954 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.216947894 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.930395686 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293213324 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.594312982 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107325541 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.132014648 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112562434 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100592173 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116974393 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092706282 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.435753551 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.0965514 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074426571 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.077532626 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102084282 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14140398 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10552855 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076596692 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157435405 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.228811723 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.184038029 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075013107 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092794604 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072617995 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148891374 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242803973 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.171507416 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160640617 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089658162 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072209951 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.082101655 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115203884 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068718324 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163822414 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.154387769 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.151641588 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075200803 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10159922 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.080527823 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.103818511 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143956042 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081873966 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.300052546 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289005153 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070937061 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102575654 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.085625418 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244116132 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082714791 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204412727 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119965955 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.167937466 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092157352 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.730732792 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.149449204 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093128526 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078028612 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100330253 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077310279 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102190865 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.124695122 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.37157993 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106363526 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074836089 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093418941 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210826536 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105134403 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07276707 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142163307 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075184003 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103808617 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104782694 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.086468445 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.148756285 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.213165729 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105661862 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.079885912 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097592655 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.083314737 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097211155 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.192850497 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197574706 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143331345 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.190852831 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.081739945 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.143772873 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171206717 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079788214 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.1523194 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101237287 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.083465663 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104863759 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.173077826 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127205974 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105240878 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07395332 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.101350522 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.128766709 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087095448 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.101498672 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.151097745 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458089298 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.152123856 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090354878 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088683739 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102633271 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.144703598 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077572272 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23879379 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082062391 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.148305495 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102750222 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068532999 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102420417 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.143610877 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101396619 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.08326881 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103639794 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07995949 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.213758601 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194992041 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081045487 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221133687 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.164678144 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078752736 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.150207523 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101939206 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148077023 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079964523 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10326138 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075557343 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76205149 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.081795115 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101891875 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07555634 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177067776 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092623918 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084436816 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10543806 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069918303 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752804807 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088273089 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101955065 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084325417 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098885044 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.080432248 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099982955 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075899139 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141908951 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208196159 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078264016 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102510711 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.1032227 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.139687404 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077133879 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105880264 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084898305 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10580081 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.081585992 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09844836 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085240265 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149373496 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.142788816 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.196956069 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567393738 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073595942 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10327802 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.18730548 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093726077 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.246725057 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102252456 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.181386808 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14322054 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104308468 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.286875432 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.144361305 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.177032014 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088127146 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153279434 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091506879 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07886183 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143105246 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094783923 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078319421 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141959342 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107942636 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.08187201 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937886393 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070658008 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203781803 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092188967 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.151311423 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074616476 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101947144 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270425533 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073106851 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108015614 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.145830156 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075511369 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106419628 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.674509869 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105716481 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.083737716 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099768346 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.177033588 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.144258587 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102735486 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078560818 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101461261 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.142201839 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.188621767 seconds)
  done (took 38.865789923 seconds)
done (took 56.604205886 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.23783386 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.201868907 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.233626578 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.156514238 seconds)
  done (took 1.891643894 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.133128611 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.134911475 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127645395 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065626726 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.133361209 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065780254 seconds)
  done (took 1.627448651 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.326233262 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.284093911 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.206327066 seconds)
  done (took 1.783152598 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.2697692 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.226677767 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.451364964 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.279264841 seconds)
  done (took 2.318762569 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.188942498 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114766408 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069329395 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109009747 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.154412824 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.227238639 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122876841 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.157279717 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103761482 seconds)
  done (took 2.25758079 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154795346 seconds)
done (took 10.996126938 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.247368497 seconds)
    (2/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111466367 seconds)
    (3/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.20017479 seconds)
    (4/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.211866534 seconds)
    (5/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.155444971 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.083124045 seconds)
    (7/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.254697279 seconds)
    (8/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.202362971 seconds)
    (9/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.217228642 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085060914 seconds)
    (11/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.102421705 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.209488088 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079995291 seconds)
    (14/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098816191 seconds)
    (15/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.149012205 seconds)
    (16/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106690396 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075042743 seconds)
    (18/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.103872005 seconds)
    (19/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092806547 seconds)
    (20/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.181245991 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.117154981 seconds)
    (22/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.103548444 seconds)
    (23/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081794802 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.098214127 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.178576856 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.0879821 seconds)
    (27/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.124101457 seconds)
    (28/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.09925238 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.236693094 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075264256 seconds)
    (31/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.241408339 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073613419 seconds)
    (33/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.189041624 seconds)
    (34/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107488515 seconds)
    (35/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.153953833 seconds)
    (36/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.136903684 seconds)
    (37/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06467216 seconds)
    (38/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.170728428 seconds)
    (39/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.185054239 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076248812 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06654383 seconds)
    (42/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.176315482 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.149801014 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.230789973 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.136877555 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111022946 seconds)
    (47/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.137219662 seconds)
    (48/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.140457765 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.107270283 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.167746276 seconds)
    (51/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.140325509 seconds)
    (52/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.089788121 seconds)
    (53/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.140918297 seconds)
    (54/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07748244 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.191215068 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074478949 seconds)
    (57/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.103729904 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091822985 seconds)
    (59/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.09830727 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.103331614 seconds)
    (61/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052695948 seconds)
    (62/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.088614304 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079249911 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.164078903 seconds)
    (65/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053517943 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069024338 seconds)
    (67/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.1756984 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066651725 seconds)
    (69/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.1012504 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083016473 seconds)
    (71/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100591055 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054068073 seconds)
    (73/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093903783 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.205878496 seconds)
    (75/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074711654 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.182913369 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.117868348 seconds)
    (78/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074737605 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.071097079 seconds)
    (80/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.169940768 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076981794 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.121278431 seconds)
    (83/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.128402046 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07624319 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122618094 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.069203072 seconds)
    (87/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092963749 seconds)
    (88/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093994096 seconds)
    (89/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.210329983 seconds)
    (90/309) benchmarking ("sort", Int8, false)...
    done (took 0.168013726 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.169517526 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.117710452 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089986914 seconds)
    (94/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.10039289 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.141994385 seconds)
    (96/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096416468 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054138671 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.204667146 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052967618 seconds)
    (100/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053635853 seconds)
    (101/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.097979939 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089600604 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.192292052 seconds)
    (104/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.235249209 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067387538 seconds)
    (106/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100020082 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095046182 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120435387 seconds)
    (109/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.113338883 seconds)
    (110/309) benchmarking ("sort", Float64, false)...
    done (took 0.152817559 seconds)
    (111/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054531746 seconds)
    (112/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083492164 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.091422456 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067373952 seconds)
    (115/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053041636 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.170315941 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052359389 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.098899936 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055591303 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074557628 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.11454219 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.151367968 seconds)
    (123/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073384576 seconds)
    (124/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10840857 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.099481964 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.385135094 seconds)
    (127/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055103027 seconds)
    (128/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072508009 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.101455724 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068727 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.132238149 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14514843 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.161965997 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066812543 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.140279295 seconds)
    (136/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108530046 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 0.161661049 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09973873 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.16070985 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116605679 seconds)
    (141/309) benchmarking ("sort", Float32, false)...
    done (took 0.154171488 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16775362 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097052971 seconds)
    (144/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067966845 seconds)
    (145/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.111759065 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075058238 seconds)
    (147/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.164821475 seconds)
    (148/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069946327 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073800912 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.101780865 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.140601612 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074838121 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.077363691 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.135011002 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.195753142 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068043281 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090517619 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076522572 seconds)
    (159/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090811166 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.162172594 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110060767 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137595228 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114124728 seconds)
    (164/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108403077 seconds)
    (165/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052022101 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.099884226 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054410273 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063158042 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088020487 seconds)
    (170/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.10979729 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053401574 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.075769299 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.144689085 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.096915977 seconds)
    (175/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075799744 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067937026 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.088993672 seconds)
    (178/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073617058 seconds)
    (179/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.100566626 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055187962 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093459992 seconds)
    (182/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09494792 seconds)
    (183/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070068656 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116146129 seconds)
    (185/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07024747 seconds)
    (186/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052912323 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.097291384 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068376601 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094021282 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100439064 seconds)
    (191/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213382809 seconds)
    (192/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052653254 seconds)
    (193/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125176574 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066570508 seconds)
    (195/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073755436 seconds)
    (196/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115921089 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067102135 seconds)
    (198/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091129487 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.142031077 seconds)
    (200/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099690651 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.054861988 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11753143 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.163428776 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068149444 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.092245409 seconds)
    (206/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05473726 seconds)
    (207/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062432557 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099992305 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07716899 seconds)
    (210/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077257718 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.077926891 seconds)
    (212/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071010283 seconds)
    (213/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094344782 seconds)
    (214/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05496386 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053252047 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.113493582 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069042546 seconds)
    (218/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052965199 seconds)
    (219/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.103181948 seconds)
    (220/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.102079746 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067346648 seconds)
    (222/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.077187323 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073406057 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067767213 seconds)
    (225/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.076583255 seconds)
    (226/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072269302 seconds)
    (227/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066618561 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.090195286 seconds)
    (229/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053456871 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.1596187 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149273707 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.167265986 seconds)
    (233/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054053009 seconds)
    (234/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.085748326 seconds)
    (235/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.111030622 seconds)
    (236/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10439698 seconds)
    (237/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08212113 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05174863 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114644427 seconds)
    (240/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07854599 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052136496 seconds)
    (242/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.087381651 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068063302 seconds)
    (244/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053625048 seconds)
    (245/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.094495319 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097258188 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089922178 seconds)
    (248/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054593145 seconds)
    (249/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.139234207 seconds)
    (250/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.078727976 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081074004 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116820184 seconds)
    (253/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076947329 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053186836 seconds)
    (255/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096223739 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069034205 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.196674402 seconds)
    (258/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075247307 seconds)
    (259/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052533425 seconds)
    (260/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.075835454 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075729237 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073848638 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090488129 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095669002 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075951069 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.091457402 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096425457 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077650021 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068618238 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067417899 seconds)
    (271/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.077436394 seconds)
    (272/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070441683 seconds)
    (273/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052345605 seconds)
    (274/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052297671 seconds)
    (275/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095818172 seconds)
    (276/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053142713 seconds)
    (277/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.062928394 seconds)
    (278/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077827632 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075993977 seconds)
    (280/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054808516 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089470398 seconds)
    (282/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067931857 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.138203983 seconds)
    (284/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075228797 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065967679 seconds)
    (286/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.145919147 seconds)
    (287/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068647852 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099834575 seconds)
    (289/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056214102 seconds)
    (290/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053816135 seconds)
    (291/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05322493 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.098593218 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067446489 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066389129 seconds)
    (295/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.093507603 seconds)
    (296/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053313172 seconds)
    (297/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052782742 seconds)
    (298/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090085785 seconds)
    (299/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069955347 seconds)
    (300/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053342373 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.174025847 seconds)
    (302/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067759748 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.096456739 seconds)
    (304/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170680915 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.077084946 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178707374 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.204810584 seconds)
    (308/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062570309 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.077627932 seconds)
  done (took 33.73237537 seconds)
done (took 34.693647374 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081347735 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090542286 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.100676875 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09136026 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.104754049 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076533731 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.099098235 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079193471 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102265294 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083128227 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077650887 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.079615714 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077095109 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.09927759 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078331848 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091037528 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105977395 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074164552 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.099630017 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067503555 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074988116 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091250804 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069505934 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055606017 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103534829 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074159895 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096111692 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077227382 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066947284 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.091703051 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071742673 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073568381 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091996439 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.0812326 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096302611 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07605963 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077408802 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.101765875 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069498401 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066183092 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.099794218 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066906433 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.09778597 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075964192 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074053503 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09705989 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076329131 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100690259 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093590422 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069064251 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.100681875 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077555462 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100302538 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075911502 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070736443 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100181216 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073149629 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114861725 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077506795 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068818649 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.100175079 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075856043 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072256289 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.103083722 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074995056 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10357051 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079399234 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072306842 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.103909873 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072824945 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.09055483 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076728704 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069710613 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.091432771 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077396692 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078387135 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.091447827 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073407517 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.097479239 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073822881 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067301191 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092056413 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070616927 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074091408 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092950973 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056543147 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071435096 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097514917 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068505602 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075390813 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098001897 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07545426 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068171263 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102673028 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066768784 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.096361118 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069546373 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067991486 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092968982 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07271473 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067724094 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094123874 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077049933 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068397612 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.097586735 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080064926 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067112413 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099167976 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067550704 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.08930111 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083419758 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078061337 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.092317809 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070587708 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066102365 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.099243935 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066358169 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066625046 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.091853097 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068386382 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096444337 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068529125 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070014603 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097642981 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082280304 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066699372 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.095570194 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069689345 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067276245 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.097901051 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068653934 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066851382 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.0939503 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063713446 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068291972 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.092541931 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074408753 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071619723 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.100192307 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068682097 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099728096 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073336967 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073215731 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097339782 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067524323 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059729212 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093542447 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070996792 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068653879 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092087315 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070268922 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067179309 seconds)
done (took 13.453327696 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070192807 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.164773678 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.105918357 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.124519501 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111627286 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068778348 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077708936 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124886189 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06910696 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124845586 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.11330195 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089139787 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.127433853 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067723208 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068307423 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095134049 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070015932 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08254061 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127974401 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087549166 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.144199077 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.091211341 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.101706548 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117069122 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.076670274 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.120266131 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069062006 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.095238782 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072814633 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.083445467 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.113445122 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070779956 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.090799488 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090968849 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.08436914 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.100760989 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067683022 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.098289833 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068615718 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068083361 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120754374 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.113355915 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074829473 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07299954 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096363273 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071350331 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068928004 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.102023929 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.078455991 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.096600476 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083318292 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136316741 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071096946 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103291348 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066092941 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.102110346 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078363328 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06935644 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.092804853 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071020812 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067089635 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09642927 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083510988 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.121207154 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071006825 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.101940902 seconds)
  done (took 7.125222872 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085808572 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093753333 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.112041238 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084459707 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.09362074 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06901726 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091993876 seconds)
  done (took 1.661294672 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069508206 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089669341 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116062846 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091135838 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11196862 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08846838 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102121751 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070583837 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.085089316 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095382731 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088616485 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.132894599 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070364642 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.100944089 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094216779 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068029131 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118605006 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068287404 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096339452 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093314449 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095618145 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090344596 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069918683 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094275851 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082387545 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.092828494 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119340632 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09799946 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071512522 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070985178 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090710132 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.120056727 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108311721 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079745625 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093594799 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083533386 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.106409651 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068997458 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083728792 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099195538 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083331813 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06964357 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095135616 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067538477 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.09667733 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081992622 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070838846 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.094075798 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073192359 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087699029 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.095724101 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082587815 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092726346 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074695428 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069631346 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099497657 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079249669 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068763246 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113890744 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070713367 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110066727 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086466149 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106579563 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086626461 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070050534 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108179395 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082160557 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.096403604 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071763928 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072121508 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109978933 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067127349 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070088847 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104148203 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070486892 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116206629 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092090968 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07008121 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105548836 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068065276 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093617303 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070833493 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09160896 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097941616 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069723989 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097592499 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073310773 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067135827 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.092264741 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074152731 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06746731 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.094609231 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073194315 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068687309 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096703229 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085475824 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.093032572 seconds)
  done (took 9.540492118 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071393743 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069689092 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095028818 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071684248 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069719786 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095825039 seconds)
  done (took 1.511894198 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095321289 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095240061 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085795945 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075281398 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.136115558 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.082567972 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.109537726 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075496469 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.113065306 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081782387 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108802775 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.084448013 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.115608888 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074947889 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.108947892 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075980957 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.108342522 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080514957 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.107061391 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078351962 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115122523 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077529175 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076565886 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110794939 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072888934 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100145967 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.0803145 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106203345 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082078354 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.100991718 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076718589 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072386981 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.099918329 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077454808 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109480609 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074837442 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099343988 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073968896 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103847942 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074605638 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.083700183 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102409326 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081484574 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099228952 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077003364 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.098803936 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073346072 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103719178 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084953239 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097831688 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07628968 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074829741 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09776142 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074499752 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.098701858 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077892292 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097599435 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086119596 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075913884 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100687445 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072857432 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098327949 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078224397 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097684709 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084737226 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096359593 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076658609 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076020639 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102557822 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075783502 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.098165412 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073465529 seconds)
  done (took 7.513288114 seconds)
done (took 28.373171402 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.660921635 seconds)
  done (took 1.699508049 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.690503568 seconds)
  done (took 1.730441822 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.291301556 seconds)
  done (took 17.32800125 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.483704089 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.552632286 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.779925212 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156026849 seconds)
  done (took 3.010891998 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.913154846 seconds)
  done (took 1.970195234 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.224314447 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.208385583 seconds)
  done (took 1.472324808 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.757847509 seconds)
  done (took 1.802551846 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.319095181 seconds)
  done (took 2.361274754 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.308681849 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.140712261 seconds)
  done (took 1.503775824 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.540091933 seconds)
  done (took 1.595631966 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.257195012 seconds)
  done (took 8.315779019 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214895321 seconds)
  done (took 1.277709536 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267419609 seconds)
  done (took 1.326976511 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.377850124 seconds)
  done (took 4.431206949 seconds)
done (took 50.869574183 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080124144 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081347706 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106218502 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.0792641 seconds)
  done (took 1.396918653 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082395889 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074124687 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105669984 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073961074 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106101954 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075549978 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076712701 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.106698313 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074039589 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102413295 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076315718 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073154409 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.104417072 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076931124 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.098135616 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078686895 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102903862 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076889923 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07833336 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101617852 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072454155 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.101516721 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079360123 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073469317 seconds)
  done (took 3.133290745 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079460461 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073003177 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100259577 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073982669 seconds)
  done (took 1.388306602 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080039514 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093877696 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.11940126 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078812231 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.121043535 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.113997697 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071836323 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070887489 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098203451 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079338709 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069098729 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.128201075 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115868575 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078847702 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080020023 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.094102859 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070997319 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.115351706 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.0798134 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078121856 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.098528264 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079483367 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093642268 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.095260721 seconds)
  done (took 3.267092386 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079844643 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102581887 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.107625283 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091540435 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.121415436 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067843117 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104427375 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094051188 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.156606994 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067555917 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.097597291 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068198603 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074628523 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.093322242 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080115962 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.13744668 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115917814 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.095717118 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098940296 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066388853 seconds)
  done (took 2.986791306 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077742362 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071387056 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092163925 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071655401 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07833542 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101425099 seconds)
  done (took 1.559612379 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071223058 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068588158 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093542931 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070008528 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073380405 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093363093 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068670195 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069078419 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093534621 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070214649 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067940482 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092506176 seconds)
  done (took 1.994546944 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.46140867 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071796451 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095030087 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069490823 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072980999 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093414982 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083967989 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069947883 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11948053 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068392988 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09385574 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071955722 seconds)
  done (took 2.433566439 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215578595 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102877736 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241777695 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168986508 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138019438 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149903872 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131040427 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142548301 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.17849962 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135453622 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184275877 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171263685 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131427704 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168453067 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116679371 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103190795 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202324568 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196441237 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133413474 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18235891 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178223418 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143173912 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15793755 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130416772 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090785172 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147713482 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.10010823 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08383713 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213811338 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155887034 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166935353 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142000501 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125727504 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1913603 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229121638 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174553004 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167576451 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115501537 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.125743346 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.14655909 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247923972 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091428705 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213682332 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137109085 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085401312 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170903158 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146028229 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152477095 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.127292825 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117129536 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175244501 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191633298 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19741715 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091070462 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139195198 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138489925 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145553809 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102765106 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22869535 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175828773 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156500403 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098631369 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098050452 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167349633 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160792513 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145605856 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.185140862 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098634056 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195769621 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138981947 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141991289 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195971883 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.165801531 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117621267 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148498842 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126319771 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147280963 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231772795 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157166999 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072756944 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143778312 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127026377 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10814811 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145904214 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101565748 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194174701 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12665423 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.092271891 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1400967 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137176495 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113746109 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199035592 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167105037 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12429263 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06814357 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132981451 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.10682289 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191223357 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092045698 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137555574 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139081556 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080089833 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153714284 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102608764 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153204213 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07491915 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153223298 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158952371 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.104906023 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134081839 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104596676 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126358069 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154264921 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175461509 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117512751 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085564067 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182667011 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151800918 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125639027 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156741881 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178310601 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125739887 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125322171 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17702551 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192740826 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118877709 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18053181 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133545148 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112401804 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093633469 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155662538 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134365797 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.137871552 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084442428 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.156767715 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213640652 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076962921 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115671125 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164740406 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084281876 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110758538 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138168574 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099171738 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.117310759 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.122781796 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10320974 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158669085 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17885131 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106136016 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14330977 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128889251 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227294465 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092066156 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12793514 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125327747 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073786387 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169227671 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17411994 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108085262 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180678432 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.149159924 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133118008 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148642413 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087587934 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154441342 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079840939 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099320341 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170910397 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144149036 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139622674 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.171373541 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1318859 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159737197 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158192001 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149734889 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152533561 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138669606 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112268853 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.117439638 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136683552 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143532911 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075509401 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120023749 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086332752 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135142657 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12000716 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08605488 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174445424 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145221642 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126066174 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135721511 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100215067 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157038723 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106899422 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153410664 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.154445693 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123981558 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.175925621 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170796195 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162856773 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119957382 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183625422 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097537586 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078337296 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119534343 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148733389 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087059301 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112021257 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147481253 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132815998 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186053714 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153707092 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114426893 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152585676 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16517572 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.100707034 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120570454 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161205623 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151596109 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.162651091 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094389291 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.129393377 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152174342 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133700345 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201414795 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142810183 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15287985 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21372644 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099229862 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1111401 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127790913 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163114267 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130489433 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126246317 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10128406 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11735063 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13815872 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.08478364 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137413982 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159316775 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140463164 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16658722 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.129365276 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159118997 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104540852 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143596181 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109662056 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140894698 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065122366 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150303988 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207977999 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123908764 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146220741 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171303225 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083136545 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153673223 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187115353 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198593407 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090036341 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135120837 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135468356 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114420251 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149096326 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154473726 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137254836 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164548235 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135792148 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086620672 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119183174 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12606928 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102484416 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.116498847 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.125046513 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15288568 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.091245856 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164185909 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136727219 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135977222 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147498926 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098859802 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.12203287 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127670459 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192487614 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151129795 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21245749 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100667131 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.155990605 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180668502 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104298415 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082762533 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.110112184 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157150872 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086595563 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164233641 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125425529 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133920956 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157292265 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168932489 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089510177 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097922518 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132946304 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122873582 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140601857 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129126612 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135773129 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184459223 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.124271672 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082811485 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149364689 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131749875 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098884343 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171192369 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.09097089 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09852581 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105818652 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084174199 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142387953 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181488459 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.114941652 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.159894118 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124656803 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144560378 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142848402 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12730297 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124899732 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116974308 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204474937 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161136814 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.082463769 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134671096 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152649581 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170752069 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138580924 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.116971275 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181062654 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170583635 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.174672088 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11831011 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145977894 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116789748 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135439838 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161785446 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114024774 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181983845 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111935064 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173535427 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130897302 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119731627 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150710383 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099277181 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120327814 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164515108 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166945127 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11182067 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085086817 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143377899 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155026841 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13292194 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078298902 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156043643 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.104019688 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167100913 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231916433 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08507734 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131859559 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097742894 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112922442 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134424125 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133341132 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090321231 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14089747 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185261862 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.110774913 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168150123 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178733003 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147151821 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150175327 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121379142 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669006751 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080652865 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169363791 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13213904 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180857637 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129075194 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149068872 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133823698 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117274943 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198951049 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136192268 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180166109 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195985953 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154318305 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083534609 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13517491 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137563177 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.120883974 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101635745 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145062014 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13746094 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.12919431 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154082124 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145360333 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083461059 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117769735 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175325941 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131701039 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165662788 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15311951 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090089657 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149282522 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160898987 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111885444 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157706785 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18227273 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119619435 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127962835 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083364486 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133458635 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234497132 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076575253 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173710199 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151952674 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135442761 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144103204 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.122936553 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16578941 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134843311 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152456065 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096325494 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.136222208 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132820896 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112129047 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081209854 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131280143 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143863754 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097945012 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135272291 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.11649833 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19236495 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076040789 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12139314 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107831171 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165738144 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216731431 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090946189 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113339507 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137025553 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101559205 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149598003 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152046048 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.112735138 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083596237 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.114225224 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.11183434 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.122440323 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13041396 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105892069 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141742699 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180818288 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115540932 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.257030553 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09131088 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131569012 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072677375 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109127466 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10001958 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12479284 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135275486 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125324688 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209518301 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122977228 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.083820682 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127155475 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076179919 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114139393 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141056638 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114930263 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154670149 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123409164 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064074633 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136926248 seconds)
  done (took 67.800858176 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.139668735 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.110125588 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.124260719 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.180690881 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154428034 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24594886 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.188501553 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231941388 seconds)
  done (took 2.512028911 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072468684 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.124279461 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103413729 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.112192832 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068995839 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.097778552 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.309868251 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109533282 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069864727 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091282767 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.149829179 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072879074 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.491012437 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067554177 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.098344005 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.089873227 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070692658 seconds)
  done (took 3.33133965 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.437448721 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.650804767 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.479242572 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075362608 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.941428986 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112781924 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.452524128 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.16897004 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096229982 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.438344358 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.732311853 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137998594 seconds)
  done (took 17.862353515 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077822631 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071511539 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11199184 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085116247 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073152994 seconds)
  done (took 1.563234709 seconds)
done (took 112.275889027 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08327049 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.36702744 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055424035 seconds)
  done (took 1.595661151 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086859264 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085526949 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115458247 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085036359 seconds)
  done (took 1.521329622 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077256408 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076257578 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113068499 seconds)
  done (took 1.411631066 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.301613825 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139057432 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.117463685 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084317062 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079652496 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106744906 seconds)
  done (took 1.417859653 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076111914 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076073332 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103583532 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078969275 seconds)
  done (took 1.475910014 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078014899 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053644729 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055799139 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084300584 seconds)
  done (took 1.419570482 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093542306 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079288136 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.109622885 seconds)
  done (took 1.424639281 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108966014 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114401479 seconds)
  done (took 1.370429088 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083667244 seconds)
  done (took 1.223720824 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096334429 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.145331784 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.166116745 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.140424536 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.176258333 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.14009692 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08937177 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.119143952 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107601699 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.093391816 seconds)
  done (took 2.420316645 seconds)
done (took 17.059474324 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081705915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.3958351 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365003321 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121375687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672944117 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357408509 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.052073273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121035909 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112217779 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095584445 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08791635 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650046317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.00477404 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320294756 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.989361736 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321623684 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650630173 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098380186 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069834476 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095998459 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.008887945 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069296003 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09789128 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071221047 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650160489 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.401513373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069793993 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.353841223 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070753229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071474277 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.385514655 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069481841 seconds)
  done (took 16.119336509 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074113548 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14688928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077801094 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08501911 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101659736 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071999731 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100402702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072188467 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151504733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071318317 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113440425 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071413911 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073648426 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099648438 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090988735 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069879244 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099075352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070142705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09719965 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072299921 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088928758 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098384807 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071477916 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096130451 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072604352 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081512598 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098345213 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070388029 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069460516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101294909 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072206339 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097065865 seconds)
  done (took 3.981140197 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118622846 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.156684409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077043257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13182717 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116868227 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101141823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174167719 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097003796 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156753178 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069945791 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116172393 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07088167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130451993 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071802995 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088623897 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098374126 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071103779 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097676205 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071100557 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070260293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117976207 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070409059 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097415308 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071953869 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070473409 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111665746 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071031414 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096702004 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071350166 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072259223 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10151571 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071397924 seconds)
  done (took 4.259904361 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075825902 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076959181 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112248411 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086420451 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071292636 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.102493026 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074679391 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098692723 seconds)
  done (took 1.854829086 seconds)
done (took 27.356280655 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082109061 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072365331 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103689925 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083169202 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07479996 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.109262249 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069575922 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103645096 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077392651 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074777273 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.106317398 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070412274 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072362213 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098308569 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076993078 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096991755 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083181955 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072744831 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.109011934 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080960301 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070673941 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.105789721 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075743197 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.107767949 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081644832 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079760667 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.113506029 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075081879 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.099681948 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073798683 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07711712 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.114235497 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071095338 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.108387045 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.0708152 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069328754 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098046708 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069919406 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080230826 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.106221892 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072973011 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.10565518 seconds)
  done (took 4.790682757 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091079044 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094037439 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.114965474 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064412173 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067875107 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.092840852 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090955058 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.089373793 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065372997 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089181632 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.084246848 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061009577 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.060901861 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055255226 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.087695381 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059106955 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06198706 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057329719 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.08818771 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059795856 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.061035425 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.083806797 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.063136198 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061310683 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057567795 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.092145925 seconds)
  done (took 3.11347707 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078442993 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084589671 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118731796 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130087576 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136920733 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076777861 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108842917 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089095959 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113890141 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070287602 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073204072 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126111568 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088915234 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104445758 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070477896 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084521837 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.113065467 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071337308 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075234744 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119424868 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085179957 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.108759125 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090578917 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.10846879 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070518295 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071057421 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.10168632 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084453101 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073571872 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.107480124 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072704481 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101155023 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071992533 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080183781 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.111852719 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071234087 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.117878348 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079411464 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105145775 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071138692 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072879667 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.098520435 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090936306 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.142570192 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069540042 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076317375 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105507202 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080356363 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068855372 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116998553 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078462951 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097365055 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073429729 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067884019 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098653895 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083414209 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071091815 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.101354161 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079255827 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100547663 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083781966 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072922005 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113911292 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069627568 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104647173 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070707112 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070243933 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096554025 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093792274 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070787911 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.139913049 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070844174 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.100047777 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079040088 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104900775 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07714232 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068919225 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113704108 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080788925 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072721423 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.107300986 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072443901 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.100512942 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088252266 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071464724 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.099819356 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072237094 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075534795 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101314779 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071436707 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110620161 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071510063 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07149334 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11599885 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06940546 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069971645 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104873531 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074178174 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096444348 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083044323 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102646253 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071601232 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078383173 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097335075 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072941034 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078439515 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.103343222 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069697654 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100705094 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077050648 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069735834 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098366488 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073636925 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071149979 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.107414793 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075862876 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100514185 seconds)
  done (took 11.590230655 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.20391007 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.191948169 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073586529 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.184887326 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081564869 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110381874 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.186168793 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102022442 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098408926 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071355915 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070786358 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.139050957 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.1022218 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.142791705 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.108595847 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071350152 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087817538 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14030206 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.187827956 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.181047764 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089554386 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.108014762 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072100715 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070088426 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.101902706 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079404449 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113532666 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083611817 seconds)
  done (took 4.422196935 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084448368 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130432072 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076331204 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090290075 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.123500261 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069390889 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104226942 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071369522 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109260276 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084532679 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06971505 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.106077353 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076862139 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107697605 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071588657 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077921213 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.108621441 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07155768 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101065948 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076055528 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074851397 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.112741423 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073804998 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.096540242 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077542842 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068733991 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.096512497 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087087319 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.099314067 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090984972 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.096287691 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077411885 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.07875915 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099629589 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070137843 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070878205 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100933119 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072203336 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.098126396 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070554173 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068787213 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059323702 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098086445 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082862609 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10561629 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061603848 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075848738 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.104839095 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07449894 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.09535947 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075049038 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071913566 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101338707 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078347907 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074585746 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103879304 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073849144 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068025543 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10626439 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073235581 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06580163 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.097356213 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07512985 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097559119 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079410022 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073852214 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.097171309 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073368473 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073521653 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104858327 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07158499 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071532987 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096863373 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072261493 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101735421 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075948762 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072580605 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096877584 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070882883 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068943247 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085700917 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070614815 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055662379 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100436972 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069502121 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068596334 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099398084 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077183926 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111368057 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072382734 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075657786 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.099913498 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069258298 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072099472 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.093683853 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073923513 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112216408 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087854506 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09685222 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069841471 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082775997 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103506867 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070028934 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057931987 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105587955 seconds)
  done (took 10.073479829 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094167902 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094595013 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.10080872 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083393747 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125096022 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09399813 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105382009 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077551569 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071304444 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116294316 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07119742 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077106816 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.103800146 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079053939 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.121868956 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07970824 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071087007 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108510707 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078978312 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134061991 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084960279 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087012418 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110389221 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070606195 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.102450842 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083890608 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.0947704 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.110531203 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078932716 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.111955794 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082280812 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094574678 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.114610128 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.074265046 seconds)
  done (took 4.370612448 seconds)
done (took 39.50468896 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.227998658 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.478234465 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.224821478 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.204663612 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.249518046 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.250704105 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.238989669 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.222906267 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.341440723 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.229121076 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.464330969 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.89947817 seconds)
done (took 59.202564151 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.349126344 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.366667367 seconds)
    (2/2) benchmarking "String"...
    done (took 1.526415859 seconds)
  done (took 4.06682999 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.635419221 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.212208386 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.515439666 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.240268758 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.22849056 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.681382688 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.906268467 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.117104997 seconds)
  done (took 28.069473357 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.228069136 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.608677937 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.72805426 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.726365522 seconds)
  done (took 18.461352938 seconds)
done (took 60.752207523 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.241566822 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.300394736 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.245683924 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.214217064 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.35925049 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.261218965 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.469387631 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.241320549 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.230881232 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.221408573 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.260738024 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.228194233 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.235618438 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.495817177 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.234356445 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.240421354 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.258729551 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.725881134 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.624300498 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.244131275 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.263854357 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.238768734 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.25050453 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.232175809 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.289108459 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.231150717 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.238695583 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.232507309 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.613614657 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.233300142 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.33075481 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.679875751 seconds)
  done (took 191.337555737 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.230195696 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.270149623 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.390812454 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.27521536 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.714132707 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.439379376 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.392695662 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.780970502 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.249206834 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.235798482 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.353284106 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.230985248 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.40465719 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.216465865 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.240301206 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.317718638 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.530508892 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.423906469 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.248323827 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.538671767 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.258572637 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.213060955 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.160215945 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.337809569 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.243500875 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.265524874 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.267093498 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.233890688 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.424182173 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.473794228 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.26955138 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.241360328 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.827870427 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.09112086 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.258047479 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.237443997 seconds)
  done (took 150.457117681 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.51890131 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.231374562 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.231607656 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.231479841 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.232845393 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.262330655 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.232122955 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.78604855 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788700877 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.740243758 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.314046405 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.293506202 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.497956378 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.234947168 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323995603 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.244564482 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.232755614 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.246979582 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.257566098 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.234733187 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.231591687 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786084832 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.247259489 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.443525268 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.241096767 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.231834086 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.262963721 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.626743766 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.232741081 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263230695 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.550802967 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.280421005 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.233307921 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.546866058 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.975203243 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.34412209 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.234854558 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263533383 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.233172161 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.501565355 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.233152803 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.233008493 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.232699115 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.236302144 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.834519647 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.235485604 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.789214849 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.235681128 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.15990096 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.235411462 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.232880693 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.513047434 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.742355039 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.236264965 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.233117616 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.235596792 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.234315056 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.233351968 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.264598583 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.232203584 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.623217506 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.334268708 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.233398324 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.237324568 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.265451161 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.233535445 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.290955817 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.234345034 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.491452987 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.290610091 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.339237441 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787626181 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.237351793 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328136939 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.353208317 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.235471452 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.235402431 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.234377844 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.235170872 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.342212679 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.234993297 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.638412172 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.240272079 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.237716602 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.293666216 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.329350437 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.233763009 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.569327391 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.237946473 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.23596809 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.937573621 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325794989 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.23457212 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.234372937 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23567835 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.643098783 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793853926 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.437441898 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.238936896 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.503638155 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.238710152 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.654378055 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.767143493 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.866279823 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.239268784 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.343654899 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.239143034 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.238332652 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.236384509 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.265281803 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.236827593 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.295815555 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.235746766 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.235928897 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.63220721 seconds)
  done (took 349.234067634 seconds)
done (took 693.719374331 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.93278889 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.87877591 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.01590276 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.896839703 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.872614061 seconds)
  done (took 10.773808253 seconds)
done (took 11.951500791 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.430428607 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.430116183 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297332218 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.430951987 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.266116991 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448535004 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.408941797 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.257926235 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.342655351 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.316645558 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342195348 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.287827612 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264051692 seconds)
  done (took 18.700950288 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.565810604 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.557313188 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301578958 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.567160101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.27659956 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.565136758 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441070109 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.453951134 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43454189 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252105261 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.252081477 seconds)
  done (took 16.846243355 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.576355538 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.564740646 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.304204525 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.583482076 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.277831595 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.564484786 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.453215329 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.45656451 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.436698084 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252445154 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.252335479 seconds)
  done (took 16.900920861 seconds)
done (took 53.626625989 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.247137919 seconds)
  done (took 2.42656907 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.278270675 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.445525852 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.26434496 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.250217128 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.247794739 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.246831671 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.250990509 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.246637757 seconds)
  done (took 11.411544143 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.244498039 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.244464927 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.245006516 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.244234977 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.246960839 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.246397421 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.242842303 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.247131514 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.244379231 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.247748472 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.24634946 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.247563626 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.248184697 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.243192725 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.246834825 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.244985283 seconds)
  done (took 21.109594531 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.246849562 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.244480738 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.244413625 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.244524763 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.24512449 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.244955892 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.245913766 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.243905148 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.244132925 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.244379502 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.244772739 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.244206571 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.245182849 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.245775774 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.24507413 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.24529661 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.244225715 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.246525093 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.250913707 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.244700728 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.247176117 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.245463 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.244375345 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.245677757 seconds)
  done (took 31.0701239 seconds)
done (took 67.197395201 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.401046787 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.947604881 seconds)
  done (took 9.529101619 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.248109058 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.247017431 seconds)
  done (took 3.678043692 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.24892721 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.248974153 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.249342262 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.247871712 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.248526685 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.248306244 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.247817652 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.248048964 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.248160291 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.249839463 seconds)
  done (took 13.667482067 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.248880409 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.250405152 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.247990626 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.250281309 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.250993259 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.247241998 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.250799343 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.249650514 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.249423822 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.246924724 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.249423475 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.246329186 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.24963964 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.247579172 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.248826853 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.248083589 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.247455834 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.247172305 seconds)
  done (took 23.658559772 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.249119654 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.249785787 seconds)
  done (took 3.681458434 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.247627161 seconds)
    (2/7) benchmarking "second"...
    done (took 1.246271855 seconds)
    (3/7) benchmarking "month"...
    done (took 1.247617108 seconds)
    (4/7) benchmarking "year"...
    done (took 1.24755763 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.248130614 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.247930383 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.24702595 seconds)
  done (took 9.915278639 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.24989253 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.428295388 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.508406165 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.811114886 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.250786018 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.253553162 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.143512256 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.254456033 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.255480155 seconds)
  done (took 14.337953659 seconds)
done (took 79.649179477 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.255754472 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.240001013 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.120552154 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.264541902 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.259175095 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.584476899 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.26769187 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.365765669 seconds)
done (took 37.542529036 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.247151043 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.962776058 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.970718981 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.256134831 seconds)
  done (took 11.373640556 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.231308141 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.225526076 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.236072671 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.260881864 seconds)
  done (took 18.139062451 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.870375591 seconds)
    (2/2) benchmarking "read"...
    done (took 1.576402719 seconds)
  done (took 4.630426609 seconds)
done (took 41.574666698 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253032984 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.253131322 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.251311397 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.249375794 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.254660004 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.249452998 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.249497652 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.252491043 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.252479744 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.249380295 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.250733051 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.249506642 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.25027329 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251814251 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249595568 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250038573 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252217123 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.248959997 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249435975 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249708311 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.251788681 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251980736 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.249849255 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.249617597 seconds)
  done (took 31.205190425 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.252232954 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.25300511 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.254446903 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.253319543 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.250173051 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.253610962 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.252731607 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.251390238 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.253768264 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.253161865 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25051843 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.251552752 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.252292789 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.251766208 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253744214 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.250213325 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.253241898 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25165068 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25359469 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.252260816 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.255083006 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251400869 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.25144173 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253262547 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.250373762 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251002597 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.253955884 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.25097031 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253516061 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.252025416 seconds)
  done (took 38.757596841 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.25840655 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.263223208 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.253492636 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.253771988 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.253819456 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.254037189 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.253877829 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.253423841 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.254333341 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.253542585 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.25514357 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.25322387 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.254260187 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.255170831 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.255735699 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.25407791 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.255234281 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.254184796 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.253671766 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.254536743 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.254801281 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.253710326 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.253882927 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.254527763 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.254279614 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.254534663 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.254446758 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.254499992 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.253304699 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.255563124 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.25500839 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.254165489 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.255775318 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.254627846 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.254857246 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.254863898 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.259723993 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.263583381 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.254512558 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.25513273 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.254126255 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.256247579 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.256255154 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.255276266 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.255711308 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.255008215 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.256377297 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.254911736 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.25669394 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.255618479 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.254896128 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.255242598 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.25583178 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.255918808 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.255511406 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.25479554 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.256149455 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.256312979 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.255829003 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.256372773 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.255590815 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.256230876 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.255723916 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.255823621 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.255757174 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.257655146 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.258070776 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.256705162 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.256240998 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.256833246 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.256914038 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.25658535 seconds)
  done (took 91.583440198 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.256897512 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.25440506 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.254653755 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.254437452 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254786765 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.257152651 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.253496153 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257291288 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254498091 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.25738559 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257119978 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25418391 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255002669 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.258025944 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.257447744 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.254173654 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.258290781 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255972315 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.257502135 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.259889532 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259006933 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.255865628 seconds)
  done (took 28.827934792 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.257692449 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257818015 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.254651719 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.257391284 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.256429129 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.257374788 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.258245887 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258124379 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263720063 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.254812544 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256275471 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258864012 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25694527 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255499138 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256851706 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.256302489 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258062582 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.257028211 seconds)
  done (took 23.822143751 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.256086756 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.255620869 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.259507102 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.256529918 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.256759077 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.259757854 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256336181 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.258994711 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.258059169 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.255680225 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.258953979 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26022355 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.259600156 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256465743 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259493273 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.256487931 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.259573269 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257092741 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259107191 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257865913 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.257380955 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.258726378 seconds)
  done (took 28.866859272 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259881151 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.259655382 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.257163003 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.256862423 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.256838407 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.259963023 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.259791402 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.257356349 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.259275073 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.259054302 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257951839 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.261029681 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.257706586 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.25884132 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.257511499 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257329329 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.260254047 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.258488146 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259736574 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.257128147 seconds)
  done (took 26.364026411 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261186583 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260493672 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.261261553 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261673928 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262089832 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.261449167 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261358695 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.262083901 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26229668 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.261822083 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262834069 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262465183 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262739731 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262691907 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261728852 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262723208 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2625007 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262433679 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263521379 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263172689 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262866455 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262176709 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262047789 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262499011 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.263278063 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264107027 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263181413 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263024755 seconds)
  done (took 36.539478337 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262370512 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.261952016 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.260497487 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.260410361 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.259463739 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.259273226 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.260117716 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.259511487 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.261960922 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.259541041 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.261736498 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.262089453 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.263345834 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.26243544 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.263916265 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.262986842 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261954771 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.259468464 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25887522 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259562701 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.263064234 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262354078 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.263363158 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.260497749 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260141311 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.262664514 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259780773 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260250172 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263027058 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.260461725 seconds)
  done (took 39.033079801 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.281636571 seconds)
    (2/2) benchmarking "in"...
    done (took 1.281547111 seconds)
  done (took 3.75913512 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.2604245 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264086755 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.262928996 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.261697469 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.26141456 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.263837335 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.263651022 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262360614 seconds)
  done (took 11.296053976 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.264002447 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.266161289 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.263687606 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.264096919 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.263617847 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.264452543 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271962048 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.284045132 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.264657421 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.26718618 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.271528556 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.272921882 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.267655382 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266294849 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.263616755 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267273082 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.264387478 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.265770445 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.264930032 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.264844202 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265515107 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267153368 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267366924 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.263374826 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.266664666 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.275990642 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.270956307 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.265845878 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264407811 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.268819225 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.266482588 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.263763564 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.266153189 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.265957192 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.26554051 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.266292979 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274756142 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285288777 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.271606123 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267693436 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266842922 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.263229423 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.267076269 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.268310976 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26768908 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.268422277 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.266412557 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.2642285 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.26586687 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.270149545 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.271902386 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266857405 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.26555018 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2702803 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.269258426 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274623718 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.285625502 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.269901202 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.276672321 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.278155866 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.28106501 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.276755531 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269705179 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.267854487 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276822143 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.289845141 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274261613 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.283327595 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.264469374 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.266786297 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.274317582 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280700159 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.278423196 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.268923777 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26773013 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.267893731 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268543814 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268505042 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277112605 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.288615972 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.268382082 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268638984 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278258483 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.293940508 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.270164161 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.268272325 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.269147217 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.269220115 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.27022411 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279502323 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.286029405 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.268943598 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.268146269 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.267757381 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.270850882 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.268580387 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.267962234 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269475771 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.266022358 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.268893167 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26851656 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272302652 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.277641077 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269982603 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269195162 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.276569089 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.269761214 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26814626 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.27651423 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.271643484 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269990832 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.27001788 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.275349438 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.26783636 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272382886 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.277623602 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.27074257 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.27175232 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.26969587 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.269817905 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279660202 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.296968378 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.27143196 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.26967842 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.274552941 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.283071966 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269900313 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.273620932 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.270453536 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.268073328 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.267909595 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.271871478 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.270769203 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.271312789 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270052388 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271753341 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.268033645 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.270705191 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.270779877 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.271940462 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.272135015 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.271878079 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.272511064 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.272235524 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.272590604 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.273827614 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.279276847 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.272412886 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.273172416 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.272603647 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.268928035 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270816546 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.272851262 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.27168607 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.272233541 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271300704 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.271638601 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.271405921 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271087629 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.27323786 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272985669 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.272324297 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.275808672 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.272805421 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.275032696 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.271893643 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.269885522 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.27251808 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.273585811 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.272784775 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.271086062 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.271239048 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.276179623 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.279655405 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.272527521 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.27261668 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.274589861 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273514004 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272208883 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.272714238 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.276010575 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.280824623 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.273717902 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.279702399 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.274068841 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273811435 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.273373045 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.273818573 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.273907906 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274493449 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.277046736 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.281270686 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287013349 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284994098 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.275923091 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.27731343 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.274840988 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.276620405 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.277700954 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.273482977 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.273662488 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275169102 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273489766 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273767115 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.276500096 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.273662705 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.272391737 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.27382829 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.275450992 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.273980499 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273411355 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.275564435 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275274597 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.272044925 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274392172 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.274464893 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.274702612 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.273022799 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.273457837 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.274870319 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.274138191 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.274913585 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.281478057 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.274297434 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275459669 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.277272397 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.276429921 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.273849955 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.275930559 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277916432 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.275522724 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282014505 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.293831463 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.276435551 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28296344 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.292102965 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.275499462 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.278266043 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.276826394 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.272885917 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.279591306 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.284151588 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.2754201 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.275783459 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.276021312 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276191571 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277111392 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.282664633 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.275044964 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.275646139 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.275359289 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.277800168 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.27345064 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.277338191 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.277780832 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.276784548 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278626658 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278071187 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.276354118 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278012596 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.276870377 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.277658031 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.27659324 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279744449 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.283474839 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.282240102 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.277817357 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.279548314 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.280244208 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.280188562 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.277781863 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.277511613 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.277823445 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288374765 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.287830645 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283449139 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.279560794 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.277674788 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282868308 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.279007565 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.282064716 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.277941085 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2794107 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.277460151 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.277823537 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.275563297 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278472944 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.277719271 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.278641947 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.279320925 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.282000505 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.277996806 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.277398463 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.278419464 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.278743462 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.278750888 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.277872951 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.27831103 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.282666857 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280399854 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.27777842 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.278940443 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.284465939 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29703541 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.279724569 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.278632696 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.279007225 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.278825003 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.280911438 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.279393799 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.282270364 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.287436093 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.28299792 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.288439799 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.282974214 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.289646134 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.281359187 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.282935248 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.287136912 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.278011967 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.278636441 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.280265197 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.279365504 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.288552078 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.297754639 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.281398164 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.284063813 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280561166 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.280469623 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.280226838 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.280217569 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279929231 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.280585322 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.289270851 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.30024705 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.283498559 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281932008 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.277267152 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.279876542 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.279602561 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.281759193 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283300481 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.280680292 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.281301491 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.27869123 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.280892444 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.280828327 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.280321391 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.28123703 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.278852957 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.281527656 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287892343 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.302182015 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285158116 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.281636129 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.288346542 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282135309 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.289252421 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.30016679 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.282549306 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.282900771 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.282336927 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.282972627 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.281456581 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.283078718 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.281555451 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.283195774 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.285573756 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.282215846 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.283681467 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.282764072 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.282294917 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.28244999 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292447321 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306355612 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.284041652 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.286832597 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.279697089 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.283487377 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.286761676 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.282742827 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.281564065 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.285141166 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2930358 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.290914852 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.283216848 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.283733334 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283426853 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285023857 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.282894757 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.283870453 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.283940014 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.283778403 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.284201368 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.282981537 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.287112539 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.284268917 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.284243593 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284719175 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.285567521 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.293820852 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.285387914 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.285021594 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283821798 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.283885462 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.284763834 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.284496852 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.284691266 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284103556 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283864186 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.285355681 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291536302 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.290534479 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.286461046 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.283721842 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.28404752 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.285063011 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.283783991 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28442657 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.285284422 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284586994 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.285044708 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.284540414 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.284685871 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.283919396 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.28484501 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.285855604 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.285411076 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287699512 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.291644006 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.284363923 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.281436934 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.285337831 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284810294 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.28428299 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.285379498 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.292582217 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287627607 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.29620495 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.293807618 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.289024917 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.285801812 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288058609 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.293422866 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.284623026 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.286026492 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.285797248 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.287894687 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.287247635 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.289424113 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285717729 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.293471979 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.287372913 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.28594109 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.295415218 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.305673628 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.286911536 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.288026418 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.289496442 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.287272585 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.284573517 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.286553052 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.287234984 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293534022 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.307508386 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286738822 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289130783 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.285687405 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.289074955 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291064685 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288085001 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.287776275 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.283952076 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.287864143 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287717908 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287487225 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.284806484 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.287921811 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.287634997 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.290944774 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.295045689 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.28510654 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289277405 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.288570072 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.287920642 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.288542133 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287471508 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.284865923 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.285181551 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.287320433 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287450279 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.288409862 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.290376255 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.287367037 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.289121423 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.289188453 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.288411921 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291581824 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.298679725 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.295392309 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.286118694 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.288072477 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.288350515 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.290900115 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287903982 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.288662797 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288816693 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.289014965 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.288789929 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.288446747 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.289510404 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.291921558 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306090948 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.306826255 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2887618 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.290485588 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291794278 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.28912224 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.286169586 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.289133042 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.290378631 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.292587542 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.296906892 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.289787829 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295889279 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307151871 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.292054719 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.292998703 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.293017981 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.297925171 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.291714143 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290244819 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.290011209 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.294792876 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.307758922 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291744536 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300415992 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32160217 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.309591923 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.291718473 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.291446796 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.290488883 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.290314803 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.292879167 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.290974217 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.291025516 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.290749949 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.290886009 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.292704831 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.295607691 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.291213843 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.29093615 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.29062138 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.290558283 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.291503559 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.288909432 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.290892054 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.291019947 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.291509778 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.291293884 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.292013693 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.291575928 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30378481 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.303415416 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.291560679 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.29190493 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.288512701 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.294398924 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.295415691 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.303946859 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.299798348 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.292466371 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.292116366 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.292461023 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291512109 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.290521804 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.292530832 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.291323202 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291154254 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.290230658 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.304348468 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301238373 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.297052562 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293364259 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.292927365 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.294551279 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293512908 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.29304296 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.2932375 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.29464764 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.293119695 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296159219 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.291808133 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.293014918 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.296363596 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.300809693 seconds)
  done (took 764.776428221 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290726673 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290146541 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290309452 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290173484 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290775238 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290679148 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290414956 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291149754 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.29020947 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29081366 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.291235435 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291395913 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290785948 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292873694 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29144004 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290795579 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291160942 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291909307 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29053118 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292124451 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290598945 seconds)
  done (took 28.335760456 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.294234593 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.292054117 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.291942306 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.294449209 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291364469 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.293787788 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.291847682 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295027991 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29449951 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291343043 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.294423657 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294635696 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.292281666 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.292195848 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29244121 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294993675 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.295467961 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291680284 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.295583658 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292886452 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29559594 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.292435198 seconds)
  done (took 29.681477512 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.29578947 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.294667998 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.295289482 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.292647921 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.294713509 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.292564729 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.294867902 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.29638142 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.295857247 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.296351672 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.294070705 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.297475421 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.302361665 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.300557513 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.297148121 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.295696331 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.439839623 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.296259965 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.296920955 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.29590974 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.29329951 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.300128672 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.294206031 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.292712521 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.295087417 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.295936166 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.296503094 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.295488801 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.2969754 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.297544598 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.299854154 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.296646006 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.297067401 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.297878336 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.296084792 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.298536424 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.301289485 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.296453533 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.29418779 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.2976505 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.307466995 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.317462181 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.297528557 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.303514469 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.297500149 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.296784972 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.300594376 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.305233785 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.294906133 seconds)
  done (took 64.948718152 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.298068973 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.297409783 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.294990707 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.297750656 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.297812822 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.297921054 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.298135125 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.297305088 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.295490804 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.295340455 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.29845091 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.295322798 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294725515 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.298811092 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.298490755 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.295215253 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.295942945 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.296205558 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.295400024 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.295674884 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.296326341 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.298401945 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.298326463 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.296713118 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.298870783 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.296104306 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.296473208 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.298381942 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.296889662 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.296432219 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.298917484 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299180427 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.298284614 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.29600506 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.296879943 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.298827492 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.299260256 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.296566168 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.299346445 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.296365207 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.299280036 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299036066 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.299408016 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.300527367 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297673843 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.296151277 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296522489 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.296500003 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.296945994 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.299455955 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.299289426 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.296939868 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300316537 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.296273428 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299793708 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.299602504 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.297661122 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.297107816 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.299915819 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.297193871 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.298108348 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300703659 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.298160942 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.299885072 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300326916 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.297906115 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.297556504 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300055202 seconds)
  done (took 89.477460663 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300519866 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.301852553 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300741341 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300875809 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301888711 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.300870248 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.300803223 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.300756316 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301421593 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300715432 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301661327 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301789122 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.300707388 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.300688343 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301670144 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.30146649 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302226024 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301628884 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.301456824 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302515161 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.301853373 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.301794438 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.302145623 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.301526259 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.302414826 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.302058725 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.302393367 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302372433 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302429738 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302259374 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.302033239 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.302985496 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302332393 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301225806 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.302571628 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.30216856 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302800911 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.301536535 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.302538988 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.302379172 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.301664001 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30250244 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.302588263 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.302953456 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302693452 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302963973 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302840353 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.303755089 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303106855 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302313049 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.303558344 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303541992 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303187344 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.303329839 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302929536 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.303349192 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303532747 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303783608 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304063678 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.30362818 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303427317 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.304211751 seconds)
  done (took 81.975415236 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302918855 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.303111668 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.30020555 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.301263853 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.303471804 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.301199494 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.303953155 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.303981073 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.303552076 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.304057003 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303062825 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301293399 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301700424 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304346075 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.300653284 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301806085 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301645202 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.302365498 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304520949 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.301949063 seconds)
  done (took 27.286404063 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.302065007 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.304811196 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.301709276 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302599792 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.304272151 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302429171 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.30454462 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30449645 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302155884 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304589628 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305189481 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.305313264 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302362227 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.302783815 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.305764506 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.302513261 seconds)
  done (took 22.093102897 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.302366757 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.305156854 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.305544448 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.305334104 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.303692462 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.30335796 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.306139456 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.302973517 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.303792381 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.30558759 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.305731668 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.305342592 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.305862856 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.305096544 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.303790567 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.305784767 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.303149102 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.303463552 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.305779326 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.306449576 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.304105624 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.303067493 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.305208213 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.306253564 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.304202637 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.30471428 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.303968703 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.303604023 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.303834143 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.305866438 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.3047466 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.304258352 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.304518853 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.303759081 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.30678824 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.303962621 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.306401921 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.306156589 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.307657482 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.306228651 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.306897041 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.304188128 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.306707689 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.306968605 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.304674895 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.307309874 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.304275641 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.305528184 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.30444362 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.30438361 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.307485269 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.307651823 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.307748464 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.307639237 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.308100937 seconds)
  done (took 73.02705838 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307407822 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.30753211 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.305103481 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.30696539 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.308048849 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.304707919 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.308549789 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.305580199 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306058089 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.308722729 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.307437439 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307515762 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305812884 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.309015003 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.305521493 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30801519 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.306327301 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.304206031 seconds)
  done (took 24.761277374 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.305609404 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.306684418 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.308574898 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.305599506 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.306081415 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.308704084 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305567025 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.308824597 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30849379 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.306574208 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305913834 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.310104211 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3091502 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.309313929 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.307854042 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306578805 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.309098332 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30920005 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.306472801 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.306690843 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.3095298 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30998737 seconds)
  done (took 30.010857524 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.30858476 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.309285809 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.325067666 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.350376991 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.34094787 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.308465775 seconds)
  done (took 9.182310819 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308801657 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309606291 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307025236 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311026985 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309619804 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307301558 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308215839 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308188765 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310402203 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308440699 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307990569 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311862207 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310640984 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308451994 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310835093 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310252058 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30863671 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308524098 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308757856 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311625279 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309285434 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310903198 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307959678 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307986255 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308924524 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309030903 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311285834 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309102821 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308049225 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311724616 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312124666 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309164955 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311609591 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309341154 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312894119 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311809403 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30903453 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312047168 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312184272 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308551383 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312469115 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311832212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311742927 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310500991 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312314023 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309645484 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309222188 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310218705 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310115089 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312473727 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31170888 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310512835 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312402665 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31325569 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312387535 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312530493 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310872216 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310003787 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312407551 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30981952 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309971573 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313960938 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311062462 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310829331 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312682414 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310537159 seconds)
  done (took 87.728382872 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310745473 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.309875324 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310631149 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312065727 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310228209 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310431394 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310243875 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309735676 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310231387 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311083386 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314037364 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311259088 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312055013 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310514797 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311473363 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310756953 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310196629 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310861805 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311120995 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313654239 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312342716 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311283831 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311703187 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31184672 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312350902 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3141028 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311237633 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311773728 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3121018 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312317494 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311998024 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312262196 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312102134 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31185858 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312355408 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311957403 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311654288 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311500503 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312532644 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314949735 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312053487 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315389708 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313049771 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313803531 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313288021 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312516352 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312817123 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312643985 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314287212 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313998469 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31320403 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313197901 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314128181 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313102275 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313265112 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313922187 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313381373 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313769954 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313935859 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316199658 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313937571 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313021159 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316457665 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313320801 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313919649 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313963666 seconds)
  done (took 87.868580931 seconds)
done (took 1782.393076042 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.314027066 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.393461937 seconds)
  done (took 13.954840152 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.478633691 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.438502391 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.313762252 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.309042636 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.314704159 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.320757929 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.324170706 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.314982517 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.315004896 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.315114644 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.315725447 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.504583174 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.31808151 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.316346309 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.314705456 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.408118236 seconds)
  done (took 42.877484626 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.341677322 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.320817399 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.437221295 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.335740196 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.341982635 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.5122518 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.377721348 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.319813125 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.497320736 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.358951395 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.923219717 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.342549889 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.318516931 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.459145576 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.337702848 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.513666838 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.575438674 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.929232919 seconds)
  done (took 30.491435127 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.78969426 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.337825059 seconds)
  done (took 9.375538747 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.326674578 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.338392619 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.314491585 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.312030185 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.332948559 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.349115366 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.35353636 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.349921669 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.368509494 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.374984774 seconds)
  done (took 64.676079435 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.340395305 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.320178071 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.320521425 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.318535362 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.311996081 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.312606147 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.319711466 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.33059832 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.102583454 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.455955677 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.337037537 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.325661614 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.31862829 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.321248598 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.31828638 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.355745055 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.460019191 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.317358969 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.317661986 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.324817781 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.319769107 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.431057605 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.363924528 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.319522427 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.453242244 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.123198416 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.323672416 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.326141004 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.441633757 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.318238438 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.320560254 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.32148335 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.322320256 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.897313585 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.778103728 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.329101058 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.346323425 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.328653545 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318749577 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.466591283 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.320866435 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.326365778 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.313599806 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.758333509 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.481418876 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.440258187 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.629567752 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.323386692 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.322498494 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.38529144 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.321977745 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.322545129 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.35153819 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.092056689 seconds)
  done (took 111.020272154 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.353562209 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.804891719 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487114099 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.337491012 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.191832374 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.960956314 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.314524063 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.61632354 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.327257381 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.314057522 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.598354949 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.840049882 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32272429 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.376244383 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.869297329 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.369135189 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315352231 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.258805251 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.315581784 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.319632791 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.744815096 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332316596 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.316577201 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.615675592 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.357216433 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.793629569 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.847351235 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.769977209 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.316196313 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.315940845 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.801201221 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.323308493 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.32731069 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.319538288 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.596689571 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.686309096 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.661570352 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.320498283 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.34091925 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.320887453 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.343104791 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788988329 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.673982789 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.328948142 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316164096 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794260247 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.317122987 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.321560326 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.316238473 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.528382817 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.062214945 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.31764723 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.840020679 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.318789116 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.58324413 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.404054948 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.4021222 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.821492634 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317587183 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.465357435 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.322259514 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.317923095 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.317341677 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.319572668 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.322113237 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.678797601 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.649927231 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.324563957 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.679158773 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794726616 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.317456748 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.880373172 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.198444491 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.343594032 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.357368905 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.317363414 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.059555838 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.823417478 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.357006594 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.317484648 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.665209951 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.317859668 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.602169164 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.33343296 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334985275 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.757539204 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.344080435 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.391552503 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.318016213 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.319096233 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.102863127 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322802334 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.608621242 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.340689835 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319535322 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.318123108 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.323898645 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318423473 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.319912238 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.320536014 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.864585475 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.321222641 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.650575412 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.339538353 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319620939 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319933126 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.319979266 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.321140703 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.548200353 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.960355697 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.322873181 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.319968846 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.3197816 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.325964583 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.528494646 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.32991011 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.641194234 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.321829823 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320267121 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.322139557 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.011579765 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.338408659 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320861573 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.324797822 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.158992027 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.529581272 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.340493087 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.321471191 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322357318 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.335611038 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.73599151 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321560399 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.376086641 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.324985316 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039655578 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.352238776 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.329370795 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.722890347 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.325691359 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.327366488 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.324171092 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322452103 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.629095047 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.602296149 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.625234407 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.323365255 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.323087362 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.0473046 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.342963131 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464930995 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.342587615 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.323750945 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521105316 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.453171068 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.323292034 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.875388668 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.324264143 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544175548 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.322292924 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.646316247 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.831941467 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.322440322 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.328414762 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.046756694 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.015273352 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.11928306 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.323685816 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.606146061 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.326977683 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.771175108 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.323989041 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.325437881 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.913003472 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.327365246 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.32529125 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.323684874 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.322398934 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.383493252 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.499312517 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.077011704 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.322299021 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796737595 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.365302002 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323571767 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.328064614 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.325334613 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.677858499 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.379811767 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.327840337 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.362247137 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.324521414 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.331710747 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.809230137 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.281366456 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.327460004 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479327569 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975647587 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.325254593 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.322847269 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.143484831 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.524334051 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.891166402 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.340291347 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.646871345 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.326587652 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.366396092 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.131201637 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.392031003 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.851903073 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327825028 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.324578319 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.957004009 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.325121364 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.373588217 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.325520212 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.326337249 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877010115 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.325060767 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.324826469 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.731363964 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32792985 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580372443 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.325929037 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.361806199 seconds)
  done (took 1110.888102401 seconds)
done (took 1384.53211161 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.326757644 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.328860363 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.317324582 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.32871667 seconds)
  done (took 26.564320997 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.335771173 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.331271096 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.333701772 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.331909084 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.334133191 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.33205814 seconds)
  done (took 9.26277416 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.438838943 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.328188421 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.329028872 seconds)
  done (took 19.35876633 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.561339895 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.649509451 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.730385574 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.610622937 seconds)
  done (took 10.816550114 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.333683517 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.333597546 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.334275775 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.33323919 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.336855927 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.338019706 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.333881697 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.333829723 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.338227834 seconds)
  done (took 13.277659247 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.425253455 seconds)
done (took 85.96858522 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.52546404 seconds)
    (2/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.371401285 seconds)
    (3/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.172586719 seconds)
    (4/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.682235027 seconds)
    (5/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.326284179 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.863136377 seconds)
    (7/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.981381604 seconds)
    (8/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.313216407 seconds)
    (9/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.519906912 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.587910691 seconds)
    (11/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.367952609 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.428178714 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.368323612 seconds)
    (14/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.354198482 seconds)
    (15/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.525882155 seconds)
    (16/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.607285581 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.368855101 seconds)
    (18/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.327544828 seconds)
    (19/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.346439552 seconds)
    (20/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.31306502 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.50215521 seconds)
    (22/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.343113009 seconds)
    (23/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.458648901 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.392058035 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.637266945 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.665963181 seconds)
    (27/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.979922079 seconds)
    (28/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.330628395 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.354570212 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.351123468 seconds)
    (31/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.42188065 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.093466146 seconds)
    (33/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.86592679 seconds)
    (34/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.782929015 seconds)
    (35/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.685183108 seconds)
    (36/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.683223668 seconds)
    (37/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.251376821 seconds)
    (38/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.471898317 seconds)
    (39/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.556078245 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.446607387 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.18377251 seconds)
    (42/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.862015457 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.754872719 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.333056107 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.328272497 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.825402088 seconds)
    (47/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.88270711 seconds)
    (48/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.823180444 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.195314415 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.060886398 seconds)
    (51/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.35382475 seconds)
    (52/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.360619845 seconds)
    (53/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.157817439 seconds)
    (54/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.426561615 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.563435746 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.441929495 seconds)
    (57/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.419202822 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.591599539 seconds)
    (59/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.376588979 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.381202341 seconds)
    (61/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.178288261 seconds)
    (62/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.774953635 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.751367107 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.962917287 seconds)
    (65/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.670501781 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.388361571 seconds)
    (67/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.315358293 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.844079921 seconds)
    (69/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.440861478 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.068452927 seconds)
    (71/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.356783128 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.766544314 seconds)
    (73/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.358550972 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.257208029 seconds)
    (75/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.355750601 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.353659509 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.69118959 seconds)
    (78/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.371947862 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.262708066 seconds)
    (80/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.729380329 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.415825933 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.227401699 seconds)
    (83/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.325756137 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.136532661 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.347247879 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.542489107 seconds)
    (87/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.416224749 seconds)
    (88/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.3946631 seconds)
    (89/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.956622516 seconds)
    (90/309) benchmarking ("sort", Int8, false)...
    done (took 4.389006512 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.031755708 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.495469222 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.516141893 seconds)
    (94/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.432274946 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.675847996 seconds)
    (96/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.358314268 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.763190949 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.255263535 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.499625384 seconds)
    (100/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.006199699 seconds)
    (101/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.334884103 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.745082071 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.780600608 seconds)
    (104/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.333053355 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.010354716 seconds)
    (106/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.341592248 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.788269062 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.998237048 seconds)
    (109/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.729472086 seconds)
    (110/309) benchmarking ("sort", Float64, false)...
    done (took 5.662073578 seconds)
    (111/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.912245406 seconds)
    (112/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.599816944 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.696060073 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.308016604 seconds)
    (115/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.632181217 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.433161509 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.964139238 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.459640087 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.337856963 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.57583475 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.923730115 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.358879634 seconds)
    (123/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.434521783 seconds)
    (124/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.782604371 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.363785368 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.336716693 seconds)
    (127/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.967932161 seconds)
    (128/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.454301201 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.433399552 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.333131548 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.407764285 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.332665939 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.456093688 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.286056952 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.412244934 seconds)
    (136/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.711285951 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 1.857687674 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.355491588 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.982790959 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.587613906 seconds)
    (141/309) benchmarking ("sort", Float32, false)...
    done (took 5.345259796 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.333486515 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.140602314 seconds)
    (144/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.333685737 seconds)
    (145/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.846875489 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.6111007 seconds)
    (147/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.547427407 seconds)
    (148/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.408510773 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.439137506 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.333381865 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.334909394 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.465685378 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.236636965 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.359501363 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.434632778 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.349858445 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.151186236 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.361100692 seconds)
    (159/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.350713722 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.870467207 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.982501735 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.334724863 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.204013903 seconds)
    (164/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.703247783 seconds)
    (165/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.831158407 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.358287249 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.32111333 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.364458615 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.938454503 seconds)
    (170/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.751652825 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.275202475 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.251991313 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.323326891 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.15024314 seconds)
    (175/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.362067532 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.335463926 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.655569265 seconds)
    (178/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.355344003 seconds)
    (179/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.33532689 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.330221484 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.886172205 seconds)
    (182/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.420989672 seconds)
    (183/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.420703772 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.805341953 seconds)
    (185/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.375776571 seconds)
    (186/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.532552388 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.362647096 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.756636429 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.218229499 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.394986049 seconds)
    (191/309) benchmarking ("sort", BigInt, false)...
    done (took 6.336602315 seconds)
    (192/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.713619861 seconds)
    (193/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.995225891 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.395196568 seconds)
    (195/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.362211214 seconds)
    (196/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.385539592 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.995128473 seconds)
    (198/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.554959689 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.146544369 seconds)
    (200/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.421316207 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.003323137 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.440859486 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.336333485 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.336672896 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.938297913 seconds)
    (206/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.350945749 seconds)
    (207/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.696417582 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.557602472 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.970833541 seconds)
    (210/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.425070301 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.337285741 seconds)
    (212/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.35579172 seconds)
    (213/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.424774747 seconds)
    (214/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.987676122 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.774129324 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.915933737 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.354618492 seconds)
    (218/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.783759713 seconds)
    (219/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.426173046 seconds)
    (220/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.99565717 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.33924442 seconds)
    (222/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.574506646 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.361337486 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.464313576 seconds)
    (225/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.665184923 seconds)
    (226/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.404768559 seconds)
    (227/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.351168108 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.378497978 seconds)
    (229/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.310290478 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.889198202 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.35692801 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.338328499 seconds)
    (233/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.323813623 seconds)
    (234/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.710695332 seconds)
    (235/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.615286686 seconds)
    (236/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.067819122 seconds)
    (237/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.738254968 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.962161015 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.534822924 seconds)
    (240/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.379995707 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.824109612 seconds)
    (242/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.14989033 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.758422386 seconds)
    (244/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.345506294 seconds)
    (245/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.40692136 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.388517729 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.752719028 seconds)
    (248/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.340955829 seconds)
    (249/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.160029581 seconds)
    (250/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.444252438 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.690393062 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.385377389 seconds)
    (253/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.363438939 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.048736376 seconds)
    (255/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.449915619 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.558810296 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.369190658 seconds)
    (258/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.365861175 seconds)
    (259/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.241991588 seconds)
    (260/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.727701163 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.366127324 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.365360762 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.298984706 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.921364679 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.725167951 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.302359163 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.672122613 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.327719499 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.221078866 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.077745812 seconds)
    (271/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.83603943 seconds)
    (272/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.386838512 seconds)
    (273/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.231174613 seconds)
    (274/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.659864905 seconds)
    (275/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.404421575 seconds)
    (276/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.955945624 seconds)
    (277/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.283283827 seconds)
    (278/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.279474253 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.422830174 seconds)
    (280/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.6002662 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.422566783 seconds)
    (282/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.422220837 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.382907379 seconds)
    (284/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.370191153 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.456962753 seconds)
    (286/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.339974537 seconds)
    (287/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.376352098 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.071807992 seconds)
    (289/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.32625915 seconds)
    (290/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.021673725 seconds)
    (291/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.735960911 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.383042251 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.422953855 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.134815241 seconds)
    (295/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.449246243 seconds)
    (296/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.042993577 seconds)
    (297/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.551522874 seconds)
    (298/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.820979361 seconds)
    (299/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.504074277 seconds)
    (300/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.216848691 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.340448931 seconds)
    (302/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.352829288 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.363749376 seconds)
    (304/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.341141519 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.766636448 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.342667823 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.357623674 seconds)
    (308/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.695225055 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.781334026 seconds)
  done (took 931.72723852 seconds)
done (took 932.992767471 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.373056811 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365145216 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.349632352 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.372646979 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.46215786 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.380223722 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.361859996 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.352998517 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.398240484 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.400416787 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.349435812 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.378344355 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.351719942 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.351425316 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.35073152 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365314596 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.434444705 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.351507176 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.367526325 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.361265403 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.367741792 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.349354767 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.400835587 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.378044221 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.355082234 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.354519072 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.354818982 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.371507225 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.463328276 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.353632853 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.35462446 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.362625061 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.434634792 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.349845148 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.345868367 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.370682946 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.363140011 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.363382319 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.355768639 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.383953445 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.859878118 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.351552243 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.353808059 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.35375143 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.351353676 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.361348495 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.353432234 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.360564378 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364701722 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365756418 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.850980287 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.366738891 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.355036046 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.353138432 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.36406173 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.3530037 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.356544425 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367789307 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.372858195 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368861163 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.42619477 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.358115547 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.356105316 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.37062304 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.36151313 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.891746924 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.349819095 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.357554452 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.865844943 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.364569023 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.891900672 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.363123151 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.356324281 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.368652881 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.386448967 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.442312943 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.349649644 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.353177409 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.362078258 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.352862609 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.365126487 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367118741 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.358747115 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.355556497 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368747467 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.382840406 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.365716772 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.355341818 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.365444516 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.374169862 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.361751965 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.365876567 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.358456932 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.350979951 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.364119215 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.358450497 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.358062688 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.358344088 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.360082357 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.36665931 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.865349644 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372313499 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.35223644 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.351885017 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.354804374 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.369324374 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.86784242 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.356269682 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.378221546 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.402468586 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.357339817 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.432977939 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.360205199 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372307705 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.366374953 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.358635984 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.351763639 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.430798977 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.861565017 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.370660986 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.357615195 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.354426546 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372591807 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.358585828 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.353203889 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.447520315 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.357975641 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370822867 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.477570701 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.367773219 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.389747731 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.355620049 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.360737153 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.385170632 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372712124 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.388820264 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.360789843 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373631462 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.373214101 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.353433734 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.36908009 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.368541528 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.35910524 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.364465001 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.352129322 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.390305648 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370710015 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369909076 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.37944989 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.478840511 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.354940076 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.435182979 seconds)
done (took 229.632384343 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.423902338 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.356927024 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.444036703 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.357334345 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.46320703 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.474988813 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.354903041 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.354031175 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.354837264 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.736077757 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.354365365 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.35499965 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.354403476 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.353761689 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.443596919 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.35776575 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.354703309 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.721151685 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.358037557 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.43273041 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.350759387 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.354398563 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.357356201 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.768364743 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.354979909 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.355385311 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.432680781 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.357392207 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.705672518 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.35807846 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.35579393 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.730061277 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.452527017 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.376282839 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.367948022 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.364751456 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.475799841 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.376898577 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.457881808 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.442709505 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.458536149 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.397246592 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.356570237 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.359824955 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.359258193 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.358941021 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.356294689 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.385513857 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.353741907 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.356248154 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.700279176 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.368212033 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.357099505 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.356205948 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.356059627 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.388540442 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.356831303 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.360051273 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.453549841 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.359839864 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.427158039 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.742523052 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.766126904 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.359105682 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.353090359 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.357317531 seconds)
  done (took 150.29349002 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.426927825 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.432420412 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.475060623 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.361154568 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.410094592 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.479758883 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361788396 seconds)
  done (took 11.236368034 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.367278953 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.3602821 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.410040595 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.409861251 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.361323179 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.507331823 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361151314 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.372039563 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.358376401 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.413080542 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.360939768 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.361335345 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.367531268 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.357187688 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.40875551 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.372571645 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.475249632 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.362310924 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.361209282 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.511858951 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358402307 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.368055468 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.413367508 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.371966158 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.36154613 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.366681004 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.930014601 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36201574 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358815341 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.36143451 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359016847 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.40008638 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.361866876 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.364182207 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359291494 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.476504158 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.361697565 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359276504 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.362686664 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.357266296 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.36249482 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.362869149 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.362567654 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.359731145 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.361199216 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.384253715 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.36164413 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.363215868 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.361041556 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.361462685 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.412347207 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.362503358 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.35927993 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.358663446 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.41831735 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370411555 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.365095441 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.359506184 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.361547353 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359657949 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.513420447 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.410589839 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.361995291 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.410618451 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361652132 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.363268293 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.362388877 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.362822695 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.417172129 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.362399243 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.411305029 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.35968615 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.516870538 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.386634896 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364810396 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.366483957 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.366246087 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.363613301 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.36062457 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.369490084 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.360710892 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.364610912 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.369222083 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361005908 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361936259 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.465892699 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.472569594 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.361081239 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.376799154 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.370377134 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.361025318 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.417095675 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.364300209 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.360111925 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.418405658 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.47886257 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.417684611 seconds)
  done (took 156.008299479 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.368930135 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.371745184 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.364719415 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.380916956 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.364156281 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.364506749 seconds)
  done (took 9.508079994 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.367310235 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.366045252 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.363607808 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.364396637 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.364877452 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.364952077 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.366015649 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366550724 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.368857817 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.365260737 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.364419997 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.36583017 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.366003733 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.364912221 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.365323363 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.366381778 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.365768016 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363061427 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.365690017 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365444544 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.470422345 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.36542271 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36622194 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.366218597 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.369082107 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.365491428 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.373597358 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.365186817 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.364895042 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.374415069 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.369217177 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.366253081 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.368508508 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.371843286 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.371158631 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.368139445 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370431094 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.368614245 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363793485 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.365617414 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.367869452 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367122154 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.366460715 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.367765164 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.368612021 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.372578386 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.371400369 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.374116233 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.367140429 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.366620416 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.367839849 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.366702229 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.367274649 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.367123212 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.36889929 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371289245 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.371669093 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.366695341 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.366929041 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.367901639 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.368750667 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.366602008 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.369153972 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.372239947 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.3649681 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.368225343 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.368292703 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371115214 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367991396 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.367032601 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.368483941 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.365191995 seconds)
  done (took 100.861700153 seconds)
done (took 429.194475856 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.391093707 seconds)
  done (took 7.688223802 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.502281641 seconds)
  done (took 7.799423425 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.978718435 seconds)
  done (took 23.281471598 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.430442334 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.413403031 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.380127919 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.369886871 seconds)
  done (took 26.891081934 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.907311523 seconds)
  done (took 8.204906819 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.360448479 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.376249031 seconds)
  done (took 14.034551394 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.484060687 seconds)
  done (took 7.780728525 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.094263764 seconds)
  done (took 8.396776061 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.387057664 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.386591009 seconds)
  done (took 14.327202247 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.347077595 seconds)
  done (took 7.644687683 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.554374234 seconds)
  done (took 8.852111206 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.367999188 seconds)
  done (took 7.667141495 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.409143661 seconds)
  done (took 7.70620046 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.829257928 seconds)
  done (took 10.127348225 seconds)
done (took 161.699574723 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.361995885 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.367027679 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.364406567 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.364770855 seconds)
  done (took 26.756450435 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.402437346 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.402996163 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.40354319 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.414036989 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.406321723 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.862566071 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.394995888 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.394876392 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.414468106 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.405768496 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.40450758 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.407751585 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.40222707 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.394825164 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.404851811 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.404527731 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.414362671 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.40469597 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.394898049 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.406455381 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.369505613 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.414561326 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.406747823 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.370792094 seconds)
  done (took 35.40335263 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.56759137 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.442858013 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.523937373 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.421753441 seconds)
  done (took 7.255272178 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.421926047 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.425043936 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.437999965 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.477853431 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.506115132 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.433357005 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.398009047 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.393320027 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.379160778 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.424800285 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.499078051 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.438687881 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.51489416 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.370240718 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.559600157 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.370693102 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.372094126 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.423752185 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.475617143 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.498967405 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.371856813 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.422345167 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.426208246 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.440065062 seconds)
  done (took 35.781300668 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.370038424 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.378431031 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.37670884 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.370798928 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.370937504 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.371164788 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.377721896 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.372681954 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.392183362 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.371279273 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.369647559 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.37134269 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.368878662 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.371166598 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.370343755 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.383193968 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.384130858 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.371444052 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.374086087 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.377452624 seconds)
  done (took 28.794309122 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.365396732 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.219953737 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.716587288 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.621368772 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.366067288 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.368502712 seconds)
  done (took 27.959307368 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.448464247 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.588058474 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.373309884 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.75595742 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.830473233 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.3726711 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.372190071 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.629034741 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.955963517 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.967804795 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.43387595 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.444516075 seconds)
  done (took 20.474961444 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.367586106 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.366978602 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.370107929 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.38520386 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.431949994 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.377556919 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.379009588 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.365864366 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.435012137 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.436580586 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.377828068 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.433645878 seconds)
  done (took 38.031083615 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454495185 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417424748 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.40592664 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287499718 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.095618547 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57976541 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.299783036 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.84456652 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.372280947 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641933126 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36904773 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460280699 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.625967906 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377286392 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368577247 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.424665273 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594314694 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895912755 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369646497 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.655319552 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396059305 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36834969 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.843679729 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.399908771 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580561974 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351965777 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.629402165 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.145937459 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675714994 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380747415 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378980556 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368809974 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643324583 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057605817 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467096282 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379466276 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320437017 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.919711444 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.377406473 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.73580713 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374014974 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374060312 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379447878 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370275151 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304332002 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380672165 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845807564 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.375051007 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.081393449 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371213305 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380768978 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465211545 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.373253503 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.943737851 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516243209 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.376879092 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.36762947 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37862017 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942110984 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.098075536 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382591012 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.305595739 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.935222076 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.749239296 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048942702 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.472203151 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.375287295 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375559488 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306005586 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.720446372 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388813611 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50944879 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.395888303 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034523926 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154195155 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384276031 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.305347641 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960193049 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380078619 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.307406388 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602062315 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.150116937 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312815531 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.320606113 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.306887603 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138000295 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380718165 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.810952492 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378938016 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.847202467 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.382872113 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389682349 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395321149 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596339888 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.256711762 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371675514 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.380944176 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491545552 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393992527 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.845866171 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307943734 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.376984997 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630997113 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.585089797 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372311239 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.429114068 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610080875 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374633997 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.389298685 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.373270691 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.384567732 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.017867004 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385284886 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246101233 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391446955 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.150976863 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176115688 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376570651 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.47335366 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.386029138 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634665181 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.206144219 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.535153363 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441448649 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376875405 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373299551 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.767262999 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.228450048 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.283218935 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.37665797 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380619837 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.384334273 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.375943347 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335978218 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.372035267 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38199882 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.156572001 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598753597 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374963347 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653325105 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308883062 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513311583 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390483197 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.598492438 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.635002403 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.372972024 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637173945 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383372847 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383560288 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386288319 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393990209 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472048978 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39659258 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.380056363 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.636213343 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.379165126 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.379240183 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.779102325 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.155569635 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377737381 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.381144111 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351218472 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020414995 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346086158 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38481652 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.269451398 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.38947214 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444276359 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382159592 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.385945269 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.333130498 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.420464942 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.381119179 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.383060943 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600208775 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388022915 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.760715355 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458671109 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.609354102 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026595462 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38970603 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.310297788 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.087294111 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.068769514 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377145329 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.567922876 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377174877 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386444345 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387501083 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.105341419 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.027000741 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378064078 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.685962134 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.38471666 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387873435 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.381536694 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37719666 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.309022162 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.240819064 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386826022 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.391261794 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522238776 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.391851859 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311795956 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.896379697 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384644007 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378473091 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.153198831 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412569024 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.698105893 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890496579 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639634963 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.29386311 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389322404 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.86008265 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.412493697 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.386077258 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389449187 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383450869 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.402012098 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386928135 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.389898922 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.761100694 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.830288886 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948371115 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176086352 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966486744 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3709118 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.387220696 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.264862904 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.85838344 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31401483 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.038704048 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584603099 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.8698576 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338122756 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61833704 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.647719898 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192817414 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390072713 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607943723 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403002305 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.386068242 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394001427 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592024352 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415458454 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.381508255 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.312016663 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.665918173 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667447461 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380000496 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462951658 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85660257 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382829047 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.162242623 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.380340401 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.791929951 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573097782 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.930641145 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.776088252 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388914698 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391957065 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886462096 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.389705617 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910081372 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061584776 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392604782 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.618745305 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321914511 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.393020929 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.391149326 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.383244798 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.806928389 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.3829276 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.638111261 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393560623 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315440684 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38394122 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974270958 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.25678728 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.386897884 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381959993 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188457951 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391672294 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692531745 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.382954757 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.297269936 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385851351 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316976992 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316547356 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.075441609 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384923243 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352224809 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913172137 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.889418551 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.510926228 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40433831 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250974088 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.641617165 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.397317026 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.036331407 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61035185 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.405935091 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407137467 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.482529392 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395182209 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.373516145 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.264945407 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.621013581 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357100557 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608266897 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.424446249 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.29102082 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.38211892 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597881667 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.286061067 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384346694 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655939591 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.097566251 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.391969386 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17061847 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40906187 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394406473 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404646362 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.949799603 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393156548 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454416304 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39588052 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.395174318 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.395779902 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575547529 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391158681 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389284399 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.398161417 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478464461 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.295342415 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.303835529 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.158942609 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043407631 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194011522 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.040526654 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397617084 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384720822 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385013588 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319443333 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53258535 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.914845504 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658553626 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5064004 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.027794505 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408739037 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388241765 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390142508 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601467382 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659958198 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26147287 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393276794 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.052041547 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.269280229 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396924834 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.597511901 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920737304 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976785531 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510095631 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386550087 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.863865473 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660600188 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.479006145 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386484611 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.982966413 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.403669117 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.809305872 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.394268049 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403223462 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537737236 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396808983 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08216316 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.400172792 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.54443439 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.161684984 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.727750898 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.649176885 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.913457005 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.39748178 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045757122 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.173278098 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652904505 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458650567 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39876595 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.509778512 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532959949 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.386902519 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.270122025 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387185466 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23848381 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.097098696 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.398031713 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047860199 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651807628 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.386798376 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.389022409 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412392452 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.397536017 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.61269565 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167550643 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614839854 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398224585 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390607564 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.961834523 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046781739 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402270769 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323905625 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.391196608 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656580285 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.627473637 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414601974 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.841120661 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.10022468 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981590048 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.363340099 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410471648 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398928968 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177068549 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044557436 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.316290788 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920739316 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.048979792 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391305377 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6662114 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.394587771 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400320279 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667606364 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.393999709 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.397108223 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404132354 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.045507729 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211900628 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.402440332 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.754359469 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.329301671 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.617998819 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171264369 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329303242 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399410789 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.599373197 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391316146 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511347299 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40287505 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.38799531 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396096167 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.125934428 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673739586 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.39713768 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.379548257 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.382786151 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401598851 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400812981 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678889433 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396205059 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.067599072 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.742866879 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.649603645 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.391978009 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.396574311 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.395997469 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391456617 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.115949246 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369445301 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.13847358 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989597941 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.393773324 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.404260114 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396062018 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.608555138 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605028952 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392459241 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421846755 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39173215 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409737483 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.296899831 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.165635178 seconds)
  done (took 1621.209570718 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.438237863 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.436407324 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.411129529 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.44970718 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.411378034 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.440284138 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.478761123 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.448867904 seconds)
  done (took 52.842403919 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.394832758 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.54528145 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.425475936 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.392127383 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.402382413 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.397192645 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.887659584 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.399568494 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.401855971 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.402462546 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.39639974 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.404190162 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.110046254 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.403586621 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.392752168 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.383219694 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.402398767 seconds)
  done (took 66.473332202 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.394350618 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.720621617 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.43073162 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.39830153 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.661443667 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.40271234 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.620693807 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.431019309 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.39389366 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.582526804 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.070413087 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.41818538 seconds)
  done (took 80.852864741 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.4013066 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.40188045 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.402494842 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.401235127 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.401795449 seconds)
  done (took 8.336797834 seconds)
done (took 2051.47188976 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.76409782 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.170455762 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.086424286 seconds)
  done (took 5.584530606 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.541978766 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.589426865 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.756309755 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.747224842 seconds)
  done (took 7.962786913 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.687401762 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.787777642 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.588071738 seconds)
  done (took 6.390546488 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.927692398 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.400556986 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.538711686 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.392343948 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.396454583 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.396371731 seconds)
  done (took 20.515788437 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.397689749 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.399788391 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.397814649 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.400065523 seconds)
  done (took 6.924345757 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.379907151 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.102112995 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.382714545 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.395644114 seconds)
  done (took 18.587862259 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.143732548 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.164677942 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.140652929 seconds)
  done (took 7.777465574 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.399671612 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.239132102 seconds)
  done (took 9.966351291 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.704565114 seconds)
  done (took 3.032224244 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.528280643 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.726095342 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.590537898 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.435931543 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.590659903 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.552954734 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.178283221 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.717176481 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.432634155 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.750658866 seconds)
  done (took 29.832856244 seconds)
done (took 130.535473761 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.453779561 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.414720578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.599121613 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.423672461 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.629332953 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.599176526 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.920591253 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.393295891 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.942332464 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.933187395 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.427085687 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.629121824 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.652287623 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.41394084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.652305767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.418389119 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.627243737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.474726646 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.157040707 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.322027289 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.92426581 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.064977303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.255797078 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.082086046 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.627599142 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.551355029 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.66287692 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.419144758 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.324601919 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.671804989 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.550344492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.409294868 seconds)
  done (took 195.957238473 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.402941767 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.397874134 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.397268501 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.394903553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.403950883 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.39678325 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.397386285 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.419551052 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.408808431 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.410140119 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.396005902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.395367771 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.405124447 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.39555913 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.396601809 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.416888741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.397175219 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.396261186 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.396436904 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.406004752 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.398172198 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.417707648 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.399680447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.410599613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.400064311 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.397126902 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.41162061 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.39769693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.396410514 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.410156235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.400059344 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.395854815 seconds)
  done (took 206.197476823 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.406233141 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.40502021 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.41208435 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.396641057 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.396947253 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.407210407 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.397227938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.410560818 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.408223451 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.398152443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.396874725 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.397496872 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.400328948 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.413924236 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.399910325 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.397615841 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.433187626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.398081139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.40651703 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.399303076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.414300773 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.398460143 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.411932019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.396649757 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.405207492 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.413980021 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.399989577 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.398767673 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.398550708 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.406797307 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.408581966 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.398363251 seconds)
  done (took 206.265358835 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.595686736 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.406374081 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.406556819 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.341118194 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.406603601 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.406265921 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.401169641 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.604712375 seconds)
  done (took 14.902514464 seconds)
done (took 624.652793718 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.835811832 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.530171952 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.610528396 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.426882148 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.253307676 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.426913768 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.4267233 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.607234229 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.39578549 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.612183721 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.73403004 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.424679903 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.88407289 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.42589115 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.689932188 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.529326102 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.308823287 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.41945678 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.758036797 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.01022536 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.697370053 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.950012433 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.608756492 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.390553429 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.883951555 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.951505148 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.187249678 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.303361295 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.427000263 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.760915956 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.220072521 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.464919448 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.492486003 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.471716596 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.529155618 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.508504127 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.422651923 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.470480426 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.615498274 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.71530788 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.011152869 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.205714948 seconds)
  done (took 95.932972398 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.397905827 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.397314827 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.398787586 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.397364402 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.400749452 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.397145445 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.395975797 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.399052508 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.397581163 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.396125947 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.397840885 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.402013211 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.397719958 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.401472504 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.398197171 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.398229045 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.397831835 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.400258703 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.397169415 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.400604585 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.398112004 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.398963226 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.398651923 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.398796719 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.398589471 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.399166533 seconds)
  done (took 37.69853527 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.411225856 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.672535401 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.844631298 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.415900482 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.410651605 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.414300681 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.496070539 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.413593193 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.413833569 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.414604603 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.571594657 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.413486513 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445740416 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.885027576 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.415992028 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.410916099 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.411505327 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.411855558 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.680523085 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420016033 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.516559336 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.415194386 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.496242996 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.423363715 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.43294948 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.412125683 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.416152903 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.935695803 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.414478656 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.573012187 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.367451273 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.493234509 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.891467998 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.858001291 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.378089627 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.412728541 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.412675096 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.576527134 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.414947425 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.412185673 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.497136989 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.416049894 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.853781846 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.05082212 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.430698178 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413799746 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.956937116 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.578053289 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.680213992 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.421084639 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.879225776 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.416839176 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.416123272 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.414811249 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.679817977 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.420333755 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.412635671 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.963377511 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.43720898 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.495484947 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.414652053 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.413727938 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.68710514 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.41415421 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.675858061 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.41584474 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.421366632 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.415417338 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.857902685 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.417444283 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.073680887 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.430452987 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.414593846 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.573495008 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.677977398 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.995270526 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.418124042 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.692583605 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.903364972 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.497987234 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.421035602 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.924182084 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.501154979 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.420389859 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.416024704 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.416125811 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.415136424 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.460224766 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.497176867 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.996256175 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.062074672 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.981925992 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.51883429 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.430119405 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.415271651 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.972612525 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.435515662 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.415657945 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.866410364 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.081302539 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.435730998 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.423712468 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.06327139 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.437513978 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.500656478 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.424030356 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.872021178 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.418596121 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.462389905 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.416580134 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.422722106 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.419188579 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.500554453 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.420830397 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.416720913 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.045921163 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.600187687 seconds)
  done (took 186.142658715 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.41020243 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.410669596 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.410801544 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.410491832 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.409801703 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.416671766 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.40958293 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.41027275 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.417049827 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.409746229 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.411216476 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.412271318 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.411036513 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.432571917 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.419438719 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.417503183 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.022955823 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.409565141 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.420947251 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.411245969 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.228920971 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.415052711 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.420054585 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.410832929 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.409903587 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.411024594 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.414595533 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.412497961 seconds)
  done (took 154.35086034 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.417253046 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.020655223 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.419188575 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.558598633 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.441909125 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.416169506 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.556343034 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.480369712 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.419732944 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.416411512 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.414712558 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.742214904 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.419757365 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.97122135 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.627914244 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.559996245 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.970199045 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.420591493 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.41640676 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.417373346 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.562728535 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.429118586 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.744259613 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.024907898 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.42026599 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.025613206 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.409515389 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.419137336 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.418859329 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.027657281 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.417342081 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.744901888 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.501154926 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.482360331 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.026659701 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.972811272 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.973631642 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.580740789 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.42106549 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.417549328 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.416311879 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.40790019 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.058266291 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.422742016 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.419977622 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.05257272 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.439727491 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.420583906 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.427526328 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.416791857 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.482587479 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.483566034 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.764364446 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.065279071 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.505286891 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.442544574 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.565240739 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.816873771 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.423737039 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.972400334 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.408849717 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.063814947 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.426020471 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.409667555 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.419005492 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.425049422 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.584072369 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.567306535 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.97674579 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.420425486 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.973885224 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.585755446 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.421918088 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.418674747 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.421829451 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.063236772 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.977448276 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.585677002 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.569382539 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.633012968 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.411087909 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.418778741 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.410742909 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.503819927 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.420662729 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.063892675 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.977498238 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.422731471 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.421702963 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.421295645 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.422566069 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.612187627 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.064752458 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.507139737 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.971056997 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.781025278 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.768349129 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.423645863 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.484136624 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.420359741 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.766916623 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.424801973 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.482437792 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.883474183 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.768137561 seconds)
  done (took 170.084979968 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.680008353 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.643504937 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.519738519 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.543078115 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.055017145 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.020738366 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.742863749 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.547985335 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.537882089 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.681301934 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.683173522 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.513807083 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.608454837 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.505068261 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.178644828 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.498901791 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.520733766 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.554498992 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.525977207 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.493276018 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.103342797 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.741481544 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.603429265 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.461560838 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.522684982 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.21006007 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.010545414 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.985215174 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.612086916 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.807213861 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.981984447 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.58354407 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.480201752 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.144169476 seconds)
  done (took 68.652724641 seconds)
done (took 714.197238686 seconds)
SAVING RESULT...
DONE!
