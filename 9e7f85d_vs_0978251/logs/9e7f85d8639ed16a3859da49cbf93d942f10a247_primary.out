cset: moving following pidspec: 28650
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.021108053 seconds)
loading group "string"... done (took 0.571972222 seconds)
loading group "linalg"... done (took 9.042117717 seconds)
loading group "parallel"... done (took 0.173279212 seconds)
loading group "find"... done (took 1.46591167 seconds)
loading group "tuple"... done (took 2.130559924 seconds)
loading group "dates"... done (took 1.399780519 seconds)
loading group "micro"... done (took 0.223167367 seconds)
loading group "io"... done (took 0.637004948 seconds)
loading group "scalar"... done (took 44.340369772 seconds)
loading group "sparse"... done (took 13.535696896 seconds)
loading group "broadcast"... done (took 1.105719907 seconds)
loading group "union"... done (took 12.908203437 seconds)
loading group "simd"... done (took 2.548518958 seconds)
loading group "random"... done (took 10.536770493 seconds)
loading group "problem"... done (took 1831.782903073 seconds)
loading group "array"... done (took 25.729133262 seconds)
loading group "misc"... done (took 1.146425631 seconds)
loading group "sort"... done (took 3.770586189 seconds)
loading group "collection"... done (took 18.941694564 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.633415605 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12171067 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.168906599 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.354444637 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.211926689 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14764064 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.166319513 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.565693088 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.980644235 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213703922 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.146228239 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.55851652 seconds)
done (took 5.990923976 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.236287239 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.43233176 seconds)
    (2/2) benchmarking "String"...
    done (took 0.115230447 seconds)
  done (took 1.198713661 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093530838 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.175013312 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096342973 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.11178865 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112375391 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111637245 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095615868 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.1117388 seconds)
  done (took 1.47292411 seconds)
done (took 3.664033018 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.488299599 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.834672134 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.560541153 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.127802855 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.155960446 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.148274529 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.31442359 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.159591782 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.119610641 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088873604 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172881758 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.376281283 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.486264 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.967716644 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.08559839 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.12863576 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.084317137 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.712848932 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081799053 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.138939478 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.537601227 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.124867159 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120361877 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142061181 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.19324241 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132606196 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.166187556 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.095087402 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.679024018 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103384653 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.189829394 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100578993 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161920268 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.248938989 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096930312 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.098241204 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68236957 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.180092582 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114865422 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102354113 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679124733 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083021332 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.203564059 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109343907 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.1108917 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.189293121 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114955633 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080724402 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103924956 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.09170169 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156150926 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.470670582 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105830451 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.147275449 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108168665 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.690222014 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098795912 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.157655388 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140500742 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.105384218 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.103258225 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.105597249 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155657614 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.107561677 seconds)
  done (took 19.676326683 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11728338 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141871587 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094609161 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141325961 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140942246 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097896722 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.0845748 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0951138 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.111766141 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.187832764 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139392072 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.14550734 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092775278 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084151602 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118703087 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250593817 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107881516 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122584079 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083425946 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106931205 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142578222 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097698177 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110028248 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110058337 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170454207 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206307891 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110740636 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123765474 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094646082 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100151012 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143022914 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.162851274 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077570811 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.096304745 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.186363076 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122168208 seconds)
  done (took 5.190823204 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.204681373 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117382708 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.195654151 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.182691372 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150062012 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.170315862 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120657397 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.271394572 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.198269752 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180017629 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116639637 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114121381 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079924784 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099063038 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078660319 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.700616799 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182182613 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153221278 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.128353677 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104747671 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084026281 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.385070238 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101545437 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083280554 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103913626 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.073458272 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.179135341 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104409919 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.313531053 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118614845 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089842742 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137662389 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216919867 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134164788 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126400947 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104893124 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082390812 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.238569336 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110270327 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080711945 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127890722 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134336292 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118798088 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101601894 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112512721 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.228304054 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.101469035 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121547297 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.07403881 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.202358983 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.150487009 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.081347472 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.377097203 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099538269 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104643608 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083424659 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.290795935 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13276299 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100050814 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080269537 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103349619 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080171072 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.770453545 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110161846 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.929033801 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096905715 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159575008 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100947019 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10734663 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087722353 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103676007 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103701151 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098418833 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080597995 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098194455 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080497332 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102822276 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115539524 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08736737 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096403592 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148224182 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.134176395 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.101273234 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120013687 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125815186 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087237616 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09623061 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11614797 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099363064 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083571491 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.147911105 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.100105545 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088170168 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117901942 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102566494 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145592926 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085979148 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097585601 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.21263683 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082972623 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125305626 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100406463 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114839382 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.122510942 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098707145 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085569921 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100848951 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078973283 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098569824 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149510401 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096974381 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082232018 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101801265 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096378867 seconds)
  done (took 24.306552836 seconds)
done (took 49.830220518 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.483360824 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.099097365 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.11683707 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.117467744 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.115293632 seconds)
  done (took 1.661012398 seconds)
done (took 2.366349288 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.345673724 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198803607 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104822548 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.204305865 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089649031 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.211532205 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.172493623 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.119481074 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.203936478 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.10190365 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182594408 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101251821 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090289854 seconds)
  done (took 2.852812892 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094971699 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119506477 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082643974 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110283089 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076865207 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110182828 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093191476 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.135717952 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09292817 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102510749 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076515762 seconds)
  done (took 1.795786967 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091700471 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114549691 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082324294 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107388137 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077082098 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090344912 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107663471 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116447763 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092244678 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103162901 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076815225 seconds)
  done (took 1.761861953 seconds)
done (took 7.102195566 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.068225386 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.487466577 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11992397 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.168437956 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.350890851 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.213574632 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.527660247 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134537543 seconds)
  done (took 11.958770941 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.133488175 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098329081 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084282811 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101963201 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084762143 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102881647 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083564021 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100100147 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08458713 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100125314 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081873716 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097204453 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08275631 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096492431 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081826442 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096314013 seconds)
  done (took 2.278560581 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121426154 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11955853 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10563006 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110341157 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086157708 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103644121 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088673627 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.103389108 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084801893 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101833952 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107869827 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092041416 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106174519 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.085002678 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103646543 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093550375 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100863134 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103903919 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089497891 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104553284 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092149221 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.10226405 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105902069 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091765927 seconds)
  done (took 3.223055433 seconds)
done (took 18.163216598 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171740805 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086567618 seconds)
  done (took 0.968900259 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.10137742 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.122251616 seconds)
  done (took 0.939486882 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107213451 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098349424 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137413582 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116336442 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083726299 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098715256 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116464142 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099983379 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083346382 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.100360389 seconds)
  done (took 1.756906078 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084604529 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102908546 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091820916 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.120689608 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111164263 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.085336322 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104399287 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087316849 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105663004 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081733634 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106665321 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118424684 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.090010263 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120488247 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088454818 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106403687 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109372455 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.087264606 seconds)
  done (took 2.519387896 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081893279 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084823979 seconds)
  done (took 0.88466614 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084015771 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097095136 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086015579 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100674153 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081371387 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.097319062 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082076648 seconds)
  done (took 1.346900615 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.517305783 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.264471219 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.345006199 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100704057 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.154752809 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.37628394 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.138253286 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.115088558 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.114348617 seconds)
  done (took 2.887065951 seconds)
done (took 12.021969032 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092599744 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.192282913 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.556754336 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.119794412 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.080953222 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159447519 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.26744612 seconds)
done (took 2.187661791 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352737592 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.126842682 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089610557 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081565278 seconds)
  done (took 1.365402341 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080041069 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103995925 seconds)
  done (took 0.903949866 seconds)
done (took 2.994827569 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079840704 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079861351 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.115535272 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095935774 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080110884 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095934079 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078088561 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07997486 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098272645 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080431322 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095986797 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08070231 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096368928 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078203714 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09295308 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080236936 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078455941 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094635468 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07813484 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094861508 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080572458 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096415141 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079086031 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.191645445 seconds)
  done (took 2.973869581 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100235219 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097289066 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.086650155 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.10377761 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.085182997 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104091853 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.1036008 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.08129811 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.103916631 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084006017 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10134057 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085291664 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099034827 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085436812 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100751802 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101298067 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087593266 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098274797 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083456302 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102018815 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087243613 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098200068 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.085583972 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102739819 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101908318 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085774512 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100531402 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082300351 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105199498 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086313578 seconds)
  done (took 3.553068981 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088262304 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077258813 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096383261 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.090671348 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.096116425 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082067991 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.094895286 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078702659 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09683248 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078886182 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.096908386 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.07900393 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094503404 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079857132 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080372893 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101921239 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113532278 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078615082 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077647715 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095967286 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084545739 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095446292 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081560087 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.095499292 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078750302 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.095092006 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079214236 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078405872 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096935611 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078672729 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100657992 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08572196 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094822469 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.092336393 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102500919 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078748247 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.104562106 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079060758 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097190092 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079285154 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.095540226 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07932404 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078732962 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107118462 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081674119 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095960474 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079276282 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096913094 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079692 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099911273 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078433303 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095080523 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081811191 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097188684 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085416682 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.0785436 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097663623 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078862809 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097093137 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079161049 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095969491 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07949088 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.102380855 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079955214 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.1198012 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09129982 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095301007 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080739034 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099454878 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087438843 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097343071 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098685241 seconds)
  done (took 7.175598677 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082525835 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107428973 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081469632 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097452591 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077042061 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079287468 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103633544 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095866175 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081850147 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115354456 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080623723 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097687341 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081988246 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100093411 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080401536 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09760407 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091353103 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094605653 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080105858 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100043248 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080390005 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105039485 seconds)
  done (took 2.744607125 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.225650972 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106393744 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146247843 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116567852 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100308955 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114923242 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102858744 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088943069 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103526183 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090723591 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106539233 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086744622 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116748648 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106664241 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090105885 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108887538 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103229873 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091006075 seconds)
  done (took 2.735677485 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094386944 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099387647 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108245856 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099560242 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082761655 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102182513 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089731469 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115809715 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.101676387 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.083376407 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110110374 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085365784 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101635138 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083202705 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102110315 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082981723 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101362534 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082890164 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110653052 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106945593 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089551745 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110622548 seconds)
  done (took 2.875751816 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097648236 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102276366 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114101583 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102672589 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078662791 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099367468 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090160755 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099844369 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108418724 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084734077 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100034365 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081700537 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107653633 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083532526 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106040584 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083505087 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102413223 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083467564 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102465911 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078802534 seconds)
  done (took 2.643765643 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125533914 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117134855 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100204827 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128462256 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117999381 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100123779 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127399072 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116454377 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102245158 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130923424 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099506329 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117414727 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128791615 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107347296 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117141896 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128504911 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111557564 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129400037 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116722267 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10033501 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129998978 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117210244 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111391136 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117081758 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101170605 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119119417 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117097319 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10784791 seconds)
  done (took 3.980795327 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081772446 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083019872 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.097288059 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.080142051 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096891582 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079922112 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.097644085 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080547095 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082660905 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097626789 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082310715 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099097889 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082257357 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099427196 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083051185 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099729784 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083779171 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.08072581 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097357861 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080682392 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.100039782 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083218067 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099823854 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08120528 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080079579 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100465121 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080353443 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097973083 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083345276 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097342844 seconds)
  done (took 3.407484339 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094408955 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10777945 seconds)
  done (took 0.938814658 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080677895 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118195932 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081477732 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10502658 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090702283 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101657204 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094834832 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107004961 seconds)
  done (took 1.51412199 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.109024087 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.121922569 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090552597 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114277814 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.104523253 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.120921899 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170412066 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090598749 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109132642 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085445628 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.123837357 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084398383 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113018169 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106697035 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093525227 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117179463 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.08330257 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.112395832 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.093005824 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.104071949 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091712203 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118688244 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096314965 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.109701449 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086886008 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114414166 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116062227 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.097214806 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107461142 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.097497176 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.109085217 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078783366 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.107319726 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.091271925 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099754117 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.104976556 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120673731 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090175339 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112821444 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090268913 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113571511 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096852216 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.096327987 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109388273 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099440201 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10801057 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091234163 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097333827 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085591087 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.105621227 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.080531546 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104911781 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079296107 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111606063 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.095081665 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121621945 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087230953 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107595935 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090265609 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105605659 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093012393 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106422062 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113515266 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.089006532 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112911184 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094464736 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110466944 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080110078 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095180207 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083226604 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111321721 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111414149 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114990617 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.091221029 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108505206 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082530205 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10818412 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091552886 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110254086 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113451826 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.089915953 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110028833 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096208237 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105649218 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090240589 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.11016411 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.088312361 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105549467 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085904076 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123287102 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087744333 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.10002595 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085840123 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113697099 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089259666 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105782211 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08750483 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111496482 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07846656 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.107904738 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091311016 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108884552 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098258631 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108625081 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108301471 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094440576 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.114729132 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090638945 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105834368 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.085411813 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109401436 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087618153 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.111108838 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078964248 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108111089 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089566477 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.107770779 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.096377456 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.105244089 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.090565473 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114251392 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.097926167 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.104619495 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.08128073 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107273048 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090475549 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112715494 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097665651 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104967844 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.08027099 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097701824 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094815236 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.106873604 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092916037 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108775324 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091049269 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097650037 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082956667 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107769161 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096679557 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.106638374 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.109770424 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09608471 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.110763834 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089416134 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113263916 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08883389 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103195857 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.096237418 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10865253 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081768932 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112558952 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.09063778 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.105686223 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.09128668 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112354346 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090786038 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108450108 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087814543 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108447171 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091938116 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103284633 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091845498 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.106112653 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.106424292 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.108667542 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08086536 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100652123 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091793556 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.104529353 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090239617 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10334598 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091080468 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10921494 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.084487232 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.107029369 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089940511 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120602601 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099468817 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110672668 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111545493 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.098144583 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.107271491 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094105191 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.106977485 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093133469 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.109498911 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096294368 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.11165911 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092515016 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107582748 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083083595 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110744984 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097913887 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104283746 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08454415 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104105063 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090868222 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.115661174 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090842288 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110113722 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088667473 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110708057 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096500975 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108930491 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.090937084 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10355295 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090871073 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.113285933 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.094886076 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110496035 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099550973 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109541563 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08201659 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113054256 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088239679 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112467984 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081669241 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.104164675 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087685666 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.1102494 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089903865 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108043425 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.08064095 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114128571 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098126202 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109360316 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086663539 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10887138 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118204947 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090319964 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112494905 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092137152 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111304957 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105446589 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.104081881 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091051589 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116237546 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091859844 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097847601 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094326419 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.106367907 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086176333 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.106695818 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08865287 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110228693 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09427061 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109989215 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080732122 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10861482 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.089664702 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.104341476 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082524711 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.114920409 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092698197 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109702559 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100759685 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110949702 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.092320344 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111708507 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.090639573 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.110881574 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.092190586 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111123799 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.111107144 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089757956 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086147859 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.110104595 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085564871 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102588393 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089584914 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.110689258 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091769935 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112048518 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089570011 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115105887 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.108941428 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.09353906 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.127933863 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105791943 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087076441 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109826212 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093961903 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108551334 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090907432 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100155177 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097539994 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.109154475 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098471247 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109153594 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083280536 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108585349 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090907354 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11047272 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.093261933 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.110732658 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090773905 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.108804422 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092254609 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118680231 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08848818 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116320007 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093865654 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112116269 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092196987 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.110908563 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09042623 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105350941 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091898603 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.112127887 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093376223 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.109745554 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093896492 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.110675099 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.108453131 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091021385 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110605279 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093238591 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.111796616 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.081562908 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086957376 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106835655 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.091870388 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115621296 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.110822763 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090620992 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.089399939 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112117328 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.089837028 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.10244766 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096698436 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112747343 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.093107631 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120639456 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105435572 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092191641 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11995897 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081914912 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.106303867 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086228495 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.106336824 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098699573 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.110784431 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099091022 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.110542592 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087909973 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101978514 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.093894122 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.107109657 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081836256 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10231722 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096232739 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.107007549 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090951664 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.110613491 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095857722 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111169984 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096545102 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.108087546 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092802056 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.110890464 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084384056 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105708838 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088343301 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.10953882 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.094191096 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.105706799 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084974335 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.091813322 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.11154793 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.11008516 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.092073438 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090301824 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116635451 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109241564 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093138748 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115172663 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082766087 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109372199 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0920352 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.109561616 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088159417 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112356827 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094459097 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112128775 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097763335 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.109876236 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095697376 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110478668 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086015719 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.109997555 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.092965989 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.110774525 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088816086 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.112425864 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09974292 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.104301895 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093103157 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111007501 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08997689 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112058279 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.094326466 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111394007 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096736412 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.111675138 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093171004 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113968665 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.093342836 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113244409 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094095753 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.109543011 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096728598 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107082279 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117013641 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094657656 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.111525701 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091907663 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.106940848 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092256092 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.109632431 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092260993 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.116713947 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.094761065 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105863513 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088421271 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085648855 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.111049166 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115407357 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100483323 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.111023002 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094080676 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101536212 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.085508317 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111967199 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089279209 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.109215955 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096790258 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115264808 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093541271 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107673201 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.091600365 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.116560281 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098502312 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.11367757 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089665105 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113358823 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.094135834 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.111943086 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091195895 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.110814584 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094493922 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112984382 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091449952 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107439651 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120953769 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09927467 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112263554 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092404249 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.113836315 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093754839 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.102252122 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.095249225 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110930327 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096827621 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.112126586 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092975663 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121901283 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088330979 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.110900035 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098105762 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110858003 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116384934 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.085442513 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094017976 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114597692 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112860479 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084489164 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089238294 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109606505 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093212151 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108067649 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.08431818 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123290447 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116293511 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094481066 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110151877 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09231455 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101007174 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.084790347 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088155725 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115229086 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092061453 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.121723231 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106282705 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089446121 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.083539505 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112491647 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093909787 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.115310894 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084937213 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103588989 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088991779 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111934282 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119097091 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092656544 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.112465641 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09544553 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.111135036 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.087609082 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116515711 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086424957 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112839235 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10687874 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.11292725 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096266113 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115380504 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100222842 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.113186258 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.084621547 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.113308574 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094010875 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.11369452 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.095163943 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.116456109 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12868804 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096208326 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.108517781 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.093300648 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.112662609 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090348143 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120212258 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096263419 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.11354368 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097255379 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110590522 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097084078 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119999578 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096097507 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.114002401 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093581577 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.111003936 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093102954 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.110734136 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091946361 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.114998954 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.094495904 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113579667 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096872599 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.10839425 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122967266 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.101580703 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.114042931 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086407247 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.107750918 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090503743 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.084525404 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.115141211 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087582815 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.111916995 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09182188 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.110827928 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096235358 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115570632 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093326834 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.115932617 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.093048873 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.103824535 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098294281 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.113480853 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096557102 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10538896 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.094935491 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.116323018 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117569506 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100506471 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.110207103 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095358936 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111669061 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097739392 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103986631 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098707637 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111697896 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094040657 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.107470029 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095425284 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.114295923 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097313677 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113643589 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097164817 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.112755151 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099376704 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115566937 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08717665 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104478211 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097985458 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10632264 seconds)
  done (took 61.262088876 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150560354 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089929701 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102956942 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085232988 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13201646 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086285976 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103564972 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087124252 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10512276 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.099850889 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104960539 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084855794 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126903693 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133128098 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129730983 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118329043 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085407456 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104286889 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085988294 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105056903 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107591542 seconds)
  done (took 3.014952337 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106880404 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11947622 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121886606 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108031133 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115343153 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123216864 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102395602 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124933347 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.127010925 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116649789 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108721473 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123585646 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.116873358 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.09899262 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117893147 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118813914 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108663677 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115821834 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.124541281 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103080372 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120875708 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121394168 seconds)
  done (took 3.330012917 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093707271 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.089019335 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.118506525 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.087011662 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.113075584 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.088383089 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.117801734 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.089822697 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.117958567 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094211961 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110282023 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094563733 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.117842859 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.088195426 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.110961134 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.090204953 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.117474461 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.0945501 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.114532552 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.088618625 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.134163124 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.106453716 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.089630986 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091122033 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.123963502 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.094403017 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.113795049 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.093271649 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.110053989 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.094017844 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.108964543 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.096890488 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11729062 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.092401709 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110339857 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.093950004 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.113684648 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.08918897 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.110317664 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09785224 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.107568909 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.095834251 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.119943846 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.091198999 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.109797966 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09659578 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.11318239 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.089297911 seconds)
  done (took 5.728590272 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.124140813 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166790831 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.098438356 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.168585423 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126530438 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117917149 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092800252 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.154339416 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.111719585 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.094480789 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.131884098 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.130151168 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.096302421 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.12490018 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099534674 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116518845 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.116933769 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106420071 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125105406 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089013782 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11598203 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111757218 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107794249 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.125957507 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118182265 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094781749 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.113758134 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105385083 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.126567498 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12055552 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.100911156 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.124883707 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.141324652 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093517744 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111760692 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112766751 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111535151 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.115188292 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09800104 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.11334413 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.116462324 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107367293 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.118052662 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131153356 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096555107 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.115744556 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.099083743 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.123419018 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127643753 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.094983134 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117908908 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126871661 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099888326 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.114807682 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101162929 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134902325 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.115436574 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.094109251 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.118785548 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.126066795 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095287639 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.131446347 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11241299 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111945286 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116379989 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104245573 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112273409 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111495548 seconds)
  done (took 8.772204849 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097111408 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.131434895 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124734226 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10762246 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113579878 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112203408 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094394854 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112203842 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095078367 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119516364 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11237589 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.162449449 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088397781 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123013294 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098598362 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120022795 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118543696 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100708257 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.116640845 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096527137 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.117045014 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127970846 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097822509 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12485123 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125538991 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105546341 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095387548 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112429342 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105920655 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113795173 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125834715 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112551882 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097444479 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126697295 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130991598 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.098708842 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105292462 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09662867 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.114490168 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112825229 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090126046 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124305725 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096292876 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110542371 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11507209 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101448355 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132363688 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.133588667 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126251655 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109013579 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120733758 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132151108 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102075409 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12026953 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131826956 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13943197 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113093018 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131398082 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119986745 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112897642 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134474851 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.139226712 seconds)
  done (took 7.925465362 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08695124 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08604404 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102188571 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083580535 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103852438 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084512928 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103988814 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087236772 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086648353 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.10639456 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085543849 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101722574 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083492226 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103254183 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084157527 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103491857 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08785076 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088401861 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109660227 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086550597 seconds)
  done (took 2.66642365 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095681339 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125000734 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08849458 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113366298 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088616435 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113658728 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105895716 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090374885 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105636092 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089941164 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117300482 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098772947 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107866377 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112492253 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099758854 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112834954 seconds)
  done (took 2.471058854 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.108136338 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118903447 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.130930924 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.093342434 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104959457 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.095611772 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105651599 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.082488342 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100871106 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.095106219 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111659312 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.097693237 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104978989 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085801172 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105308074 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092885204 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101071859 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.090839531 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105593501 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112210643 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.110490126 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107319131 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088223674 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107136838 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.08955092 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.110558026 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.093807372 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104382473 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08498269 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10546695 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089356211 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114126317 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082475627 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.110415046 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084573083 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.102422454 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087766134 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109969076 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.092811841 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107273687 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084045808 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108991707 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086444707 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108093244 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082070655 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107525931 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081755982 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113586794 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.088080566 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108818586 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104631656 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.096054273 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.11207422 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099697486 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115631578 seconds)
  done (took 6.327760508 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102050968 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109630378 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091922496 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102579651 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091214617 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113692319 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091257346 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107622611 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088698501 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.103284638 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089619635 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110241229 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089422179 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109779588 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08981113 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109877949 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081966276 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107290065 seconds)
  done (took 2.594895048 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093599187 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105228162 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094935605 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.1055949 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087622282 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088154654 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103102519 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085534131 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105078897 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086643808 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106263397 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089350021 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10396177 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089168545 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10586667 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087733014 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10757287 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085243855 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106109086 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083547539 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107349769 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086341469 seconds)
  done (took 2.920752938 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105375787 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.139976244 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106656638 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.159288363 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.119202108 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098045234 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.123590379 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.093158758 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.1300832 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.109595077 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09148807 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109920661 seconds)
  done (took 2.197418178 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113540947 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145041497 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085740194 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109246953 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119609667 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093501153 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110964101 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092966129 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124030953 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124776521 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09211293 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125382114 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123884512 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123592415 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102617002 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12322595 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119464967 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10012375 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115028844 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141951635 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099869774 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132375041 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117723823 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095683162 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111930434 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122412335 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105690585 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12579993 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112164099 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107085042 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120488355 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111766275 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108112244 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127125212 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110214106 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128417562 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098435543 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138897931 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126806102 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109280944 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110293922 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119887557 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105976452 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119423993 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124160584 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094335533 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118814197 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111242277 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093547526 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14052847 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122055188 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123301809 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100700174 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125151409 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124414823 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144358078 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129050747 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128201069 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103537401 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130301767 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123319483 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120348247 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103785327 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125422676 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119314628 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124566239 seconds)
  done (took 8.493244868 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128650416 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106465722 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09236939 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127391711 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123829149 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11243539 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096424624 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119546613 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100339149 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114018384 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162259691 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112715966 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106262729 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130071604 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119607742 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100580092 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120275532 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131310921 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097791729 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144259747 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11740128 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126142918 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104990582 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12419568 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126107206 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120791361 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094346021 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111780594 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095578425 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11487546 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120365344 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093912307 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124207917 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10476141 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10471456 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112177615 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092722637 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121220763 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11173566 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100847983 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124242699 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134519551 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112620007 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094908202 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125827269 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111651696 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094474956 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108946501 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093161581 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109743457 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1254731 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126637381 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106591121 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123774563 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111763932 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09351589 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1127445 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111819098 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094439159 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120560684 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12285323 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094505324 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141246477 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112849254 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094172432 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123868968 seconds)
  done (took 8.310970066 seconds)
done (took 161.276880805 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.107078752 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143844193 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.105484986 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171062643 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088195977 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142406381 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121476169 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.123955382 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087510613 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.10828503 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088224866 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110717061 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15384185 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108320252 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088443209 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110097224 seconds)
  done (took 2.673226273 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.18407509 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.288886825 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109941439 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112975436 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094831111 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110485335 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091730292 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114919586 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089181718 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.121596542 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109014235 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091759613 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.120833667 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091998211 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109560304 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090952479 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.121041747 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09027597 seconds)
  done (took 2.964271209 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114383752 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.160194646 seconds)
  done (took 1.100872414 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126102569 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187355596 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30609965 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165007383 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118491273 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131324701 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.166106779 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127364694 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195531291 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130505794 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110731764 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.115979017 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138381897 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101221401 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118530567 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094784909 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142491534 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115627786 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09881748 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115284189 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116777916 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.116224226 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.118330965 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098014337 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185199986 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129774599 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.095133499 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117304828 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115641546 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097239325 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.120135377 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129144384 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.10956938 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.191054607 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100547575 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.185935244 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10385021 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114715538 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096518913 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.115090003 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118250231 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099014585 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130332913 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094051841 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.116889404 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122770664 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.09701302 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115565156 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102101349 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125524178 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122952619 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.101365533 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.185378876 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.104121602 seconds)
  done (took 7.717203525 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.840174884 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159161789 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11477815 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.938019229 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145429436 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128605321 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.832139071 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116138033 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.266310666 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.060442502 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132887469 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127857436 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233713406 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260293196 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.152390553 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.341026507 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.712716131 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128111737 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123382569 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157476496 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121784221 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144010285 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11490488 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.448428014 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116653713 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093715399 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120303963 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126935621 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167895614 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092331411 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118816916 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188352385 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291602447 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186394953 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114911386 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091578595 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11316358 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.173518674 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272208482 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219313562 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179246674 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089816193 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112191271 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10633428 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134724503 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088896555 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.190693684 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179590037 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.17924578 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119021983 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126008704 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102993536 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125437706 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168495838 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112022554 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.337373769 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.343414772 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093318472 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122499338 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111602977 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268548281 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113771153 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208577199 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14160012 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217982466 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091318435 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788301571 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171729956 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113646185 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122161519 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101414754 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118745866 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104669719 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175244422 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388594202 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130137081 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117433772 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092857324 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229904187 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093025075 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112966651 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171785378 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093524089 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123558797 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129392436 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12474682 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.179631632 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252228112 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127750977 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100597927 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118945154 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125513517 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097838596 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.219886651 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22106885 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.182928597 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.223680229 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124903442 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.172622338 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172883806 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124973518 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17732964 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120360879 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11270531 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126907533 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218346742 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147294882 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.093200417 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118154865 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119368043 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150291288 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097122362 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120213564 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.176217205 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.471856904 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.192067044 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089612699 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117495966 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101840886 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168954857 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121141071 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265190788 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101748709 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.193843307 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10075167 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110847293 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101051014 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.190900882 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106443764 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122196951 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126358534 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100713828 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.275705236 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.202746281 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129386686 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239278441 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182822771 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.102886043 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199326891 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101601266 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195108835 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104737568 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125068563 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0940587 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781801215 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127033819 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100596251 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119825596 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199678583 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112136559 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095873147 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091336361 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111821995 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813390563 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097327679 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.109160896 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095715034 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12161333 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101642122 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119566038 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102650675 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18988891 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23613518 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106454207 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122327366 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092639516 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.189424719 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095501233 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113989489 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093588539 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113795263 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103109745 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118479763 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094990702 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.199225333 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166412072 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.224333386 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.531291642 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113922361 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093992135 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23430476 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113354288 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287922142 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121426468 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228735312 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173950987 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.111171318 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.339849059 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.175765287 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.200423684 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096343676 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196744399 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090951091 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119477155 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168970195 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092823332 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121105544 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163343711 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131349391 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12848653 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.137379508 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113769968 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235651489 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110897985 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.176311272 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115036349 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107013041 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.311541587 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113209383 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114304954 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187573382 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098955882 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.113466766 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.79189834 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114243269 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104668744 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12431632 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227649925 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.173247936 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121281378 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102220876 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127531343 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.168865923 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.236810705 seconds)
  done (took 45.479588379 seconds)
done (took 60.753045878 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309467345 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273994479 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.311193589 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.202257277 seconds)
  done (took 2.02152711 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.183955897 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157785203 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.130300701 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.112811733 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.159906929 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09221623 seconds)
  done (took 1.689831389 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.488428347 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.380414306 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.347116853 seconds)
  done (took 2.070451841 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.270222762 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.290624257 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.363941052 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.454187323 seconds)
  done (took 2.334797051 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210957949 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129263741 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.104621458 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.144030495 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.177316128 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.180800387 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149368505 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.158671561 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.133427217 seconds)
  done (took 2.286958333 seconds)
done (took 11.253839472 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.235782164 seconds)
    (2/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.288638346 seconds)
    (3/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.226476329 seconds)
    (4/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.191567092 seconds)
    (5/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.155964571 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.16321533 seconds)
    (7/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.24106202 seconds)
    (8/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.262975869 seconds)
    (9/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.143367364 seconds)
    (10/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.09770438 seconds)
    (11/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.213303725 seconds)
    (12/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.232370324 seconds)
    (13/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.133691047 seconds)
    (14/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.213026166 seconds)
    (15/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.16614182 seconds)
    (16/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.234459536 seconds)
    (17/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.087191003 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.150362206 seconds)
    (19/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.240803743 seconds)
    (20/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.102868973 seconds)
    (21/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.209353512 seconds)
    (22/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.21357956 seconds)
    (23/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.171636236 seconds)
    (24/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.203304472 seconds)
    (25/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.226077032 seconds)
    (26/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.19778979 seconds)
    (27/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.172451998 seconds)
    (28/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120875215 seconds)
    (29/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.301032034 seconds)
    (30/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.121074918 seconds)
    (31/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.099711247 seconds)
    (32/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111765921 seconds)
    (33/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.185463915 seconds)
    (34/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118379086 seconds)
    (35/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.098652227 seconds)
    (36/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.13219353 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.147535345 seconds)
    (38/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.079182954 seconds)
    (39/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128622115 seconds)
    (40/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.203279962 seconds)
    (41/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.14294773 seconds)
    (42/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.223625807 seconds)
    (43/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.17604657 seconds)
    (44/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.244511517 seconds)
    (45/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.160026266 seconds)
    (46/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.146099148 seconds)
    (47/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.131297959 seconds)
    (48/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.082261074 seconds)
    (49/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.127094338 seconds)
    (50/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.184517724 seconds)
    (51/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.106907961 seconds)
    (52/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.114205735 seconds)
    (53/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.124685745 seconds)
    (54/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.110728126 seconds)
    (55/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095371232 seconds)
    (56/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.140785334 seconds)
    (57/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.079721422 seconds)
    (58/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.170841837 seconds)
    (59/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118875358 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.126673414 seconds)
    (61/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.191686213 seconds)
    (62/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.118926944 seconds)
    (63/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095980805 seconds)
    (64/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115654537 seconds)
    (65/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.132204375 seconds)
    (66/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130351744 seconds)
    (67/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078905159 seconds)
    (68/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.207153397 seconds)
    (69/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.20349231 seconds)
    (70/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108378778 seconds)
    (71/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.145024969 seconds)
    (72/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.206463358 seconds)
    (73/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.203013305 seconds)
    (74/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.123625214 seconds)
    (75/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.202237914 seconds)
    (76/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.235321735 seconds)
    (77/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.083754765 seconds)
    (78/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18324684 seconds)
    (79/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.205059079 seconds)
    (80/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.079620175 seconds)
    (81/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118968238 seconds)
    (82/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.191796645 seconds)
    (83/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09939733 seconds)
    (84/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.107494264 seconds)
    (85/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.1062717 seconds)
    (86/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.166332351 seconds)
    (87/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079916334 seconds)
    (88/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.100164628 seconds)
    (89/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092390902 seconds)
    (90/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.098981452 seconds)
    (91/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096948332 seconds)
    (92/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.223885751 seconds)
    (93/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.099829418 seconds)
    (94/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081028376 seconds)
    (95/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.120253384 seconds)
    (96/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.10560395 seconds)
    (97/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.10788634 seconds)
    (98/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095133879 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118538234 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.105516802 seconds)
    (101/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.148643715 seconds)
    (102/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.130631048 seconds)
    (103/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.186809807 seconds)
    (104/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117498567 seconds)
    (105/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.095886995 seconds)
    (106/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.132520478 seconds)
    (107/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09147682 seconds)
    (108/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.134206029 seconds)
    (109/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11618776 seconds)
    (110/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.116442427 seconds)
    (111/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.129786818 seconds)
    (112/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.08070226 seconds)
    (113/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.101762109 seconds)
    (114/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.20414005 seconds)
    (115/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.165123266 seconds)
    (116/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.101359054 seconds)
    (117/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.080779898 seconds)
    (118/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129075357 seconds)
    (119/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098918613 seconds)
    (120/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.174407648 seconds)
    (121/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117260782 seconds)
    (122/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098841233 seconds)
    (123/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109881749 seconds)
    (124/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.081731248 seconds)
    (125/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.209136149 seconds)
    (126/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.194833275 seconds)
    (127/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.099556254 seconds)
    (128/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.143100151 seconds)
    (129/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080617825 seconds)
    (130/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.208323953 seconds)
    (131/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.122109345 seconds)
    (132/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.079766675 seconds)
    (133/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134799374 seconds)
    (134/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.080296819 seconds)
    (135/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.203305498 seconds)
    (136/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.131987283 seconds)
    (137/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.080253398 seconds)
    (138/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116020984 seconds)
    (139/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080933967 seconds)
    (140/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.079705736 seconds)
    (141/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.102873944 seconds)
    (142/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.147729169 seconds)
    (143/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.128068171 seconds)
    (144/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118103559 seconds)
    (145/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.079408273 seconds)
    (146/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.160232289 seconds)
    (147/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.156811749 seconds)
    (148/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.08079093 seconds)
    (149/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119331958 seconds)
    (150/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.080115791 seconds)
    (151/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116048583 seconds)
    (152/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100179878 seconds)
    (153/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.120037953 seconds)
    (154/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.138556478 seconds)
    (155/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.101559148 seconds)
    (156/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097962102 seconds)
    (157/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120283148 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.10901067 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.129371884 seconds)
    (160/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.111517356 seconds)
    (161/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.080594254 seconds)
    (162/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.080375765 seconds)
    (163/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.101692566 seconds)
    (164/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.145400896 seconds)
    (165/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09725614 seconds)
    (166/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.198567228 seconds)
    (167/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.134883515 seconds)
    (168/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092998814 seconds)
    (169/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193291557 seconds)
    (170/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.121872118 seconds)
    (171/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.149667987 seconds)
    (172/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109802275 seconds)
    (173/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.096532509 seconds)
    (174/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080024495 seconds)
    (175/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.140919673 seconds)
    (176/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.087721491 seconds)
    (177/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.101937039 seconds)
    (178/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.079663485 seconds)
    (179/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.103005586 seconds)
    (180/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.124236623 seconds)
    (181/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.107028567 seconds)
    (182/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080179922 seconds)
    (183/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.139237005 seconds)
    (184/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.159147673 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100292185 seconds)
    (186/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.10082568 seconds)
    (187/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.119912227 seconds)
    (188/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.101349209 seconds)
    (189/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.080531836 seconds)
    (190/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.196406541 seconds)
    (191/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.079822969 seconds)
    (192/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128214727 seconds)
    (193/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.088613552 seconds)
    (194/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.130500343 seconds)
    (195/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.151538405 seconds)
    (196/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.096105685 seconds)
    (197/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.079648218 seconds)
    (198/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.117351435 seconds)
    (199/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.165006167 seconds)
    (200/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083264825 seconds)
    (201/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079972219 seconds)
    (202/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117762912 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.1211429 seconds)
    (204/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.107485259 seconds)
    (205/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.100394365 seconds)
    (206/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10080302 seconds)
    (207/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.113845861 seconds)
    (208/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096270275 seconds)
    (209/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.119943646 seconds)
    (210/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.080588128 seconds)
    (211/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.087873817 seconds)
    (212/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121035604 seconds)
    (213/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.088127034 seconds)
    (214/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.102075297 seconds)
    (215/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.095766691 seconds)
    (216/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.128503563 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.098540153 seconds)
    (218/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114912117 seconds)
    (219/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120465 seconds)
    (220/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.151269081 seconds)
    (221/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.102678194 seconds)
    (222/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081389105 seconds)
    (223/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.147722757 seconds)
    (224/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.08370303 seconds)
  done (took 30.947920608 seconds)
done (took 31.804332161 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.405574629 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132745216 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125848 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.104257092 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14566652 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.109818158 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.126489533 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.108581479 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124712894 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093603574 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.116952486 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125154987 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.104787073 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.144057172 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.105807855 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.118144442 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.095798504 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.1265845 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.103453773 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127866805 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144817412 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097132745 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.123793369 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096391522 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145345143 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096717169 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.126455078 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10462648 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123962108 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094436462 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127395329 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117660855 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105808057 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.129008507 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094977154 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.117759117 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09559382 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.108766412 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.096574486 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.118892086 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103159837 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.117615423 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.105927623 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.118527625 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098356054 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116656162 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09418458 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128437953 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093955791 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.127437907 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096320151 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.130889008 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115499509 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094676757 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.115121238 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.096954828 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125823399 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09542881 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126674111 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095463362 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.117530459 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095171845 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.12058885 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095291368 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.118209524 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096944365 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118021599 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098398197 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.115246752 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097743265 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11505753 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097263243 seconds)
done (took 9.291173119 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100794855 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.173589548 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.148301293 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.1269148 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.146925313 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.133035919 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.108197225 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.141720261 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.126374363 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1189378 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144847538 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.138072882 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.132847032 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.124468785 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.132076078 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099228693 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.124197907 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107835765 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.15209419 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.141194483 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149599989 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.102869404 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146331757 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138969949 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.10253819 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.143586928 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.103349575 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.121771505 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.101613978 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.141310762 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.140680085 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.102538144 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.124502448 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115572021 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.131733115 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122217551 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111681028 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121080298 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.100539919 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.121362516 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.134079991 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.115170386 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122140488 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110821445 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12050344 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.103624254 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.124332441 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123084544 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104539261 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119328586 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.120038214 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.144787878 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.122989974 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.102531559 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.122632659 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.103313791 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12325247 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.103519984 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.126366267 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.124782864 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.100627416 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.122698755 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.104185104 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142319056 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.124609215 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.102793836 seconds)
  done (took 9.025409908 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.119734087 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.15707285 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131384489 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111054291 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.128107701 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091839754 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114512223 seconds)
  done (took 1.759319505 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094294714 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148182584 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130124509 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150271992 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138575805 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.133177749 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133529924 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093091266 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.142029631 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126030832 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122398203 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.172728724 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11660994 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.106232062 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.152492916 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.115418373 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130105224 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.116412189 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.102566095 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1495945 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121973653 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117936497 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.129842942 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095097356 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.139717584 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096745528 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185291966 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129310628 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093747166 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.122519974 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099736546 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.21064559 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117355064 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127657666 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092535383 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145060536 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.11562425 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124729121 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.143273638 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099610712 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.139140486 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101336227 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.124286902 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.122355833 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102091078 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.131557465 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.106230857 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.125845943 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.100165615 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145956246 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.127758504 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117406042 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118442252 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099099224 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.128152153 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100941174 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130960873 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.099347348 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.147562688 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12429587 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.12224001 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145075408 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.139339148 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.121762771 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135813634 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.117473236 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.139985023 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.122170353 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10306334 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.124426525 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.121896765 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.120967857 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.104582622 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.13278944 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126166775 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.124965967 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.14511659 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098946642 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.130326268 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.100986125 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120124913 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095233251 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.139194858 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099453477 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119446368 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134625409 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108044161 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122764427 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099468035 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.14176113 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.121100629 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.107363166 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12976335 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099398223 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133821956 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.146446885 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.105605025 seconds)
  done (took 12.885131487 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097755408 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096516506 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.125720069 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118634087 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096725134 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095620296 seconds)
  done (took 1.550198417 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12664483 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.125022963 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.113173858 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.1277732 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.181228887 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.145884658 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.126603747 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128892234 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.141081988 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.113512878 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.145551982 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.146024135 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.122177718 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.128410707 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.124062115 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.128052788 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.147385204 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099555412 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.134683477 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100431429 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135509318 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.128495525 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101252791 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141553426 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.105157353 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.127899044 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104498164 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.137321832 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133755435 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.106457312 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.130231337 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.104496001 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125724357 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12808058 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.125081619 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125866137 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122479478 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.109650687 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126938678 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.106612309 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.149734779 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103503599 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.135667401 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.130743351 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106106955 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.130101135 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.130949293 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107262413 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.14758355 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.107720025 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.13297966 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.126964018 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.105967658 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.13204344 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103560953 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129777494 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.132334186 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.125605692 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.129783657 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.125752879 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.103374653 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.128764989 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105749159 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.1323148 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102677652 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.132361841 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.125936088 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10493212 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123959107 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.10470747 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.131338288 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.124433476 seconds)
  done (took 9.868909813 seconds)
done (took 35.986773695 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.075683336 seconds)
  done (took 1.990970086 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.865089432 seconds)
  done (took 1.778797801 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.606113907 seconds)
  done (took 16.551447649 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.509974587 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.598469219 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.970284289 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.167327503 seconds)
  done (took 3.160167204 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.925795519 seconds)
  done (took 1.853465079 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.315873192 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.264606635 seconds)
  done (took 1.497682831 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.81008428 seconds)
  done (took 1.732167522 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.566215537 seconds)
  done (took 2.491963445 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.360576497 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.204141123 seconds)
  done (took 1.498971687 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.582848964 seconds)
  done (took 1.510852479 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.866254607 seconds)
  done (took 14.80076519 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232162548 seconds)
  done (took 1.173248586 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305574346 seconds)
  done (took 1.237243437 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.243570213 seconds)
  done (took 4.178571336 seconds)
done (took 56.375711344 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104653648 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131147696 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108864228 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.127836157 seconds)
  done (took 1.400527988 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109693849 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125408597 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106049306 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124579048 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.111162208 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.126368457 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101351987 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.132713569 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.102089986 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.12965981 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124720275 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102677506 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.126703541 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101259195 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.123034184 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.103647771 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.129068757 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.102616539 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125015882 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.103577981 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.126790423 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.126761823 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.106320321 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.125817507 seconds)
  done (took 3.730182555 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105244033 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.099022444 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.125142662 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.098370911 seconds)
  done (took 1.368137479 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.110624597 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140628587 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.116706425 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.13334217 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140804487 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116491829 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.122422911 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.099304707 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124505837 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.110679023 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.123160683 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.118221696 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.142525861 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118957433 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113019459 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116058983 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.096447833 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.140186194 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.110331417 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.135865065 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.098289216 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.133228476 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.106759355 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138582186 seconds)
  done (took 3.847975241 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.174454778 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.137366414 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.145243902 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.169569724 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.12435343 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.120312029 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.12399582 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131834996 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.125559015 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.098884897 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.121631745 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.15439272 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128006375 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.123021394 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.099963218 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.128166127 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.105541456 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128905863 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.10092294 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.137350092 seconds)
  done (took 3.522235032 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105968378 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121641104 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095107401 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.121773828 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107574134 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.124668192 seconds)
  done (took 1.62209636 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095600691 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09390786 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.118179841 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.093323496 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.122116517 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094020933 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.11618157 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095085081 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093780087 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.119475959 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093940284 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116951813 seconds)
  done (took 2.192730198 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.221707784 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123806597 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122065957 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.100260079 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.126257008 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.099743931 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.136447488 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097957826 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.17879966 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.12347564 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114289237 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.175295877 seconds)
  done (took 2.562977505 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216489337 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105240458 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28174231 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.378859935 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163035712 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171731504 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276373315 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172988351 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.192825049 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142690883 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213872076 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161884637 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136033081 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187875722 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147753082 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.192324202 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181952049 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208896754 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157106215 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246050864 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17353188 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173745073 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196224453 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132732839 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145220733 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166036662 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125781822 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109115067 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180715234 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177573091 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204294261 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129887094 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144980491 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206949914 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248218898 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186348972 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.309023005 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140317676 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.195006408 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.204278662 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285443133 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146076692 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201882943 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16098034 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111947121 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20886287 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163001353 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187779762 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.114893873 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147191909 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190834197 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182221319 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.189149965 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145356122 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320607996 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129844935 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1541285 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186696565 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197206876 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230893071 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171028438 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.104598048 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193444133 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195454061 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21255731 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.126114073 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.174554545 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13069186 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184488876 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20955567 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186786115 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172377883 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.21251004 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139076539 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144012196 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209115385 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135307858 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185720511 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167781063 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.126920817 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154427308 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118240355 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13449422 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191174192 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105387797 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218332538 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140870732 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.29307517 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238389721 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164396585 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142201195 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170560392 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173786887 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152894963 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.125507716 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151285403 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.176335357 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139554681 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136366577 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164228248 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15119434 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106813111 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159994417 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128320176 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164751577 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.115320351 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174617314 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170796462 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.134192314 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170164013 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130533951 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163437694 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177185374 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226709878 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113348189 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138523955 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210295697 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16470299 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.116247252 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.216848329 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202397813 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179729127 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118092505 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200409079 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203631267 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123053302 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227076905 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122719846 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138843906 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.157189701 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16405038 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163384959 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161377895 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110321989 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158272497 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206965639 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.134133933 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115112676 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20425591 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106939978 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132981979 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12426238 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143210281 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.147599101 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.155787722 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.119025993 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163028173 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166967191 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15967767 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164541236 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149279917 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201121021 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138615795 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.163967056 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127970768 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12364389 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187229798 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199667604 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135858174 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193956643 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.176589762 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20387786 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168308628 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137093576 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189619373 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109270346 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126694927 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173690118 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165896678 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169269052 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19881567 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201178374 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.171024493 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159895341 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156234093 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175224542 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.19052711 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163715535 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.151643252 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169448574 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173109682 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102961897 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.130853165 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107842474 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146175406 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138715122 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114094978 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213466282 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173630135 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198883648 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166515629 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145483707 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200318316 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106572312 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173110121 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.18154896 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147078501 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.202826058 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200753146 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173523836 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150973931 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178363804 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.126241602 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108607693 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13947925 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174089845 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113074784 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142349134 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151170175 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198476046 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18407006 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157184796 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210263066 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172867265 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236201302 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.103807997 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170810554 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187542371 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165062723 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.169486806 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137720478 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.168993141 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196281275 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150886886 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200339235 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169508429 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17578173 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205132228 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164637323 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137603186 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155864255 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177945295 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121114326 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179938996 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154226819 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141683087 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160426607 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.118454385 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133694877 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188516174 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15140956 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186250716 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.174010109 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181543053 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134174123 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15005487 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143861933 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153619637 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.124862206 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17875434 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203213518 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151663304 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165151976 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193336809 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136984463 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318199891 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207949921 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192679745 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145599058 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149110067 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144491844 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176448976 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171591456 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190197328 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150576603 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190206064 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166604018 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.149330453 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114278469 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157214595 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158022509 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.158156625 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138462502 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.134047381 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14906818 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190508806 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153216537 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16691727 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171142945 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127407644 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.163161677 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14849454 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217704674 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166871431 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185781787 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16375001 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183221944 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194476423 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131002247 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108894952 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134468136 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19003777 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111322423 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165710239 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.214286215 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20521253 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166052218 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177441742 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116512894 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.132667297 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165455821 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155314185 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205064291 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148858637 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142548737 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21119027 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.15615268 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112340093 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172661189 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292198901 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149671875 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19071364 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.126603659 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278440875 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110377517 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137811336 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176857759 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177582749 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.111958595 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188202343 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170922278 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152060456 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176220319 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118003912 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222271365 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215367386 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177764907 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181402051 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150861691 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165513742 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169456243 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193201541 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149828759 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124868265 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168429926 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198653244 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.226674596 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.112401697 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169509422 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168524142 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166878731 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180279428 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140521301 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197579359 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111330024 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171155411 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146798603 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129949886 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164767321 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190682721 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137845999 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190408908 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163135439 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113113637 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132590636 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157083811 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139407854 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149144352 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.134473898 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187212171 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.106616119 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169017068 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186445019 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136680312 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160905801 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125995931 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138137937 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149325132 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123997749 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143125389 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173639085 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200374692 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136102617 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193453393 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179672907 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172300206 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166783232 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124148401 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668482387 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133512368 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198896549 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127394489 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223735406 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128886857 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172842674 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167398013 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155769631 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175400958 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157778039 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226096743 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173159388 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164389402 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1118923 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150666626 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152121607 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.11153447 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160646769 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16966199 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147122658 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.116917221 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164747802 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153210538 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.151947888 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118245403 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228581644 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127899625 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191042471 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193464441 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148251891 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173304252 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183164923 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137526381 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.170117336 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179737717 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148959232 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130084139 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137653041 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.142587121 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18703089 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.104722873 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169350967 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169033207 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168190783 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169129209 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115332583 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16526396 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14924091 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169278028 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106086597 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16272463 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168640916 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138045742 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10704741 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164021277 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166976614 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.167131239 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131483745 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.151316308 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197695246 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.13082134 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112929411 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289072287 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164063941 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225562175 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.132897029 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144363836 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150429854 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160447613 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.133100642 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167258565 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136670356 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111669487 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138093618 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188244122 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.178720863 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164112689 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189474566 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168226088 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197464152 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114329078 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.272374746 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146873824 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161509799 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.110522033 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135861743 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146257528 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115536775 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152431001 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198546114 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185239707 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.161156678 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150949268 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107450836 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.132308047 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112107169 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178968412 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160408823 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16565771 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152353218 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.096995494 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149828056 seconds)
  done (took 80.532472508 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158549226 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148201529 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153046373 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205396305 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174218963 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262453751 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211862945 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234563831 seconds)
  done (took 2.57888394 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.112056878 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.141035785 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147343256 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.13060281 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.12980327 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.35368286 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143058356 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106427178 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.18966083 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.144632328 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.128782002 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.62724387 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.107703299 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.131474687 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.118770866 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.130137284 seconds)
  done (took 3.862933862 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.002249947 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.507977354 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.448205274 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.243493427 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.227987733 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.159808068 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.67702429 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.18919013 seconds)
  done (took 11.480876826 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.138968402 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150102284 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.26862413 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.189540754 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.171673446 seconds)
  done (took 1.956338791 seconds)
done (took 121.588447233 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.1073233 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130174295 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105431935 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131982885 seconds)
  done (took 1.49826444 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.120667609 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093785156 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.122387422 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087474489 seconds)
  done (took 1.453741243 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.498281346 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088350818 seconds)
  done (took 1.657816087 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.131706465 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143200855 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.124339192 seconds)
  done (took 1.439162966 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111351369 seconds)
  done (took 1.148097022 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.113324037 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.109191839 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.149176121 seconds)
  done (took 1.408637519 seconds)
done (took 9.640674816 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139715689 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435445036 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.394813267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145189606 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727115481 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.390279782 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.052163182 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160866424 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170405462 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101433408 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144493709 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.682459268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.03765022 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350389805 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.023560902 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.442168298 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.708592955 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101686301 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132850455 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100508952 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.030234662 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098081064 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126798276 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101057896 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705049439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.40331453 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127397757 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.474219487 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099530523 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128984766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.389917159 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124408713 seconds)
  done (took 17.276010463 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146362041 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186885632 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137628527 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101803271 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.128900202 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101940551 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.134900346 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.112732775 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186503871 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125121234 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119017374 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125379074 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104881157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12562234 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122121179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12542369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.10262372 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.1282654 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106647031 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128506686 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118312506 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124650986 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10112319 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128043302 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098968633 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139531092 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099919011 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.13834139 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098980119 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13243427 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130326368 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102782414 seconds)
  done (took 4.995692189 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150863469 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195838832 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134185297 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13501749 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176278781 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127125246 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.211428479 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138472084 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18975203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126160925 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118838789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12700313 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.163628047 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102120823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148509877 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099639646 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128593548 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102545752 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132384083 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101380083 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146174775 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098625397 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127456012 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101448115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126126342 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114168016 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126009979 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136034545 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100388643 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12994931 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.107330647 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125282917 seconds)
  done (took 5.2947968 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.109790982 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.132619854 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11723059 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14316303 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103530637 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.132219978 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.107472946 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128276892 seconds)
  done (took 2.014805032 seconds)
done (took 30.620505585 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123612234 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.139554448 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.117072088 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.135930763 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136648445 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.123777643 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.112513527 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.097971083 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.13697387 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.116931685 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.127773544 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101011489 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.140552672 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104741485 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.142659461 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109203947 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.147488445 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.114851519 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.128096541 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110139504 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127440232 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.120352854 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.132028945 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101206243 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.152656949 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130659741 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.119220487 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.131435404 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10821046 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101965868 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.143497195 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106240473 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.127449373 seconds)
  done (took 5.09532931 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.13165502 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.173034018 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103241725 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.124920041 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.167435583 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.102669828 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.15414566 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.09820571 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.124409239 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.099332097 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.097365133 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.151914129 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.157915986 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.130810489 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.176803402 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.166367031 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.13022161 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.163860446 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.151537632 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.138240944 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.156256976 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.096699139 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.159482416 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.167575243 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.098027548 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.125135749 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.143853106 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.160455236 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.169043734 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.136829945 seconds)
  done (took 5.20714119 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.11144728 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.143604045 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.127008825 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.198962771 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.168001911 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.115623032 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140495555 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.119046179 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.155894456 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.09979382 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.139730362 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15912561 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118097551 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.139267759 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106525332 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142063068 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.120431891 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.129258506 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108543 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.146877376 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.119144867 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.140527476 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114987387 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.137217359 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09973161 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136377125 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.106175368 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.142658566 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.134120202 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.110984471 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131267896 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.105285884 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.13024548 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.111235232 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.131002288 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.109529516 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.149506205 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110640186 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.142224181 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.162467881 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.111147286 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.131685306 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.123358089 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.176601183 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103328085 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.136152355 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.111440259 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.138148164 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.100304422 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147569466 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.115479482 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.128941017 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.14272068 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.100640996 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.126757048 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109356279 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101343123 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.130202196 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.136173046 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.105675139 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.1471779 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.109956196 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134569251 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.103385045 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135859386 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.101258046 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.126012574 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.106621587 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.152446071 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106826334 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159886477 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101824754 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.133939082 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.109904238 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135134098 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110368134 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.129414805 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108532976 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136034696 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.106640494 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138220067 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103475266 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132716891 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119923037 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.143916594 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.135354202 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.106326226 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.135542355 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.104166608 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.130149305 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.115630728 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.129521137 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.105476371 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.138590591 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.101867663 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.13122513 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.107874036 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.133198928 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.10052385 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.148537926 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.107198331 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.127454342 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120003384 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.130464436 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105817387 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.137295939 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114214127 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.128534798 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106110788 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.135410939 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100521061 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.134483773 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.105174893 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.127743659 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114131525 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.141275093 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10676218 seconds)
  done (took 15.713218419 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.253728012 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.231275294 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203193626 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.314117908 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.153078206 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.128491544 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.228262308 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.181921263 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.130060678 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.169768422 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.185902998 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.191259789 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.100748042 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.163007501 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.230031011 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.319335861 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.162633468 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171095585 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.142346726 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.152458826 seconds)
  done (took 4.881706977 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.12166907 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.168847098 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.157770848 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.128010858 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.130953069 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.115990226 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.131344857 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.145228185 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.103209074 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.135728512 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.101754855 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.138367098 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.104626954 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13374544 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.119344475 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147627466 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.107411272 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.136735654 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147174447 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108516383 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130508424 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.150533307 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.111721405 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.158303326 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.110731457 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.144315204 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101237459 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.137623596 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.098698683 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.12980858 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107495849 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.146691422 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.136544554 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103030338 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.134642212 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102536013 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.125163972 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.103766072 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.132666859 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.106327459 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.146247623 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.105459798 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129506331 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102187608 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13800089 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.099869103 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.106608401 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.136293896 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.135520946 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.110778223 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.135938319 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.106992186 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.138227433 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.11376883 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.126662783 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.112876634 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.143214324 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.135142821 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.109442823 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.128298268 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101487416 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.106379937 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.12936803 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.106912388 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.135612235 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.145840465 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.111164764 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.130214347 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.107953691 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.13310425 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.105712558 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.149334905 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14905444 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.101022196 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.126379633 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124754931 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.098925518 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118133437 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111547785 seconds)
  done (took 10.875810674 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13520742 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.130577813 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.12168836 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.165561656 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.116894177 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.139477415 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102321753 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.151348939 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.108832454 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.139929881 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.109172461 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.145299067 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158657657 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.119822127 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.131320542 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.118911533 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13642385 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.144395423 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.15000412 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.162286224 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.1172936 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.136239625 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.116186045 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.142521355 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.135454632 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.143870199 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163086512 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.109585456 seconds)
  done (took 4.833776433 seconds)
done (took 47.644977292 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.190200841 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.365918384 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.145081432 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.141360693 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.185120438 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.170718251 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.147630685 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.339603354 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.752926143 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.134699107 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.14492599 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.142635079 seconds)
done (took 26.929682859 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.162980949 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.708172051 seconds)
    (2/2) benchmarking "String"...
    done (took 1.455793362 seconds)
  done (took 4.23183605 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.1440311 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.145578492 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.391178848 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.147362543 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.146972826 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.160909569 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.146947973 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.161863806 seconds)
  done (took 15.368247507 seconds)
done (took 24.974724412 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.146581867 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.332740086 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.399396355 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.158502807 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.148229057 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.15007304 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.133280307 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.168874024 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.149351667 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.136392176 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.121325363 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.432668737 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.137610867 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.523511519 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.124819807 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.159847814 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.159078024 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.361567427 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.137374502 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.176159141 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.12333943 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.11315708 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.178169478 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.150012718 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.147048725 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.13165278 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.159247769 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.119596872 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.314551462 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.153511875 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.15813558 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.127060686 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.166996018 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.121557455 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.220448293 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.14927003 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.296699822 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.109700596 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.105650617 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.122861311 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.304429619 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.480340796 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.1219144 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.118241892 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.122298868 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.152582326 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.111992883 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.789838589 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.124477964 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.102888195 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.150081776 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.488571767 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.116167165 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.124770591 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.120725524 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.348117331 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.121727054 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.129331554 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.136820656 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.118180261 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.125191767 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.110194813 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.156336863 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.120262298 seconds)
  done (took 138.290541977 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.116101717 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.113865161 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.114429757 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.174283045 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.115719628 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.114256145 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.119803168 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.121426357 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.11579218 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.13731834 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.112240643 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.108955225 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.110996513 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.063026619 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.098894688 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.11917647 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.099379104 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.103950076 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.102285468 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.096717829 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.097780413 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.101000325 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.114786534 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.101841212 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.128081831 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.192994309 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.13707343 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.109656614 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.099708965 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.097780348 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.129370193 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.162172447 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.628298071 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.953903288 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.10189202 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.122437036 seconds)
  done (took 76.578148597 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.099087766 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.097655087 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.099240367 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.125993525 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.099314334 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.585137504 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.5860758 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.819662722 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.186692202 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.243290738 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.307736281 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.101660073 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.187382428 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.113688692 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.099181586 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.115970652 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.127200347 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.100427471 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.099587297 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.585314804 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.117568216 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.086895967 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.264107369 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.11396381 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.127114994 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.493773509 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.10005827 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.127463462 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.420493472 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.14195229 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.100719738 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.404540729 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.696213016 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.213156122 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.101775339 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.127378193 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.101768196 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.372875717 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.100976844 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.099857029 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.103143764 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.704960329 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.104773631 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.588012669 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.099862415 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.976124437 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.100694894 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.100399559 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.377650865 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.657684852 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.119462985 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.100256021 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.103059405 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.100782436 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.101603604 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.128363745 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.376223052 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.211598736 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.10484088 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.10423049 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.129400703 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.102393853 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.432156377 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.105680959 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.290933394 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.182229104 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.209786954 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.590438821 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.102714886 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.194779223 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217463786 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.10252639 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.102118235 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.102828421 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.101372578 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.207737761 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.101637521 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.466486513 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.264387715 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.118019021 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.237639943 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.107676686 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.196512659 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.102357747 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.418715764 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.106820783 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.102901213 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.78273576 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.195171016 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.103069397 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.102750784 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.104144257 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.101462624 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.469131123 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.590966247 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.309496081 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.105880811 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.103820243 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.860830707 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.110056905 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.47757635 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.585414799 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.73508817 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.108211876 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.212894165 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.266639248 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.118821094 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.106072046 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.103363368 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.245301271 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.108043488 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.166293997 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.104038067 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.499109236 seconds)
  done (took 352.562754622 seconds)
done (took 568.499016868 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.798337342 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.760260673 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.884907715 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.788550071 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.756100916 seconds)
  done (took 10.018362167 seconds)
done (took 11.048060206 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.280922073 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.279456026 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.16260543 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.287013871 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.138828684 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.299725493 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.262906173 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.132823442 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.207207685 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.183941371 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.208017391 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.159298659 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.140710202 seconds)
  done (took 16.777681799 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.345345666 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.110080345 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.187653021 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.363667272 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.148453206 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.359228267 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.383722946 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.110867855 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.259570191 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.122758166 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.12259264 seconds)
  done (took 16.549847202 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.366323779 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.110061086 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.175783089 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.336048818 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.150911446 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.35136609 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385483831 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.110479269 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.292589581 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.123955837 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.12303125 seconds)
  done (took 16.562649838 seconds)
done (took 50.92489689 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.146549641 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.271422458 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.138532946 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.124491756 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.120237261 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.122197404 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.125965603 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.120103588 seconds)
  done (took 10.206584678 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.119085036 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.11629805 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.119116325 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.117839357 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.119151556 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.11948193 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.119158056 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.119206552 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.119315913 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.119923735 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.117854979 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.11739985 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.117950723 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.11685463 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.11901764 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.118428117 seconds)
  done (took 18.93519086 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.118815529 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.118943634 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.118207073 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.116286541 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.117818265 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.117456631 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.117877756 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.117746753 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.118383849 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.118195804 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.118398565 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.118726201 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.118768393 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.118494898 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.11816539 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.119286196 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.119663379 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.119136067 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.123837154 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.119389205 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.121156506 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.118937331 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.119428602 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.118419683 seconds)
  done (took 27.892904597 seconds)
done (took 58.070238754 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.120508992 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.122837371 seconds)
  done (took 5.283812749 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.181975766 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.184555852 seconds)
  done (took 3.408692668 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.123767212 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.12135761 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.123335875 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.121640274 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.121312903 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.12266759 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.122790536 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.121773618 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.12244643 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.122156807 seconds)
  done (took 12.26417399 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.12316924 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.1225786 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.119837433 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.123420641 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.12417865 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.120411995 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.122294054 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.12286928 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.122413763 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.119454992 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.122842226 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.120955086 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.123585016 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.119297442 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.123088296 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.120357887 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.121739102 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.120794061 seconds)
  done (took 21.234779275 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.136264379 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.142743849 seconds)
  done (took 3.320336012 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.26144307 seconds)
    (2/7) benchmarking "second"...
    done (took 1.16374888 seconds)
    (3/7) benchmarking "month"...
    done (took 1.237672893 seconds)
    (4/7) benchmarking "year"...
    done (took 1.227776255 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.163910846 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.14183492 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.161959071 seconds)
  done (took 9.400246993 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.124607033 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.309563882 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.416890255 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.734756376 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.125917851 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.129202333 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.012844123 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.129256354 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.130603645 seconds)
  done (took 13.155225289 seconds)
done (took 69.106243904 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.116605297 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.148730833 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.139575921 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.134954781 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.460485114 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.146445613 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.122116499 seconds)
done (took 15.311675422 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.110029535 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.10886513 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.123840015 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.120676387 seconds)
  done (took 9.50672612 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.047692717 seconds)
    (2/2) benchmarking "read"...
    done (took 1.486593332 seconds)
  done (took 4.576730626 seconds)
done (took 15.124863814 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.127858101 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.12549611 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.122904798 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.123754998 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.125236599 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.123899274 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.122987014 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.126467732 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.125299508 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.126432851 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.125809832 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.124457866 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.125457546 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.122307636 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.124348017 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.125609813 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.122006582 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.1233653 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.123868923 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.123054986 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.126576408 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.126546801 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.123888297 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.124194799 seconds)
  done (took 28.036313737 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.126578623 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.124403 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.124988621 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.126434297 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.123715179 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.126845213 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.126532262 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.123160701 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.126621331 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.125710725 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.124084586 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.124312075 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.126981041 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.123619787 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.127574295 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.125033876 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.127157615 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.12460838 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.126891077 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.125050525 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.127587354 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.124692266 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.125266692 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.127860637 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.12533215 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.124901612 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.128274749 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.12539586 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.128761028 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.125142697 seconds)
  done (took 34.818765627 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.133221947 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.134309012 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.128797064 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.129826844 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.128276026 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.128411411 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.127888641 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.129698146 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.129219251 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.128834699 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.127721072 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.129166988 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.127927631 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.12952694 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.128838566 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.127860751 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.130997965 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.127349854 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.128584392 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.127580486 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.12880421 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.130098701 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.129566302 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.128488056 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.129275428 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.129156087 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.129264968 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.130700397 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.130728133 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.129304847 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.130315396 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.128913484 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.13065875 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.129911135 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.130241957 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.129080701 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.134752 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.135770384 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.131562747 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.130329823 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.130064821 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.12976215 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.13186699 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.131407502 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.130669169 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.130384126 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.130538466 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.13109476 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.1314642 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.131427098 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.130786152 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.131492227 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.131847359 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.131642793 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.131678266 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.132792678 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.131521724 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.13197874 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.131346688 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.131836771 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.131046011 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.131318828 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.131183347 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.131696869 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.131518547 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.130446686 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.130345743 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.132931037 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.130901241 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.131017959 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.132292341 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.131426053 seconds)
  done (took 82.441437803 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.132699304 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.130410531 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.129852211 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.129051669 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.129685254 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.13154784 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.130235523 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.132314364 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.127877702 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.132411182 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.133026172 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.131467682 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.131269009 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.132953194 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.132675452 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.130601448 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.133000154 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.129450805 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.133646059 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.134567662 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.133731832 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.128643901 seconds)
  done (took 25.94180034 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.132258279 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.134725118 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.131846544 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.136349553 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.132101579 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.135322969 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.134093772 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.134644006 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.133296485 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.133552502 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.129618594 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.134144561 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.132734463 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.131679989 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.130348298 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.134033757 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.134197956 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.133027696 seconds)
  done (took 21.450014591 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.133377152 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.130835603 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.135126439 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.133344377 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.13315445 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.134625941 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.133164876 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.135549485 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.136386292 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.134346466 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.136185182 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.133938787 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.136511375 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.133103807 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.135585254 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.131565004 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.136046725 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.133706878 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.136652934 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.13347689 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.135557503 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.136047014 seconds)
  done (took 26.009339197 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.136017395 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.1349499 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.132263438 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.133896925 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.132610605 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.135942512 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.134277644 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.130827667 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.137013567 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.137013452 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.132013538 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.136075929 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.13070268 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.134513614 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.135630214 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.132374204 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.137818934 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.134064322 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.137816862 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.132336265 seconds)
  done (took 23.740359396 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.139227239 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.140715672 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.142567797 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.143000544 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.143402023 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.141011587 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.140532022 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.137466393 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.139262676 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.138858861 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.137364397 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.137093649 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.139532024 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.13901144 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.13979728 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.139010074 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.139786144 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.139484976 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.140868803 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.138984746 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.140502822 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.140516602 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.140370265 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.140339239 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.140654024 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.139043748 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.137170246 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.140062273 seconds)
  done (took 32.972418115 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.138544886 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.138186987 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.136478724 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.13735717 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.133435788 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.137431229 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.136852109 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.137658945 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.140705429 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.136679846 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.137650044 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.140296656 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.138681467 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.139776961 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.139739055 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.136858185 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.138310198 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.138518242 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.137539098 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.134366123 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.140385968 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.139802493 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.140956455 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.13847817 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.138818223 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.13930021 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.13702502 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.138179084 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.140575919 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.137577125 seconds)
  done (took 35.202903923 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.185944639 seconds)
    (2/2) benchmarking "in"...
    done (took 1.179352928 seconds)
  done (took 3.422485315 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.136094141 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.142415711 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.141741729 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.138349115 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.139452328 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.142802129 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.139956598 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.138338798 seconds)
  done (took 10.177938113 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.141883023 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.14261726 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.142532209 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.143464672 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.142782808 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.143273834 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.14683836 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.159835804 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.143358617 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.143821875 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.150869117 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.152424885 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.145472897 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.143687624 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.143224252 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.14463603 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.142551275 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.143746474 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.144059655 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.143846112 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.141451047 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.144214061 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.146214 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.141390196 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.142838432 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.153772806 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.146936802 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.144449642 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.143933782 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.147124602 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.144082046 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.141424969 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.144775398 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.144110716 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.145542933 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.141606041 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.153528465 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.16462081 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.150865422 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.142086165 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.14186905 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.141538688 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.143831357 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.146873634 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.145901717 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.145671872 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.145024956 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.140226306 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.144556298 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.14910411 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.151342644 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.142661843 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.142317913 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.146016044 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.146944585 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.149593958 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.159091357 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.147460718 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.153319291 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.153819966 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.159087095 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.164997499 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.147099197 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.143317945 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.154295337 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.171829309 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.152928762 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.158508127 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.14326213 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.146647256 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.152508852 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.155860174 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.167052426 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.146045779 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.148746903 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.146513776 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.148661366 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.145963117 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.150992906 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.164474659 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.146614969 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.148004873 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.159780473 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.171323512 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.148781386 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.14692526 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.147054751 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.148697647 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.150206095 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.157669122 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.162722011 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.149795411 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.149885123 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.147925776 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.146625811 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.148873549 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.14726577 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.150279265 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.144495971 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.146842652 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.146909119 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.151527442 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.158336293 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.149783527 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.149892234 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.156535053 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.150398423 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.146096379 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.151851512 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.150646424 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.147361433 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.152347342 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.153250201 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.147900171 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.153304697 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.156536294 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.14943247 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.151222189 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.149681149 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.15029705 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.160927367 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.173816341 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.150927139 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.149747245 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.156156622 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.161308784 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.14805839 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.15384071 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.150690149 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.147718662 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.147909139 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.150274877 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.148342577 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.14825675 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.151362695 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.149049205 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.150605431 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.152259852 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.151808683 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.152818235 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.150742079 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.151079192 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.151819114 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.151822898 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.152531671 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.152347243 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.159155617 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.150920354 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.154341682 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.151893417 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.149636402 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.151844608 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.153637772 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.150197034 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.150722548 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.152431113 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.15219935 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.152424879 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.15287886 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.152906808 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.151706726 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.155027455 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.158371769 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.153955977 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.152544368 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.153629613 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.149298394 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.154543662 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.152780299 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.153187846 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.153065444 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.154189222 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.155951212 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.159539957 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.154714276 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.15354371 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.156679826 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.151946024 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.152634637 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.155470123 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.158495536 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.162193907 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.152804174 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.160474576 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.152717043 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.156803919 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.156137564 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.156543518 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.15170274 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.152657038 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.159616583 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.16352943 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.167515693 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.175786341 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.153397972 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.158194353 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.153572186 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.159423405 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.157485942 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.155798695 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.15670297 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.150681957 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.154516349 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.153154849 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.156383585 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.155838684 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.15417673 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.153843717 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.15734378 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.155820896 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.155011837 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.154389088 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.155979664 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.153204431 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.153869468 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.156164266 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.154414702 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.149663881 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.155201206 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.156002538 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.159220388 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.153923348 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.162576751 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.151972378 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.157069186 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.158583946 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.156548715 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.157170713 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.154370161 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.159373649 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.157464379 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.162237065 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.173888198 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.159535407 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.164813284 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.175606624 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.151101122 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.161733059 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.158645564 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.156347228 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.160303424 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.166573939 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.158065082 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.159698691 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.152674761 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.155835529 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.156555969 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.1648046 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.155649645 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.156395477 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.154089324 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.157774491 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.153746213 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.158721027 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.158736509 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.158286749 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.158195473 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159207963 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.157208883 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.160027546 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.156757398 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.156099972 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.158891443 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.161113271 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.167853505 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.162827564 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.160355567 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.160539313 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.162508466 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.161682644 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.156997524 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.160958766 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.160047383 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.174121324 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.179361581 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.162347971 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.174111906 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.158347542 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.16334589 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.175564463 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.167260799 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.158654717 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.157824886 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.159947885 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.158704824 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.156897081 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.158264829 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.158823462 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.161389155 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.161346208 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.164992363 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.159485285 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.158158291 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.159749433 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.159601816 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.159681568 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.159521466 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.159746627 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.165104299 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.162884828 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.157756184 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.162419292 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.170495718 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.174957702 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.163296709 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.15928118 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.163394869 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.159009926 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.161001421 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.158798228 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.16458879 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.167376296 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.164502457 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.1694273 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.162986458 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.172768413 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.1620721 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.166351668 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.169308571 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.161951786 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.162291962 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.16121555 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.163371708 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.171702496 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.175523418 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.16248365 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.167899014 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.159207096 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.163494361 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.160302783 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.162901601 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.162364821 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.16275261 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.172638532 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.182578615 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.165335927 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.163133633 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.160513195 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.162696013 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.163178455 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.162609512 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.163810064 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.16286066 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.162880352 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.162684768 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.162197313 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.160490914 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.163956276 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.162372575 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.159106871 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.163545567 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.169405122 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.188081928 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.166805974 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.163697884 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.1729437 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.160685436 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.172835036 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.180167525 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.165844687 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.160816532 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.163282702 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.16410296 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.162393322 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.16467108 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.163158478 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.165139223 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.16609993 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.163139464 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.166736683 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.164638423 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.162953162 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.164557386 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.173184623 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.187204548 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.166437577 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.167980563 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.161052169 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.1655943 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.16756822 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.16309407 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.162891218 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.16788101 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.175536962 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.171352102 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.164455862 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.1637283 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.164200248 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.163743103 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.165157984 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.165630972 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.165413779 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.166547574 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.637488111 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.164411402 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.168600799 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.165647544 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.164287046 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.16734608 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.165929362 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.174203757 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.165104896 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.16662999 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.166312225 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.166091874 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.166145692 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.165173625 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.165561125 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.167010373 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.166028971 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.167716201 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.173594269 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.172730044 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.168618473 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.167124792 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.166823725 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.16500567 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.166511872 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.166856021 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.165943798 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.166299237 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.169022448 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.167154884 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.167404009 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.166179494 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.170757281 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.163446497 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.16449375 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.166368325 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.171358153 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.165787067 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.161967514 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.164091329 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.165630512 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.164604673 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.162433087 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.169629843 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.165918717 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.171764885 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.170091104 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.16593096 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.162853863 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.165739706 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.170138446 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.16210729 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.163928897 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.164429436 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.164314648 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.163509286 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.166855989 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.162976795 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.169557725 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.163714169 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.163133429 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.171231883 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.183416783 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.163655551 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.166288179 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.168584187 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.165002294 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.161397649 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.164345941 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.163199762 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.170132364 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.183432831 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.164510332 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.166123303 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.163825986 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.165607986 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.168938473 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.165833418 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.166349521 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.162599117 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.16593733 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.164647161 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.165122993 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.161979395 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.16527808 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.163911734 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.168129018 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.171900782 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.162788409 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.166844811 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.165712618 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.167045377 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.165383119 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.165717672 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.162865778 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.163237336 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.165287997 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.165847342 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.168103584 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.169119707 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.164860213 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.167402721 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.168142496 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.167094885 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.169813676 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.177281234 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.173637708 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.163320768 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.166613436 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.166323434 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.168583113 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.166238655 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.166588318 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.168151107 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.16749879 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.166950057 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.167672669 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.16806151 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.17152597 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.18271213 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.187070137 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.168683432 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.167721743 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.169668283 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.167501611 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.164861876 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.167740983 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.169144213 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.171219932 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.1743264 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.168766528 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.173956807 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.185437811 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.168978424 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.173108775 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.172938134 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.17549187 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.171065847 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.16918 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.169431146 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.173074335 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.183320771 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.169307219 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.178160315 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.198634178 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.187324633 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.1709779 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.169855278 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.170160137 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.169408447 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.170920747 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.169038593 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.169977945 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.16973408 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.171049754 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.170725173 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.173748455 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.16984611 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.172543464 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.170008913 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.169795957 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.171873349 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.167420649 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.169577671 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.170243907 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.170758124 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.170205816 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.170853397 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.171764375 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.182508165 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.194303471 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.171770368 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.171097525 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.170409476 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.173892497 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.174523134 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.181770772 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.178096034 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.172199483 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.171474905 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.173168059 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.170742852 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.17126507 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.17209452 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.171237251 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.171713351 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.168658493 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.184765827 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.195470645 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.177313205 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.17303128 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.172320331 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.173813609 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.174549418 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.172983372 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.174369383 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.173672821 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.176592977 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.1768268 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.174222801 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.172416329 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.176233164 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.1804708 seconds)
  done (took 693.564257917 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.171199855 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.171185079 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.171320594 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.171255055 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.171567314 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.172358393 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.170147654 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.171446605 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.171752373 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.170328014 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.171293775 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.171249711 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.170457698 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.171607301 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.171101079 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.170619373 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.170989743 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.17117652 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.172218103 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.172183455 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.17189937 seconds)
  done (took 25.68464866 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.175778106 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.172421629 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.174837619 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.17498599 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.172172199 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.175987903 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.172831327 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.175167903 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.17539185 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.172287702 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.175315527 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.175389609 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.173586661 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.172802607 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.17409093 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.175580128 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.176082467 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174113334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.17578459 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.17330122 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.176632334 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.174121604 seconds)
  done (took 26.926995729 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.175317782 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.17682097 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.177086047 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.173075254 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.176445895 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.173958276 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.176281936 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.176654565 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.176546251 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.177705348 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.17556542 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.178089527 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.183900414 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.180443442 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.178509462 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.178919997 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.177698035 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.177109608 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.177531579 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.175099489 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.181542433 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.192759816 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.175764571 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.176755912 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.177784887 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.177492227 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.179121342 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.176916759 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.178741515 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.180969208 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.179286029 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.17851308 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.180005576 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.177832287 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.178821884 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.18368513 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.179258165 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.177302327 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.179119714 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.189153337 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.199361179 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.178464708 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.185492226 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.19684447 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.179984178 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.182798391 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.186591198 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.176962289 seconds)
  done (took 57.72032568 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.74626592 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.762855298 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.761875043 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.768764806 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.768312195 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.767189316 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.773046015 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.772956283 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.759024065 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.76365526 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.766169069 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.76257072 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.76633683 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.764663496 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.76705945 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.764489483 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.766984649 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.76590211 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.773248606 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.776426707 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.766878634 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.769354797 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.766120863 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.765973154 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.774141126 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.764279074 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.764170245 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.767509833 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.766444637 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.766845929 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.771828954 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.774963272 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.776480262 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.764064654 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.764039285 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.764636918 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.767820865 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.767411987 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.770544184 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.767819121 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.771516868 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.770329759 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.773943447 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.775565898 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.780550213 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.767706706 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.766939393 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.766178648 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.768119333 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.769944853 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.769216538 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.769898962 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.7706836 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.770216704 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.771795286 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.774522075 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.77623338 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.776174709 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.770160493 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.771033432 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.770266152 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.775079071 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.769552689 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.768006358 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.771899583 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.76996896 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.768696603 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.771762189 seconds)
  done (took 121.369763311 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.183004199 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.184641601 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185637706 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.184376065 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.184874347 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.185367426 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.185858735 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.185331018 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.185958823 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.185881501 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.186006773 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.185700159 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.184402489 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.185399575 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.185175041 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.186729083 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.185353366 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.185096818 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.18682213 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.186462348 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.185836684 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.186092635 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.18624909 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.186366855 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.186140752 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.18614442 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.186197252 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.186452641 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.186430213 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.186364082 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.18749571 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.185066839 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.186027773 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.187702523 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.187495695 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.187303584 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.186975926 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.186210491 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.186501397 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.188169313 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.186565354 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.187478863 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.187848922 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.188163073 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.186538841 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.188275819 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.18670311 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.188783184 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.188657677 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.187684966 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.188121134 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.187658429 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.187465412 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.188990015 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.189214031 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.189998198 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.18845717 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.189878645 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.188955031 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.188839602 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.189329059 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.19005623 seconds)
  done (took 74.68285615 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.18910761 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.187744905 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.18630523 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.186144869 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.1891884 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.186841181 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.188402892 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.188557848 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.189256955 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.189203929 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189847255 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.186933458 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187142458 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.18988128 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.187230831 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188615151 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.1861908 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.186506097 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.189930054 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.186853097 seconds)
  done (took 24.860555728 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.187608276 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.19044401 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.186848203 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.186928328 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.190520371 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.186880724 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.189275396 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189008079 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.186935933 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190725697 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.190159574 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.191582986 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.186892181 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.187485506 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.189933586 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.187414602 seconds)
  done (took 20.119163078 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.187787337 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.191697044 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.189854905 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.190417281 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.188689207 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.188331241 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.190181662 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.187662535 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.188690087 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.190355196 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.190880775 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.191471101 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.191026172 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.191132979 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.189411309 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.191545786 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.188059581 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.189965978 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.191529613 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.193336488 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.189654462 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.190314497 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.192038368 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.192716775 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.188866939 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.190543321 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.189974861 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.189890393 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.189701674 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.191771854 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.188490974 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.190923659 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.189491997 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.188404891 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.192646733 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.190878248 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.19350175 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.192796765 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.193303754 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.192416123 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.193579833 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.191203689 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.192813955 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.193861261 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.190233968 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.194193758 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.190903408 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.191549233 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.190486694 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.192097356 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.193550422 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.194493993 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.194099308 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.193980102 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.194372156 seconds)
  done (took 66.614278331 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.193007887 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.194230306 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.191056916 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.194073882 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.195054196 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.192244185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.194451543 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.194733496 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192254388 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.194986415 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.192640363 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.196138951 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.191629586 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.195644039 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.193339314 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.195605638 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.192507425 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.192660424 seconds)
  done (took 22.591494852 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.191876075 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.191715383 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.196287068 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.191995026 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.190864824 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.196196442 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.192023377 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.195328829 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195986476 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.19247073 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192937183 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.195299074 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19557007 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.196413728 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.192805217 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193528864 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.195371626 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.196119366 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.191893534 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.193290898 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.197115935 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.19567182 seconds)
  done (took 27.376313229 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.19545539 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.195332238 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.195637931 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.211468969 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.215001147 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.196266025 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.196988999 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.196496578 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.218363906 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.252183284 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.247544002 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.217026383 seconds)
  done (took 15.644669378 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195708295 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196811987 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.194232098 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198414138 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198145102 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195486074 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197381191 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196708402 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199211161 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197037135 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19545779 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198252476 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198766121 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196069077 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199723547 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198453567 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197061611 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195787469 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196318095 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200122496 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196858112 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198354287 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196312709 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196672353 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196774651 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198175288 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198763116 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197296197 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197172555 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199593511 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19833292 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196798344 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199953215 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198103513 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.19948576 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200336833 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197592706 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200302192 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200468101 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198375314 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.19991533 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200479853 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199658767 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197779744 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200184946 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198373713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198201904 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19806433 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199288711 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2010902 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200407985 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197610211 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200636712 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201134661 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201141446 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201223766 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199404939 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197964489 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200395826 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197919372 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19836105 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201427652 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198927708 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199615981 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201485737 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198666047 seconds)
  done (took 80.2094076 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198223092 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.198620779 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199231039 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199542911 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198075229 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199315774 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198916277 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199152912 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200213356 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198320161 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201839345 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200375881 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200263664 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199927925 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199929798 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199411284 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200677743 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200655979 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200871658 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202939033 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200789018 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201574811 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200277718 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201155995 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200718797 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20336613 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200533942 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201565352 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201612656 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200801045 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201039878 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201372091 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200127038 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.201297197 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202213262 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200919186 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201375521 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200777093 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200607222 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205114517 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201481037 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203887099 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201330678 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202756317 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202815265 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201762651 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201515659 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200831106 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202213201 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201425861 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20237666 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20262256 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201748891 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202002785 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201768204 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202095649 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202699633 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203053487 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20271105 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20501813 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203621454 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2027433 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206390055 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203968364 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203628389 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203074488 seconds)
  done (took 80.406063329 seconds)
done (took 1663.026294604 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.371531569 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.322023452 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.204754251 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.214673476 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.205089201 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.198885354 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.215806263 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.204646416 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.205294144 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.206138614 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.205224109 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.392060299 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.198698644 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.205993789 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.205946818 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.300908038 seconds)
  done (took 24.974497969 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.23042726 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.2149787 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.319893814 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.232890324 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.235413095 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.390380686 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.268092466 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.215934214 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.373567481 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.236473595 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.204289832 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.238781236 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.213063407 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.21804744 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.233956886 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.387504333 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.453767025 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.214085522 seconds)
  done (took 26.998009025 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.639433995 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.236561427 seconds)
  done (took 4.995573423 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.232605398 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.214139511 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.216860282 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.213318717 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.206159476 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.205812441 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.213022054 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.208414914 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.208342197 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.336937925 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.220670335 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.224376193 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.233667604 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.216135001 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.211137628 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.251893726 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.365894174 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.213141646 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.211498595 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.220172208 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.215626168 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.318843262 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.25954599 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.216415822 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.332530647 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.21294666 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.222850994 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.222142232 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.35073328 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.21364669 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.213968776 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.214679678 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.217625967 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.073477348 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.66323029 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.242233907 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.238397187 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.223679821 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.212417908 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.36592772 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.217019775 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.223000363 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.20813105 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.651565743 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.37937247 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.333533253 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.228756573 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.223328714 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.217462727 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.281638678 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.218453727 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.218026723 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.258469812 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.014610269 seconds)
  done (took 78.658388529 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.22517373 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.207217202 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.388553452 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.23590231 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.208980191 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.214297582 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.230379349 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.483310637 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.244776877 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.21005509 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.530367963 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.764460783 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.232939186 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.25531513 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.060961795 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.272372387 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.211539805 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.226110486 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.214598275 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.217475629 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.748437126 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.214525123 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.214946465 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.383045586 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.248519843 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.718812463 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.220037036 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.214844675 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.22215473 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.210504121 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.724051147 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.238381307 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.265411048 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.212859121 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.474982868 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.581502063 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.548983039 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.225631968 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.23439912 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.213149511 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.223222917 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.704072407 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.565783734 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.215535665 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.212489217 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.71582248 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.216760898 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.218563601 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.213537907 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.458264878 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.213345282 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.214971821 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.23371688 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.216837822 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.211604867 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.280526926 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.285091208 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.721177802 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.218344143 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.212454298 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.245180972 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.212321093 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.219305289 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.2146185 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.21402095 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.566630691 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.358457573 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.211678548 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.560471709 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.721460224 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.233850303 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.782846822 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.233071109 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.243709636 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.427028342 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.217845892 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.211998243 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.736796574 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.225931418 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.213413782 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.55101811 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.222822941 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.534538024 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.233856845 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.216381766 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.764044969 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.2234349 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.292687936 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.214367539 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.230841973 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.21609409 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.220555782 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.485435883 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.254367305 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.217242153 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.215532758 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.254177225 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.215664473 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.22084319 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.224260828 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.784258461 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.244180313 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.215099839 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.219354006 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.215376391 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.230506573 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.219374901 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.219156338 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.480562881 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.217847134 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.223840952 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.217720846 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.217586581 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.241238502 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.393449285 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.218932799 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.517070071 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.225250447 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.218364007 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.217217247 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.216838901 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.222240394 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.216635147 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.221603955 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.090891153 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.512604564 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.23666391 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.218021692 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.216590973 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.216415932 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.219142215 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.223084403 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.276088771 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.218614306 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9612512 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.239023691 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.247137199 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.216173768 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.229167764 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.218102018 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.218115387 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.220709417 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.508839606 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.485311017 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.362440697 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.222420563 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.218080733 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.973048103 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.242846813 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.400547194 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.235963808 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.218025425 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.46642564 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.450925289 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.220580296 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.217810284 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.22091999 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.478043548 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.221326783 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.53733513 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.759054994 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.240120075 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.229844222 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972798683 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.927905013 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.222959018 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.219352335 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.541998292 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.238083145 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.218964957 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.219643629 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.221116087 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.235470221 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.240418527 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.222932918 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.220278952 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.220803368 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.265202489 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.410739341 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.236471465 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.230761828 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.714209539 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.231352572 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.220955578 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.234815886 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.225016172 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.220157526 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.281989775 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.223778397 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.270688096 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.220957054 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.221850595 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.774508108 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.221744252 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.227034661 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.41154081 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.894206267 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.243316862 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.221127216 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.236990191 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.118663984 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.749117749 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.271635138 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.523121958 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.23309429 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.260942259 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.224448427 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.251856094 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.742750311 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.224581895 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.239537324 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.873641144 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.241269765 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.815544197 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.222351693 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.224598445 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.820819845 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.243686259 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.227227216 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.222404411 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.226751065 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.516653248 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.223247276 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.233462879 seconds)
  done (took 472.289303507 seconds)
done (took 609.029935444 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.222096409 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.223770535 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.21494408 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.228907771 seconds)
  done (took 10.02773748 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.23424511 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.23132799 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.231862623 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.231460848 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.234784275 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.231516287 seconds)
  done (took 8.534282301 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.225809487 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.227604642 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.230468012 seconds)
  done (took 7.822979556 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.430785669 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.249878273 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.556122327 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.251502932 seconds)
  done (took 8.627305793 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.232208632 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.232882034 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.232652297 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.234682537 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.236289445 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.237399946 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.235444685 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.234956149 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.23695957 seconds)
  done (took 12.252291736 seconds)
done (took 48.401239122 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.261970917 seconds)
    (2/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.975496876 seconds)
    (3/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.267463431 seconds)
    (4/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.413397207 seconds)
    (5/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.256680077 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.278061483 seconds)
    (7/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.213526294 seconds)
    (8/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.872863206 seconds)
    (9/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.30883394 seconds)
    (10/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.285558811 seconds)
    (11/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.343226513 seconds)
    (12/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.219600997 seconds)
    (13/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.270636349 seconds)
    (14/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.212476697 seconds)
    (15/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.319020338 seconds)
    (16/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.967520325 seconds)
    (17/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.235084468 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.412456317 seconds)
    (19/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.327164648 seconds)
    (20/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.245147713 seconds)
    (21/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.923257714 seconds)
    (22/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.398369932 seconds)
    (23/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.256459478 seconds)
    (24/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.302112872 seconds)
    (25/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.25274357 seconds)
    (26/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.275607392 seconds)
    (27/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.964336802 seconds)
    (28/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.326480634 seconds)
    (29/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.564615768 seconds)
    (30/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.322433507 seconds)
    (31/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.342872362 seconds)
    (32/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.269996105 seconds)
    (33/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.309540702 seconds)
    (34/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.241622078 seconds)
    (35/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.272851089 seconds)
    (36/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.230536208 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.327659851 seconds)
    (38/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.310780342 seconds)
    (39/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.236960618 seconds)
    (40/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.369075309 seconds)
    (41/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.296275053 seconds)
    (42/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.220216276 seconds)
    (43/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.234828313 seconds)
    (44/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.871237177 seconds)
    (45/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.361041795 seconds)
    (46/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.240717352 seconds)
    (47/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.246263742 seconds)
    (48/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.322216686 seconds)
    (49/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.285161056 seconds)
    (50/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.347431868 seconds)
    (51/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.233906626 seconds)
    (52/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.38077209 seconds)
    (53/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.280281314 seconds)
    (54/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.356728524 seconds)
    (55/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.258772149 seconds)
    (56/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.423581129 seconds)
    (57/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.980767345 seconds)
    (58/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.237879317 seconds)
    (59/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.247519393 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.294333814 seconds)
    (61/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.974424043 seconds)
    (62/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.389673825 seconds)
    (63/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.245089705 seconds)
    (64/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.244063195 seconds)
    (65/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.229639851 seconds)
    (66/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.239525362 seconds)
    (67/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.400331753 seconds)
    (68/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.392345144 seconds)
    (69/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.317470134 seconds)
    (70/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.377929905 seconds)
    (71/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.225359439 seconds)
    (72/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.065901378 seconds)
    (73/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.238143647 seconds)
    (74/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.285177133 seconds)
    (75/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.883506497 seconds)
    (76/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.321038165 seconds)
    (77/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.21734461 seconds)
    (78/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.237423541 seconds)
    (79/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.362589476 seconds)
    (80/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.879502274 seconds)
    (81/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.246939538 seconds)
    (82/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.313255706 seconds)
    (83/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.30809643 seconds)
    (84/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.276625606 seconds)
    (85/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.256972905 seconds)
    (86/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.371268098 seconds)
    (87/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.316592811 seconds)
    (88/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.356002908 seconds)
    (89/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.387253508 seconds)
    (90/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.254094069 seconds)
    (91/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.232273614 seconds)
    (92/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.325200812 seconds)
    (93/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.395961088 seconds)
    (94/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.582770142 seconds)
    (95/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.253140662 seconds)
    (96/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.259277674 seconds)
    (97/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.469257804 seconds)
    (98/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.246661032 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.315357314 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.266109602 seconds)
    (101/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.386804016 seconds)
    (102/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.245789173 seconds)
    (103/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.450827249 seconds)
    (104/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.246645651 seconds)
    (105/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.359640838 seconds)
    (106/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.319677389 seconds)
    (107/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.320854079 seconds)
    (108/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.318969603 seconds)
    (109/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.24850102 seconds)
    (110/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.435655036 seconds)
    (111/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.356251638 seconds)
    (112/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.238862043 seconds)
    (113/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.369843536 seconds)
    (114/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.375918279 seconds)
    (115/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.255133991 seconds)
    (116/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.413744652 seconds)
    (117/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.223755976 seconds)
    (118/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.243095985 seconds)
    (119/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.285048344 seconds)
    (120/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.243284441 seconds)
    (121/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.246683635 seconds)
    (122/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.319086561 seconds)
    (123/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.384872211 seconds)
    (124/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.881747732 seconds)
    (125/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.407978314 seconds)
    (126/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.366861365 seconds)
    (127/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.302725072 seconds)
    (128/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.337626223 seconds)
    (129/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.094800485 seconds)
    (130/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.914717122 seconds)
    (131/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.39655913 seconds)
    (132/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.360286659 seconds)
    (133/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.452170813 seconds)
    (134/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.411121261 seconds)
    (135/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.242971751 seconds)
    (136/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.422205305 seconds)
    (137/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.309209471 seconds)
    (138/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.266012425 seconds)
    (139/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.32939414 seconds)
    (140/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.000962018 seconds)
    (141/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.335125287 seconds)
    (142/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.24135274 seconds)
    (143/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.238479824 seconds)
    (144/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.248265503 seconds)
    (145/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.344957891 seconds)
    (146/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.30155201 seconds)
    (147/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.256443368 seconds)
    (148/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.935708247 seconds)
    (149/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.339027028 seconds)
    (150/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.935521498 seconds)
    (151/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.252622108 seconds)
    (152/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.248277816 seconds)
    (153/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.392092999 seconds)
    (154/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.301014602 seconds)
    (155/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.341607401 seconds)
    (156/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.264135967 seconds)
    (157/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.294573985 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.329553182 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.260441932 seconds)
    (160/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.10565605 seconds)
    (161/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.325389994 seconds)
    (162/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.238606047 seconds)
    (163/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.980356351 seconds)
    (164/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.263567266 seconds)
    (165/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.243002476 seconds)
    (166/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.382175116 seconds)
    (167/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.546626985 seconds)
    (168/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.293303297 seconds)
    (169/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.23216396 seconds)
    (170/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.606610873 seconds)
    (171/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.250755761 seconds)
    (172/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.416307642 seconds)
    (173/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.268720135 seconds)
    (174/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.22342398 seconds)
    (175/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.440366603 seconds)
    (176/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.377516837 seconds)
    (177/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.984299628 seconds)
    (178/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.311685926 seconds)
    (179/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.43492089 seconds)
    (180/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.242131084 seconds)
    (181/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.324617402 seconds)
    (182/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.367470662 seconds)
    (183/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.339463506 seconds)
    (184/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.289700686 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.285616666 seconds)
    (186/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.223055547 seconds)
    (187/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.435989946 seconds)
    (188/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.100856093 seconds)
    (189/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.25433129 seconds)
    (190/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.066999622 seconds)
    (191/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.891086318 seconds)
    (192/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.420809616 seconds)
    (193/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.28576892 seconds)
    (194/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.4411025 seconds)
    (195/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.232149663 seconds)
    (196/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.276732683 seconds)
    (197/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.056875046 seconds)
    (198/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.248515305 seconds)
    (199/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.247278823 seconds)
    (200/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.898338622 seconds)
    (201/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.227662593 seconds)
    (202/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.271679492 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.307254537 seconds)
    (204/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.279943759 seconds)
    (205/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.380237208 seconds)
    (206/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.295825032 seconds)
    (207/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.326419018 seconds)
    (208/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.254424667 seconds)
    (209/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.345292949 seconds)
    (210/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.233138499 seconds)
    (211/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.383373001 seconds)
    (212/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.269285947 seconds)
    (213/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.335025559 seconds)
    (214/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.292923456 seconds)
    (215/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.250012968 seconds)
    (216/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.423465825 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.335141321 seconds)
    (218/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.332420149 seconds)
    (219/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.274805941 seconds)
    (220/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.247399063 seconds)
    (221/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.22721055 seconds)
    (222/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.263623082 seconds)
    (223/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.246997105 seconds)
    (224/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.944670369 seconds)
  done (took 345.674774586 seconds)
done (took 346.813927429 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.297576929 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.427241951 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.267676559 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.268219946 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.292794685 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.24994701 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.285936886 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.26359907 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.25245821 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.253553888 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.248567589 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.25628213 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.271964908 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.285540328 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.362877599 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.264955563 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.268492314 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.25077983 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.28974391 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.309599233 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.293325273 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295821717 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.261965619 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.270158559 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.297500767 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.300060638 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.271672436 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.242511858 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.256577924 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.290512183 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.241852619 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.277994271 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.300828604 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.302513374 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.295131238 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.253203241 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296259745 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.429211728 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.287160228 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.286657805 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.255063969 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.301490391 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.262707722 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.262946057 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.30339166 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.263989307 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.299194138 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.37432079 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.242396183 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.248775997 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303340868 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.31492097 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.257676675 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.247850945 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.248030666 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.379026225 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.255405962 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.30047001 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.256961626 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.297695664 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.367038739 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301406516 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.315487851 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.300596872 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.256810494 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.274656854 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.254320848 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.31336825 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.252962339 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298511934 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297627611 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.260623112 seconds)
done (took 101.743162854 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.383291508 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.245170317 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.412334114 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.253129905 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.42068646 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.403486994 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.250061154 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.251445378 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.251598417 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.08435806 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.251033916 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.25184945 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.24571729 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.251552225 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.387151639 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.254459749 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.25052085 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.972115634 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.254570098 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.398936001 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.246819152 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.252543285 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.253777039 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.08340547 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.247417683 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.2488861 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.399587253 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.254674554 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.975366391 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.249927662 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.252104853 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.975292605 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.402690808 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.271102969 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.264130456 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.262433858 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.422374103 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.272569243 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.386839969 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.387479741 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.415984768 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.294654497 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.251283312 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.255788605 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.258059136 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.257487353 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.253201866 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.281275511 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.256940119 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.254227824 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.973271733 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.265712117 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.253644605 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.25420886 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.252855387 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.284895668 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.255300842 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.255575872 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.40458836 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.256703392 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.387561897 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.086622663 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.085943083 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.256410114 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.252933685 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.256131041 seconds)
  done (took 103.304045016 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.323285179 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.332165641 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.366419121 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.273663833 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.309147778 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.372564765 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.273521231 seconds)
  done (took 10.412511506 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.263251696 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.257746202 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.306391422 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.307706575 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.256759846 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.4724505 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.259237824 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.269985138 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.254561956 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.334508275 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.258239733 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.258279248 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.265199268 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.255957257 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.306031033 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.269834107 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.375077119 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.259892352 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.258522853 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.412839629 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.256187733 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.265096197 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.33117957 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.270369451 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.260249475 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.266127196 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.246649647 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.260163768 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.257052795 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.260189127 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.255410446 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.370508261 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.260926541 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.259056849 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.257395594 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.419224596 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.258621176 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.25835811 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.259601376 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.261296398 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.260255034 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.261023644 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.260984812 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.25704838 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.261107179 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.286319985 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.26032488 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.261704251 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.261236653 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.261447134 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.334191313 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.260857439 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.257744187 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.258236606 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.338216885 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.268600818 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.261890422 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.259046669 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.261459974 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.257528684 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.415506714 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.310280966 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.262407424 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.308482145 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.262044714 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.262794662 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.261652366 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.261484744 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354082259 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.261762402 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.310899234 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.26037551 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.488494601 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.285965214 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.264969345 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.266546613 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.264799439 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.263709402 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.259220743 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.268611792 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.260077427 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.263890487 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.269175561 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.260072082 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.260246468 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.447646881 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.419423649 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.261549239 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.27828078 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.27100514 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.261375847 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.337791585 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.264286859 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.260703598 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.316879406 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.380809623 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.341187538 seconds)
  done (took 131.038445996 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.277553616 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.277452998 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.267672249 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.290817811 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.265695707 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.264073516 seconds)
  done (took 8.811105146 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.267074437 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.266140583 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.264874626 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.263893772 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.265269986 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.264395517 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.265777789 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.26634091 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.267686206 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.265925829 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.266796281 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.267456122 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.2666415 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.265477243 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.266361778 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.266298465 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.264901618 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.263611814 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.266077722 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.265556959 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.264691532 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.265658711 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.266289008 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.269503126 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.271745013 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.266752441 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.288163723 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.265676568 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.267536697 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.272286576 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.28608179 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.267773591 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.268046189 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.274357751 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.271096462 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.269450775 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.269803218 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.269468359 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.266072933 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.268665083 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.268988341 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.268074851 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.268559958 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.268891637 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.270688745 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.274023529 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.273465652 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.29021015 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.268299875 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.270905393 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.27054678 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.269912609 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.268692526 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.27152848 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.271086358 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.289515895 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.27440744 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.269621516 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.270066495 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.271990112 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.268992056 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.270187825 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.272336071 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.273010962 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.267411067 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.270614505 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.27154287 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.274397615 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.269712946 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.270382346 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.271305484 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.268279236 seconds)
  done (took 93.594142995 seconds)
done (took 348.316774631 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.04436326 seconds)
  done (took 4.218098789 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.341685525 seconds)
  done (took 3.516419328 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.258028039 seconds)
  done (took 22.436800965 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.331403613 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.299289055 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.2686943 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.267759609 seconds)
  done (took 10.342346391 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.515002047 seconds)
  done (took 3.687940749 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.270927046 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.265069433 seconds)
  done (took 5.711375182 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.528061062 seconds)
  done (took 3.701929132 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.610168661 seconds)
  done (took 3.790469865 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.2672207 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.280101171 seconds)
  done (took 5.730874267 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.255358079 seconds)
  done (took 3.430412369 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.269150584 seconds)
  done (took 16.445899621 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.272817125 seconds)
  done (took 3.449769421 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.29047087 seconds)
  done (took 3.466303002 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.797970016 seconds)
  done (took 5.972037711 seconds)
done (took 97.074787089 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.264615091 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.266591128 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.265994338 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.265295929 seconds)
  done (took 10.238919404 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.326411379 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.324137908 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.325259425 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.325796389 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.32399357 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.324153828 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.299391561 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.298336607 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.3244719 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.324427012 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.329762958 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.324798021 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.326500556 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.314319465 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.326099641 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.325229104 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.326369489 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.32516938 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.314603534 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.326702259 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.275030484 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.32593823 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.325550989 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.27315353 seconds)
  done (took 32.813263322 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.769946281 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.34490579 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.427920095 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.327084608 seconds)
  done (took 7.046926243 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.352381182 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.351356134 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.365637671 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.4045743 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.416233764 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.364426515 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.296686752 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.296166601 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.281819613 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.353204451 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.402574208 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.343239107 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.429415684 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.27383847 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.479214838 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.274657352 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.276020911 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.353162137 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.403789934 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.404342445 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.275416771 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.351765606 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.352786748 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.343418028 seconds)
  done (took 33.624115901 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.282857434 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.288075618 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.275171028 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.289907668 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.273796257 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.27532789 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.27584774 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.279563174 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.274497473 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.273293954 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.274277306 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.2889092 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.279176852 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.274901238 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.283141889 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.276257194 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.280770524 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.2787241 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.27461744 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.281486774 seconds)
  done (took 26.760045198 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.271063076 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.269130717 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.621790378 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.526427072 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.268256555 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.270018973 seconds)
  done (took 13.405909293 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.34643129 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.496601581 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.277238639 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.625414279 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.715743494 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.283443585 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.279381897 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.51981203 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.828362212 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.804779647 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.338434874 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.346989084 seconds)
  done (took 19.042703417 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.282542632 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.277312562 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.283876487 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.291390972 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.331491919 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.297566653 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.286866455 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.272704078 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.336183081 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.352491816 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.298605535 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.333203169 seconds)
  done (took 20.826014476 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368460959 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272419531 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271294141 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359431103 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278055181 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119063907 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278256284 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.971756751 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.293103348 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546838373 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283136631 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369964388 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.528490357 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272780046 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.279712548 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.259037429 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508294287 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.757702672 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276611523 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273196146 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327996546 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287272536 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293022917 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.488746047 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.275615877 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273618615 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.536547892 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.274538673 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55583473 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.293879305 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284289685 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275732819 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551224663 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920270854 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392770284 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481779377 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2804373 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.27604018 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.272374426 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.295410138 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286802567 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.277574967 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285593847 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276418776 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275726338 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286503918 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983689779 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.298917928 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.272696532 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27737564 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530900895 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377877468 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.280815177 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.276256564 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296857241 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281756679 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.280016879 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3692162 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859053282 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275407089 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29526817 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.282258665 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.279165211 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278014349 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903795666 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.282361367 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.279459689 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.281741677 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276115106 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278033581 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.318448196 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27789577 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.301888764 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27761139 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98464558 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288253545 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284249068 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823085723 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280408705 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.283391128 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.511142637 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278928387 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278265316 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.277167278 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.280515191 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988987294 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292708175 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.265458716 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325207144 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.979516496 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.507442422 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299797476 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310165775 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.503045478 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.265658485 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279062705 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.278957023 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28639318 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301650701 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.979802261 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298932685 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.283635676 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.538092733 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.491777527 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28890671 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.277735315 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.751426352 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313819381 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.302071501 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290732656 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.495447529 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.861370932 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.296520066 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280830549 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302229238 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.280494167 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028776062 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286613449 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.406413263 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.2883846 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553634304 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.068699159 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287701739 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349752302 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285754129 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.281580702 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281540133 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288677923 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28289094 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.482537974 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306280266 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.297781108 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.283048718 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282283644 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.280507006 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297750511 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.286252649 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.506977632 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282410787 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579310633 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282251335 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283165437 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283181826 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.5056659 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.29232954 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.624048337 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545732332 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293624899 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.297858611 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.29901925 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303560527 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387559217 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305651771 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.291762404 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.543825582 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.288298411 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.287827838 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283229109 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.302206607 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2890788 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.2908687 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292409664 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869591882 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260952217 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.290973117 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175999386 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.297583938 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351909165 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.291149182 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.49515528 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.284426685 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290851671 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.291793529 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.282485248 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.515476827 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296486553 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.284767787 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366677213 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.750231081 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.887081819 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298838602 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.286310356 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.283705631 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.28283764 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286511652 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286596086 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.286653407 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497764242 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300325073 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.293231914 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.873670398 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288630436 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.286522422 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.297602289 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298933446 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.293044078 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287318715 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.283289011 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292764172 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302889132 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.303082482 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432476692 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.300892713 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287893172 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.803975272 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.29312305 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288197925 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287783733 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322461635 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.28998756 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110103365 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556539192 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297844381 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.547047068 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.294969161 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.310577574 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.287029197 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288283 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30256276 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.297321313 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302245583 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.299174096 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.288494226 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309030188 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868658794 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020637603 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823599459 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298253298 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.298444816 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.293332066 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.997722509 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308494122 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289224168 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.525057704 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.995471928 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307928454 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76061964 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.304736029 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072375001 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54987687 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527523184 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295965012 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.29264667 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551155271 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.508576764 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324387477 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.303503343 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29526367 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.276009011 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838694361 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309025847 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385548099 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000525661 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308666991 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.292655335 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.352946256 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.306544584 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691525534 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311774094 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293952111 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.29423069 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324325876 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095854639 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.301927559 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292232157 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900698191 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.298056818 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.764566127 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310489392 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.503450914 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.302913305 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.295918408 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.290222748 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.307234063 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.548525499 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552407545 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298856366 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.29607525 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839108261 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.166650769 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.299805511 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29327395 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045593074 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299604283 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583069364 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.313589095 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.301408893 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299897085 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293826115 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292949038 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.29072112 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.298775679 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269340826 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785905846 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.29759906 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299137111 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332026014 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298968141 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.54984429 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.308255492 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880784335 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530787844 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301952281 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317726234 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.298762763 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309344992 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.287165091 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.294344482 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.295350444 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357614237 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.522907642 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.300192498 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.282285591 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304365607 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.509927683 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.296288071 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.294839166 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540071388 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.293223042 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.310278425 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039372013 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332049673 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.296304215 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302935264 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.297649661 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.315712601 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365782621 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508693262 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.308678896 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.308803476 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695103897 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315467945 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303405832 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.311304308 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394403277 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30254511 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.310143373 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.073568687 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887522459 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043057357 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.895600155 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564570311 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.303989107 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306274767 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297010972 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460446186 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299469672 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572736172 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298606347 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.312703206 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324114595 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299357023 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320974354 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.536694846 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57428208 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298165498 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296969856 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303418403 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.299236602 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.308437843 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.509684975 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792015332 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85297999 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301211335 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.300179966 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.0308267 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593621448 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299872532 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299475989 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298970641 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.316502737 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.304850017 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.329514388 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301502339 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449162972 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557881405 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961484 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.327983736 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.327361369 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.816891533 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305501594 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.559816393 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297937478 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.514568666 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892578018 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.018570147 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572211083 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372024058 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.514180097 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.300654378 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463790334 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.30330618 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.301377901 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30210133 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300476833 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.300391201 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.311452964 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89699743 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573732063 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.306408653 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.303982968 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333523035 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.312060745 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.525379006 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029568551 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531673301 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.312032214 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306845621 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.303256662 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898643439 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569336333 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309599472 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.30698229 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542032171 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304040986 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326337943 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.820513889 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.300980956 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855656097 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.276244635 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325603022 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316335268 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.019293378 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901945294 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.320136682 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799801814 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307730909 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307293642 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583904574 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.311537149 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316501714 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583913819 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.308762372 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313751304 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525296756 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.89266138 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079752014 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.320854797 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31772993 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.312245475 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305705284 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380953802 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328695512 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307306601 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.718158594 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323871122 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305599023 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317729147 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.317339399 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310096108 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.324031734 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306901461 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.312741334 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.291462753 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.296391795 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312217493 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404489794 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863303212 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336783393 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.97874705 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.632870806 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.563666638 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306216155 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.315201124 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.31099289 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307718748 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307975217 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308023177 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32159363 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861163187 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.310114038 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.33789452 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311551941 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.307776163 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519642411 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308510869 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539223699 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308512666 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.331312217 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.293635842 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309170045 seconds)
  done (took 936.499802288 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.307924152 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.323941492 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.340848897 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.400989544 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.323891409 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.3997663 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.358061536 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.427094123 seconds)
  done (took 20.097645435 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.315682182 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.323426056 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.312843873 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.323247186 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.324944986 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.779310341 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.328913901 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.318933987 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.325954676 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.324094426 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.31438777 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.305972476 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.318315251 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.321999245 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.312021385 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.325148208 seconds)
  done (took 31.796509883 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.277674945 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.44126405 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.242430886 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.342911993 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.356711581 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.312352722 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.523547921 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.328419017 seconds)
  done (took 26.042566701 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.320943882 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.321280777 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.32165096 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.323586333 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.322040259 seconds)
  done (took 7.826165012 seconds)
done (took 1187.197015175 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.314556265 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.318332106 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.314705015 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.318455079 seconds)
  done (took 6.483243035 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.297474702 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.297847216 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.298276168 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.31305467 seconds)
  done (took 9.423264568 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.010830159 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.941133967 seconds)
  done (took 5.16909431 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.795928773 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.797100767 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.794079109 seconds)
  done (took 6.605188872 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.620309567 seconds)
  done (took 2.837469446 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.205253995 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.317209048 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.991894099 seconds)
  done (took 7.732765803 seconds)
done (took 39.466609252 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.320069063 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.562335055 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.46636164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.312305266 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.47407084 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.468698553 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.091039667 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.314969789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.320641283 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.316882165 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.319531019 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.475546495 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.074265273 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.558166632 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.074449374 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.651822781 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.47589232 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.312174464 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.311158899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.327979869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.108996297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.323994294 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.31732089 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.312258919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.492868328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.457944704 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.324209765 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.653043198 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.312681452 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.314010985 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.456847234 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.314293355 seconds)
  done (took 80.836050684 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.312935831 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.333134457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.313177668 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.341147542 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.323993569 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.329300719 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.313669147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.314639425 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.315279902 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.314225697 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.323446407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.316713656 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.31406596 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.313520833 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.333468111 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.312544863 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.328138806 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.313905126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.313664134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.313490457 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.316355124 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.314869462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.315572173 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.314319227 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.327567685 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.315552687 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.335301886 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.315003463 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.314164113 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.315888027 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.316274555 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.344167371 seconds)
  done (took 75.460688129 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.315404876 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.321730556 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.31692853 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.314977685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.332892006 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.316959467 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.31575049 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.321203562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.315550048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.316541128 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.316702921 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.33566352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.318278708 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.31593381 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.336410305 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.317517312 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.329370078 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.316878017 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.317448041 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.318891566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.318126114 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.3172253 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.318799899 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.316260889 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.3302 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.316835153 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.316593068 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.330317238 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.317686386 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.338252322 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.320270234 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.318119078 seconds)
  done (took 75.492029507 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.597366422 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.326503728 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.325650102 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.318557661 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.325562839 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.327846507 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.319652006 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.602481413 seconds)
  done (took 14.366550254 seconds)
done (took 247.372254397 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.319836662 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.83466121 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.368160201 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.322709743 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.352588599 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.346948475 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.548204868 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.366388505 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.543389543 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.340756491 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.366136226 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.319779184 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.12458652 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.481621865 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.203829066 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.301854111 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.20881634 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.336977117 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.914866155 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.598761483 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.347166311 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.32186387 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.184201898 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.234404352 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.313089148 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.411343511 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.426035574 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.540864388 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.483928479 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.405579127 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.862542094 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.341489884 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.327396617 seconds)
  done (took 62.625755369 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.327563886 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.448780668 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.327457969 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.329491649 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.4488585 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.327946799 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.328481406 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.329451442 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.329618299 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.329729503 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.329550919 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.330041391 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.330497695 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.374598052 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.45341206 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.343965975 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.328361021 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.445383749 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.328146245 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.321262586 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.372607972 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.32893003 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.331174556 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.374717762 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.329625663 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.330875974 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.446349369 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.331086501 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.327001725 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.446410874 seconds)
  done (took 41.958124789 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.330562091 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.918838188 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.073921589 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.342833996 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.331348942 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.336327833 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.617372017 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.337823873 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.335558251 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.334617492 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.842788893 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.335573931 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.364968654 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.116176266 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.339886988 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.332654717 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.330862449 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.332292128 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.939412508 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.344472379 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.636561234 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.335280772 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.61753358 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.343051141 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.355429754 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.335846979 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.337149588 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.196731433 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.33478888 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.839694825 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.116607917 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.619607458 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.113021725 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.076858485 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.107242106 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.339264898 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.334101413 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.853547118 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.339651884 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.334222242 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.620687035 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.339313959 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.08684003 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.033949031 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.352495095 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.332247207 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.212442557 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.850124476 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.580709608 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.344645013 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.118080956 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.342752684 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.335662663 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.33551225 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.576794424 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.342961856 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.334071918 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.220430929 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.339847172 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.621592491 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.3390148 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.335959204 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.940701634 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.340368428 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.940076322 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.340393336 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.342357414 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.355744675 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.097914172 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.343991135 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.057014944 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.353242666 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.33543788 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.846212061 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.927865497 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.26071967 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.337534923 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.928763488 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.141539206 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.618531393 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.340176437 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.172996779 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.622659971 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.339402897 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.337894284 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.338309874 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.33782966 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.413871029 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.621719157 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.009175608 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.067495912 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.244879369 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.628077777 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.346537501 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.33705195 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.229926091 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.342389959 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.336718445 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.094805222 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.065769778 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.358211476 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.344820687 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.073525028 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.36144411 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.627460218 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.347969239 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.098740235 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.343766046 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.452960159 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.338463204 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.345708876 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.361267686 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.62398581 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.344900046 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.33759946 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.043729966 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.890853468 seconds)
  done (took 189.064905798 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.333617995 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.333084873 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.332646352 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.347370667 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.332336577 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.343088781 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.331570258 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.333069363 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.338075964 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.332986273 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.332341993 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.342394567 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.339839487 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.333820757 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.333848643 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.332644257 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.33206495 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.339420558 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.333198719 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.332146291 seconds)
  done (took 43.946052687 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.340273403 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.909391187 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.876872149 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.347017918 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.33792753 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.341203216 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.396207336 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.339889794 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.33722151 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.637893354 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.512745047 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.362043737 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.336557598 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.338574271 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.872656242 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.336676644 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.637484144 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.898392925 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.341348145 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.896975165 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.330977331 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.340971243 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.340752476 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.89697294 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.637750047 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.626573309 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.398136162 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.900279851 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.338870472 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.337990459 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.898356835 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.345376064 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.342346655 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.892621225 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.359123022 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.356266261 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.340862359 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.397988193 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.401692029 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.643723903 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.972843699 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.627428712 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.353637596 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.528645707 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.345850784 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.331842672 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.900511128 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.361278774 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.33246715 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.342853877 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.34957844 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.876666737 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.361126091 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.879821309 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.36300872 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.34430414 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.901722994 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.878196014 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.900489188 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.521214293 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.363665635 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.632354689 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.347603837 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.904301519 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.362342449 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.345596634 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.3453768 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.51902763 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.938560082 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.638149682 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.649919977 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.644798294 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.346911604 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.401949324 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.36017114 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.71196903 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.401435937 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.793199707 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.652875835 seconds)
  done (took 122.599277716 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.622452192 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.460301185 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.742426861 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.952772574 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.340183694 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.464787505 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.44953945 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.601726094 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.345079319 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.444091873 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.994773733 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.444605792 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.09893873 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.411809626 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.436959163 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.489465111 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.734064639 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.341818365 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.015827902 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.978133384 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.348509753 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.584686414 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.921027058 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.55444177 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.361676937 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.911932642 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.295407111 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.01609954 seconds)
  done (took 52.608168821 seconds)
done (took 514.025767276 seconds)
SAVING RESULT...
DONE!
