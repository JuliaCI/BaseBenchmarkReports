cset: moving following pidspec: 32297
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.937637722 seconds)
loading group "string"... done (took 0.571029989 seconds)
loading group "linalg"... done (took 8.994128413 seconds)
loading group "parallel"... done (took 0.172495019 seconds)
loading group "find"... done (took 1.460869489 seconds)
loading group "tuple"... done (took 2.117492195 seconds)
loading group "dates"... done (took 1.399757434 seconds)
loading group "micro"... done (took 0.220687626 seconds)
loading group "io"... done (took 0.626560203 seconds)
loading group "scalar"... done (took 44.723125654 seconds)
loading group "sparse"... done (took 14.152879318 seconds)
loading group "broadcast"... done (took 1.170701325 seconds)
loading group "union"... done (took 12.904090267 seconds)
loading group "simd"... done (took 2.757146849 seconds)
loading group "random"... done (took 10.785172045 seconds)
loading group "problem"... done (took 1831.890877077 seconds)
loading group "array"... done (took 27.194654586 seconds)
loading group "misc"... done (took 1.145795182 seconds)
loading group "sort"... done (took 3.850718946 seconds)
loading group "collection"... done (took 19.123300548 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.642703852 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121575843 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.170028943 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.357657605 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.216481023 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.151945548 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.164024292 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.563386571 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.015103733 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.216837082 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.146999357 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.566257119 seconds)
done (took 6.071418919 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.268569049 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.45636271 seconds)
    (2/2) benchmarking "String"...
    done (took 0.115780805 seconds)
  done (took 1.24206254 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.095325326 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.181192976 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096751931 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.113116232 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.114384572 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112624361 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096492606 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113461684 seconds)
  done (took 1.499029583 seconds)
done (took 3.783215107 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.504046093 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.850660016 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.577762477 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141179592 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.162241969 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.15236079 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.318002429 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.166979435 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.125820446 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087678391 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174426265 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.36831498 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.4842878 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.954749537 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.086221309 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.131542593 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.085592125 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.709563425 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083031964 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.143321705 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.543195053 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.12752237 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120142009 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.14304729 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193896362 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133996916 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.169795686 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.09647545 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.670916179 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105063986 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185784269 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100989701 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166396702 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.253591125 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.09824396 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.099244448 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685794565 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.182434275 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.115952305 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104123366 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682344928 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083198445 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.204180269 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.111916407 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.110730975 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191750225 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114616989 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080296385 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.104881716 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.093766823 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160584359 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.454476006 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106685913 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.147357619 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108720551 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.690676175 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096931551 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15683979 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142808398 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107237092 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.099984108 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107515613 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157266252 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110488191 seconds)
  done (took 19.805080293 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.120431466 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.143082935 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097016591 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142324809 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143476439 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09910102 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085495032 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096952831 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.111697617 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.189018555 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140055478 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.146866836 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093436042 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083618194 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12028928 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252446723 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107687229 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124020471 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083424472 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108983477 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143312874 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099140012 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111286354 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111578521 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172837435 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206957089 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111259021 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12568042 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096250597 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100933079 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145030897 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.164287762 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077519169 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.097743237 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188008178 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122749454 seconds)
  done (took 5.247840157 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.167066324 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.153059472 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.173309419 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.198036621 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.184658776 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151649995 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.17208724 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137032112 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258453866 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.199553002 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184833814 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11724668 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112806943 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078605556 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09809324 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079258622 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.725489339 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.18521545 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.156392572 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.103186615 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110755655 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109092238 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100377622 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086573654 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.101585744 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105359675 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.120102727 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34188704 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.183281566 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107069032 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.320138901 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121061909 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.092227877 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.104589328 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134348262 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202791394 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132660018 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124525571 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10619612 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082848974 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.241396208 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111674514 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080516699 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.128997989 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134493995 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120113056 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104280973 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.113478012 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.229099447 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.102070167 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122731799 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.094500688 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200433713 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.099321049 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101140332 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.362732245 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120782511 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088217078 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.10234051 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.302203492 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135172348 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085145411 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079869593 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105921132 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096931532 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.405104001 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092628452 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.918244069 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.098260025 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161132273 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102118574 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109319898 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088198777 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104788293 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104401631 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.101717183 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081512505 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098907825 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080936401 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098804866 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086494189 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.119114517 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103582831 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081710186 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163443623 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.103246157 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.121164299 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126688852 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087418104 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098229092 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115688668 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100469564 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085325856 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.149042205 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107267965 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116232804 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103518877 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130147482 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100359706 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.195725351 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082926419 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126228704 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102810427 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115444909 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.124086368 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099441791 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086188106 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098063803 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081207401 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165912015 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083723091 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081770965 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104887716 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113995295 seconds)
  done (took 24.115594509 seconds)
done (took 49.838677929 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.483495192 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100415475 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.114001375 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112694639 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111233563 seconds)
  done (took 1.667420037 seconds)
done (took 2.386510824 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.340810536 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.191481046 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102574537 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.197324641 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089720156 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203784472 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165771751 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118260901 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.198811651 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100923218 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.176705101 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099236584 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088766277 seconds)
  done (took 2.821209327 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096870139 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121521505 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082777587 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112220357 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077296829 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111587749 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093684699 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.138268154 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093024556 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105376417 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077618265 seconds)
  done (took 1.824237924 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093394652 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115303509 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083582844 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10863883 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078120441 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090784128 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109715618 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118594397 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092166525 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105040211 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078056275 seconds)
  done (took 1.790847978 seconds)
done (took 7.138736078 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.054669214 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.482709805 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119525046 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166131457 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.340068425 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.213204038 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.52780401 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13433421 seconds)
  done (took 11.938907276 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.130826095 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102746624 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085359569 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102174702 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081337895 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102696131 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.080608755 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099478815 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084945096 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099761425 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082406249 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097686942 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082463502 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100908272 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084956969 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102333062 seconds)
  done (took 2.293570035 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121135036 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119281225 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.1064968 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110320398 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085216233 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104188871 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.089051416 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.104939041 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085317263 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10337695 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109862663 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0919974 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107781918 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.084739459 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106268079 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093007364 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102928178 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105238807 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090392036 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.106215621 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092051455 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103940343 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.107616119 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092079371 seconds)
  done (took 3.249847352 seconds)
done (took 18.199872497 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171487695 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086374886 seconds)
  done (took 0.975429238 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.104010086 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123349895 seconds)
  done (took 0.955314869 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.1098381 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.10003204 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138544029 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.117774957 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084472333 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099938173 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117271479 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.101598408 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083239448 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.101632979 seconds)
  done (took 1.782192034 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088204323 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.105124194 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091744439 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.122850371 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111431202 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.085039656 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105289063 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088274375 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106837234 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082215947 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.1073919 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.119793235 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.090444864 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121210206 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088692742 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.108026593 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110735396 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086986569 seconds)
  done (took 2.547983327 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083465444 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084872629 seconds)
  done (took 0.897095331 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085675545 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098127545 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085085231 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102180677 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081956275 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098625624 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082453432 seconds)
  done (took 1.363200605 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.521580502 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.261363903 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.347281894 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101603708 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.156949678 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.380449807 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.139374048 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.116134883 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.116301711 seconds)
  done (took 2.913283867 seconds)
done (took 12.158742433 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094716105 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.195055912 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.549383338 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118393723 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079025999 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162017245 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.270702311 seconds)
done (took 2.197460529 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.362239212 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.127768131 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091146375 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081061018 seconds)
  done (took 1.389214551 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081974503 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105817729 seconds)
  done (took 0.920826286 seconds)
done (took 3.049186923 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081112964 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080220841 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.117235468 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097647088 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080813818 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097668411 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078284295 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080552605 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099657991 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080275105 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098343459 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080794634 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097821335 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080809328 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095349101 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079305775 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078071729 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097460349 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077989767 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096322245 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079056914 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097985108 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078455777 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078027441 seconds)
  done (took 2.893333397 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.223969873 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099673079 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.087235286 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.104576758 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.085800321 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105444773 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104214536 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081376095 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104786581 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083887168 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102328027 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085471886 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101379016 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08583867 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102526792 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102167419 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087048758 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099924076 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083584085 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103142636 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087518909 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099021678 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.085035911 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104590248 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101992592 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085818892 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.101153096 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082551296 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105313524 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085616151 seconds)
  done (took 3.704911372 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090408856 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.078121883 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.097557363 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.090634932 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.096382389 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082943395 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.09635454 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079874087 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098975475 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.079460706 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.097959709 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078919484 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096866159 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080113245 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07990035 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10373564 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115241749 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079608506 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078242798 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097409511 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08476633 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096525153 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08229296 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.097077271 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078831478 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.096329465 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079808157 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078998724 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097859788 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07887492 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102833496 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086637834 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096419691 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.093101133 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103776254 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078665462 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.106643627 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079347737 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098568214 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078835291 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096100424 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.079252393 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079263008 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10877753 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082860013 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098049143 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079158053 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09851613 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079781686 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10028758 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07915202 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096968927 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082153876 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098300935 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085072001 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078568116 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098759775 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078710082 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09773211 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079062041 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096581751 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079792811 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.104225831 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080466958 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12134776 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.091540187 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097414172 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081629914 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101411714 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088232886 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09991743 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098747875 seconds)
  done (took 7.252598441 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084995814 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108874177 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081926402 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099073148 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077798122 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079806499 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10529415 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097906884 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08202081 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117893665 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080591968 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098991968 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082733453 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101380427 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081314459 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099155069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090529953 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095798651 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081544366 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100724827 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081334781 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104595259 seconds)
  done (took 2.782118393 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.228814195 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107485966 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147894422 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117530512 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100143178 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114422066 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104622914 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088911717 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106243227 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0904004 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108429599 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087468367 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118071651 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10784163 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090114341 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109550287 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105369619 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091830071 seconds)
  done (took 2.768239268 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097097937 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100771462 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108817567 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10173819 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083580638 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103811573 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090582495 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117852246 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.103336086 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.083418403 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112152625 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085398622 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103361045 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083205401 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103438046 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083389148 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103237048 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083008289 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111642818 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108088603 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090181 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11148841 seconds)
  done (took 2.916371516 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100243138 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103337951 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114744705 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105330683 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079619024 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100410627 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090489079 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.101124924 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109542063 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085259695 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100920828 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082962167 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.108408991 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083815362 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107898822 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083958928 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103822275 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083762266 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104165076 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079682433 seconds)
  done (took 2.675970241 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127947503 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118345881 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10021525 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129235878 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118104438 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100422547 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.129684678 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117775114 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101421048 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132518723 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099763963 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119282766 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129687757 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107246425 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118669372 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129760883 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111363173 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130223045 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118976754 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100809023 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132436539 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117910582 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111921369 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12073713 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100665951 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121796614 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118348464 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10814505 seconds)
  done (took 4.024141904 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083851995 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083373715 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.099202103 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.080895898 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.098955917 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080553551 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.099211736 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080840919 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083176973 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099262148 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082453605 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101082322 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082874711 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101107333 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083379647 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100853784 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083602384 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.080403711 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098832866 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080257274 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.100703317 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083352207 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.100814242 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082073204 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080088596 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101959935 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080415968 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098495893 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083366512 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098695682 seconds)
  done (took 3.445834106 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092062967 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108149372 seconds)
  done (took 0.951602919 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081618304 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119419851 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080878251 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105443359 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089723561 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103084214 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094315502 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10771428 seconds)
  done (took 1.534377152 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.10983875 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.123212748 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090541263 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115302406 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.104888277 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.122272703 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171520063 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090034169 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110597615 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084905774 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.122746028 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084032294 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.114209822 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108731928 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093880976 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117746442 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082370897 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.113956175 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.092809985 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.105606163 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090461821 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119423917 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096377012 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.110865226 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086800985 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.116030423 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116612668 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.096991358 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10802092 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.097216208 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111154993 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078141557 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.107141851 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090386499 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101372128 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10337287 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121946915 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090692034 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113682171 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090237253 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113860931 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097790294 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095912907 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110439238 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101984142 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.109058074 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091736129 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098861422 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08600317 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107094413 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.081485786 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106792952 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079641354 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11358149 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09528198 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122373205 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087769216 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107963427 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090026142 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107285934 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092552084 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108680448 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114132637 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.089230135 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113500891 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.096127701 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112280631 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080441499 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096581835 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084022558 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112301414 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111020825 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115346068 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090180609 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109283688 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083074782 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109958257 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09124478 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112739155 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11450416 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090499472 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111143868 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096739159 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107111937 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089613221 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110427113 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.08766977 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.106921363 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085190229 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124470829 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088473292 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101283871 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086125101 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115284099 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089797477 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.107963344 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086566166 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113355269 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080019966 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.108929222 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0916267 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111317893 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097842141 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109733428 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109574283 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094956734 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.116717902 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091216663 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107411888 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082704448 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110043822 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087864327 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.111781413 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079471019 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109185215 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090253189 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.109980595 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09740686 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.106247528 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.091038493 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115147476 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.098006056 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.106576775 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081792167 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109194956 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090941873 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113012599 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.098621623 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.106836001 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080373026 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09903296 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094651881 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.108617811 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091794922 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109532095 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090860897 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.099283813 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084000925 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108813693 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096266201 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.107409042 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110897517 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096139294 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111266967 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089065126 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.115233057 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089398362 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104713374 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095614089 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109258864 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081190243 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113639258 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090217075 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.107496309 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091199655 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113747388 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090864933 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.11042282 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088664196 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109839672 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091287735 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.10466038 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09130814 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.107113966 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.10722274 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110277127 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080685516 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.102224748 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092479292 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.10522052 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090125624 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104895642 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090698368 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.111033376 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083805292 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.108598237 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089920326 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121852306 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117583483 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092061089 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112267122 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.098502293 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.108595141 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09261883 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.108736569 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092175399 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.110493982 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096330812 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.112254046 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091616006 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108902927 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082623002 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11171534 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097453736 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105459685 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084254239 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105741167 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091483437 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.117034322 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091220613 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110769829 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088612969 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1119744 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095991775 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109723101 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091821098 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106214209 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091549793 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.11525709 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093373974 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111534503 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098038703 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110890899 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081554317 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115024315 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088173409 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113835897 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081704339 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106076319 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08770945 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.11121576 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.090164929 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108770384 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080534339 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115820106 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096972612 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110854187 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086785636 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.110571374 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119928571 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090635101 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113063502 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091710043 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.113228247 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106589527 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105525743 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09180612 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.118797779 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.090860816 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099132642 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095646006 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.108423494 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085560353 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.109175032 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.088751455 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110707301 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094364543 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111740602 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080129632 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.110136372 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.089924004 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106590675 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082693828 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115144796 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092245079 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109738593 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10141809 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111944785 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.091772185 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113954366 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.090790459 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.112691181 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.11156103 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093549266 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.113951185 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.09023807 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105707345 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092105252 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105409641 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08600714 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091337791 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.11192848 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091876061 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112477669 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.109142495 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09729475 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110564562 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.093002289 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.128817337 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107248447 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087831278 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111434615 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095152175 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109584615 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091360735 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100969148 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097217492 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.110505953 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098971893 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109268136 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083480345 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111137012 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092271529 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111648401 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.093338126 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.111739028 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090890946 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.109714136 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091707983 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121050034 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088987911 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117877219 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094750579 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114329937 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.09117811 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.112431202 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090963022 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.108023976 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092675707 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.113104174 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092725378 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.112364041 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113393276 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093247877 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110098476 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090935913 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.112516579 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093453601 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.112988731 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.082372125 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087646549 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.108022347 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.093254818 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118493084 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.112760004 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090239945 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.089139733 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113864534 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.090371953 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.1047885 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09639631 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115505173 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.092718208 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121621781 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106408461 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092864798 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121298002 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082256125 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10867643 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086093364 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.107803977 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098498456 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.11286699 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.098407192 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112626285 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087780507 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104215926 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09398574 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.109107109 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.08229443 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103814354 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097037741 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108669711 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090780829 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.111930319 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095883003 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113160288 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097110099 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.109678723 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092718678 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.112736212 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085122192 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.107462565 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088473764 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111308032 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.094711909 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.106816231 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085652238 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.091160825 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.111585936 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112047196 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.091927741 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.110148749 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099139995 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111146723 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093229511 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116199702 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083105485 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111519481 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.092477636 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.111189654 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089168986 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113055061 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095467152 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113344958 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098585174 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.111536331 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096253144 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111614169 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087077829 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.1115321 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.092982297 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.111817551 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088987926 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.113234172 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099967896 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.105545583 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093107315 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112847439 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090455455 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113943745 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.095177191 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113082315 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097253645 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.112765115 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093424594 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.116762221 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09285279 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1147087 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094860474 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.111306636 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097250106 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.109412081 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.119689459 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094648147 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.113594924 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093020988 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.109130918 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092783536 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.110525195 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092655407 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.118238702 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.09466052 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107378572 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089083744 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085533247 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112836787 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116738352 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100473478 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113518172 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094605573 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.103669702 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.085869235 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11398124 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090559964 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110718833 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095974409 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117354648 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093727354 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10972728 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.092211378 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.118113893 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098030232 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115156188 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08976617 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.115663682 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.09378258 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.113336255 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090676505 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.111724026 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094036274 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114812158 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091256721 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.109732223 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121578027 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.099020755 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114690826 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093138696 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.115457534 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093676204 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103586424 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.095185957 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112964837 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097204784 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.113886093 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092897764 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123951018 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088505436 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112132184 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097843884 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112450968 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.118888218 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084714037 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093638694 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115298815 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114065818 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084853653 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088608851 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.111261138 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093735505 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.110065636 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083648754 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124263866 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.118413625 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095052656 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111135101 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091891815 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103793841 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.084998645 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089048354 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11660708 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092335801 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.123007657 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.108169574 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08961818 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.083856014 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114072947 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113876553 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097351441 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085887474 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.104321127 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089278724 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.114670889 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120754663 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092298387 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.112030598 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096830794 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.112994732 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.088166744 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117893651 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086937549 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114271159 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106522537 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.115136524 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097977053 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.117332078 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100315218 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.116793819 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08478075 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.115759684 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094503816 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.11538504 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.0951443 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.117879094 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12957159 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096045454 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.11045416 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.09296406 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113532278 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.09079775 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.121472319 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096379314 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.115522346 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096892547 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112206114 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09697681 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121260243 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096592497 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.114344401 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.113528903 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.093781482 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093070169 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.113460913 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.09187229 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.117021678 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.094974389 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115366403 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095980173 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.111716388 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124745541 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.101653021 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.115229126 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086075305 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109139967 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090730276 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.084439463 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.116733437 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087152262 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.11297206 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.091405746 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.113447267 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097518591 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116884667 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093844838 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.117906851 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.09339373 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.105702428 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09837992 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.115239103 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096556408 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.106624747 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.09460805 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.11903049 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.118185619 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100651671 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.111249529 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095435156 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.113046007 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097800231 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.104466807 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098436332 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112604597 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093623658 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10997308 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095618603 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.11479722 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096620961 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115503401 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097468398 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114048618 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099012392 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116968344 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.088139803 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.106366403 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098261951 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107278342 seconds)
  done (took 61.763066506 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.158715635 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093088255 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104746445 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085893384 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131612537 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087445152 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105340323 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.086866272 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106300262 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101022157 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106834434 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08558436 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127291673 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134125203 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130909568 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121060134 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085613051 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106018248 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085427558 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106233512 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107642322 seconds)
  done (took 3.057880344 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110907328 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.125161487 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123240117 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107416899 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117436105 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.124550397 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102363377 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126238269 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.128600266 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118257127 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108931327 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12477083 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.119008079 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.099277205 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118822255 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121320668 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109305093 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.117144696 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12525122 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10338803 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122387182 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.122216948 seconds)
  done (took 3.380219755 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.099381178 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.092786234 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.121293226 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.087517089 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.114049538 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.088022961 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118783864 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.090056078 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.119309664 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094620796 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111732531 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094448113 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.1199435 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.088276252 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.112479396 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.090900429 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.119638374 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.093992806 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.115438573 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.088557089 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.136062706 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.10821284 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.089493093 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.09168614 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.126595517 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.094859876 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.115044283 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.094299698 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.112360286 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.093892757 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.111055027 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.096833011 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.119480717 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091398328 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111612924 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.09455513 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.11472265 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.088767625 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.111602802 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.098432406 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.110084445 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.096238802 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.121328732 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.09211421 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.111068693 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.097583533 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.114950457 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.088770814 seconds)
  done (took 5.798931063 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128832288 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167682006 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099573764 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.15708181 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129105455 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119575845 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093290601 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.15318926 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.111053256 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.093945495 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129886628 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127526144 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.096036124 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.127900313 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098689799 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117494758 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.11859471 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105614703 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119656417 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089182684 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.117231446 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112103004 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103974433 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12101352 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113934519 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089204114 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10935725 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105155502 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122641741 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.118760776 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.097672796 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.124589154 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.137624224 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09684948 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111796472 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.11095717 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.106214968 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109853815 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110902175 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.088009243 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.111531964 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.100129096 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112011576 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125317907 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091915311 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110938799 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092215242 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.111490443 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126056596 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.095866615 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118767781 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12384839 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094565413 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109700322 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095241128 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132766563 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109742122 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08857343 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.115235276 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127046499 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096602257 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.133184453 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109067587 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.114783025 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118395982 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124504473 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.094230732 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114873897 seconds)
  done (took 8.649192465 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103353141 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.14155592 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132344292 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112119314 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12168444 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12039457 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1003818 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.121377843 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101266364 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128913864 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120636248 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.174120302 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.094391766 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127112509 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101100185 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122642381 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120127576 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101654655 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121370089 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100374709 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.120590677 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132093307 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101104201 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133435956 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134798966 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.113699708 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101529292 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121165262 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112924319 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123429346 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134619291 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121278581 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102388191 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13363407 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135389389 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.101973058 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112839239 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101747414 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.122995011 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121747026 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096269275 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133949307 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100751159 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.116642685 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121239294 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101775339 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133951686 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.135087814 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127746257 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109886226 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.121804988 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132880342 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102403402 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122185913 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.132864663 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141139736 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113699435 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13421676 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121138687 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112687742 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135056433 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141630907 seconds)
  done (took 8.252190732 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092260275 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091076512 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.111576927 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.089457829 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.112799989 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090129118 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112302641 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.09325107 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091581858 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.114704932 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092500489 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110760259 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089485959 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112191532 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090832512 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109292264 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090109036 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089019449 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113934007 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089769193 seconds)
  done (took 2.805501562 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.101365789 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.134482631 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.093870994 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.121683226 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.095249402 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.121756347 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.114927715 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097343211 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112113197 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097311434 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.127519672 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106355713 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116978477 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.120921943 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106188646 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.119600949 seconds)
  done (took 2.607295986 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.114718093 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128633319 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.141326976 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.098517303 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.112034446 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.101625827 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.114230302 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.089801774 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.110065096 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.102382548 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.120781143 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104804641 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.114891494 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.091458287 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.114011335 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.099262423 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.109950201 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.097718642 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.113946944 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120409006 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.12065078 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.11516873 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.094974334 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.11262089 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.096962776 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.11860014 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.100760714 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.110177184 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.091124665 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.114067344 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.095967016 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.122160677 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.089762519 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.119338954 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.09100822 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.111101075 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092987342 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.114918861 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.099714019 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.116366576 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.090635837 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.118858973 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.091879102 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.113550096 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082560765 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.114625947 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.087042344 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.122632916 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.094192449 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.117069255 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.109685307 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.100158797 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.118397377 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.102476595 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11895078 seconds)
  done (took 6.730991193 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108551813 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115625851 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098633176 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107144066 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09050448 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.116140631 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091088195 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109614404 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089940188 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104680811 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089611017 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111159459 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089217846 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110773435 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088908707 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112287024 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081901388 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.1084702 seconds)
  done (took 2.646530692 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100117832 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107350149 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09549577 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106772571 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087208048 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088239506 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103743971 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084934233 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104621886 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086691071 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106614827 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089158431 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105094312 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089483155 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107481955 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086731177 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109012351 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086239632 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107267745 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083470952 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109299301 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085950128 seconds)
  done (took 2.95432054 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112273225 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.148872607 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109838819 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.160507769 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.121247889 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098152756 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.131484052 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098578272 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139629385 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118342494 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098553803 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.118102971 seconds)
  done (took 2.281562369 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121702152 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152614466 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091784926 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118693211 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128344149 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100014185 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114338561 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093527618 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126334967 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126296572 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092080716 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12858292 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125550413 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123425249 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099962733 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120841497 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11157163 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093486175 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108823233 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134439773 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093497446 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125060022 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112136265 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092798232 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112045573 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123181347 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105873812 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126026819 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112736328 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104874268 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121788275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112580303 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10398838 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12751576 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110294026 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125078739 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093644894 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135464378 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120487493 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103601842 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111750108 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120190106 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10439446 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121007117 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124901822 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093181197 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120589267 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112560203 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093739875 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141815515 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120982828 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122957645 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100524043 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127201663 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125190549 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14104577 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126440856 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123773988 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10011479 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127771444 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123625634 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120118391 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104531483 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126830431 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120094397 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123141567 seconds)
  done (took 8.481083833 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13598265 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111433383 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091820962 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127330853 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124599563 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11270392 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094163605 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112655656 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092564731 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109910648 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160398501 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112456641 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104301089 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12409297 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112774578 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093748346 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113592199 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124194238 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089981041 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140826428 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112842851 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124815071 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104388011 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125176109 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126269721 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120389097 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094001674 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113527709 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093830921 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113720916 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12104945 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093824619 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125180304 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105590371 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104803136 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114128888 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092579784 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122181583 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11393848 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100651865 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12544033 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135330568 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114429956 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094074709 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127229429 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113490355 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093992947 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109813983 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093091195 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111125547 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126915437 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126599481 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106851566 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125428828 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113744336 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093597311 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114719401 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113105345 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094961828 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121678025 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124033697 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093956497 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141147772 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114315348 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093431222 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125569859 seconds)
  done (took 8.290462172 seconds)
done (took 163.377007971 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.11558738 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.154942773 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.111598301 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.182559859 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087716657 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.143738382 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121327305 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.125331399 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088927474 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116125218 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.091273125 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.114125259 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153876965 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109675969 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088448168 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11228 seconds)
  done (took 2.745724745 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193157151 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.303787087 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.115962891 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117838985 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094706251 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112446106 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091924308 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116531845 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089561743 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.122232603 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111092871 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091541044 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121747869 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092169032 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110110301 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091339259 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122068175 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090682017 seconds)
  done (took 3.025057424 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121420804 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.167852445 seconds)
  done (took 1.130594625 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134095176 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190934089 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307894056 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165803501 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118687892 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.133189895 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.16694076 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128829413 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198331067 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131993497 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110424292 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116928045 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14010912 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101562538 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119862423 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.095878125 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143732277 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117596474 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097845062 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11715784 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118048688 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.11754484 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120691321 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097913025 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186990547 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13155429 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.09557583 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.118124245 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117556151 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097847196 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.121935125 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130250111 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109371274 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193361461 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100578268 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.188670824 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102797583 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.116181629 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097005853 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.116277092 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118463739 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099513117 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131784888 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09402298 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.118720852 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123485269 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096891566 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.116824794 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102447241 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127145552 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12400521 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.101353512 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.188192277 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.103896727 seconds)
  done (took 7.797359876 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.849419199 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161891975 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115583377 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.951467861 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147796973 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129695646 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.845982512 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116483545 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.269104975 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.077437903 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134216291 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129880388 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236503773 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261548868 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.155636959 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342801674 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.717425491 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128680942 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123445563 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159243715 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123068788 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14469953 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113772948 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442499931 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117231535 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092810854 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121506148 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128728329 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169700212 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093190678 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119753648 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188718079 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.303061003 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.18779418 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116653447 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091622531 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11417219 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.176807742 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275338231 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223759313 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180157743 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090044991 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112972179 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105695728 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135378052 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08877649 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192501696 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181894877 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.180752084 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119356096 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127309316 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102688524 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126355053 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168829281 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112586605 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342739875 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.347506762 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093030935 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123823797 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112092431 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271755391 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114460062 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20855744 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141232517 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219949458 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09165586 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792863931 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.174458008 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114485599 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122696486 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10137862 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119544558 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103964446 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175459765 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388684817 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129688518 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118513695 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092528095 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237525362 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09304385 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113739478 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17229846 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093083618 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124631205 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130503164 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125913451 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.179770284 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257849382 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128170096 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100532821 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120059181 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126814754 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094330607 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218087739 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22390288 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.186136477 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.220253343 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127149404 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.174030114 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.174016937 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125874308 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.179055985 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122170338 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11150528 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127833703 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221959253 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14977742 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.093123987 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120203727 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120705789 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151139417 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097608745 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121910268 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.178308267 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.473351371 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.194370962 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090579363 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117908752 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101241891 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169578224 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122812952 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268545428 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101804351 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.197432479 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100084743 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.11164897 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101424828 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.194017729 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107458274 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124480972 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128040957 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101265405 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.280433501 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.211015724 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130541097 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245290926 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187928001 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105127287 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.202611402 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102434529 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.199684113 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103754497 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128178381 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095528528 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786805692 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128797432 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121984146 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099562159 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.203541637 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114523638 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095883199 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092385879 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112981109 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814210258 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096742128 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112074396 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095904853 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124085382 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101541649 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121993611 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097389395 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192568031 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239379656 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10646697 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123083516 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092217552 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.191528765 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095303018 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.116391808 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093880048 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.116258432 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103894371 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120796469 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094904008 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.202224689 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16800554 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229221177 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.533712345 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115895811 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093839327 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239278957 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116244337 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291690164 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124169121 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233663037 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.176047535 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.112227988 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.343697816 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.178626696 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.203762434 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096336647 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.200852067 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091443478 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121440005 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.170623909 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092254072 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123310602 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165493627 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132794917 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129396439 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.138234753 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116125995 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236761411 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112441376 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17846155 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116595644 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106264999 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.3221633 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114701095 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114219015 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.190242055 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098510808 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115305597 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.682495956 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.115589009 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104933475 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126126346 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231436105 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174605035 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123498831 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101142971 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128758773 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.17073676 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.240559876 seconds)
  done (took 45.774431999 seconds)
done (took 61.307755613 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316459011 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275765232 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.312407324 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.203574292 seconds)
  done (took 2.050771191 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.192719374 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159914051 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.13110639 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.115022402 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.162198007 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.093324726 seconds)
  done (took 1.721217205 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.501174649 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.385358937 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.351724779 seconds)
  done (took 2.107750244 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.274751396 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.292381955 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.367697936 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.45904652 seconds)
  done (took 2.373563546 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.228635384 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.140955279 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.1063475 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.145595435 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.178606164 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.182763011 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149559098 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.158353762 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135782301 seconds)
  done (took 2.347014212 seconds)
done (took 11.470094984 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.278679536 seconds)
    (2/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.186496804 seconds)
    (3/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.298587444 seconds)
    (4/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.114543271 seconds)
    (5/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119748747 seconds)
    (6/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.241547547 seconds)
    (7/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.257773378 seconds)
    (8/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.242720681 seconds)
    (9/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.186254306 seconds)
    (10/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.256416914 seconds)
    (11/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.210946844 seconds)
    (12/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.133616223 seconds)
    (13/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.274884692 seconds)
    (14/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.255425923 seconds)
    (15/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.132011733 seconds)
    (16/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.203376722 seconds)
    (17/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.17142698 seconds)
    (18/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.152791511 seconds)
    (19/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.160991821 seconds)
    (20/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.151173889 seconds)
    (21/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.13100457 seconds)
    (22/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.270691716 seconds)
    (23/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096937378 seconds)
    (24/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080492348 seconds)
    (25/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.216264276 seconds)
    (26/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.210587224 seconds)
    (27/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132673695 seconds)
    (28/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.21007267 seconds)
    (29/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.153455695 seconds)
    (30/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.253928928 seconds)
    (31/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.217439429 seconds)
    (32/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109722644 seconds)
    (33/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.145787005 seconds)
    (34/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.235826303 seconds)
    (35/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.163791382 seconds)
    (36/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.129181792 seconds)
    (37/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.21253088 seconds)
    (38/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119895557 seconds)
    (39/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09748088 seconds)
    (40/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.132469274 seconds)
    (41/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079018714 seconds)
    (42/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.101938605 seconds)
    (43/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090754945 seconds)
    (44/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.201441172 seconds)
    (45/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.150353626 seconds)
    (46/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.210442995 seconds)
    (47/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098883025 seconds)
    (48/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.216308561 seconds)
    (49/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.105301984 seconds)
    (50/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.220339774 seconds)
    (51/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.082338706 seconds)
    (52/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09818072 seconds)
    (53/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.150332502 seconds)
    (54/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.122008857 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.126887588 seconds)
    (56/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.102528345 seconds)
    (57/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.137922847 seconds)
    (58/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.150724356 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121746273 seconds)
    (60/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.125188515 seconds)
    (61/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.209714793 seconds)
    (62/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.169797353 seconds)
    (63/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.131555543 seconds)
    (64/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.145798589 seconds)
    (65/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.209627276 seconds)
    (66/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.214752025 seconds)
    (67/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.204140543 seconds)
    (68/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.107342399 seconds)
    (69/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.130712489 seconds)
    (70/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.209504872 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.150998294 seconds)
    (72/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.113970692 seconds)
    (73/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.163756103 seconds)
    (74/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079240697 seconds)
    (75/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.196278193 seconds)
    (76/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.129284152 seconds)
    (77/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.08111767 seconds)
    (78/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.119289835 seconds)
    (79/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.081668991 seconds)
    (80/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.150820249 seconds)
    (81/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.139284382 seconds)
    (82/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.111940916 seconds)
    (83/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.175381317 seconds)
    (84/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.1953496 seconds)
    (85/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.11103464 seconds)
    (86/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.139042783 seconds)
    (87/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.104205182 seconds)
    (88/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.08254785 seconds)
    (89/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.106443886 seconds)
    (90/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098226551 seconds)
    (91/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.147963878 seconds)
    (92/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.103013511 seconds)
    (93/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.098105366 seconds)
    (94/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118302122 seconds)
    (95/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.082269355 seconds)
    (96/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.167041283 seconds)
    (97/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.102925282 seconds)
    (98/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.133087227 seconds)
    (99/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.081849183 seconds)
    (100/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.116779152 seconds)
    (101/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.082136379 seconds)
    (102/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119402059 seconds)
    (103/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.206720111 seconds)
    (104/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083201658 seconds)
    (105/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.134166523 seconds)
    (106/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.082677954 seconds)
    (107/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.124711558 seconds)
    (108/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.178533806 seconds)
    (109/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.205300502 seconds)
    (110/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.141937181 seconds)
    (111/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.094067749 seconds)
    (112/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.208563611 seconds)
    (113/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.088462914 seconds)
    (114/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.149084235 seconds)
    (115/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081570436 seconds)
    (116/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.108397358 seconds)
    (117/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.146717146 seconds)
    (118/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.140891097 seconds)
    (119/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.115765345 seconds)
    (120/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099736969 seconds)
    (121/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.135276665 seconds)
    (122/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.082269975 seconds)
    (123/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134636162 seconds)
    (124/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.201835259 seconds)
    (125/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.099126658 seconds)
    (126/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.198655784 seconds)
    (127/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.104320099 seconds)
    (128/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.081839311 seconds)
    (129/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119834897 seconds)
    (130/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.099916612 seconds)
    (131/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.100613622 seconds)
    (132/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.121664983 seconds)
    (133/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.155873491 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099488061 seconds)
    (135/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.197545989 seconds)
    (136/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.12414663 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100240419 seconds)
    (138/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118000543 seconds)
    (139/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.195896093 seconds)
    (140/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.088501587 seconds)
    (141/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.132719783 seconds)
    (142/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113343129 seconds)
    (143/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.141831568 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.09950368 seconds)
    (145/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.129183096 seconds)
    (146/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097452105 seconds)
    (147/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.103662104 seconds)
    (148/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.089539949 seconds)
    (149/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135654574 seconds)
    (150/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175368141 seconds)
    (151/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.129175647 seconds)
    (152/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120503746 seconds)
    (153/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.081768488 seconds)
    (154/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081017249 seconds)
    (155/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120676484 seconds)
    (156/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092920571 seconds)
    (157/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.124555441 seconds)
    (158/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.097975408 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.130489526 seconds)
    (160/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.131699553 seconds)
    (161/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097206551 seconds)
    (162/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.103110948 seconds)
    (163/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10052232 seconds)
    (164/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.102392311 seconds)
    (165/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.09151055 seconds)
    (166/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079709432 seconds)
    (167/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137063719 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.094681157 seconds)
    (169/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.104251751 seconds)
    (170/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099809857 seconds)
    (171/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.103761806 seconds)
    (172/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.158347437 seconds)
    (173/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080846608 seconds)
    (174/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.088157664 seconds)
    (175/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.130080097 seconds)
    (176/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092340079 seconds)
    (177/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.102995647 seconds)
    (178/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.098920845 seconds)
    (179/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.209421275 seconds)
    (180/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.147878463 seconds)
    (181/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103680559 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.124274029 seconds)
    (183/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120142714 seconds)
    (184/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.082012635 seconds)
    (185/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.122461155 seconds)
    (186/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.129995818 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.116374495 seconds)
    (188/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.089897713 seconds)
    (189/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.079952336 seconds)
    (190/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.121084246 seconds)
    (191/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.081396146 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.120544497 seconds)
    (193/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.079876337 seconds)
    (194/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.1036413 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.108220712 seconds)
    (196/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.104181798 seconds)
    (197/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080745608 seconds)
    (198/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.14175176 seconds)
    (199/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.080915892 seconds)
    (200/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.111825734 seconds)
    (201/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080694349 seconds)
    (202/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.144445385 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099829699 seconds)
    (204/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127543434 seconds)
    (205/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093645653 seconds)
    (206/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111733623 seconds)
    (207/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082031108 seconds)
    (208/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079494098 seconds)
    (209/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130460575 seconds)
    (210/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092553407 seconds)
    (211/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.123274146 seconds)
    (212/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079437252 seconds)
    (213/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.131200222 seconds)
    (214/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095563319 seconds)
    (215/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.119499555 seconds)
    (216/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.082672737 seconds)
    (217/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116648139 seconds)
    (218/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.080022706 seconds)
    (219/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136301234 seconds)
    (220/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101762181 seconds)
    (221/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.104031411 seconds)
    (222/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089689274 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122267007 seconds)
    (224/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.080472555 seconds)
  done (took 31.002746989 seconds)
done (took 31.876698338 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.411308332 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.135303724 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.128354831 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.1047404 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147280099 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107434885 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.128834706 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.106860913 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.12790334 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093996018 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.119767634 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128732814 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.104718959 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.146295596 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.107420652 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.121636628 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.096929645 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.130011693 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104213973 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131949389 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.147428666 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097670323 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.126952226 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.095992307 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149035777 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098337412 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.128833282 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.105999816 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126252223 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094884572 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.12919118 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118851281 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.106027119 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.130507471 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095163366 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119817512 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0950449 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109789065 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.096797471 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121537349 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104264643 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.119240347 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.106602827 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120480863 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098255417 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118351614 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094091252 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.131333728 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093701308 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.130000503 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096932839 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.133413745 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117475252 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095529188 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117747813 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.097524047 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.128026144 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095697097 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.129936187 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095879436 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120072378 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096057578 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.124079599 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095793284 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.122050726 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096844182 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.121866891 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.099814401 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117544945 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097963196 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117322485 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.09810393 seconds)
done (took 9.42409093 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107966367 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175943546 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150164529 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.126938316 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.148234155 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.133896994 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.108623142 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.142648099 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.127703667 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119536166 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.14620882 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140393293 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.133775491 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126460389 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.133771584 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.100107403 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.12595875 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108747503 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.154448404 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.143715573 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150773909 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.10516778 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148353893 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141094976 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.103083184 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.155267929 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.103220109 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.124376704 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.101388817 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.134260435 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143370764 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.102795538 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.125950281 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.11602641 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.134068151 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125810549 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113922597 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.123098558 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.101254058 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123915936 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.136353069 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.116451726 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.123445706 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110684546 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123143352 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.103872722 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.127437329 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125378234 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103927145 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120449335 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.104477047 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.146916723 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143262528 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105173457 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.125340405 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.103715344 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12564069 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.103511188 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129148794 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.127061895 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.102339598 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.124453006 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.104369756 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143688979 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.125771488 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.102102044 seconds)
  done (took 9.148903525 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124774828 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.158197436 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132913713 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111322678 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129872675 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092700722 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116062015 seconds)
  done (took 1.788328078 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102802468 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148054512 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127510684 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.151691036 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140484924 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.132066684 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135509249 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093490623 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.14325111 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.12792925 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123119776 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174194692 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118811695 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.106842471 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153323303 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117503361 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.131124393 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.117347352 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.10252326 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.152287119 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123173738 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117198043 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.132122409 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094901398 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141046634 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096156921 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18670689 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130695446 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094799364 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.12520793 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100209887 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.213206487 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118459803 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128586707 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093212674 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14846557 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.116048455 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124603988 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.144428211 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10083622 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.140916333 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.102092325 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.126007356 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123935191 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.10263626 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.134584007 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.107470681 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.128022844 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.101296338 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.148218137 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.129912381 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.1180716 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120730101 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100192592 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.128875912 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101808591 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.133859779 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.1000244 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.148223244 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126242948 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122069284 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.146257115 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140619821 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.122827556 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137051848 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.117443619 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.142113619 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.1248964 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103868537 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126255842 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.122802408 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.123561061 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.105145871 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.135661386 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128329246 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.123708114 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.1467565 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099313134 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.132313396 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.098565842 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.122273252 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095263228 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136039408 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101716571 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122395269 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136444361 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108737435 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.125383552 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099392307 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.142134404 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.122995014 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.107163947 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130908844 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099382719 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135175852 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.14815443 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.105825197 seconds)
  done (took 13.014104354 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.103311321 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096262906 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.12669919 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.12066553 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.097712952 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097028757 seconds)
  done (took 1.579812774 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.133978478 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.125726895 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.114864607 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.129891965 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.18061469 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.146496822 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.126430109 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130104494 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.143554394 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.114674564 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.146499328 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.148633767 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.126166522 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.130096991 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.124628486 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.133519374 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.14918431 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100886288 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13670043 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100660614 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137374606 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130656394 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101052264 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.143130183 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.106073182 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.129755417 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105540845 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.137600988 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.135275739 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.10630117 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.131008646 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.104556479 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.130030831 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.129419048 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.125009809 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.12817967 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123374987 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108161038 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127657575 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.106179936 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.149232177 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100748522 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.136652181 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.132108794 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105198335 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.127825302 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.131555734 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.1056859 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.149635513 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.106753544 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.132924722 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.128508856 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.106403396 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132024978 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.104054838 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130571691 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.131286701 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.125694547 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.131470287 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.127693409 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.102152671 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.129828495 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105929242 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.133028223 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103011196 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.133299959 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.128111319 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105413399 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125649936 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.105080116 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.132798861 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.126208111 seconds)
  done (took 9.956001028 seconds)
done (took 36.406676268 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.209245267 seconds)
  done (took 2.13911963 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.910685788 seconds)
  done (took 1.839973477 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.774465275 seconds)
  done (took 17.74600716 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.529245389 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.621901337 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.990426627 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169880753 seconds)
  done (took 3.242132334 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.970575335 seconds)
  done (took 1.923743193 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.327509924 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269539739 seconds)
  done (took 1.533352299 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.843371999 seconds)
  done (took 1.785550693 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.586917449 seconds)
  done (took 2.528495903 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.367140171 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205146713 seconds)
  done (took 1.524877841 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.603182618 seconds)
  done (took 1.551480356 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.656594234 seconds)
  done (took 15.610545211 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.243210423 seconds)
  done (took 1.206998366 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311565736 seconds)
  done (took 1.262393259 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.573301875 seconds)
  done (took 4.523568612 seconds)
done (took 59.355890265 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113877994 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134340464 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110258613 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131236813 seconds)
  done (took 1.435927889 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.117102291 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128081203 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108199075 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128938352 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.112309711 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.129700081 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102749146 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.135100776 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103061498 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.131520711 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127303942 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.104376422 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129304078 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103719325 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.126921168 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.105542325 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.131224969 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.103284592 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12904118 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104257312 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.128918115 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.128520074 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.107302655 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.128947528 seconds)
  done (took 3.809589119 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.111922527 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.099797024 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.127543808 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.099366562 seconds)
  done (took 1.395644627 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.118210424 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143188924 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.117400791 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.136017873 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142977923 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118270958 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.125555813 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.100335373 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.127154168 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.111289673 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.126514901 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.119827539 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.14398332 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121319559 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113530448 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117522153 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097137572 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.143323504 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.110679544 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.136552259 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100662314 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.135602012 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.107793686 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139637345 seconds)
  done (took 3.915661741 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.181410768 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.139613126 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.149339352 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.173547954 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.125871758 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.123556589 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.125278227 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133103292 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.129051015 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.100502915 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.125004208 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.15584551 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.13044646 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126229144 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.101029051 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.131131121 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.106377844 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130141398 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.101570184 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.139197707 seconds)
  done (took 3.589949941 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.113034078 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124606443 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09765286 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124306871 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107655061 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126212456 seconds)
  done (took 1.658842586 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10252009 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.095075039 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.120740426 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.094631835 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.125878042 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095699954 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.118552973 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.096475667 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094242883 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.121453557 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094909067 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.118903117 seconds)
  done (took 2.237717958 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.228615226 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123214528 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125071759 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.10030231 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.128697049 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.098948899 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139313159 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.098801625 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.180094899 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.124764421 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115461657 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.178074862 seconds)
  done (took 2.602230546 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222612243 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105370263 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28190762 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.381998653 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165822628 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174239106 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281072034 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174288901 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193636295 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144444804 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213400206 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165177232 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13563136 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186952131 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147793069 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.192398057 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183357211 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20895002 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156313819 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24690532 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173726419 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17493912 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1976458 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134541522 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146954929 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165986473 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125659554 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11044204 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180506751 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177728777 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20605146 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130187729 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146134423 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20767718 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24956152 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185194283 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.311042869 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142196483 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198874198 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.200540846 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284313381 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149249095 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203346467 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163224598 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112630719 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215108765 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163911165 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187099849 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.114401398 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149565711 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192043007 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184262125 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188935799 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147476048 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305566706 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152631305 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.153608544 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188082543 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197408283 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23349536 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149181518 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.131399866 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194499182 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199426811 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189352892 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152309163 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.174919966 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132409431 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184960999 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213236255 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18516827 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174690343 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.216391368 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141414281 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171337693 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187760413 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134523227 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187090466 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168248019 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.129458545 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156382545 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119163653 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136219894 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194130646 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105247299 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220973738 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144740693 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.297825143 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240990997 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166482067 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141827106 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173070358 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202393638 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128673797 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.127186995 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154270894 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177962912 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138812671 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141131338 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165780577 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153684665 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.10714668 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159766317 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.131470861 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167838599 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.115777623 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174817392 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173011946 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.136388633 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173764712 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131181476 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.167827024 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177650848 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231997378 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114275354 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141131335 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211945808 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166365231 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144002163 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193883593 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204803784 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.182079185 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118350769 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203817476 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204352009 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123290485 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234827551 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123136826 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142185037 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.159038532 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16667241 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164419343 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161874895 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111492423 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159713952 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210556076 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.135536306 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143702265 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180808265 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107786626 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136240614 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124803665 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144155241 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.150793159 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.157517909 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.119344816 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16226277 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167203567 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162760171 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167186913 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151137198 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200477523 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141075245 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167552617 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1286899 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.126725354 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.188640294 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203474439 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137622318 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19597615 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177707055 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205353588 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170771573 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139254994 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19093109 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110904152 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.128008752 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174193583 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168441348 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171113024 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200146304 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202813101 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.174129211 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161718122 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15706721 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174869175 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.194431759 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164200713 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153893847 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170877188 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174749124 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102970615 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.132727402 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106655651 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150103716 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138302684 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114088389 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216493474 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172438081 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197741678 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168645579 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146496023 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201349184 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106642648 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173230676 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179144647 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148362496 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.202121019 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200402164 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175212208 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152709821 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178743177 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.127149778 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106995275 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141104359 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175573659 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1130373 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143406439 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152156841 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201007562 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18339838 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158331142 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211973506 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174714398 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237562571 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102440062 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172824693 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188641077 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166772926 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.171508374 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139102222 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.169168574 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196467641 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152620913 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201941146 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171835877 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176663287 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206818073 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165361192 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139730557 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158092499 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177796973 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120131384 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180056927 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154962372 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144306274 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161959356 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.117737698 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135060993 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189934322 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152438165 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187225827 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.176200258 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182278654 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136208409 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15216232 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171021624 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126741994 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.125947182 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178447229 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205001532 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152159601 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166749075 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193359198 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138557095 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.321015322 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208899259 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192900517 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146567474 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150762117 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143163564 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179023061 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17253068 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190406468 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150861184 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189634283 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167872366 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.151974062 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115485124 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155795548 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159770856 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.16018377 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140212388 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1341289 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.150978242 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191856897 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153737162 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168090775 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173701297 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155646211 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.137071053 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149313238 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219916772 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168301534 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185864703 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166338236 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.184591711 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197028549 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133505973 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109250337 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135614167 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192967549 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113446267 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168176969 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.219032447 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208488156 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168222829 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178012668 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145799718 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.105686701 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168387688 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157241228 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206792914 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151195619 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.14351579 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210404245 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.159289941 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112323504 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174625085 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290784891 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151592411 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191737787 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.129485356 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284123136 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109314209 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139592091 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178861379 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180357635 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.111770026 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.193084729 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172989237 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155103041 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179037072 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117980031 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.226154534 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21771923 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179889987 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184083221 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.153643246 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167238731 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171645004 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19482705 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152298911 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.125484458 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171870051 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201145933 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.231299134 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113935278 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171430514 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171945576 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169641519 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181895644 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142813861 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197997239 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111698942 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174359702 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149340869 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132980956 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166803175 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19242436 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141455794 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193424775 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165635629 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113761161 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134925137 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159757961 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14078387 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152113551 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.137337103 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188955549 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.107868531 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171666572 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190107524 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13891044 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162924451 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126768929 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139441423 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150927267 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125036293 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14453701 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178907689 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20175142 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138053582 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194679773 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181368829 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174749335 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16825052 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124496278 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670533435 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.136239433 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20086881 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127205903 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227354138 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129423172 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175486731 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170160896 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15898645 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176714125 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158091616 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230264483 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174268667 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.167154829 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112396546 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152614687 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15447661 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.111322424 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160939798 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171850442 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150513446 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.116458333 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165264929 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156404967 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153649397 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118340086 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234414394 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130562757 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191516096 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193656537 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150040863 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17544062 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183570105 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138687866 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.170426057 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181754394 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151155676 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129490414 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.140229078 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.143728659 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187835556 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.106059866 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170045623 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170497876 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171548111 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1726851 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11566936 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168331557 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152133657 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169991033 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105977067 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165529357 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16770395 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139643251 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107600401 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165186302 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16845954 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.167708748 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133843045 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.15386852 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200051716 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.133024465 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113573762 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315592821 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140143983 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23098894 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133898498 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144967104 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152204143 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162796642 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.133397471 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168653098 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138739505 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112045552 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141804238 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.191599873 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.17665138 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166562061 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192658116 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169858852 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198463523 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115010895 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27421233 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149301951 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164539157 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.111677869 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13812312 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150080214 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115858897 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155298793 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200930429 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188691062 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162326612 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.153105942 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107537535 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.134705441 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112813455 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180343937 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16305881 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168030617 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151995684 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.0983629 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152872873 seconds)
  done (took 81.31548072 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172488198 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151106959 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155317401 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.208535287 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176634383 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264610773 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.215280639 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236509765 seconds)
  done (took 2.630054351 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.115625608 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144006472 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149587267 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131929698 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.132709079 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.354604465 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144293764 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106628014 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.191941571 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.145264868 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.130833706 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.623063209 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.102324944 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.134136814 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121949053 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132382976 seconds)
  done (took 3.902749732 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.284434114 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.540186319 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.962803812 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.253548786 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234464198 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.162313368 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.749518672 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.191724479 seconds)
  done (took 12.423449924 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.143952614 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.151454725 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.266355964 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.183390095 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.169402015 seconds)
  done (took 1.969617034 seconds)
done (took 123.832478837 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.110066398 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132728068 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104816582 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134413729 seconds)
  done (took 1.525278499 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.124587607 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.08967341 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.123156654 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088296831 seconds)
  done (took 1.477089246 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.504743176 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088438601 seconds)
  done (took 1.683765676 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.134585814 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.146291183 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.126636397 seconds)
  done (took 1.469624686 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.117722036 seconds)
  done (took 1.17714404 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121345715 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.110696326 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.15263355 seconds)
  done (took 1.444032192 seconds)
done (took 9.831989122 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147177718 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.440171363 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.394354226 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148119949 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.728877664 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.39072076 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.093184022 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163372561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173025143 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100396865 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146956575 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680302097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.044601717 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.351639577 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.029573837 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.443928965 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.71175568 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101199031 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134782847 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101442097 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.069992996 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098455204 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12859535 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101710071 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707367259 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.407577375 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128637279 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.483343319 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099588019 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131523979 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.390095606 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127541841 seconds)
  done (took 17.444338919 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150329524 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189601741 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136193924 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103280857 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131707411 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102579244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1377998 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.112572831 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188368595 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12759124 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119614096 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127740779 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104714954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128191807 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.121748208 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127603267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102960842 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129777491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106445235 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130723833 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119322908 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127267398 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101563292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130614039 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09899479 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.142077199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100211325 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139900912 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099144654 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134136 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132666105 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101349523 seconds)
  done (took 5.061935721 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155662097 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.197970323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136705693 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136302124 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179063594 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.129529823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.215329887 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.136113063 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192138529 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128081535 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11890826 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.128327445 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.165713329 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101303323 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150842316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100259754 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130652825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103230557 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.13551734 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102525265 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148398519 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09951159 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129727295 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101396399 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.128672615 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113781549 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.129513813 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138799685 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100615893 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132172883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.107608747 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128194978 seconds)
  done (took 5.367000917 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.113927115 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.134989711 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.117798055 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.145793331 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103108643 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.135080955 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.1087649 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129741797 seconds)
  done (took 2.049013377 seconds)
done (took 30.981027001 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.129312789 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.142210299 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115056838 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.137524006 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136378079 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.126496827 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.112512979 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098327394 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.139445582 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.115974157 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.12944728 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101267532 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143828122 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105809354 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.145487466 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.110085197 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.15110733 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.11672072 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.130194845 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.11119023 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.130179736 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.121203372 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.136053497 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101312741 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.155306347 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131027405 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.119131187 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.133762272 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.106102093 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101842565 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.146547052 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106119222 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.130217352 seconds)
  done (took 5.173992474 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.136398131 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.174639576 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.098447374 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.127549061 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.168172325 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.09944917 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.155288879 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.098526914 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.126438894 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.099024207 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.097473098 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.155153941 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160964069 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.131315675 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.176407262 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.164783424 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.128224553 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.166902044 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.150981679 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.138091797 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.157547292 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.098027845 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.162653485 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.169928101 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.098091489 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.126797885 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.143059946 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.1599382 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.171689093 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.161779448 seconds)
  done (took 5.278294433 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.11574944 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145939835 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.128692536 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20376276 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.171767088 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.116535301 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.14351417 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.119428806 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.159305583 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100265238 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.142389677 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.161696141 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118771027 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.140867413 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107361481 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.144106945 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.121286661 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.131851425 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10896528 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.149412614 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.118879654 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.143249069 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115633565 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.140214679 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.10065906 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13914147 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.106764314 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.14370704 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136590418 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112117956 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.133129393 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.106377496 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.132562489 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.111956831 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.133194337 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.109722699 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.152936998 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111297974 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.143991979 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.166516398 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.112004601 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.134488257 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.124225842 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.178360678 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.104129151 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138801141 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112595745 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.140462837 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099848735 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149612549 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116403279 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.131290893 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.145584646 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.101607577 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128625327 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109659305 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102457289 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133532635 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.139274358 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.106342027 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.150348603 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110884863 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137501438 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.103874375 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.138867402 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.101781355 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.128632234 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.107552587 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.154327156 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10735796 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163503948 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102397344 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.13651023 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110579577 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136711458 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111269436 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.130955285 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108879969 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139455054 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.107430806 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.139940981 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.104460221 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.134959042 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119673135 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.146648287 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.137393545 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.107625372 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.136829995 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.105185919 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132514996 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11633123 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.132023637 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.106002527 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141829228 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.102601899 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.133406609 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109071923 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.136009836 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.100943456 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151502465 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.107325888 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.130489287 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120725672 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.131653387 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105446145 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.140439929 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114419238 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.131203515 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106545263 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.13740854 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100965871 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.137119259 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.105752609 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.129897288 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114759237 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.142558742 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.107093817 seconds)
  done (took 15.923854092 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.2593618 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.232425468 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203916463 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.31793046 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154953855 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.129281674 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.229200149 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.185448834 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132503914 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.171776749 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.189347485 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.193729503 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101921226 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.164969391 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.232225416 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.323525246 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.165149974 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.173459201 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.142003537 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.154655201 seconds)
  done (took 4.945215888 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.123745613 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.170986829 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16174192 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.128866737 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.133416065 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.116494202 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.134085824 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.148261645 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.104725474 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.138301014 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.10264645 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.141871675 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105390754 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.135731137 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.119899085 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149861274 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.106520065 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.139625201 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148863468 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108337003 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132489187 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.154244809 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.112457334 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161247618 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.110447036 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.147381066 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.102016341 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.141067395 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099193459 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.132090043 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.108405428 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.148840017 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.139154355 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103903365 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.136930117 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102756548 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.127508453 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.104680165 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.134072089 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107635063 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.148483421 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.105198402 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.131928484 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10339602 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.140712407 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100426267 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.106914806 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.138898751 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.136586843 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111746056 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138828486 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.107818719 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.140197067 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.11442993 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.12861717 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.112439349 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.14496426 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.136094634 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.109988806 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.129918824 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101518498 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.106353992 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.131614812 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.10763059 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.138478859 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.148523362 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.112105298 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.13280401 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.108242843 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.136587044 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.10688409 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.150854515 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.153067368 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.101060707 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.128755198 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.12441538 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.099856273 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.119506952 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112762507 seconds)
  done (took 11.026419581 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137305954 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.132624335 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122182377 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.168242074 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.117737344 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.142251614 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103603579 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.154199897 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.109173171 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.142504321 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.109068393 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.148268446 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15983874 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.116379329 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.132736944 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.117842773 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13676741 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.144247534 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.152823845 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.164559137 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.114281905 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.13800196 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.116837135 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.144177717 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.135534436 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.146093259 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.165865674 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.109305568 seconds)
  done (took 4.883299504 seconds)
done (took 48.29014629 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.216747195 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.382872088 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.159157459 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.161467288 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.174871591 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.181270777 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.159868771 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.353995061 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.91322322 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.152979111 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.159541864 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.161764584 seconds)
done (took 27.261808119 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.204342545 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.753999587 seconds)
    (2/2) benchmarking "String"...
    done (took 1.50106265 seconds)
  done (took 4.34165415 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.162573713 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.165212207 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.410242273 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.164450325 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.183535248 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.179961148 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.161631917 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.166356482 seconds)
  done (took 15.515188742 seconds)
done (took 25.309699759 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.22213098 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.371017675 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.437307941 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.195587462 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.165412664 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.165185289 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.155205052 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.200282201 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.16360594 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.170766403 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.162808573 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.476797378 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.152438662 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.575799251 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.153626589 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.181350737 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.17974301 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.393750795 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.164221664 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.228901794 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.167935652 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.1496012 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.184278585 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.205621187 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.190554801 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.164521745 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.194910894 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.162232919 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.379895186 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.176898913 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.211244049 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.168283352 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.204738753 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.17379424 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.271387398 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.19655145 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.353921569 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.160907476 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.156496389 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.166528769 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.354340833 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.577749931 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.180634861 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.163837088 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.167359992 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.263962219 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.158396577 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.877999244 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.168879109 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.15914105 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.192614946 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.555335796 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.174872466 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.169268526 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.172143351 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.407555396 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.167231778 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.212446833 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.197242477 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.175885544 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.167508314 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.165445103 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.198086014 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.183846862 seconds)
  done (took 141.254366788 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.170472162 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.167871275 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.166438398 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.185101962 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.170780695 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.167072287 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.16902205 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.17068504 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.165840706 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.167385849 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.170014654 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.168051383 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.170652074 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.185460754 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.170755278 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.190535756 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.172378815 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.18456796 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.185906809 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.170346442 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.175712767 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.172638337 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.183897043 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.167158446 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.170447635 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.245644023 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.218487361 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.20084182 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.171528495 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.171725144 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.212663238 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.192273416 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.779380197 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.024999658 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.184498483 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.188410586 seconds)
  done (took 79.019120603 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.171219538 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.172426117 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.172518549 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.171912765 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.20498494 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.171527178 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.743327068 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.744105609 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.897412924 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.466135916 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.527319834 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.470002806 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.172582919 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268091643 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.185263795 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.173291482 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.188553377 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.195051347 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.169994254 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.17386325 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.173031132 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.745311743 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.189088623 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.343364642 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.186230596 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.204243658 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.573175383 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.340477858 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.188500738 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.208695049 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.507372161 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.22113498 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.17021583 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.173216484 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.55348762 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.833814014 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287186878 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.172992738 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.205046241 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.173035937 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.459642151 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.174485499 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.173099324 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.179245163 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.858281975 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.173347058 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.747623195 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.175022648 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.11123259 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.172696652 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.175640893 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.170090198 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.88031132 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.189664295 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.17300733 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.177270264 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.174864737 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.176746346 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.210575917 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.171175768 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.28696938 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.176561602 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.178633331 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.207149888 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.176268285 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.315730993 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193060934 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.235499026 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.235217905 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.288379848 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.749147093 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.177697387 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276467578 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297829409 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.172754686 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.176206408 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.176438851 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.177011413 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.175188428 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.289066448 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.176601327 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.589615676 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.349866775 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.191393798 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.541084519 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.276198266 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.174612036 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.56629764 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.179676378 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.178039796 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.911533286 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.272734675 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.176475755 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.176671717 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.17729633 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.592094259 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.750716337 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.414019005 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.180046532 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.497391401 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.1765383 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.603554842 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.724802352 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.86328363 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.178582387 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294021584 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.351936607 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.193940723 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.178495765 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.532086476 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.179460135 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.232968887 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.17905937 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.579181985 seconds)
  done (took 362.311475341 seconds)
done (took 583.669578585 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.890966776 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.833027103 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.971924341 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.862406439 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.828388315 seconds)
  done (took 10.481953122 seconds)
done (took 11.57543505 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.425261141 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.423832874 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.237121927 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.425230261 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.206941119 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.446404757 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.368297738 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.198515571 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.30896846 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.258706637 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.306081481 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233637276 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21884886 seconds)
  done (took 18.152719517 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.457435521 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.176279907 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254683289 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.419783994 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.215897552 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.433586782 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.482466807 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.177255423 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.307390508 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.188074535 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.188075496 seconds)
  done (took 17.397437883 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.447035301 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.173125424 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.242530251 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.45226564 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.215374376 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.436927861 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.479753517 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.175399397 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.3251859 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.191500991 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.190196455 seconds)
  done (took 17.424468529 seconds)
done (took 54.069524389 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.217280519 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.346165036 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.205006116 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.191627311 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.187139592 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.185707983 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.193508996 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.186690342 seconds)
  done (took 10.808227748 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.186932135 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.183861241 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.185199944 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.185391997 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.182642796 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.183397957 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.182092745 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.181565291 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.185490162 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.183924411 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.183145813 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.182855552 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.184359408 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.186225886 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.186835409 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.187298873 seconds)
  done (took 20.046536492 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.18660785 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.180641169 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.183981707 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.183660177 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.183015532 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.185739145 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.185421396 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.182190177 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.184083022 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.184110787 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.183888981 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.184345664 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.18186548 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.184184131 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.183524061 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.183964705 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.18173426 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.184813825 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.190914061 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.182426324 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.184052818 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.182935354 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.189316789 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.182606111 seconds)
  done (took 29.518108709 seconds)
done (took 61.465694011 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.183077198 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.181041171 seconds)
  done (took 5.459154248 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.247941812 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.24925653 seconds)
  done (took 3.593294039 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.187445507 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.18451037 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.186832213 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.18661936 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.184992899 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.186499794 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.18822878 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.186369204 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.18404211 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.186849548 seconds)
  done (took 12.958821589 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.18706966 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.188327229 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.185629395 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.186791088 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.18677799 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.182972437 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.187065882 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.185188011 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.186760736 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.182257661 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.184820387 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.185288534 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.187040607 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.186396145 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.186334171 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.18173058 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.186020584 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.184881395 seconds)
  done (took 22.437166949 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.200317275 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.206944656 seconds)
  done (took 3.504664619 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.325038902 seconds)
    (2/7) benchmarking "second"...
    done (took 1.22644152 seconds)
    (3/7) benchmarking "month"...
    done (took 1.298795851 seconds)
    (4/7) benchmarking "year"...
    done (took 1.290772086 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.22725041 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.207349905 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.225802471 seconds)
  done (took 9.898015776 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.189421737 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.372780082 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.481450857 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.734504213 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.189951469 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.191345479 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.062627747 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.189954618 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.193511749 seconds)
  done (took 13.702454711 seconds)
done (took 72.648740758 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.178340711 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.229048308 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.17619264 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.20724624 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.478030273 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.185223916 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.181524317 seconds)
done (took 15.733120234 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.168566399 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.17937979 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.168347423 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.182208914 seconds)
  done (took 9.796583051 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.182561234 seconds)
    (2/2) benchmarking "read"...
    done (took 1.533077118 seconds)
  done (took 4.816043093 seconds)
done (took 15.710049784 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.18950519 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.190975196 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.188002235 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.187710316 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.188521396 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.187935501 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.186818407 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.190282371 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.18994347 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.189464809 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.189737039 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.190741255 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.191424268 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192087656 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.186498181 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.186207564 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187619145 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191231541 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.187414944 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18591758 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186332523 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.189796373 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.186485865 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.188587821 seconds)
  done (took 29.629737452 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.192663717 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.188023638 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.193302308 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.190117873 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.18981468 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.191831597 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.191317426 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.189449255 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.192582905 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.192099533 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.191314824 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.188196999 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.191216139 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.190434737 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193440376 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.189930887 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.192154489 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188497805 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193227712 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.188964453 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.192300237 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189735699 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.189826083 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.194278881 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.190116383 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.190952428 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.193940247 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.189643214 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192674199 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.190022817 seconds)
  done (took 36.832796205 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.197180932 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.202169892 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.191447879 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.195344381 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.193067981 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.192946541 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.19344036 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.19373825 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.194055487 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.193800026 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.19298993 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.194282024 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.193037888 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.192632787 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.193653666 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.192815816 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.192394326 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.193971735 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.194324763 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.193185337 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.19391646 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.194905296 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.192605781 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.194561395 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.19399956 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.195120324 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.194743168 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.19360936 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.194085547 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.196567361 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.194646179 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.193583056 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.194763506 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.194754299 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.192277102 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.195205433 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.199346686 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.203084391 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.197556029 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.194144399 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.194579329 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.19615138 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.195637899 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.194968638 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.1967758 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.195608619 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.198786158 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.192983152 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.195899039 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.195284586 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.196249913 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.196345466 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.196287692 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.196633902 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.199800664 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.199793421 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.199324865 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.198034963 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.195727887 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.199308352 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.198364146 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.195911238 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.196862706 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.198088082 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.197283542 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.194244876 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.196565702 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.195494353 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.198173495 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.195414641 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.197046878 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.199160919 seconds)
  done (took 87.185991258 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.199427432 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.193773627 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.192914375 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.196368323 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193521971 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.195671799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.193564729 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197431557 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193570483 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.195716037 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19640564 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.194476893 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192879494 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.19440787 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.196935495 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.197275637 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.196884731 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19535202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.196295001 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.197079026 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.195313358 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.19290756 seconds)
  done (took 27.404714468 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.197498435 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.199010248 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.194957993 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.198474014 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.194057408 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.198493906 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.194778003 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.19691523 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197821755 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197347707 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194849974 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198113536 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.195501919 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194621831 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.193805114 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.196167526 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.19678208 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.199008404 seconds)
  done (took 22.645837772 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.1965808 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.194900422 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.196520293 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.193564201 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.1938735 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.196891025 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195200603 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.197979031 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.196214236 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.195840746 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.197581935 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196604375 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.199699007 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196250312 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196256588 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.19471611 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.197126632 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194983602 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199521361 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197272152 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.194941642 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198230748 seconds)
  done (took 27.426559438 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.199944606 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.197848871 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.195391905 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.193849991 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.195314615 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.198582738 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.198355122 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.196303263 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.198088786 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.200029746 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.19591273 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.19903059 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.197679779 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.195575545 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.195952846 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.194809721 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.197612832 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.197916219 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.199361488 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.191992057 seconds)
  done (took 25.04625176 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.20073158 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.200165771 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.200239999 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.199214227 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.199473391 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.202300824 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197561586 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.197213097 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.200995592 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.198422275 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.195410893 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.196403104 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197585832 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.202531104 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.200745006 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.199333079 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.201343444 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.200879757 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.201264984 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.200582842 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.200624097 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.202411536 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.200527967 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202390786 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.201345521 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.200900331 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201057467 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.200375981 seconds)
  done (took 34.71019543 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201717325 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.20136763 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.197699046 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.198005183 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.197992474 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.199953153 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.199614821 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.197937766 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.199809137 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.199587854 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.201698732 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.201561157 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.202231927 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.202563623 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.201120828 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.200638786 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199951384 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.199817306 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.19874239 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199405868 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.201851422 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201779328 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.203441692 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.199040788 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19922014 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.201815879 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.197909466 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.199033207 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198787939 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.198329497 seconds)
  done (took 37.112365744 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.247832634 seconds)
    (2/2) benchmarking "in"...
    done (took 1.246819201 seconds)
  done (took 3.60443246 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.203506698 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202832807 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.201010911 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.199693823 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.199951964 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.200927533 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.20340883 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199076993 seconds)
  done (took 10.720503881 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.201523022 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.201743406 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.201021965 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.202089722 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.200307684 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.202139346 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21049663 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.219545797 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.205099619 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.205229428 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.212174756 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.212093372 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.207104725 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.203171361 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.204282151 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.208016592 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.20329634 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.204995352 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.204093421 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.20603049 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.203372184 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.207030073 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.207225533 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.202647225 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.205256149 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.214818048 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.208257155 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.20428677 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.205130435 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.207111613 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.204248944 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.20208506 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.203516744 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.2054468 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.206919349 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.202625753 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.214587633 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.226179744 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.211384588 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.203639003 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.204218612 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.203062331 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.206422694 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.206549697 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.205172275 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.203714252 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.206968493 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.204034165 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.20712421 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.210164019 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.214064274 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.203881712 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.203143091 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.209760202 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.205939684 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.211755799 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.222528904 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.210302459 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.216416726 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.216362034 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.218071107 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.223687598 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.207455122 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.206467675 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.218453383 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.231735216 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.213434247 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.222298931 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.205702844 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.206895345 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.216657649 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.222478161 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.228669611 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.205806644 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208396745 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.209544651 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.207372228 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209116963 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21524553 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.228374017 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.206524083 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.207603796 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.221329442 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232285119 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.207833375 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.210002412 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.208866762 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.209548747 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.210321155 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.221740822 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.223753852 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.20885774 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.206804993 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.208234456 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.20844653 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.207201102 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.208505749 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.208567985 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.207977259 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.209781154 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.210877052 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.214921687 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.220560546 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.20840199 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.210342242 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.221336253 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.209429769 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.209352568 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.218161585 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.209231057 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.210363997 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.21391622 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.217455676 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.209195412 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.214726678 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.222515362 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.211668208 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.213467351 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.210291902 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.212101304 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225087211 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.240461418 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.211140873 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.210860038 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.216466555 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.22379327 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.210488313 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.216983037 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.211675708 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.209273975 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.208067151 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.211788814 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.212406764 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.213737367 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.209828156 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.213002311 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.210435895 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.212702894 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.21246913 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.214418314 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.213053096 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.212108487 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.213882848 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.215182052 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.214015048 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.213665838 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.219409624 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.210688434 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.212852373 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.212514287 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.211050416 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.213979498 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.210163141 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.212307688 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.211923539 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.212082947 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.211950423 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.213152197 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.214238451 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.213977629 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.212248035 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.215233143 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.218379219 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.214378233 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.215995056 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.213088054 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.210501882 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.214457649 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.214112011 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.21402872 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.21478461 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.213713748 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.218193532 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.221178022 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.213569175 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.214225696 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.218729044 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.212744198 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.216293235 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215901124 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.218806355 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.223184136 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.214573924 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.22237737 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.214413728 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.216399963 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.215482702 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.216449471 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.214724967 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215849024 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.219002289 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.22751746 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.230577008 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239458594 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.216083829 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.224733316 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.216708174 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.221634236 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.220572399 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.215199038 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.218722733 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.216661072 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.218997784 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.216168611 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.219746119 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.216094481 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.218264934 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.217246965 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.220503473 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.217061291 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.220023913 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.218084113 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.219717963 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.216161363 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.220324465 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.218752712 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.219822478 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.216279133 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.219348357 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.217364528 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.219627788 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.214971652 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.224651002 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.215411175 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.218935021 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218843808 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.218118882 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.217831833 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.218019935 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.217970127 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.218284955 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224714431 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.234901868 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.219402665 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.222997986 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.235220072 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.219008474 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.220569 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.217345914 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.216826258 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.221922187 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.228551578 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.218187119 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.219054556 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.219759051 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.220933755 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219455595 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.225335909 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.217639966 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.219696726 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.222009007 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.221466085 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.220661453 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.222704029 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.221440792 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.219807924 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.223007344 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.217613694 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.221998378 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.220345613 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.219664951 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.221909214 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.222159713 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226067392 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.230322557 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.226780313 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.219225922 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.225695516 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.225894504 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.22646764 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.221036399 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.220882816 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.221013442 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23633895 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.243183743 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.228377545 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.237035385 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.223528786 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228258805 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.239677052 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.229523164 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224335367 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.223453628 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.223343183 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.223003056 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.218495071 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.223624834 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.225504007 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224170469 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.223986228 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.228696394 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.225127765 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.22452472 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.221482281 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.225359651 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.225279067 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.222628806 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.221957495 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.224615143 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2249226 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.223047946 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.222982895 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229984097 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242240315 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.223871321 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.222617758 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.221613136 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.222386593 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.224782861 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.222949107 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.228910981 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.231017419 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.228254368 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.235956549 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.226590621 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233321805 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.220455865 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.229545212 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.233867628 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.220215768 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.224152737 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.224693122 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.222886297 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234046137 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.240409099 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.229266923 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.228240452 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225735554 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.228104655 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.226098748 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.223546121 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22816636 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.223466173 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233486212 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.246402545 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.228750195 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226038855 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.222511888 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.224610681 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.227367604 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.226431611 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22888727 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.223769486 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.226753384 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.224339363 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.226257189 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.228488298 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.226020752 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.227079597 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.225360269 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.227240378 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.233765339 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.247847777 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.231530281 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.228037911 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.233431755 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.225042152 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236111774 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.241219909 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.229681894 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.226032395 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.228816051 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.229064539 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.227607953 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.229114726 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.227481206 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.228952073 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.232993041 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.228119177 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.228806158 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.230572795 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.230466585 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.227464989 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236901669 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250022525 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.228632497 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234725039 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.227006067 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.230677589 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.230496178 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.227227827 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.230551985 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.233317241 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243577984 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237561706 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.228175617 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.22711711 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231241036 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228464098 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.22782998 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.22973196 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.229633213 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.231972687 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.228396283 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.229754676 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234267869 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.716662152 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.2289798 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231244781 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.229958338 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.239124827 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.227078054 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.231632906 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228050295 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.231402535 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.23091295 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.229976442 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.230900958 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2305789 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.229827007 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.233649816 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236024558 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.239551368 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.231508203 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.229242246 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.229100202 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.230579652 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.231141372 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.229166431 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.229562394 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229800985 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.233011338 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.22996538 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.231063725 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.229584595 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.230693214 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.231549625 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232550504 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23283046 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.240240251 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229698425 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.228930627 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.232191597 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232711518 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.232033688 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.231044074 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.237060394 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.231770841 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.244261235 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.242553363 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.234717183 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.232972138 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234308535 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.243258279 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.231886973 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.230626864 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.230133956 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.233011607 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.232752474 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.238158392 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.229620259 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.240412096 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.229590972 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.230837334 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24182373 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.252598624 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2305659 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.237417835 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.237691345 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.232619846 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.228705463 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.233131547 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.234726512 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239881916 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.248509335 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233581845 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.233998999 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.232617373 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.233693583 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238890913 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234776106 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.232430754 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.230353543 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.233961817 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232413011 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235004277 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.230493222 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.233021354 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.233544962 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.235628094 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.244765824 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.230391278 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235082792 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.234263384 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.234211937 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.234096628 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237132414 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.234137163 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.231927699 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.233884072 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232064823 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.236151834 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.235994269 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.234040608 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.234692737 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.23829885 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.233671141 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238090635 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.246682294 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.242983416 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.233565858 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.234635824 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.235534294 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.238473273 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236246026 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.233695939 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236729604 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.236680439 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.234142836 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233137894 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.23604694 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.23868797 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253982885 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.258160088 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238020629 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.239095145 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.23916641 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.235612499 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.234565849 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.240141972 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.239507492 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.241598363 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.246082988 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.237982555 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244770438 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251873329 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.241460429 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.243482961 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.240629343 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.245622941 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.240116269 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235411823 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.238164667 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.242806647 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.25759014 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239322797 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248774246 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26922959 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.251627538 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.239004231 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.237946638 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237796579 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.237227859 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.24069383 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.238836649 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.238354624 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239323787 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.238468782 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.238623957 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245156771 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.239928431 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.239536641 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.239144328 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.236514539 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.239479835 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.236521353 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.240447344 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.24062515 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.238878869 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.240541232 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.238989823 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.239467781 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250404456 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.262182407 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.240971976 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.239015632 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.237972672 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.242882166 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.242564066 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254929151 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.251688766 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.239666599 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.239542435 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.241268061 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.237430701 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.239529025 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.24098039 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.239714583 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2394295 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.237193398 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.252511525 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263319445 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.243698702 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.240508727 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240519817 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.243422319 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241471148 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238975444 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24385097 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.244195565 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.244499194 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246135297 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.241678742 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.243404131 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.243332901 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.251839811 seconds)
  done (took 731.928815306 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.239163054 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23782799 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.238193787 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238901563 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23997854 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239239631 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240363216 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239270417 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.241680916 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241316751 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.240978049 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240824708 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.238621038 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240730234 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240116988 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.242453735 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239311315 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241688175 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240467968 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241452564 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241508001 seconds)
  done (took 27.189988276 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.243811487 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.2409332 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.241736044 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.244922397 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239426996 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.24509501 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.240918066 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245700678 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.243661662 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24212625 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246749023 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245128129 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.242944381 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.240494979 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242875485 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244458256 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.245703106 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243367999 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.245301602 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.242645667 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244458111 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.244149316 seconds)
  done (took 28.50240386 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.245257896 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.2449174 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.242124992 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.241963015 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.245331973 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.239943663 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.244176695 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.245375894 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.247134456 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.246435443 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.244567022 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.246349611 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.254001973 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.253726999 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.246257345 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.244822391 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.243731975 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.244034864 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.24461091 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.246331525 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.251487033 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.259563354 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.243005834 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.248317163 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.24473819 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.246183301 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.246131176 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.246463458 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.250733214 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.24959615 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.248295055 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.247578788 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.250286772 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.248059504 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.247082985 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.253239771 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.248037682 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.245096606 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.248563858 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.256648611 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.269537956 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.24827796 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.253291541 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.263331651 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.249003559 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.250840706 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.256035838 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.245696048 seconds)
  done (took 61.074687588 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.833235697 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.843278835 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.843257133 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.849594304 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.844654118 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.846694055 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.852507729 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.854209284 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.835301069 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.836450567 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.837602172 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.834161752 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.843394597 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.84092769 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.84092849 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.839576617 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.837608778 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.835658453 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.853833958 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.855561922 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.836059463 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.836920861 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.839270964 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.840941005 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843037205 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.840991566 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.837685846 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.842617861 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.839617418 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.839867861 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.845254443 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.858217042 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.852455061 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.835929676 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.839767537 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.840718676 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.84666621 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.841674726 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.845723072 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.846457597 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.847636469 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.842553133 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.84546284 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.849715358 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.861905113 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.839466217 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.842012388 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.839309216 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.839477015 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.843661355 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.848994437 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.842223104 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.846825007 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.842913204 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.846770296 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.848958118 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.860045464 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.85922779 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.8422472 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.845905571 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.846555392 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.849053685 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.849352579 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.845066371 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.846169736 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.846085719 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.844695304 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.847513683 seconds)
  done (took 126.571321488 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255475949 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.254585962 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254007389 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25338367 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252414625 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.253943985 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253395855 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.253600504 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.252974146 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.255099997 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252588721 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.253521811 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.254114984 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.253218811 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.254304719 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255111675 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.254317153 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252949138 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253758736 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252481789 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.253129838 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.253301748 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.253345984 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.25299042 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254997093 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.253712423 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252495662 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.25454884 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254907282 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.254720416 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.255451111 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.255067989 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.256470433 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255078774 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.2537912 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.254967537 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.254978507 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253714142 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.256552121 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.256625935 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.25663904 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257408498 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.256057308 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.256720571 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255113125 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.257514254 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.256827166 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.25653097 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.258114084 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.255522043 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.256437658 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255438205 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254477131 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.254436034 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.25688751 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.256848494 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255494872 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257187549 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255939568 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.258239604 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258557406 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.256859186 seconds)
  done (took 78.968891654 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258643132 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.258446888 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.255572093 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.253142218 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.255314559 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255729532 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.256183243 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.256603924 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.257932812 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.257016408 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259068147 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.254712944 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255348368 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257680627 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25615621 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257668116 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256557519 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257399941 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259852276 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.255456061 seconds)
  done (took 26.294515648 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.254165898 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.25822645 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.257442631 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.256614172 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.258121236 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.25627787 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.258730218 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257809831 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256785658 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256855313 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.259347887 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.258298541 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256547341 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255834866 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.257953024 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.25639758 seconds)
  done (took 21.275072238 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.257129331 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.259797126 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.259345692 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.258952717 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.257858713 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.25627862 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.260704899 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.2573811 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.25719683 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.261354271 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.261157531 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.261064203 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.26108129 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.257092702 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.257752103 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.262410219 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.25897881 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.260739854 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.261944081 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.259566462 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.261610263 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.257244065 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.258947488 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.264173326 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.258170199 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.259015466 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.259403771 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.259197091 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.258288522 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.262314065 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.260317321 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.25766567 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.259314506 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.2589031 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.260676389 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.262085509 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.263072438 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.263290097 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.262324563 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.262393488 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.262134146 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.26037563 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.264733133 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.26099159 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.263071015 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.262177635 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.259298652 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.261271938 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.262100372 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.261755495 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.263690913 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.262617026 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.265320041 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.263827861 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.265757277 seconds)
  done (took 70.499000186 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262042316 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.264871733 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.262754719 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.264019736 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.262616787 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.262304371 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.263628224 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265146025 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261190047 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.263498822 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.262346359 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.266474347 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261095948 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.266549861 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2630137 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264952254 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.26143719 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.262919107 seconds)
  done (took 23.903133879 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.26110492 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264979836 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.264937717 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.262346671 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.264919439 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.267946997 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262703074 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.266109195 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265871565 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.263514217 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26270594 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.268069206 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266457276 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.267391266 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.263716614 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263862164 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.27057703 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267239884 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.264088386 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263158565 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266395248 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267369446 seconds)
  done (took 29.00225931 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.265963506 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.264277578 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.266440663 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.283776117 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.291187838 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.265575979 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.268409113 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.26572584 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.289553336 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.320739793 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.317879555 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.287937533 seconds)
  done (took 16.554383355 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263664273 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26676019 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263737079 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26760991 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270089362 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265523685 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265619841 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266732421 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267944599 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266247806 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263768339 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267996186 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268893412 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266334871 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269312371 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26849582 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26356746 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264142165 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264596216 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269499618 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265744102 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268332757 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26597825 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265787431 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267237816 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268387538 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269493705 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266878227 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266129105 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271194065 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268650686 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266447273 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271817755 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26614474 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272102921 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269189258 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266155919 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269953261 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268204496 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267861086 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268031938 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270842217 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269299934 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266171536 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270741167 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268406751 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266202059 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266741383 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267259975 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273421394 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270443851 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270595612 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268410816 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271352261 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272558878 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272799468 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271405072 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26988979 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272367664 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267431258 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267498313 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272592636 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26865018 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270906071 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271499954 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269143349 seconds)
  done (took 84.874921482 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269387575 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267756754 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268145083 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268795432 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268474976 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268540633 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269617525 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271826233 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269475692 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269186948 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271660154 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269012469 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26857435 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26968687 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270876173 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270380064 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270537247 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268260948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269879992 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271785207 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269627236 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272700505 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270727688 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272326588 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267947841 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273257104 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270277385 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269893857 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268983407 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270554344 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271213146 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270872778 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271135575 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270108137 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268907179 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270339028 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272933365 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273217346 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271204525 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274995527 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271586915 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273525288 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270926911 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274837417 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271792397 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270209839 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271473999 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271612942 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272876723 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271832231 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27396894 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27185468 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273034309 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272866958 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271972677 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273800884 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270866264 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272267047 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27283107 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275067386 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274386049 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275752759 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27561786 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27390234 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273808772 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271715998 seconds)
  done (took 85.083939162 seconds)
done (took 1755.141091827 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.438850018 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.394858151 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.273594702 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.287181679 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.271337188 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.297649702 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.284569379 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.267743517 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.276605006 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.275219844 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.275233406 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.464176755 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.271825545 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.270996038 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.275765646 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.3703861 seconds)
  done (took 26.170145441 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.304769612 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.281083037 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.393933693 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.296215854 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.303099611 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.461277708 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.332830261 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.280982446 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.452882255 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.298859759 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.281039081 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.303555348 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.280037784 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.279389742 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.29837929 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.463114889 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.531224358 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.26928556 seconds)
  done (took 28.288343029 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.731919552 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.281637568 seconds)
  done (took 5.191180129 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.30160129 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.278772356 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.28104183 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.277814291 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.268705291 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.285880649 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.279198961 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.289252418 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.27890044 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.403441863 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.281830765 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.291223083 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.298931971 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.28338136 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.279644656 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.323301816 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.436700895 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.2771264 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.276376344 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.287596679 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.281259661 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.373523129 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.318262975 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.278134881 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.404019603 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.274758302 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.279928802 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.28890407 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.436457225 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.278159517 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.279991253 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.281564037 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.282782854 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.183135671 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.806144316 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.290716617 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.304003166 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.290005203 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.280899345 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.461240913 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.282865242 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.2892357 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.275103441 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.803472077 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.43099552 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.404240199 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.2961473 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.281907998 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.282806188 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.350531847 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.283760205 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.285123311 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.327064986 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.097940097 seconds)
  done (took 82.536731166 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.286162258 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.275548149 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457402212 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.302735674 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.272679964 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.271069176 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.271046739 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.566271889 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.312794349 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.277462043 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.616585129 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.84365148 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.291009822 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.326404332 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.125416198 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.358538145 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.27848051 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.292682094 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.273914233 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.277321093 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838437447 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277521116 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.292069954 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.44015743 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.317499942 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.791956471 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.272910187 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.291688807 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.294090034 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.271996515 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.801562066 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.297178185 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.335871056 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.27469405 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.55600001 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.657493574 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.616996598 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.278297989 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.304309107 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.27391863 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.286980281 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783945683 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.633456147 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.275410485 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.274022281 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.786181231 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.2743506 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.287168946 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.283290948 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.529503231 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.278220647 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.280874923 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.290721236 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.29384796 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.279940954 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.350468509 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.359370488 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796356638 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.276160146 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.278548304 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.309142206 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.281378499 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.282910686 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.28223687 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.283768326 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.639357447 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.428633148 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.287704006 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.643190012 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.795189708 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.291855096 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.887097267 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.291184844 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.292028511 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.493308279 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.28126062 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.279710134 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815040304 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.318099825 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.275300246 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.630464004 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.277752118 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.605086914 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.296206625 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.277032048 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844887558 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.283069957 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.290990749 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.278704474 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.28212725 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.276823745 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288337763 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.564173402 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.327927571 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.280639021 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.279745057 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.292943642 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.279503934 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.280802665 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.287688212 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.874646207 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.306286634 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.281418257 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.284261662 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282440589 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.277310749 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.283489971 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.283581857 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551554442 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.288195308 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.287272542 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.285789067 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.279959783 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.288076871 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.449520073 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.289388817 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.593178302 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.281128368 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281805935 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.298564444 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.286669903 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.28436088 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.27743507 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.279453856 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.168658369 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.581641064 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.303790668 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.295209361 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.284036456 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.290170538 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.280093109 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.280461446 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.320101868 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.291791156 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.048403637 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.295513285 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.289548442 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.283759853 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.289220552 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.294283064 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.28033825 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.28502984 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.581409478 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.560537921 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.428089888 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.286305397 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.285219233 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.061568331 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.306341289 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.461081953 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.302736867 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.281862292 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.54163684 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.519647728 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.286831959 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.282313979 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.287725194 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.54691363 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.287602138 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.591793096 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.830772126 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.29608373 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.291803771 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.057543947 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.982802862 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.286594918 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.290880088 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.615611634 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.29884377 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.284778462 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.286737477 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.288825199 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.299608708 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.286931738 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.291158666 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.287543926 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.285996093 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.328990391 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.480115737 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.30955376 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.286270362 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.811957742 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.297996463 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282443717 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.281907233 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.286615605 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.287893627 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.353308219 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.290870432 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.337673748 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.293113545 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.292979205 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.876760144 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.287951413 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.284421272 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.47973629 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9883195 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.304537879 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.290271256 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.301341155 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.180902116 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84077873 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.340761382 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.607741472 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.288153587 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.330408194 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.287447454 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.376790282 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.830829093 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.286888407 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.307193868 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960889292 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.300836806 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.789382005 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.285284675 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.289390726 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910779052 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.302555825 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.29035193 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.286103615 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.284583973 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.57970651 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.287476704 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.303528211 seconds)
  done (took 487.318767276 seconds)
done (took 630.677946507 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.292066046 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.285551517 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.275721669 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.290338194 seconds)
  done (took 10.336554832 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.29905807 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.296187855 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.295533689 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.296194785 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.299476402 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.297603184 seconds)
  done (took 8.978866106 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.289549447 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.285666799 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.290510183 seconds)
  done (took 8.059469951 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.504942431 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.306747229 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.623922121 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.30855252 seconds)
  done (took 8.938282046 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.296843718 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.298171679 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.298383356 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.300385011 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.300780342 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.300560145 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.29859396 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.297595805 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.301167269 seconds)
  done (took 12.885417129 seconds)
done (took 50.391145955 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.163556004 seconds)
    (2/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.344366282 seconds)
    (3/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.442018533 seconds)
    (4/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.390381546 seconds)
    (5/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.307001826 seconds)
    (6/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.944953163 seconds)
    (7/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.471055465 seconds)
    (8/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.322915217 seconds)
    (9/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.372566244 seconds)
    (10/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.941272134 seconds)
    (11/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.345348416 seconds)
    (12/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.305385449 seconds)
    (13/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.142794018 seconds)
    (14/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.291057689 seconds)
    (15/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.480679944 seconds)
    (16/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.387803036 seconds)
    (17/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.307017155 seconds)
    (18/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.325211504 seconds)
    (19/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.371975533 seconds)
    (20/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.331602861 seconds)
    (21/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.299362159 seconds)
    (22/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.627700397 seconds)
    (23/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.317624202 seconds)
    (24/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.466830138 seconds)
    (25/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.323837989 seconds)
    (26/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.0531015 seconds)
    (27/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.326722113 seconds)
    (28/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.372592928 seconds)
    (29/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.312477057 seconds)
    (30/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.994495176 seconds)
    (31/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.287850214 seconds)
    (32/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.310066079 seconds)
    (33/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.323303957 seconds)
    (34/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.380059638 seconds)
    (35/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.305492286 seconds)
    (36/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.505998866 seconds)
    (37/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.402833318 seconds)
    (38/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.301029113 seconds)
    (39/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.304013975 seconds)
    (40/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.306555431 seconds)
    (41/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.628576561 seconds)
    (42/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.950607248 seconds)
    (43/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.390015972 seconds)
    (44/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.357797103 seconds)
    (45/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.314738391 seconds)
    (46/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.171127446 seconds)
    (47/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.408202197 seconds)
    (48/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.04817285 seconds)
    (49/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.454990105 seconds)
    (50/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.121169892 seconds)
    (51/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.425079847 seconds)
    (52/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.432844846 seconds)
    (53/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.653539448 seconds)
    (54/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.370094048 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.385497856 seconds)
    (56/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.285750105 seconds)
    (57/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.419197459 seconds)
    (58/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.453778609 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.462323453 seconds)
    (60/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.322221431 seconds)
    (61/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.441875519 seconds)
    (62/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.379040067 seconds)
    (63/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.359115047 seconds)
    (64/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.446626459 seconds)
    (65/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.289540349 seconds)
    (66/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.316973823 seconds)
    (67/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.950622165 seconds)
    (68/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.308152386 seconds)
    (69/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.320070799 seconds)
    (70/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.375696157 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.397618922 seconds)
    (72/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.401681084 seconds)
    (73/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.365030372 seconds)
    (74/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.284778487 seconds)
    (75/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.401713849 seconds)
    (76/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.306967448 seconds)
    (77/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.559189881 seconds)
    (78/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.30210212 seconds)
    (79/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.502453346 seconds)
    (80/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.299828623 seconds)
    (81/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.364774567 seconds)
    (82/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.34277153 seconds)
    (83/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.418824059 seconds)
    (84/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.042875801 seconds)
    (85/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.361756759 seconds)
    (86/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.323799854 seconds)
    (87/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.477602471 seconds)
    (88/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.066159988 seconds)
    (89/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.38296635 seconds)
    (90/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.401505724 seconds)
    (91/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.328495723 seconds)
    (92/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.293055385 seconds)
    (93/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.304207635 seconds)
    (94/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.310389505 seconds)
    (95/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.299227108 seconds)
    (96/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.34200061 seconds)
    (97/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.296936902 seconds)
    (98/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.345714916 seconds)
    (99/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.175575152 seconds)
    (100/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.404781542 seconds)
    (101/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.005674539 seconds)
    (102/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.307025958 seconds)
    (103/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.282907135 seconds)
    (104/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.054342136 seconds)
    (105/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.321305373 seconds)
    (106/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.373976134 seconds)
    (107/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.352789321 seconds)
    (108/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.948594065 seconds)
    (109/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.383707731 seconds)
    (110/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.503532567 seconds)
    (111/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.543985815 seconds)
    (112/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.29438103 seconds)
    (113/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.381702684 seconds)
    (114/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.616639874 seconds)
    (115/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.380880808 seconds)
    (116/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.381701138 seconds)
    (117/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.519450091 seconds)
    (118/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.352736741 seconds)
    (119/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.337798738 seconds)
    (120/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.41073197 seconds)
    (121/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.297450406 seconds)
    (122/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.405129836 seconds)
    (123/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.327720615 seconds)
    (124/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.042067993 seconds)
    (125/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.419417625 seconds)
    (126/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.311543233 seconds)
    (127/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.299435454 seconds)
    (128/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.435033496 seconds)
    (129/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.325915709 seconds)
    (130/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.430120906 seconds)
    (131/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.311342569 seconds)
    (132/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.312198956 seconds)
    (133/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.301723627 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.3521417 seconds)
    (135/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.00361623 seconds)
    (136/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.357199897 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.367933018 seconds)
    (138/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.308205781 seconds)
    (139/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.42792129 seconds)
    (140/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.501493613 seconds)
    (141/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.522404779 seconds)
    (142/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.311292942 seconds)
    (143/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.323306036 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.407204978 seconds)
    (145/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.423364342 seconds)
    (146/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.335874779 seconds)
    (147/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.28711279 seconds)
    (148/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.417507101 seconds)
    (149/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.502973667 seconds)
    (150/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.451100013 seconds)
    (151/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.504823878 seconds)
    (152/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.30049888 seconds)
    (153/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.494379575 seconds)
    (154/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.44814343 seconds)
    (155/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.311738669 seconds)
    (156/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.44901664 seconds)
    (157/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.46740351 seconds)
    (158/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.314023443 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.325093608 seconds)
    (160/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.394867689 seconds)
    (161/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.315461928 seconds)
    (162/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.951094436 seconds)
    (163/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.396316703 seconds)
    (164/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.381968432 seconds)
    (165/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.404597604 seconds)
    (166/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.335376862 seconds)
    (167/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.345166829 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.309362165 seconds)
    (169/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.416247871 seconds)
    (170/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.2987857 seconds)
    (171/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.007750656 seconds)
    (172/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.32163111 seconds)
    (173/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.433493278 seconds)
    (174/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.46492811 seconds)
    (175/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.373401976 seconds)
    (176/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.364012741 seconds)
    (177/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.321713759 seconds)
    (178/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.374971254 seconds)
    (179/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.963035012 seconds)
    (180/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.404450103 seconds)
    (181/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.491504362 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.349704325 seconds)
    (183/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.314802095 seconds)
    (184/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.95715019 seconds)
    (185/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.324247819 seconds)
    (186/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.375261891 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.344555865 seconds)
    (188/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.455428255 seconds)
    (189/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.285886097 seconds)
    (190/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.313900234 seconds)
    (191/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.412605862 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.316596338 seconds)
    (193/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.449349026 seconds)
    (194/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.302551675 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.344125491 seconds)
    (196/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.301591511 seconds)
    (197/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.051827904 seconds)
    (198/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.347003227 seconds)
    (199/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.059818195 seconds)
    (200/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.36188475 seconds)
    (201/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.133656479 seconds)
    (202/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.311606542 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.351122997 seconds)
    (204/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.388646333 seconds)
    (205/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.384089031 seconds)
    (206/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.45975228 seconds)
    (207/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.291742587 seconds)
    (208/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.354844556 seconds)
    (209/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.512137343 seconds)
    (210/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.38526489 seconds)
    (211/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.328646861 seconds)
    (212/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.306793835 seconds)
    (213/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.486698942 seconds)
    (214/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.318402607 seconds)
    (215/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.316606198 seconds)
    (216/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.483857251 seconds)
    (217/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.414794459 seconds)
    (218/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.434713256 seconds)
    (219/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.462367536 seconds)
    (220/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.328760591 seconds)
    (221/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.390037103 seconds)
    (222/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.462398322 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.359623613 seconds)
    (224/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.327971002 seconds)
  done (took 360.698781329 seconds)
done (took 361.89180746 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361572588 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.490281787 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.333862236 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.336301022 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359081611 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.310565471 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.350992865 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.322498454 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.317419132 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.315898829 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.313720138 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.321125132 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.338531803 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.349770945 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.427194497 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.321994084 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.332086641 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.317643737 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.355892103 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.375129312 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358346124 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359178248 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.325283301 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.333306449 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362598706 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364657424 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.335893234 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.305489053 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.312094107 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.355969893 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.306620683 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.336844434 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.364002721 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.3664476 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359335307 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.318812834 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35799481 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.492230617 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.349076134 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.350010469 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.320093343 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.364547699 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.334680613 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.338090736 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.366835991 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.32735803 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363571663 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.439416598 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.307394297 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.307930487 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363899486 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.377219449 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.32014807 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.307118269 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.317766349 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.436120027 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.317284594 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364643514 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.321188462 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362684445 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.429798065 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365912268 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.379288238 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364890924 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.320441939 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.339764464 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.319848941 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.376740252 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.317560352 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359490628 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362939124 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.324610423 seconds)
done (took 106.394470235 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.439749732 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.318129404 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.478366692 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.31895271 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.47967739 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.460043235 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.315890682 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.317408194 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.315408373 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.111723526 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.316277866 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.314523801 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.318522467 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.318645624 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.445464216 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.319124057 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.318837205 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.010561151 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.320533444 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.457547576 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.31464916 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.318323571 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.320763491 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.112900851 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.319158744 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.313562597 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.456153791 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.319972271 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.011327068 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.314743159 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.317179508 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.013814326 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.458639271 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.33600305 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.330661463 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.330808827 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.483464794 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.338412166 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.439095374 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.439223737 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.479771425 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.35613464 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.321195369 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.318998969 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.322622761 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.320850372 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.319067471 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.347170003 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.318052059 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.319343606 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.012113033 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.33213183 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.326983997 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.316498507 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.320784634 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.339435948 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.319688068 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.32016742 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.461152495 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.320690124 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.443743415 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.113875629 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.115750479 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.324779826 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.319413155 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.319962475 seconds)
  done (took 107.328642937 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.38890964 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.399845438 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.438208263 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.337377923 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.372255385 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.442837579 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.337761579 seconds)
  done (took 10.933287668 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.330260366 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.324578325 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.374786566 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371484919 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.321183076 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.548149816 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.325647651 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.338325287 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.323844749 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.399593786 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.324814106 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.326449431 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.332083948 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.320310211 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374156821 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.335866615 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.437587905 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.325953703 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.323350735 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.479553774 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.322546442 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.332343995 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.394971902 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.338151677 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.326235716 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.331733045 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.281354548 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.322139505 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32122672 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.322679393 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.32192253 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.435544826 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.325976157 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.322871679 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.323673863 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.487563635 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.323468518 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32439814 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.326533383 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.325607638 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.324982865 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.326792571 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.327121135 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.323769976 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.325214947 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.351427484 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.32560351 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.325481116 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.325766432 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.325789751 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.401698858 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.326727553 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.322971619 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.322911029 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.404279172 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333567229 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.32545706 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.323848435 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.327605994 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.323358001 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.482533861 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.378189316 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.328104741 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.376441939 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.330054694 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.330089357 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.329439856 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.32903503 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421106866 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.328146903 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.375786296 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.32734945 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.549950635 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.354145257 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.32769877 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.331632405 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.331928815 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.325235034 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.325351218 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.334088157 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.326350697 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.330026093 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.3354364 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.328152492 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328281317 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.510339705 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.485517714 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.326189794 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.343080702 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.335672851 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.329915675 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.409130584 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.329722804 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.326383359 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.380711502 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.443999677 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.404808911 seconds)
  done (took 137.455034495 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.342563193 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.341258957 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.332331553 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.355442584 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.330886745 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.330930775 seconds)
  done (took 9.254779028 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.330517789 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.331539529 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.328519014 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.328437469 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.330201492 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.330544107 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.328970293 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.330269041 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.333891584 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.332619954 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.332582217 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.331996057 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.332043009 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.331195981 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.330912033 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.331977559 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.330417836 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.329922583 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.331850735 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.329398736 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.33273366 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.331853052 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.331267186 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.335371427 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.33678215 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.332630968 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.352555229 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.331274776 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.331380339 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.337035493 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.345776983 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.33262844 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.335773231 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.337558912 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.336681489 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.334917677 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33599214 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.334114993 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.331213931 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.332404187 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.335599402 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.331338806 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.332029236 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.332585857 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.336371877 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.342096203 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.337964103 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.352758237 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.334340621 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.335555772 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.33527458 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.334690904 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.333854865 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.332707419 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.338435816 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355324784 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.340788539 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.333546309 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.332261848 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.335763743 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.33691593 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.336195767 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.336858989 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.339829614 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.33362153 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.335418534 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.337878102 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.344225163 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337248751 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.337787792 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.337008744 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.333971959 seconds)
  done (took 98.343065344 seconds)
done (took 364.523431613 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.349075206 seconds)
  done (took 3.57617144 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.434278901 seconds)
  done (took 3.66474383 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.767115523 seconds)
  done (took 23.003458846 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.381375919 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.421917922 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.337041428 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.331580066 seconds)
  done (took 10.701479459 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.649428549 seconds)
  done (took 3.882304036 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.32607472 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.32932151 seconds)
  done (took 5.885934249 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.645572133 seconds)
  done (took 3.87576438 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.764453371 seconds)
  done (took 3.999413587 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.331520825 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.347639716 seconds)
  done (took 5.920034093 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.316247196 seconds)
  done (took 3.547417187 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.490115756 seconds)
  done (took 16.721500151 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.333140994 seconds)
  done (took 3.566651761 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.368313979 seconds)
  done (took 3.598531364 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.973776502 seconds)
  done (took 6.204282576 seconds)
done (took 99.372080242 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.3292599 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.326395326 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.327964317 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.323764742 seconds)
  done (took 10.537311726 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.389587231 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.389812228 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.391122081 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.38912422 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.390166303 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.391561038 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.363426862 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.382273857 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.39033429 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.390051802 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.390858405 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.388720747 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.390639507 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.363719457 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.391402123 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.387704933 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.389190563 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.388820083 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.377298778 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.39112615 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.339224535 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.390432811 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.39160401 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.34232981 seconds)
  done (took 34.421032155 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.831951593 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.411470504 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.492127629 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.390745119 seconds)
  done (took 7.357483548 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.417112449 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.416711943 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.429456794 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.468923677 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.48111537 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.430476785 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.367041618 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.36221804 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.348097515 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.417873211 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.469014773 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.410067576 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.493996433 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.3409047 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.549037896 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.342904465 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.341491462 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.418114033 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.472351579 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.4786459 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.340828015 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.415699548 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.421694645 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.41037923 seconds)
  done (took 35.278901317 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.348085428 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.355097297 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.340197507 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.356774016 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.340329897 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.339675533 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.33909299 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.347557736 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.340397939 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.33757582 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.338711288 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.354339334 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.344051121 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.339647422 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.346920945 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.342857676 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.344790036 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.345502016 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.341403095 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.345309782 seconds)
  done (took 28.122352781 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.332501937 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.3345332 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.686209967 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.591431584 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.334954194 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.333107915 seconds)
  done (took 13.848183611 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.414580092 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.57368963 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.340695206 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.718617839 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.806419114 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.348832712 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.346876419 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.595399952 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.919274654 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.901959843 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.403280315 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.416432275 seconds)
  done (took 20.021465012 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.349201586 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.334707335 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.341804098 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.35296684 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.403757543 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.365291307 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.354136621 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.337705286 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.403343117 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.416743335 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.358410603 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.40319601 seconds)
  done (took 21.659647972 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476883776 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335699858 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337453022 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412670033 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334105389 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.232785549 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371876228 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.044163015 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.355484093 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612282549 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337440818 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477300934 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.595488841 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351767289 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3394911 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.339312384 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566213625 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860083146 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341667943 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339733562 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373176763 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338652762 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342970014 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561978898 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341019438 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338303733 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.601604081 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33803443 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63929544 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.353975513 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349744478 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341131573 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614696423 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00313123 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45382958 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559876611 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344347518 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3369818 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.366122026 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.344563838 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34488461 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344864162 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351765556 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340527492 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340304812 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344501556 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065747351 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.358892225 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.339205724 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340880416 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614322728 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437214889 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.345857337 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340425412 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350942498 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335184336 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.345108818 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441221771 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941210456 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353069978 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345669316 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.356518066 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346436806 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345151105 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986375749 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.348100849 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.345092999 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346122694 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343201841 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342983111 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35993317 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342788149 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.362547246 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345502254 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096785492 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346404322 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344485481 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925770708 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354430953 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.34133801 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576306615 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341862372 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342061813 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.342473291 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342752022 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081701631 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347199944 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.330485188 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378572722 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.061127744 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.580432433 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370158547 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378915225 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.570773004 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.331160629 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347194683 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.358182105 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348340015 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364288415 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.063761076 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359008478 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.348732377 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604507987 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.560652598 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347318004 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.336928542 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826943861 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374098095 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.363487699 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361746528 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.568782 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.955768778 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364212165 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361243495 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363415451 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345039728 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125009108 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355743296 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.447287706 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346499665 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637529085 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.171417021 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346365155 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41772551 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352115743 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349154826 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36122234 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351191641 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347688397 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.56022333 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365328273 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.377314641 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.347870854 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344962589 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.351082317 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353106187 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.352079711 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.572911542 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35808258 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626431227 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349290375 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350265324 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34688841 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.57120036 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.359720228 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.687093334 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61294679 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360820412 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366186048 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361495443 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367328003 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455056323 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373849014 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.364103684 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.608463456 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.353274017 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.354233681 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364343928 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352554298 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352889451 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.358685119 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364901056 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954632718 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33181678 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351436171 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.242674782 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.362323136 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417469698 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353791957 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575373498 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.347180703 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355247694 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.352559394 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.355535355 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575771094 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.359374957 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.356734806 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429463912 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.831526703 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.971942846 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363206054 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.352193827 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.349651941 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.346444849 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351421572 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350814004 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349673713 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575139044 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366616515 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352614169 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.963382257 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353462862 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361686374 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.361029017 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364870542 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.357966745 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353528875 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.350293069 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35141163 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383277919 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.364268444 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499223748 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.367388112 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351236775 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.871723992 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356122725 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353503936 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35387836 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387947802 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363561525 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166163861 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612778062 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36369941 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62373697 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367155968 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.371658695 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.352917378 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351185733 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369191314 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.393325027 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357845663 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.366888654 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.364060813 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356895596 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933852003 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142227506 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92078632 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366793632 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.350506767 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370599271 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.078990453 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366420944 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354507668 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601555743 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078861591 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367513311 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83808278 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.36537214 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169581607 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630554562 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588907735 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364919133 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.351595829 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635063564 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.568708294 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390929043 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355066165 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358777961 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.339050312 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922892707 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379920838 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435328232 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083294641 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367985661 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356828408 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.414290567 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.353142616 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767938368 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369168341 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356622672 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351450753 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360753672 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176249615 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358816555 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359213817 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010553301 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369260598 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.84254544 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370756766 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.58403975 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.37156631 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.36166175 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.359855783 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.357099832 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.6148438 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63312747 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359643849 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369407648 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929684706 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.22635647 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.361758728 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355988021 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132112967 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355554289 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682333013 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.360863729 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.364443906 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36143363 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360904838 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357965847 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.356545409 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368373536 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336299442 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88469825 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.361076599 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379533737 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371932021 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36361823 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.615845216 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.373857562 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.974665192 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591825614 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36362219 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394890712 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.364121255 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36187274 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.350744013 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359029519 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361152927 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372267562 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.580570238 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.361088018 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.341788647 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412379163 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566739924 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358483549 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364906758 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615730827 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.357793867 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.376759672 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142975221 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395725633 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361755103 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363252991 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368126427 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375455578 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431543775 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584877293 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.37631863 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.371776793 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777236844 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378056618 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364569902 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.37621338 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459850684 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360651851 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.369614816 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.134807874 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983207215 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143460732 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.981326484 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640333098 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365868034 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371832938 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363153505 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519156462 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363601559 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637235227 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362935084 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.375387286 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382887041 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369674379 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365943037 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594229193 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63966534 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361441 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362036452 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384066783 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.366815634 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371847967 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.574242884 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896933255 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962116854 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365256461 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362644957 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109927966 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654271153 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363924298 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363692767 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364890956 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.382071893 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.371970707 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.365711967 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377099394 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510565799 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640060327 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036284226 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.38829227 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.392416538 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.881977379 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365397397 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637337517 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364110782 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591847021 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987089341 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.108049937 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63445953 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434461852 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590065454 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.366345627 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530919142 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.374799843 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368676819 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365277949 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367045312 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.364154077 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.379853285 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994480921 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635051045 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.372023767 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.377740352 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401311504 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.378834043 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591047232 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114751715 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591874227 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380119659 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373705381 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370406757 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9919703 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648194872 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370851718 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.369589238 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622511583 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369640911 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39305751 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.887217328 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.365137201 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965372016 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.33995969 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391746987 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379975259 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.121202869 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992517479 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.378916382 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903074385 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372936835 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367816581 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670454591 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.375760952 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369269271 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644840474 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.372942645 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369714807 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59679051 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.986216195 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18331614 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.391369667 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370314984 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.388192649 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371481993 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421573003 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36769613 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366710041 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.804856653 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384445151 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370936415 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377418665 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.369381255 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387307613 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.370943784 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374451709 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.375633208 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.3670134 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.38467551 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375381865 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468370057 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939432313 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384893438 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.044499935 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.699641382 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628411579 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371701539 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.35938573 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.375379777 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372727378 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370998263 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370106641 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386029201 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96571309 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.373503742 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.38375139 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376236981 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.372868052 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585385286 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378850941 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602317275 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375718555 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390366087 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.358515908 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373602322 seconds)
  done (took 969.392702237 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.387802334 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.3976463 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.380041471 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.38331565 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.404077633 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.4688251 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.425648479 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.497897943 seconds)
  done (took 20.614307801 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.381454652 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.383484297 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.373271249 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.381135127 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.379723851 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.873444877 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.392343222 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.379383783 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.390286389 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.38947964 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.38631811 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.358329517 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.407383209 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.388871609 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.378490177 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.386224638 seconds)
  done (took 32.905001198 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.474651607 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.539205584 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.553423114 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.40938524 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.40836026 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.380399826 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.633407737 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.387175584 seconds)
  done (took 27.057596328 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.383663258 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.383081304 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.387507591 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.384805447 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.38681732 seconds)
  done (took 8.194626058 seconds)
done (took 1230.639798105 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.384471505 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.383449913 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.378381996 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.383498706 seconds)
  done (took 6.802465952 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.363652262 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.366819539 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.363934546 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.375390841 seconds)
  done (took 9.737745535 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.128487225 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.03889455 seconds)
  done (took 5.437058251 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.870868564 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.870229812 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.871391998 seconds)
  done (took 6.883325471 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.687668026 seconds)
  done (took 2.960751948 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.28742468 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.377109406 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.062105762 seconds)
  done (took 7.998571163 seconds)
done (took 41.090268569 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.381496422 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.621103343 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.537706778 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.390339928 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.533516585 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.536176894 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.181469666 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.379766651 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.395969479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.400984403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.378345695 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.535795404 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.097923384 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.62722022 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.094170351 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.720604934 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.566583067 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.37789095 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.386842228 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.37521851 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.196037236 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.385523035 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.381375507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.386886629 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.541220371 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.523298386 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.383970938 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.714202475 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.394464053 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.377085416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.523967354 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.379918374 seconds)
  done (took 82.979838028 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.380069434 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.376312243 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.393135464 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.392804151 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.389280683 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.378931484 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.39722248 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.38407645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.379136619 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.379177511 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.375006414 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.376322036 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.373890793 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.374183721 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.377710086 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.37584103 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.375895449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.394896019 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.389774899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.390385462 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.377946861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.375937451 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.405437547 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.390874553 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.381197869 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.39563972 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.393240806 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.378242984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.399602941 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.383820999 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.383464575 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.400339095 seconds)
  done (took 77.595762125 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.384106629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.382015928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.3902943 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.39658561 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.380504386 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.392881577 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.38434396 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.397577987 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.379265644 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.391466939 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.3813416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.386944011 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.378208232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.381779538 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.379962855 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.380157972 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.377856503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.389498569 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.388527825 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.38851497 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.378978906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.385729681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.397476086 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.401013097 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.383397099 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.377486688 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.385630928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.396164672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.382538551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.381887652 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.386645126 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.399019527 seconds)
  done (took 77.645838486 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.665903758 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.389483294 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.394590721 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.384957456 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.39206865 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.393058741 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.384572867 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.664977057 seconds)
  done (took 14.947603375 seconds)
done (took 254.442884131 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.384337056 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.940512043 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.431533152 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.393639566 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.412479484 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.416932388 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.624079853 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.432270696 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.624898155 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.405189733 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.414778196 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.385545332 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.23522219 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.544439438 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.297603432 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.39913413 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.320793683 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.388211059 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.003359155 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.675956292 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.416180372 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.405356118 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.289157575 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.347741559 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.377527292 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.492626139 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.49608697 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.608772014 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.554923374 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.477576897 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.943784905 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.388542589 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.398833393 seconds)
  done (took 65.207221361 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.392142847 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.506516488 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.393254748 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.394650682 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.511388208 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.395715599 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.395455857 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.39651045 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.396157601 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.396211342 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.398607621 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.395288343 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.395704569 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.438511016 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.515457373 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.410731078 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.396577606 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.507299171 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.393900607 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.387956457 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.437103279 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.395579708 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.395997403 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.439672778 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.394626642 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.396444533 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.515044978 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.395348372 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.392781143 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.512559768 seconds)
  done (took 43.977268365 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.398797037 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.023585025 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.174648028 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.406335899 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.396174918 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.403090081 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.703129339 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.399059275 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.399949986 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.399771723 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.945221 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.40457621 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434033517 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.197468154 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.400771378 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.396858132 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.395336674 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.396762167 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.031504281 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.407679889 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.722073874 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.399302468 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.706597498 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.411139107 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.418119268 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.398083528 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.403316784 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.296960015 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.401937335 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.938347438 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.217559611 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.700437401 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.217702179 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.200761341 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.214339533 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.401208705 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.398564614 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.943566506 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.401396796 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.398410977 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.704758121 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.402095447 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.191422653 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.134573468 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.416909146 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.400213373 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.311379356 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.943690244 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.658757773 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.407760621 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.217901081 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.405566992 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.401910264 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.402128791 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.659104823 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.402343322 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.399368754 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.348281894 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.40484134 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.707109655 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.402122652 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.400432573 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.027471427 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.402754581 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.033248507 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.403337817 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.407282617 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.420482457 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.192316668 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.404775853 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.147770183 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.419272226 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.400716405 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.943345018 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.02179731 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.377206702 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.404544614 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.025260622 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.247586309 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.708337686 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.407460969 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.285831615 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.714432155 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.406557794 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.4024928 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.404354907 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.401891628 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.476880576 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.707566041 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.089919895 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.146412177 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.362547271 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.713556895 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.412291935 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.402652297 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.348585427 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.404997299 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.406238136 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.187192002 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.139720218 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.422403766 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.413272578 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.150014155 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.423296895 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.713811911 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.411375872 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.210218516 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.405541017 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.482997931 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.403731241 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.409175484 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.423738394 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.714765497 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.410865758 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.403690751 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.140898336 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.984127041 seconds)
  done (took 198.251687659 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.400951715 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.394660552 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.401337274 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.394098792 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.398799002 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.407721396 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.395677641 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.399817238 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.407812507 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.395232125 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.398243313 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.407568404 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.407107622 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.401003316 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.40012416 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.411700101 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.399149239 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.401059792 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.413248439 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.399596171 seconds)
  done (took 45.327034857 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.409814466 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.017567732 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.974143471 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.40618714 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.404500465 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.406653237 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.468548928 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.405413546 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.405899468 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.737337803 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.590908749 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.422638486 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.406087006 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.403097717 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.973813329 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.400758593 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.734996674 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.018093872 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.412664599 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.016042007 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.398632882 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.408279189 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.40778137 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.02074363 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.740351743 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.714558841 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.471175485 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.02235035 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.409847 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.403784967 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.021320402 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.411872769 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.411443515 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.014738548 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.426340051 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.421711056 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.406572757 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.470420513 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.470639005 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.741678381 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.095718395 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.718442127 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.421389266 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.589795838 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.406212971 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.399224682 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.024866629 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.428364411 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.397764153 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.411650058 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.414571941 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.984557889 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.430211083 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.985256766 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.42988275 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.410589668 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.025885854 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.985379293 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.001311605 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.591192507 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.426226676 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.722133395 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.411770852 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.030176668 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.430514168 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.411678509 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.415161243 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.595705301 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.044174143 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.724012463 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.745239804 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.745190189 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.414090718 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.473925641 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.426422399 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.807666458 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.471549671 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.853160711 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.739032455 seconds)
  done (took 129.143075275 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.700981206 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.524500543 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.845758838 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.055860422 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.408765741 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.535568044 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.522153266 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.677346343 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.418053861 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.493376686 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.110380164 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.506552344 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.183389953 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.487788495 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.511418976 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.566586916 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.839957702 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.416403994 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.077064363 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.087055978 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.410434736 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.518374371 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.975657902 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.63852643 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.418182751 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.963031309 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.399194221 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.095473823 seconds)
  done (took 54.685359489 seconds)
done (took 537.867445401 seconds)
SAVING RESULT...
DONE!
